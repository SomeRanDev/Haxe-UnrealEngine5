// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UParticleModuleLocationPrimitiveTriangle")
@:include("Particles/Location/ParticleModuleLocationPrimitiveTriangle.h")
@:valueType
extern class ParticleModuleLocationPrimitiveTriangle extends ParticleModuleLocationBase {
	public var StartOffset: RawDistributionVector;
	public var Height: RawDistributionFloat;
	public var Angle: RawDistributionFloat;
	public var Thickness: RawDistributionFloat;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstParticleModuleLocationPrimitiveTriangle(ParticleModuleLocationPrimitiveTriangle) from ParticleModuleLocationPrimitiveTriangle {
	public extern var StartOffset(get, never): RawDistributionVector;
	public inline extern function get_StartOffset(): RawDistributionVector return this.StartOffset;
	public extern var Height(get, never): RawDistributionFloat;
	public inline extern function get_Height(): RawDistributionFloat return this.Height;
	public extern var Angle(get, never): RawDistributionFloat;
	public inline extern function get_Angle(): RawDistributionFloat return this.Angle;
	public extern var Thickness(get, never): RawDistributionFloat;
	public inline extern function get_Thickness(): RawDistributionFloat return this.Thickness;
}

@:forward
@:nativeGen
@:native("ParticleModuleLocationPrimitiveTriangle*")
abstract ParticleModuleLocationPrimitiveTrianglePtr(ucpp.Ptr<ParticleModuleLocationPrimitiveTriangle>) from ucpp.Ptr<ParticleModuleLocationPrimitiveTriangle> to ucpp.Ptr<ParticleModuleLocationPrimitiveTriangle>{
	@:from
	public static extern inline function fromValue(v: ParticleModuleLocationPrimitiveTriangle): ParticleModuleLocationPrimitiveTrianglePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ParticleModuleLocationPrimitiveTriangle {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}