// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovieSceneCapture")
@:include("MovieSceneCapture.h")
@:valueType
extern class MovieSceneCapture extends Object {
	public var ImageCaptureProtocolType: SoftClassPath;
	public var AudioCaptureProtocolType: SoftClassPath;
	public var ImageCaptureProtocol: ucpp.Ptr<MovieSceneImageCaptureProtocolBase>;
	public var AudioCaptureProtocol: ucpp.Ptr<MovieSceneAudioCaptureProtocolBase>;
	public var Settings: MovieSceneCaptureSettings;
	public var bUseSeparateProcess: Bool;
	public var bCloseEditorWhenCaptureStarts: Bool;
	public var AdditionalCommandLineArguments: FString;
	public var InheritedCommandLineArguments: FString;

	public function SetImageCaptureProtocolType(ProtocolType: TSubclassOf<MovieSceneCaptureProtocolBase>): Void;
	public function SetAudioCaptureProtocolType(ProtocolType: TSubclassOf<MovieSceneCaptureProtocolBase>): Void;
	public function GetImageCaptureProtocol(): ucpp.Ptr<MovieSceneCaptureProtocolBase>;
	public function GetAudioCaptureProtocol(): ucpp.Ptr<MovieSceneCaptureProtocolBase>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMovieSceneCapture(MovieSceneCapture) from MovieSceneCapture {
	public extern var ImageCaptureProtocolType(get, never): SoftClassPath;
	public inline extern function get_ImageCaptureProtocolType(): SoftClassPath return this.ImageCaptureProtocolType;
	public extern var AudioCaptureProtocolType(get, never): SoftClassPath;
	public inline extern function get_AudioCaptureProtocolType(): SoftClassPath return this.AudioCaptureProtocolType;
	public extern var ImageCaptureProtocol(get, never): ucpp.Ptr<MovieSceneImageCaptureProtocolBase.ConstMovieSceneImageCaptureProtocolBase>;
	public inline extern function get_ImageCaptureProtocol(): ucpp.Ptr<MovieSceneImageCaptureProtocolBase.ConstMovieSceneImageCaptureProtocolBase> return this.ImageCaptureProtocol;
	public extern var AudioCaptureProtocol(get, never): ucpp.Ptr<MovieSceneAudioCaptureProtocolBase.ConstMovieSceneAudioCaptureProtocolBase>;
	public inline extern function get_AudioCaptureProtocol(): ucpp.Ptr<MovieSceneAudioCaptureProtocolBase.ConstMovieSceneAudioCaptureProtocolBase> return this.AudioCaptureProtocol;
	public extern var Settings(get, never): MovieSceneCaptureSettings;
	public inline extern function get_Settings(): MovieSceneCaptureSettings return this.Settings;
	public extern var bUseSeparateProcess(get, never): Bool;
	public inline extern function get_bUseSeparateProcess(): Bool return this.bUseSeparateProcess;
	public extern var bCloseEditorWhenCaptureStarts(get, never): Bool;
	public inline extern function get_bCloseEditorWhenCaptureStarts(): Bool return this.bCloseEditorWhenCaptureStarts;
	public extern var AdditionalCommandLineArguments(get, never): FString;
	public inline extern function get_AdditionalCommandLineArguments(): FString return this.AdditionalCommandLineArguments;
	public extern var InheritedCommandLineArguments(get, never): FString;
	public inline extern function get_InheritedCommandLineArguments(): FString return this.InheritedCommandLineArguments;
}

@:forward
@:nativeGen
@:native("MovieSceneCapture*")
abstract MovieSceneCapturePtr(ucpp.Ptr<MovieSceneCapture>) from ucpp.Ptr<MovieSceneCapture> to ucpp.Ptr<MovieSceneCapture>{
	@:from
	public static extern inline function fromValue(v: MovieSceneCapture): MovieSceneCapturePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MovieSceneCapture {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}