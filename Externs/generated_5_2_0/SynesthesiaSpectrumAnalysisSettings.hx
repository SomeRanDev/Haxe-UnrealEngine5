// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USynesthesiaSpectrumAnalysisSettings")
@:include("SynesthesiaSpectrumAnalysis.h")
@:structAccess
extern class SynesthesiaSpectrumAnalysisSettings extends AudioSynesthesiaSettings {
	public var AnalysisPeriod: cpp.Float32;
	public var FFTSize: EFFTSize;
	public var SpectrumType: EAudioSpectrumType;
	public var WindowType: EFFTWindowType;
	public var bDownmixToMono: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSynesthesiaSpectrumAnalysisSettings(SynesthesiaSpectrumAnalysisSettings) from SynesthesiaSpectrumAnalysisSettings {
	public extern var AnalysisPeriod(get, never): cpp.Float32;
	public inline extern function get_AnalysisPeriod(): cpp.Float32 return this.AnalysisPeriod;
	public extern var FFTSize(get, never): EFFTSize;
	public inline extern function get_FFTSize(): EFFTSize return this.FFTSize;
	public extern var SpectrumType(get, never): EAudioSpectrumType;
	public inline extern function get_SpectrumType(): EAudioSpectrumType return this.SpectrumType;
	public extern var WindowType(get, never): EFFTWindowType;
	public inline extern function get_WindowType(): EFFTWindowType return this.WindowType;
	public extern var bDownmixToMono(get, never): Bool;
	public inline extern function get_bDownmixToMono(): Bool return this.bDownmixToMono;
}

@:forward
@:nativeGen
@:native("SynesthesiaSpectrumAnalysisSettings*")
abstract SynesthesiaSpectrumAnalysisSettingsPtr(cpp.Star<SynesthesiaSpectrumAnalysisSettings>) from cpp.Star<SynesthesiaSpectrumAnalysisSettings> to cpp.Star<SynesthesiaSpectrumAnalysisSettings>{
	@:from
	public static extern inline function fromValue(v: SynesthesiaSpectrumAnalysisSettings): SynesthesiaSpectrumAnalysisSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SynesthesiaSpectrumAnalysisSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}