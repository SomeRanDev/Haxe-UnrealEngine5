// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UNiagaraDataChannelWriter")
@:include("NiagaraDataChannelAccessor.h")
@:structAccess
extern class NiagaraDataChannelWriter extends Object {
	public var Owner: cpp.Star<NiagaraDataChannelHandler>;

	public function WriteVector4(VarName: FName, Index: cpp.Int32, InData: Vector4): Void;
	public function WriteVector2D(VarName: FName, Index: cpp.Int32, InData: Vector2D): Void;
	public function WriteVector(VarName: FName, Index: cpp.Int32, InData: Vector): Void;
	public function WriteSpawnInfo(VarName: FName, Index: cpp.Int32, InData: NiagaraSpawnInfo): Void;
	public function WriteQuat(VarName: FName, Index: cpp.Int32, InData: Quat): Void;
	public function WriteLinearColor(VarName: FName, Index: cpp.Int32, InData: LinearColor): Void;
	public function WriteInt(VarName: FName, Index: cpp.Int32, InData: cpp.Int32): Void;
	public function WriteFloat(VarName: FName, Index: cpp.Int32, InData: cpp.Float64): Void;
	public function WriteBool(VarName: FName, Index: cpp.Int32, InData: Bool): Void;
	public function Num(): cpp.Int32;
	public function InitWrite(OwningComponent: cpp.Star<ActorComp>, Count: cpp.Int32, bVisibleToGame: Bool, bVisibleToCPU: Bool, bVisibleToGPU: Bool): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(Num)
@:nativeGen
abstract ConstNiagaraDataChannelWriter(NiagaraDataChannelWriter) from NiagaraDataChannelWriter {
	public extern var Owner(get, never): cpp.Star<NiagaraDataChannelHandler.ConstNiagaraDataChannelHandler>;
	public inline extern function get_Owner(): cpp.Star<NiagaraDataChannelHandler.ConstNiagaraDataChannelHandler> return this.Owner;
}

@:forward
@:nativeGen
@:native("NiagaraDataChannelWriter*")
abstract NiagaraDataChannelWriterPtr(cpp.Star<NiagaraDataChannelWriter>) from cpp.Star<NiagaraDataChannelWriter> to cpp.Star<NiagaraDataChannelWriter>{
	@:from
	public static extern inline function fromValue(v: NiagaraDataChannelWriter): NiagaraDataChannelWriterPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): NiagaraDataChannelWriter {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}