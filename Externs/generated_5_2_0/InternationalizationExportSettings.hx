// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInternationalizationExportSettings")
@:include("InternationalizationExportSettings.h")
@:valueType
extern class InternationalizationExportSettings extends Object {
	public var CulturesToGenerate: TArray<FString>;
	public var CommandletClass: FString;
	public var SourcePath: FString;
	public var DestinationPath: FString;
	public var PortableObjectName: FString;
	public var ManifestName: FString;
	public var ArchiveName: FString;
	public var bExportLoc: Bool;
	public var bImportLoc: Bool;
	public var bUseCultureDirectory: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstInternationalizationExportSettings(InternationalizationExportSettings) from InternationalizationExportSettings {
	public extern var CulturesToGenerate(get, never): TArray<FString>;
	public inline extern function get_CulturesToGenerate(): TArray<FString> return this.CulturesToGenerate;
	public extern var CommandletClass(get, never): FString;
	public inline extern function get_CommandletClass(): FString return this.CommandletClass;
	public extern var SourcePath(get, never): FString;
	public inline extern function get_SourcePath(): FString return this.SourcePath;
	public extern var DestinationPath(get, never): FString;
	public inline extern function get_DestinationPath(): FString return this.DestinationPath;
	public extern var PortableObjectName(get, never): FString;
	public inline extern function get_PortableObjectName(): FString return this.PortableObjectName;
	public extern var ManifestName(get, never): FString;
	public inline extern function get_ManifestName(): FString return this.ManifestName;
	public extern var ArchiveName(get, never): FString;
	public inline extern function get_ArchiveName(): FString return this.ArchiveName;
	public extern var bExportLoc(get, never): Bool;
	public inline extern function get_bExportLoc(): Bool return this.bExportLoc;
	public extern var bImportLoc(get, never): Bool;
	public inline extern function get_bImportLoc(): Bool return this.bImportLoc;
	public extern var bUseCultureDirectory(get, never): Bool;
	public inline extern function get_bUseCultureDirectory(): Bool return this.bUseCultureDirectory;
}

@:forward
@:nativeGen
@:native("InternationalizationExportSettings*")
abstract InternationalizationExportSettingsPtr(ucpp.Ptr<InternationalizationExportSettings>) from ucpp.Ptr<InternationalizationExportSettings> to ucpp.Ptr<InternationalizationExportSettings>{
	@:from
	public static extern inline function fromValue(v: InternationalizationExportSettings): InternationalizationExportSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InternationalizationExportSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}