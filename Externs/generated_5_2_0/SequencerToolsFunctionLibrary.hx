// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USequencerToolsFunctionLibrary")
@:include("SequencerTools.h")
@:valueType
extern class SequencerToolsFunctionLibrary extends BlueprintFunctionLibrary {
	public function RenderMovie(InCaptureSettings: ucpp.Ptr<MovieSceneCapture>, OnFinishedCallback: HaxeDelegateProperty<(Bool) -> Void>): Bool;
	public function LinkAnimSequence(Sequence: ucpp.Ptr<LevelSequence>, AnimSequence: ucpp.Ptr<AnimSequence>, ExportOptions: ucpp.Ptr<AnimSeqExportOption.ConstAnimSeqExportOption>, Binding: ucpp.Ref<MovieSceneBindingProxy>): Bool;
	public function IsRenderingMovie(): Bool;
	public function IsEventEndpointValid(InEndpoint: ucpp.Ref<SequencerQuickBindingResult>): Bool;
	public function ImportLevelSequenceFBX(InWorld: ucpp.Ptr<World>, InSequence: ucpp.Ptr<LevelSequence>, InBindings: ucpp.Ref<TArray<MovieSceneBindingProxy>>, InImportFBXSettings: ucpp.Ptr<MovieSceneUserImportFBXSettings>, InImportFilename: FString): Bool;
	public function ImportFBXToControlRig(World: ucpp.Ptr<World>, InSequence: ucpp.Ptr<LevelSequence>, ActorWithControlRigTrack: FString, SelectedControlRigNames: ucpp.Ref<TArray<FString>>, ImportFBXControlRigSettings: ucpp.Ptr<MovieSceneUserImportFBXControlRigSettings>, ImportFilename: FString): Bool;
	public function GetObjectBindings(InWorld: ucpp.Ptr<World>, InSequence: ucpp.Ptr<LevelSequence>, InObject: ucpp.Ref<TArray<ucpp.Ptr<Object>>>, InRange: ucpp.Ref<SequencerScriptingRange>): TArray<SequencerBoundObjects>;
	public function GetLevelSequenceLinkFromAnimSequence(InAnimSequence: ucpp.Ptr<AnimSequence>): ucpp.Ptr<AnimSequenceLevelSequenceLink>;
	public function GetBoundObjects(InWorld: ucpp.Ptr<World>, InSequence: ucpp.Ptr<LevelSequence>, InBindings: ucpp.Ref<TArray<MovieSceneBindingProxy>>, InRange: ucpp.Ref<SequencerScriptingRange>): TArray<SequencerBoundObjects>;
	public function GetAnimSequenceLinkFromLevelSequence(InLevelSequence: ucpp.Ptr<LevelSequence>): ucpp.Ptr<LevelSequenceAnimSequenceLink>;
	public function ExportLevelSequenceFBX(InParams: ucpp.Ref<SequencerExportFBXParams>): Bool;
	public function ExportAnimSequence(World: ucpp.Ptr<World>, Sequence: ucpp.Ptr<LevelSequence>, AnimSequence: ucpp.Ptr<AnimSequence>, ExportOption: ucpp.Ptr<AnimSeqExportOption>, Binding: ucpp.Ref<MovieSceneBindingProxy>, bCreateLink: Bool): Bool;
	public function CreateQuickBinding(InSequence: ucpp.Ptr<MovieSceneSequence>, InObject: ucpp.Ptr<Object>, InFunctionName: FString, bCallInEditor: Bool): SequencerQuickBindingResult;
	public function CreateEvent(InSequence: ucpp.Ptr<MovieSceneSequence>, InSection: ucpp.Ptr<MovieSceneEventSectionBase>, InEndpoint: ucpp.Ref<SequencerQuickBindingResult>, InPayload: ucpp.Ref<TArray<FString>>): MovieSceneEvent;
	public function ClearLinkedAnimSequences(InLevelSequence: ucpp.Ptr<LevelSequence>): Void;
	public function CancelMovieRender(): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstSequencerToolsFunctionLibrary(SequencerToolsFunctionLibrary) from SequencerToolsFunctionLibrary {
}

@:forward
@:nativeGen
@:native("SequencerToolsFunctionLibrary*")
abstract SequencerToolsFunctionLibraryPtr(ucpp.Ptr<SequencerToolsFunctionLibrary>) from ucpp.Ptr<SequencerToolsFunctionLibrary> to ucpp.Ptr<SequencerToolsFunctionLibrary>{
	@:from
	public static extern inline function fromValue(v: SequencerToolsFunctionLibrary): SequencerToolsFunctionLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SequencerToolsFunctionLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}