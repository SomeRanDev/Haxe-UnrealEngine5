// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTextureImportTestFunctions")
@:include("ImportTestFunctions/TextureImportTestFunctions.h")
@:structAccess
extern class TextureImportTestFunctions extends ImportTestFunctionsBase {
	public function CheckTextureFilter(Texture: cpp.Star<Texture.ConstTexture>, ExpectedTextureFilter: TEnumAsByte<TextureFilter>): InterchangeTestFunctionResult;
	public function CheckTextureAddressZ(Texture: cpp.Star<Texture.ConstTexture>, ExpectedTextureAddressZ: TEnumAsByte<TextureAddress>): InterchangeTestFunctionResult;
	public function CheckTextureAddressY(Texture: cpp.Star<Texture.ConstTexture>, ExpectedTextureAddressY: TEnumAsByte<TextureAddress>): InterchangeTestFunctionResult;
	public function CheckTextureAddressX(Texture: cpp.Star<Texture.ConstTexture>, ExpectedTextureAddressX: TEnumAsByte<TextureAddress>): InterchangeTestFunctionResult;
	public function CheckImportedTextureCount(Textures: cpp.Reference<TArray<cpp.Star<Texture>>>, ExpectedNumberOfImportedTextures: cpp.Int32): InterchangeTestFunctionResult;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstTextureImportTestFunctions(TextureImportTestFunctions) from TextureImportTestFunctions {
}

@:forward
@:nativeGen
@:native("TextureImportTestFunctions*")
abstract TextureImportTestFunctionsPtr(cpp.Star<TextureImportTestFunctions>) from cpp.Star<TextureImportTestFunctions> to cpp.Star<TextureImportTestFunctions>{
	@:from
	public static extern inline function fromValue(v: TextureImportTestFunctions): TextureImportTestFunctionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TextureImportTestFunctions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}