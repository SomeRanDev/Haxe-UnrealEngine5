// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULandscapeComponent")
@:include("LandscapeComponent.h")
@:valueType
extern class LandscapeComp extends PrimitiveComp {
	public var SectionBaseX: ucpp.num.Int32;
	public var SectionBaseY: ucpp.num.Int32;
	public var ComponentSizeQuads: ucpp.num.Int32;
	public var SubsectionSizeQuads: ucpp.num.Int32;
	public var NumSubsections: ucpp.num.Int32;
	public var OverrideMaterial: ucpp.Ptr<MaterialInterface>;
	public var OverrideHoleMaterial: ucpp.Ptr<MaterialInterface>;
	public var MaterialInstances: TArray<ucpp.Ptr<MaterialInstanceConstant>>;
	public var MaterialInstancesDynamic: TArray<ucpp.Ptr<MaterialInstanceDynamic>>;
	public var LODIndexToMaterialIndex: TArray<ucpp.num.Int8>;
	public var XYOffsetmapTexture: ucpp.Ptr<Texture2D>;
	public var WeightmapScaleBias: Vector4;
	public var WeightmapSubsectionOffset: ucpp.num.Float32;
	public var HeightmapScaleBias: Vector4;
	public var CachedLocalBox: Box;
	private var CollisionComponentRef: ucpp.Ptr<LandscapeHeightfieldCollisionComp>;
	private var bUserTriggeredChangeRequested: Bool;
	private var bNaniteActive: Bool;
	private var HeightmapTexture: ucpp.Ptr<Texture2D>;
	private var WeightmapLayerAllocations: TArray<WeightmapLayerAllocationInfo>;
	private var WeightmapTextures: TArray<ucpp.Ptr<Texture2D>>;
	private var PerLODOverrideMaterials: TArray<LandscapePerLODMaterialOverride>;
	public var MapBuildDataId: Guid;
	public var CollisionMipLevel: ucpp.num.Int32;
	public var SimpleCollisionMipLevel: ucpp.num.Int32;
	public var NegativeZBoundsExtension: ucpp.num.Float32;
	public var PositiveZBoundsExtension: ucpp.num.Float32;
	public var StaticLightingResolution: ucpp.num.Float32;
	public var ForcedLOD: ucpp.num.Int32;
	public var LODBias: ucpp.num.Int32;
	public var StateId: Guid;
	public var BakedTextureMaterialGuid: Guid;
	public var LastBakedTextureMaterialGuid: Guid;
	public var GIBakedBaseColorTexture: ucpp.Ptr<Texture2D>;
	public var MobileMaterialInterfaces: TArray<ucpp.Ptr<MaterialInterface>>;
	public var MobileWeightmapTextures: TArray<ucpp.Ptr<Texture2D>>;

	public function SetLODBias(InLODBias: ucpp.num.Int32): Void;
	public function SetForcedLOD(InForcedLOD: ucpp.num.Int32): Void;
	public function GetMaterialInstanceDynamic(InIndex: ucpp.num.Int32): ucpp.Ptr<MaterialInstanceDynamic>;
	public function EditorGetPaintLayerWeightByNameAtLocation(InLocation: ucpp.Ref<Vector>, InPaintLayerName: FName): ucpp.num.Float32;
	public function EditorGetPaintLayerWeightAtLocation(InLocation: ucpp.Ref<Vector>, PaintLayer: ucpp.Ptr<LandscapeLayerInfoObject>): ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetMaterialInstanceDynamic)
@:nativeGen
abstract ConstLandscapeComp(LandscapeComp) from LandscapeComp {
	public extern var SectionBaseX(get, never): ucpp.num.Int32;
	public inline extern function get_SectionBaseX(): ucpp.num.Int32 return this.SectionBaseX;
	public extern var SectionBaseY(get, never): ucpp.num.Int32;
	public inline extern function get_SectionBaseY(): ucpp.num.Int32 return this.SectionBaseY;
	public extern var ComponentSizeQuads(get, never): ucpp.num.Int32;
	public inline extern function get_ComponentSizeQuads(): ucpp.num.Int32 return this.ComponentSizeQuads;
	public extern var SubsectionSizeQuads(get, never): ucpp.num.Int32;
	public inline extern function get_SubsectionSizeQuads(): ucpp.num.Int32 return this.SubsectionSizeQuads;
	public extern var NumSubsections(get, never): ucpp.num.Int32;
	public inline extern function get_NumSubsections(): ucpp.num.Int32 return this.NumSubsections;
	public extern var OverrideMaterial(get, never): ucpp.Ptr<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_OverrideMaterial(): ucpp.Ptr<MaterialInterface.ConstMaterialInterface> return this.OverrideMaterial;
	public extern var OverrideHoleMaterial(get, never): ucpp.Ptr<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_OverrideHoleMaterial(): ucpp.Ptr<MaterialInterface.ConstMaterialInterface> return this.OverrideHoleMaterial;
	public extern var MaterialInstances(get, never): TArray<ucpp.Ptr<MaterialInstanceConstant.ConstMaterialInstanceConstant>>;
	public inline extern function get_MaterialInstances(): TArray<ucpp.Ptr<MaterialInstanceConstant.ConstMaterialInstanceConstant>> return this.MaterialInstances;
	public extern var MaterialInstancesDynamic(get, never): TArray<ucpp.Ptr<MaterialInstanceDynamic.ConstMaterialInstanceDynamic>>;
	public inline extern function get_MaterialInstancesDynamic(): TArray<ucpp.Ptr<MaterialInstanceDynamic.ConstMaterialInstanceDynamic>> return this.MaterialInstancesDynamic;
	public extern var LODIndexToMaterialIndex(get, never): TArray<ucpp.num.Int8>;
	public inline extern function get_LODIndexToMaterialIndex(): TArray<ucpp.num.Int8> return this.LODIndexToMaterialIndex;
	public extern var XYOffsetmapTexture(get, never): ucpp.Ptr<Texture2D.ConstTexture2D>;
	public inline extern function get_XYOffsetmapTexture(): ucpp.Ptr<Texture2D.ConstTexture2D> return this.XYOffsetmapTexture;
	public extern var WeightmapScaleBias(get, never): Vector4;
	public inline extern function get_WeightmapScaleBias(): Vector4 return this.WeightmapScaleBias;
	public extern var WeightmapSubsectionOffset(get, never): ucpp.num.Float32;
	public inline extern function get_WeightmapSubsectionOffset(): ucpp.num.Float32 return this.WeightmapSubsectionOffset;
	public extern var HeightmapScaleBias(get, never): Vector4;
	public inline extern function get_HeightmapScaleBias(): Vector4 return this.HeightmapScaleBias;
	public extern var CachedLocalBox(get, never): Box;
	public inline extern function get_CachedLocalBox(): Box return this.CachedLocalBox;
	public extern var MapBuildDataId(get, never): Guid;
	public inline extern function get_MapBuildDataId(): Guid return this.MapBuildDataId;
	public extern var CollisionMipLevel(get, never): ucpp.num.Int32;
	public inline extern function get_CollisionMipLevel(): ucpp.num.Int32 return this.CollisionMipLevel;
	public extern var SimpleCollisionMipLevel(get, never): ucpp.num.Int32;
	public inline extern function get_SimpleCollisionMipLevel(): ucpp.num.Int32 return this.SimpleCollisionMipLevel;
	public extern var NegativeZBoundsExtension(get, never): ucpp.num.Float32;
	public inline extern function get_NegativeZBoundsExtension(): ucpp.num.Float32 return this.NegativeZBoundsExtension;
	public extern var PositiveZBoundsExtension(get, never): ucpp.num.Float32;
	public inline extern function get_PositiveZBoundsExtension(): ucpp.num.Float32 return this.PositiveZBoundsExtension;
	public extern var StaticLightingResolution(get, never): ucpp.num.Float32;
	public inline extern function get_StaticLightingResolution(): ucpp.num.Float32 return this.StaticLightingResolution;
	public extern var ForcedLOD(get, never): ucpp.num.Int32;
	public inline extern function get_ForcedLOD(): ucpp.num.Int32 return this.ForcedLOD;
	public extern var LODBias(get, never): ucpp.num.Int32;
	public inline extern function get_LODBias(): ucpp.num.Int32 return this.LODBias;
	public extern var StateId(get, never): Guid;
	public inline extern function get_StateId(): Guid return this.StateId;
	public extern var BakedTextureMaterialGuid(get, never): Guid;
	public inline extern function get_BakedTextureMaterialGuid(): Guid return this.BakedTextureMaterialGuid;
	public extern var LastBakedTextureMaterialGuid(get, never): Guid;
	public inline extern function get_LastBakedTextureMaterialGuid(): Guid return this.LastBakedTextureMaterialGuid;
	public extern var GIBakedBaseColorTexture(get, never): ucpp.Ptr<Texture2D.ConstTexture2D>;
	public inline extern function get_GIBakedBaseColorTexture(): ucpp.Ptr<Texture2D.ConstTexture2D> return this.GIBakedBaseColorTexture;
	public extern var MobileMaterialInterfaces(get, never): TArray<ucpp.Ptr<MaterialInterface.ConstMaterialInterface>>;
	public inline extern function get_MobileMaterialInterfaces(): TArray<ucpp.Ptr<MaterialInterface.ConstMaterialInterface>> return this.MobileMaterialInterfaces;
	public extern var MobileWeightmapTextures(get, never): TArray<ucpp.Ptr<Texture2D.ConstTexture2D>>;
	public inline extern function get_MobileWeightmapTextures(): TArray<ucpp.Ptr<Texture2D.ConstTexture2D>> return this.MobileWeightmapTextures;
}

@:forward
@:nativeGen
@:native("LandscapeComp*")
abstract LandscapeCompPtr(ucpp.Ptr<LandscapeComp>) from ucpp.Ptr<LandscapeComp> to ucpp.Ptr<LandscapeComp>{
	@:from
	public static extern inline function fromValue(v: LandscapeComp): LandscapeCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LandscapeComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}