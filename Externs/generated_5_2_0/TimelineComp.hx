// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTimelineComponent")
@:include("Components/TimelineComponent.h")
@:valueType
extern class TimelineComp extends ActorComp {
	private var TheTimeline: Timeline;
	private var bIgnoreTimeDilation: Bool;

	public function Stop(): Void;
	public function SetVectorCurve(NewVectorCurve: ucpp.Ptr<CurveVector>, VectorTrackName: FName): Void;
	public function SetTimelineLengthMode(NewLengthMode: TEnumAsByte<ETimelineLengthMode>): Void;
	public function SetTimelineLength(NewLength: ucpp.num.Float32): Void;
	public function SetPlayRate(NewRate: ucpp.num.Float32): Void;
	public function SetPlaybackPosition(NewPosition: ucpp.num.Float32, bFireEvents: Bool, bFireUpdate: Bool): Void;
	public function SetNewTime(NewTime: ucpp.num.Float32): Void;
	public function SetLooping(bNewLooping: Bool): Void;
	public function SetLinearColorCurve(NewLinearColorCurve: ucpp.Ptr<CurveLinearColor>, LinearColorTrackName: FName): Void;
	public function SetIgnoreTimeDilation(bNewIgnoreTimeDilation: Bool): Void;
	public function SetFloatCurve(NewFloatCurve: ucpp.Ptr<CurveFloat>, FloatTrackName: FName): Void;
	public function ReverseFromEnd(): Void;
	public function Reverse(): Void;
	public function PlayFromStart(): Void;
	public function Play(): Void;
	public function OnRep_Timeline(OldTimeline: ucpp.Ref<Timeline>): Void;
	public function IsReversing(): Bool;
	public function IsPlaying(): Bool;
	public function IsLooping(): Bool;
	public function GetTimelineLength(): ucpp.num.Float32;
	public function GetScaledTimelineLength(): ucpp.num.Float32;
	public function GetPlayRate(): ucpp.num.Float32;
	public function GetPlaybackPosition(): ucpp.num.Float32;
	public function GetIgnoreTimeDilation(): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsReversing, IsPlaying, IsLooping, GetTimelineLength, GetScaledTimelineLength, GetPlayRate, GetPlaybackPosition, GetIgnoreTimeDilation)
@:nativeGen
abstract ConstTimelineComp(TimelineComp) from TimelineComp {
}

@:forward
@:nativeGen
@:native("TimelineComp*")
abstract TimelineCompPtr(ucpp.Ptr<TimelineComp>) from ucpp.Ptr<TimelineComp> to ucpp.Ptr<TimelineComp>{
	@:from
	public static extern inline function fromValue(v: TimelineComp): TimelineCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TimelineComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}