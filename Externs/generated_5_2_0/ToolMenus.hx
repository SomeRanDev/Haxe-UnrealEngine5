// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UToolMenus")
@:include("ToolMenus.h")
@:valueType
extern class ToolMenus extends Object {
	private var CustomizedMenus: TArray<CustomizedToolMenu>;
	private var MenuSubstitutionsDuringGenerate: TMap<FName, FName>;
	private var Menus: TMap<FName, ucpp.Ptr<ToolMenu>>;

	public function UnregisterOwnerByName(InOwnerName: FName): Void;
	public function SetSectionPosition(MenuName: FName, SectionName: FName, OtherSectionName: FName, PositionType: EToolMenuInsertType): Void;
	public function SetSectionLabel(MenuName: FName, SectionName: FName, Label: FText): Void;
	public function RemoveSection(MenuName: FName, Section: FName): Void;
	public function RemoveMenu(MenuName: FName): Void;
	public function RemoveEntry(MenuName: FName, Section: FName, Name: FName): Void;
	public function RegisterMenu(Name: FName, Parent: FName, Type: EMultiBoxType, bWarnIfAlreadyRegistered: Bool): ucpp.Ptr<ToolMenu>;
	public function RefreshMenuWidget(Name: FName): Bool;
	public function RefreshAllWidgets(): Void;
	public function IsMenuRegistered(Name: FName): Bool;
	public function Get(): ucpp.Ptr<ToolMenus>;
	public function FindMenu(Name: FName): ucpp.Ptr<ToolMenu>;
	public function FindContext(InContext: ucpp.Ref<ToolMenuContext>, InClass: ucpp.Ptr<Class>): ucpp.Ptr<Object>;
	public function ExtendMenu(Name: FName): ucpp.Ptr<ToolMenu>;
	public function AddMenuEntryObject(MenuEntryObject: ucpp.Ptr<ToolMenuEntryScript>): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsMenuRegistered)
@:nativeGen
abstract ConstToolMenus(ToolMenus) from ToolMenus {
}

@:forward
@:nativeGen
@:native("ToolMenus*")
abstract ToolMenusPtr(ucpp.Ptr<ToolMenus>) from ucpp.Ptr<ToolMenus> to ucpp.Ptr<ToolMenus>{
	@:from
	public static extern inline function fromValue(v: ToolMenus): ToolMenusPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ToolMenus {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}