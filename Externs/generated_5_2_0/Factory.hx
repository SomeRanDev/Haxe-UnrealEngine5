// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFactory")
@:include("Factories/Factory.h")
@:valueType
extern class Factory extends Object {
	@:protected public var bCreateNew: Bool;
	public var SupportedClass: TSubclassOf<Object>;
	public var ContextClass: TSubclassOf<Object>;
	public var Formats: TArray<FString>;
	public var bEditAfterNew: Bool;
	public var bEditorImport: Bool;
	public var bText: Bool;
	public var ImportPriority: ucpp.num.Int32;
	public var AutomatedImportData: ucpp.Ptr<AutomatedAssetImportData>;
	public var AssetImportTask: ucpp.Ptr<AssetImportTask>;
	@:protected public var OverwriteYesOrNoToAllState: ucpp.num.Int32;

	public function ScriptFactoryCreateFile(InTask: ucpp.Ptr<AssetImportTask>): Bool;
	public function ScriptFactoryCanImport(Filename: FString): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstFactory(Factory) from Factory {
	public extern var SupportedClass(get, never): TSubclassOf<Object.ConstObject>;
	public inline extern function get_SupportedClass(): TSubclassOf<Object.ConstObject> return this.SupportedClass;
	public extern var ContextClass(get, never): TSubclassOf<Object.ConstObject>;
	public inline extern function get_ContextClass(): TSubclassOf<Object.ConstObject> return this.ContextClass;
	public extern var Formats(get, never): TArray<FString>;
	public inline extern function get_Formats(): TArray<FString> return this.Formats;
	public extern var bEditAfterNew(get, never): Bool;
	public inline extern function get_bEditAfterNew(): Bool return this.bEditAfterNew;
	public extern var bEditorImport(get, never): Bool;
	public inline extern function get_bEditorImport(): Bool return this.bEditorImport;
	public extern var bText(get, never): Bool;
	public inline extern function get_bText(): Bool return this.bText;
	public extern var ImportPriority(get, never): ucpp.num.Int32;
	public inline extern function get_ImportPriority(): ucpp.num.Int32 return this.ImportPriority;
	public extern var AutomatedImportData(get, never): ucpp.Ptr<AutomatedAssetImportData.ConstAutomatedAssetImportData>;
	public inline extern function get_AutomatedImportData(): ucpp.Ptr<AutomatedAssetImportData.ConstAutomatedAssetImportData> return this.AutomatedImportData;
	public extern var AssetImportTask(get, never): ucpp.Ptr<AssetImportTask.ConstAssetImportTask>;
	public inline extern function get_AssetImportTask(): ucpp.Ptr<AssetImportTask.ConstAssetImportTask> return this.AssetImportTask;
}

@:forward
@:nativeGen
@:native("Factory*")
abstract FactoryPtr(ucpp.Ptr<Factory>) from ucpp.Ptr<Factory> to ucpp.Ptr<Factory>{
	@:from
	public static extern inline function fromValue(v: Factory): FactoryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): Factory {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}