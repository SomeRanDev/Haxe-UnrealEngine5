// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMediaPlateComponent")
@:include("MediaPlateComponent.h")
@:valueType
extern class MediaPlateComp extends ActorComp {
	public var bPlayOnOpen: Bool;
	public var bAutoPlay: Bool;
	public var bEnableAudio: Bool;
	public var StartTime: ucpp.num.Float32;
	public var SoundComponent: ucpp.Ptr<MediaSoundComp>;
	public var StaticMeshComponent: ucpp.Ptr<StaticMeshComp>;
	public var Letterboxes: TArray<ucpp.Ptr<StaticMeshComp>>;
	public var MediaPlaylist: ucpp.Ptr<MediaPlaylist>;
	public var PlaylistIndex: ucpp.num.Int32;
	public var CacheSettings: MediaSourceCacheSettings;
	public function IsMediaPlatePlaying(): Bool;
	private var bPlayOnlyWhenVisible: Bool;
	public function GetLoop(): Bool;
	public function SetLoop(input: Bool): Void;
	private var VisibleMipsTilesCalculations: EMediaTextureVisibleMipsTiles;
	private var MipMapBias: ucpp.num.Float32;
	public function GetIsAspectRatioAuto(): Bool;
	public function SetIsAspectRatioAuto(input: Bool): Void;
	private var bEnableMipMapUpscaling: Bool;
	private var MipLevelToUpscale: ucpp.num.Int32;
	private var LetterboxAspectRatio: ucpp.num.Float32;
	private var MeshRange: Vector2D;
	private var MediaTextures: TArray<ucpp.Ptr<MediaTexture>>;
	private var MediaPlayer: ucpp.Ptr<MediaPlayer>;

	public function SetPlayOnlyWhenVisible(bInPlayOnlyWhenVisible: Bool): Void;
	public function SetMeshRange(InMeshRange: Vector2D): Void;
	public function SetLetterboxAspectRatio(AspectRatio: ucpp.num.Float32): Void;
	public function Seek(Time: ucpp.Ref<Timespan>): Bool;
	public function Rewind(): Bool;
	public function Play(): Void;
	public function Pause(): Void;
	public function Open(): Void;
	private function OnMediaOpened(DeviceUrl: FString): Void;
	private function OnMediaEnd(): Void;
	public function GetMeshRange(): Vector2D;
	public function GetMediaTexture(Index: ucpp.num.Int32): ucpp.Ptr<MediaTexture>;
	public function GetMediaPlayer(): ucpp.Ptr<MediaPlayer>;
	public function GetLetterboxAspectRatio(): ucpp.num.Float32;
	public function Close(): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetMeshRange)
@:nativeGen
abstract ConstMediaPlateComp(MediaPlateComp) from MediaPlateComp {
	public extern var bPlayOnOpen(get, never): Bool;
	public inline extern function get_bPlayOnOpen(): Bool return this.bPlayOnOpen;
	public extern var bAutoPlay(get, never): Bool;
	public inline extern function get_bAutoPlay(): Bool return this.bAutoPlay;
	public extern var bEnableAudio(get, never): Bool;
	public inline extern function get_bEnableAudio(): Bool return this.bEnableAudio;
	public extern var StartTime(get, never): ucpp.num.Float32;
	public inline extern function get_StartTime(): ucpp.num.Float32 return this.StartTime;
	public extern var SoundComponent(get, never): ucpp.Ptr<MediaSoundComp.ConstMediaSoundComp>;
	public inline extern function get_SoundComponent(): ucpp.Ptr<MediaSoundComp.ConstMediaSoundComp> return this.SoundComponent;
	public extern var StaticMeshComponent(get, never): ucpp.Ptr<StaticMeshComp.ConstStaticMeshComp>;
	public inline extern function get_StaticMeshComponent(): ucpp.Ptr<StaticMeshComp.ConstStaticMeshComp> return this.StaticMeshComponent;
	public extern var Letterboxes(get, never): TArray<ucpp.Ptr<StaticMeshComp.ConstStaticMeshComp>>;
	public inline extern function get_Letterboxes(): TArray<ucpp.Ptr<StaticMeshComp.ConstStaticMeshComp>> return this.Letterboxes;
	public extern var MediaPlaylist(get, never): ucpp.Ptr<MediaPlaylist.ConstMediaPlaylist>;
	public inline extern function get_MediaPlaylist(): ucpp.Ptr<MediaPlaylist.ConstMediaPlaylist> return this.MediaPlaylist;
	public extern var PlaylistIndex(get, never): ucpp.num.Int32;
	public inline extern function get_PlaylistIndex(): ucpp.num.Int32 return this.PlaylistIndex;
	public extern var CacheSettings(get, never): MediaSourceCacheSettings;
	public inline extern function get_CacheSettings(): MediaSourceCacheSettings return this.CacheSettings;
}

@:forward
@:nativeGen
@:native("MediaPlateComp*")
abstract MediaPlateCompPtr(ucpp.Ptr<MediaPlateComp>) from ucpp.Ptr<MediaPlateComp> to ucpp.Ptr<MediaPlateComp>{
	@:from
	public static extern inline function fromValue(v: MediaPlateComp): MediaPlateCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MediaPlateComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}