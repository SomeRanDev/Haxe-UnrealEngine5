// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTransformMeshesToolProperties")
@:include("TransformMeshesTool.h")
@:valueType
extern class TransformMeshesToolProperties extends InteractiveToolPropertySet {
	public var TransformMode: ETransformMeshesTransformMode;
	public var bApplyToInstances: Bool;
	public var bSetPivotMode: Bool;
	public var bEnableSnapDragging: Bool;
	public var SnapDragSource: ETransformMeshesSnapDragSource;
	public var RotationMode: ETransformMeshesSnapDragRotationMode;
	public var bHaveInstances: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstTransformMeshesToolProperties(TransformMeshesToolProperties) from TransformMeshesToolProperties {
	public extern var TransformMode(get, never): ETransformMeshesTransformMode;
	public inline extern function get_TransformMode(): ETransformMeshesTransformMode return this.TransformMode;
	public extern var bApplyToInstances(get, never): Bool;
	public inline extern function get_bApplyToInstances(): Bool return this.bApplyToInstances;
	public extern var bSetPivotMode(get, never): Bool;
	public inline extern function get_bSetPivotMode(): Bool return this.bSetPivotMode;
	public extern var bEnableSnapDragging(get, never): Bool;
	public inline extern function get_bEnableSnapDragging(): Bool return this.bEnableSnapDragging;
	public extern var SnapDragSource(get, never): ETransformMeshesSnapDragSource;
	public inline extern function get_SnapDragSource(): ETransformMeshesSnapDragSource return this.SnapDragSource;
	public extern var RotationMode(get, never): ETransformMeshesSnapDragRotationMode;
	public inline extern function get_RotationMode(): ETransformMeshesSnapDragRotationMode return this.RotationMode;
	public extern var bHaveInstances(get, never): Bool;
	public inline extern function get_bHaveInstances(): Bool return this.bHaveInstances;
}

@:forward
@:nativeGen
@:native("TransformMeshesToolProperties*")
abstract TransformMeshesToolPropertiesPtr(ucpp.Ptr<TransformMeshesToolProperties>) from ucpp.Ptr<TransformMeshesToolProperties> to ucpp.Ptr<TransformMeshesToolProperties>{
	@:from
	public static extern inline function fromValue(v: TransformMeshesToolProperties): TransformMeshesToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TransformMeshesToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}