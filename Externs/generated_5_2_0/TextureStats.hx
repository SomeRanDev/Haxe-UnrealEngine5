// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTextureStats")
@:include("TextureStats.h")
@:structAccess
extern class TextureStats extends Object {
	public var Texture: TWeakObjectPtr<Texture>;
	public var Actors: TArray<TWeakObjectPtr<Actor>>;
	public var Type: FString;
	public var Virtual: FString;
	public var MaxDim: Vector2D;
	public var CurrentDim: Vector2D;
	public var Format: TEnumAsByte<EPixelFormat>;
	public var Group: TEnumAsByte<TextureGroup>;
	public var LODBias: cpp.Int32;
	public var CurrentKB: cpp.Float32;
	public var FullyLoadedKB: cpp.Float32;
	public var NumUses: cpp.Int32;
	public var LastTimeRendered: cpp.Float32;
	public var Path: FString;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstTextureStats(TextureStats) from TextureStats {
	public extern var Texture(get, never): TWeakObjectPtr<Texture.ConstTexture>;
	public inline extern function get_Texture(): TWeakObjectPtr<Texture.ConstTexture> return this.Texture;
	public extern var Actors(get, never): TArray<TWeakObjectPtr<Actor.ConstActor>>;
	public inline extern function get_Actors(): TArray<TWeakObjectPtr<Actor.ConstActor>> return this.Actors;
	public extern var Type(get, never): FString;
	public inline extern function get_Type(): FString return this.Type;
	public extern var Virtual(get, never): FString;
	public inline extern function get_Virtual(): FString return this.Virtual;
	public extern var MaxDim(get, never): Vector2D;
	public inline extern function get_MaxDim(): Vector2D return this.MaxDim;
	public extern var CurrentDim(get, never): Vector2D;
	public inline extern function get_CurrentDim(): Vector2D return this.CurrentDim;
	public extern var Format(get, never): TEnumAsByte<EPixelFormat>;
	public inline extern function get_Format(): TEnumAsByte<EPixelFormat> return this.Format;
	public extern var Group(get, never): TEnumAsByte<TextureGroup>;
	public inline extern function get_Group(): TEnumAsByte<TextureGroup> return this.Group;
	public extern var LODBias(get, never): cpp.Int32;
	public inline extern function get_LODBias(): cpp.Int32 return this.LODBias;
	public extern var CurrentKB(get, never): cpp.Float32;
	public inline extern function get_CurrentKB(): cpp.Float32 return this.CurrentKB;
	public extern var FullyLoadedKB(get, never): cpp.Float32;
	public inline extern function get_FullyLoadedKB(): cpp.Float32 return this.FullyLoadedKB;
	public extern var NumUses(get, never): cpp.Int32;
	public inline extern function get_NumUses(): cpp.Int32 return this.NumUses;
	public extern var LastTimeRendered(get, never): cpp.Float32;
	public inline extern function get_LastTimeRendered(): cpp.Float32 return this.LastTimeRendered;
	public extern var Path(get, never): FString;
	public inline extern function get_Path(): FString return this.Path;
}

@:forward
@:nativeGen
@:native("TextureStats*")
abstract TextureStatsPtr(cpp.Star<TextureStats>) from cpp.Star<TextureStats> to cpp.Star<TextureStats>{
	@:from
	public static extern inline function fromValue(v: TextureStats): TextureStatsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TextureStats {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}