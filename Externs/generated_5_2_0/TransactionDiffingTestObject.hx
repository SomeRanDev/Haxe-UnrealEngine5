// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTransactionDiffingTestObject")
@:include("Tests/TransactionDiffingTests.h")
@:valueType
extern class TransactionDiffingTestObject extends Object {
	public var NamesArray: TArray<FName>;
	public var AdditionalName: FName;
	public var ObjectsArray: TArray<ucpp.Ptr<Object>>;
	public var AdditionalObject: ucpp.Ptr<Object>;
	public var SoftObjectsArray: TArray<TSoftObjectPtr<Object>>;
	public var AdditionalSoftObject: TSoftObjectPtr<Object>;
	public var PropertyData: ucpp.num.Int32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstTransactionDiffingTestObject(TransactionDiffingTestObject) from TransactionDiffingTestObject {
	public extern var NamesArray(get, never): TArray<FName>;
	public inline extern function get_NamesArray(): TArray<FName> return this.NamesArray;
	public extern var AdditionalName(get, never): FName;
	public inline extern function get_AdditionalName(): FName return this.AdditionalName;
	public extern var ObjectsArray(get, never): TArray<ucpp.Ptr<Object.ConstObject>>;
	public inline extern function get_ObjectsArray(): TArray<ucpp.Ptr<Object.ConstObject>> return this.ObjectsArray;
	public extern var AdditionalObject(get, never): ucpp.Ptr<Object.ConstObject>;
	public inline extern function get_AdditionalObject(): ucpp.Ptr<Object.ConstObject> return this.AdditionalObject;
	public extern var SoftObjectsArray(get, never): TArray<TSoftObjectPtr<Object.ConstObject>>;
	public inline extern function get_SoftObjectsArray(): TArray<TSoftObjectPtr<Object.ConstObject>> return this.SoftObjectsArray;
	public extern var AdditionalSoftObject(get, never): TSoftObjectPtr<Object.ConstObject>;
	public inline extern function get_AdditionalSoftObject(): TSoftObjectPtr<Object.ConstObject> return this.AdditionalSoftObject;
	public extern var PropertyData(get, never): ucpp.num.Int32;
	public inline extern function get_PropertyData(): ucpp.num.Int32 return this.PropertyData;
}

@:forward
@:nativeGen
@:native("TransactionDiffingTestObject*")
abstract TransactionDiffingTestObjectPtr(ucpp.Ptr<TransactionDiffingTestObject>) from ucpp.Ptr<TransactionDiffingTestObject> to ucpp.Ptr<TransactionDiffingTestObject>{
	@:from
	public static extern inline function fromValue(v: TransactionDiffingTestObject): TransactionDiffingTestObjectPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TransactionDiffingTestObject {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}