// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UConstructionPlaneMechanic")
@:include("Mechanics/ConstructionPlaneMechanic.h")
@:valueType
extern class ConstructionPlaneMechanic extends InteractionMechanic {
	public var PlaneTransformGizmo: ucpp.Ptr<CombinedTransformGizmo>;
	public var PlaneTransformProxy: ucpp.Ptr<TransformProxy>;
	@:protected public var ClickToSetPlaneBehavior: ucpp.Ptr<SingleClickInputBehavior>;
	@:protected public var MiddleClickToSetGizmoBehavior: ucpp.Ptr<LocalSingleClickInputBehavior>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstConstructionPlaneMechanic(ConstructionPlaneMechanic) from ConstructionPlaneMechanic {
	public extern var PlaneTransformGizmo(get, never): ucpp.Ptr<CombinedTransformGizmo.ConstCombinedTransformGizmo>;
	public inline extern function get_PlaneTransformGizmo(): ucpp.Ptr<CombinedTransformGizmo.ConstCombinedTransformGizmo> return this.PlaneTransformGizmo;
	public extern var PlaneTransformProxy(get, never): ucpp.Ptr<TransformProxy.ConstTransformProxy>;
	public inline extern function get_PlaneTransformProxy(): ucpp.Ptr<TransformProxy.ConstTransformProxy> return this.PlaneTransformProxy;
}

@:forward
@:nativeGen
@:native("ConstructionPlaneMechanic*")
abstract ConstructionPlaneMechanicPtr(ucpp.Ptr<ConstructionPlaneMechanic>) from ucpp.Ptr<ConstructionPlaneMechanic> to ucpp.Ptr<ConstructionPlaneMechanic>{
	@:from
	public static extern inline function fromValue(v: ConstructionPlaneMechanic): ConstructionPlaneMechanicPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ConstructionPlaneMechanic {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}