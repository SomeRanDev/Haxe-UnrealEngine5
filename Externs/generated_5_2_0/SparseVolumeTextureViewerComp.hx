// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USparseVolumeTextureViewerComponent")
@:include("SparseVolumeTexture/SparseVolumeTextureViewerComponent.h")
@:structAccess
extern class SparseVolumeTextureViewerComp extends PrimitiveComp {
	public var SparseVolumeTexturePreview: cpp.Star<SparseVolumeTexture>;
	public var bAnimate: Bool;
	public var AnimationFrame: cpp.Float32;
	public var FrameRate: cpp.Float32;
	public var AnimationTime: cpp.Float32;
	public var ComponentToVisualize: cpp.Int32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSparseVolumeTextureViewerComp(SparseVolumeTextureViewerComp) from SparseVolumeTextureViewerComp {
	public extern var SparseVolumeTexturePreview(get, never): cpp.Star<SparseVolumeTexture.ConstSparseVolumeTexture>;
	public inline extern function get_SparseVolumeTexturePreview(): cpp.Star<SparseVolumeTexture.ConstSparseVolumeTexture> return this.SparseVolumeTexturePreview;
	public extern var bAnimate(get, never): Bool;
	public inline extern function get_bAnimate(): Bool return this.bAnimate;
	public extern var AnimationFrame(get, never): cpp.Float32;
	public inline extern function get_AnimationFrame(): cpp.Float32 return this.AnimationFrame;
	public extern var FrameRate(get, never): cpp.Float32;
	public inline extern function get_FrameRate(): cpp.Float32 return this.FrameRate;
	public extern var AnimationTime(get, never): cpp.Float32;
	public inline extern function get_AnimationTime(): cpp.Float32 return this.AnimationTime;
	public extern var ComponentToVisualize(get, never): cpp.Int32;
	public inline extern function get_ComponentToVisualize(): cpp.Int32 return this.ComponentToVisualize;
}

@:forward
@:nativeGen
@:native("SparseVolumeTextureViewerComp*")
abstract SparseVolumeTextureViewerCompPtr(cpp.Star<SparseVolumeTextureViewerComp>) from cpp.Star<SparseVolumeTextureViewerComp> to cpp.Star<SparseVolumeTextureViewerComp>{
	@:from
	public static extern inline function fromValue(v: SparseVolumeTextureViewerComp): SparseVolumeTextureViewerCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SparseVolumeTextureViewerComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}