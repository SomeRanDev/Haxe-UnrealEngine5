// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGLTFExportOptions")
@:include("Options/GLTFExportOptions.h")
@:valueType
extern class GLTFExportOptions extends Object {
	public var ExportUniformScale: ucpp.num.Float32;
	public var bExportPreviewMesh: Bool;
	public var bSkipNearDefaultValues: Bool;
	public var bExportProxyMaterials: Bool;
	public var bExportUnlitMaterials: Bool;
	public var bExportClearCoatMaterials: Bool;
	public var BakeMaterialInputs: EGLTFMaterialBakeMode;
	public var DefaultMaterialBakeSize: EGLTFMaterialBakeSizePOT;
	public var DefaultMaterialBakeFilter: TEnumAsByte<TextureFilter>;
	public var DefaultMaterialBakeTiling: TEnumAsByte<TextureAddress>;
	public var DefaultInputBakeSettings: TMap<EGLTFMaterialPropertyGroup, GLTFOverrideMaterialBakeSettings>;
	public var DefaultLevelOfDetail: ucpp.num.Int32;
	public var bExportVertexColors: Bool;
	public var bExportVertexSkinWeights: Bool;
	public var bUseMeshQuantization: Bool;
	public var bExportLevelSequences: Bool;
	public var bExportAnimationSequences: Bool;
	public var TextureImageFormat: EGLTFTextureImageFormat;
	public var TextureImageQuality: ucpp.num.Int32;
	public var bExportTextureTransforms: Bool;
	public var bAdjustNormalmaps: Bool;
	public var bExportHiddenInGame: Bool;
	public var bExportLights: Bool;
	public var bExportCameras: Bool;
	public var ExportMaterialVariants: EGLTFMaterialVariantMode;

	public function ResetToDefault(): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstGLTFExportOptions(GLTFExportOptions) from GLTFExportOptions {
	public extern var ExportUniformScale(get, never): ucpp.num.Float32;
	public inline extern function get_ExportUniformScale(): ucpp.num.Float32 return this.ExportUniformScale;
	public extern var bExportPreviewMesh(get, never): Bool;
	public inline extern function get_bExportPreviewMesh(): Bool return this.bExportPreviewMesh;
	public extern var bSkipNearDefaultValues(get, never): Bool;
	public inline extern function get_bSkipNearDefaultValues(): Bool return this.bSkipNearDefaultValues;
	public extern var bExportProxyMaterials(get, never): Bool;
	public inline extern function get_bExportProxyMaterials(): Bool return this.bExportProxyMaterials;
	public extern var bExportUnlitMaterials(get, never): Bool;
	public inline extern function get_bExportUnlitMaterials(): Bool return this.bExportUnlitMaterials;
	public extern var bExportClearCoatMaterials(get, never): Bool;
	public inline extern function get_bExportClearCoatMaterials(): Bool return this.bExportClearCoatMaterials;
	public extern var BakeMaterialInputs(get, never): EGLTFMaterialBakeMode;
	public inline extern function get_BakeMaterialInputs(): EGLTFMaterialBakeMode return this.BakeMaterialInputs;
	public extern var DefaultMaterialBakeSize(get, never): EGLTFMaterialBakeSizePOT;
	public inline extern function get_DefaultMaterialBakeSize(): EGLTFMaterialBakeSizePOT return this.DefaultMaterialBakeSize;
	public extern var DefaultMaterialBakeFilter(get, never): TEnumAsByte<TextureFilter>;
	public inline extern function get_DefaultMaterialBakeFilter(): TEnumAsByte<TextureFilter> return this.DefaultMaterialBakeFilter;
	public extern var DefaultMaterialBakeTiling(get, never): TEnumAsByte<TextureAddress>;
	public inline extern function get_DefaultMaterialBakeTiling(): TEnumAsByte<TextureAddress> return this.DefaultMaterialBakeTiling;
	public extern var DefaultInputBakeSettings(get, never): TMap<EGLTFMaterialPropertyGroup, GLTFOverrideMaterialBakeSettings>;
	public inline extern function get_DefaultInputBakeSettings(): TMap<EGLTFMaterialPropertyGroup, GLTFOverrideMaterialBakeSettings> return this.DefaultInputBakeSettings;
	public extern var DefaultLevelOfDetail(get, never): ucpp.num.Int32;
	public inline extern function get_DefaultLevelOfDetail(): ucpp.num.Int32 return this.DefaultLevelOfDetail;
	public extern var bExportVertexColors(get, never): Bool;
	public inline extern function get_bExportVertexColors(): Bool return this.bExportVertexColors;
	public extern var bExportVertexSkinWeights(get, never): Bool;
	public inline extern function get_bExportVertexSkinWeights(): Bool return this.bExportVertexSkinWeights;
	public extern var bUseMeshQuantization(get, never): Bool;
	public inline extern function get_bUseMeshQuantization(): Bool return this.bUseMeshQuantization;
	public extern var bExportLevelSequences(get, never): Bool;
	public inline extern function get_bExportLevelSequences(): Bool return this.bExportLevelSequences;
	public extern var bExportAnimationSequences(get, never): Bool;
	public inline extern function get_bExportAnimationSequences(): Bool return this.bExportAnimationSequences;
	public extern var TextureImageFormat(get, never): EGLTFTextureImageFormat;
	public inline extern function get_TextureImageFormat(): EGLTFTextureImageFormat return this.TextureImageFormat;
	public extern var TextureImageQuality(get, never): ucpp.num.Int32;
	public inline extern function get_TextureImageQuality(): ucpp.num.Int32 return this.TextureImageQuality;
	public extern var bExportTextureTransforms(get, never): Bool;
	public inline extern function get_bExportTextureTransforms(): Bool return this.bExportTextureTransforms;
	public extern var bAdjustNormalmaps(get, never): Bool;
	public inline extern function get_bAdjustNormalmaps(): Bool return this.bAdjustNormalmaps;
	public extern var bExportHiddenInGame(get, never): Bool;
	public inline extern function get_bExportHiddenInGame(): Bool return this.bExportHiddenInGame;
	public extern var bExportLights(get, never): Bool;
	public inline extern function get_bExportLights(): Bool return this.bExportLights;
	public extern var bExportCameras(get, never): Bool;
	public inline extern function get_bExportCameras(): Bool return this.bExportCameras;
	public extern var ExportMaterialVariants(get, never): EGLTFMaterialVariantMode;
	public inline extern function get_ExportMaterialVariants(): EGLTFMaterialVariantMode return this.ExportMaterialVariants;
}

@:forward
@:nativeGen
@:native("GLTFExportOptions*")
abstract GLTFExportOptionsPtr(ucpp.Ptr<GLTFExportOptions>) from ucpp.Ptr<GLTFExportOptions> to ucpp.Ptr<GLTFExportOptions>{
	@:from
	public static extern inline function fromValue(v: GLTFExportOptions): GLTFExportOptionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GLTFExportOptions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}