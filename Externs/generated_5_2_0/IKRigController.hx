// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UIKRigController")
@:include("RigEditor/IKRigController.h")
@:valueType
extern class IKRigController extends Object {
	private var Asset: ucpp.Ptr<IKRigDefinition>;

	public function SetSolverEnabled(SolverIndex: ucpp.num.Int32, bIsEnabled: Bool): Bool;
	public function SetSkeletalMesh(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, bTransact: Bool): Bool;
	public function SetRootBone(RootBoneName: FName, SolverIndex: ucpp.num.Int32): Bool;
	public function SetRetargetRoot(RootBoneName: FName): Bool;
	public function SetRetargetChainStartBone(ChainName: FName, StartBoneName: FName): Bool;
	public function SetRetargetChainGoal(ChainName: FName, GoalName: FName): Bool;
	public function SetRetargetChainEndBone(ChainName: FName, EndBoneName: FName): Bool;
	public function SetGoalBone(GoalName: FName, NewBoneName: FName): Bool;
	public function SetEndBone(EndBoneName: FName, SolverIndex: ucpp.num.Int32): Bool;
	public function SetBoneExcluded(BoneName: FName, bExclude: Bool): Bool;
	public function RenameRetargetChain(ChainName: FName, NewChainName: FName): FName;
	public function RenameGoal(OldName: FName, PotentialNewName: FName): FName;
	public function RemoveSolver(SolverIndex: ucpp.num.Int32): Bool;
	public function RemoveRetargetChain(ChainName: FName): Bool;
	public function RemoveGoal(GoalName: FName): Bool;
	public function RemoveBoneSetting(BoneName: FName, SolverIndex: ucpp.num.Int32): Bool;
	public function MoveSolverInStack(SolverToMoveIndex: ucpp.num.Int32, TargetSolverIndex: ucpp.num.Int32): Bool;
	public function IsSkeletalMeshCompatible(SkeletalMeshToCheck: ucpp.Ptr<SkeletalMesh>): Bool;
	public function IsGoalConnectedToSolver(GoalName: FName, SolverIndex: ucpp.num.Int32): Bool;
	public function IsGoalConnectedToAnySolver(GoalName: FName): Bool;
	public function GetSolverEnabled(SolverIndex: ucpp.num.Int32): Bool;
	public function GetSolverAtIndex(Index: ucpp.num.Int32): ucpp.Ptr<IKRigSolver>;
	public function GetSkeletalMesh(): ucpp.Ptr<SkeletalMesh>;
	public function GetRootBone(SolverIndex: ucpp.num.Int32): FName;
	public function GetRetargetRoot(): FName;
	public function GetRetargetChainStartBone(ChainName: FName): FName;
	public function GetRetargetChains(): TArray<BoneChain>;
	public function GetRetargetChainGoal(ChainName: FName): FName;
	public function GetRetargetChainEndBone(ChainName: FName): FName;
	public function GetRefPoseTransformOfBone(BoneName: FName): Transform;
	public function GetNumSolvers(): ucpp.num.Int32;
	public function GetIndexOfSolver(Solver: ucpp.Ptr<IKRigSolver>): ucpp.num.Int32;
	public function GetGoalSettingsForSolver(GoalName: FName, SolverIndex: ucpp.num.Int32): ucpp.Ptr<Object>;
	public function GetGoalNameForBone(BoneName: FName): FName;
	public function GetGoal(GoalName: FName): ucpp.Ptr<IKRigEffectorGoal>;
	public function GetEndBone(SolverIndex: ucpp.num.Int32): FName;
	public function GetController(InIKRigDefinition: ucpp.Ptr<IKRigDefinition.ConstIKRigDefinition>): ucpp.Ptr<IKRigController>;
	public function GetBoneSettings(BoneName: FName, SolverIndex: ucpp.num.Int32): ucpp.Ptr<Object>;
	public function GetBoneForGoal(GoalName: FName): FName;
	public function GetBoneExcluded(BoneName: FName): Bool;
	public function GetAllGoals(): TArray<ucpp.Ptr<IKRigEffectorGoal>>;
	public function DisconnectGoalFromSolver(GoalToRemove: FName, SolverIndex: ucpp.num.Int32): Bool;
	public function ConnectGoalToSolver(GoalName: FName, SolverIndex: ucpp.num.Int32): Bool;
	public function AddSolver(InSolverClass: TSubclassOf<IKRigSolver>): ucpp.num.Int32;
	public function AddRetargetChain(ChainName: FName, StartBoneName: FName, EndBoneName: FName, GoalName: FName): FName;
	public function AddNewGoal(GoalName: FName, BoneName: FName): FName;
	public function AddBoneSetting(BoneName: FName, SolverIndex: ucpp.num.Int32): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(
	SetSolverEnabled, SetSkeletalMesh, SetRootBone, SetRetargetRoot, SetRetargetChainStartBone,
	SetRetargetChainGoal, SetRetargetChainEndBone, SetGoalBone, SetEndBone, SetBoneExcluded,
	RenameRetargetChain, RenameGoal, RemoveSolver, RemoveRetargetChain, RemoveGoal,
	RemoveBoneSetting, MoveSolverInStack, IsSkeletalMeshCompatible, IsGoalConnectedToSolver, IsGoalConnectedToAnySolver,
	GetSolverEnabled, GetSolverAtIndex, GetSkeletalMesh, GetRootBone, GetRetargetRoot,
	GetRetargetChainStartBone, GetRetargetChains, GetRetargetChainGoal, GetRetargetChainEndBone, GetRefPoseTransformOfBone,
	GetNumSolvers, GetIndexOfSolver, GetGoalSettingsForSolver, GetGoalNameForBone, GetGoal,
	GetEndBone, GetBoneSettings, GetBoneForGoal, GetBoneExcluded, GetAllGoals,
	DisconnectGoalFromSolver, ConnectGoalToSolver, AddSolver, AddRetargetChain, AddNewGoal,
	AddBoneSetting
)
@:nativeGen
abstract ConstIKRigController(IKRigController) from IKRigController {
}

@:forward
@:nativeGen
@:native("IKRigController*")
abstract IKRigControllerPtr(ucpp.Ptr<IKRigController>) from ucpp.Ptr<IKRigController> to ucpp.Ptr<IKRigController>{
	@:from
	public static extern inline function fromValue(v: IKRigController): IKRigControllerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): IKRigController {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}