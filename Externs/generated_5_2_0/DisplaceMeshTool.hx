// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDisplaceMeshTool")
@:include("DisplaceMeshTool.h")
@:structAccess
extern class DisplaceMeshTool extends SingleSelectionMeshEditingTool {
	public var CommonProperties: cpp.Star<DisplaceMeshCommonProperties>;
	public var DirectionalFilterProperties: cpp.Star<DisplaceMeshDirectionalFilterProperties>;
	public var TextureMapProperties: cpp.Star<DisplaceMeshTextureMapProperties>;
	public var NoiseProperties: cpp.Star<DisplaceMeshPerlinNoiseProperties>;
	public var SineWaveProperties: cpp.Star<DisplaceMeshSineWaveProperties>;
	public var SelectiveTessellationProperties: cpp.Star<SelectiveTessellationProperties>;
	public var ActiveContrastCurveTarget: cpp.Star<CurveFloat>;
	private var PreviewMeshActor: cpp.Star<InternalToolFrameworkActor>;
	private var DynamicMeshComponent: cpp.Star<DynamicMeshComp>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstDisplaceMeshTool(DisplaceMeshTool) from DisplaceMeshTool {
	public extern var CommonProperties(get, never): cpp.Star<DisplaceMeshCommonProperties.ConstDisplaceMeshCommonProperties>;
	public inline extern function get_CommonProperties(): cpp.Star<DisplaceMeshCommonProperties.ConstDisplaceMeshCommonProperties> return this.CommonProperties;
	public extern var DirectionalFilterProperties(get, never): cpp.Star<DisplaceMeshDirectionalFilterProperties.ConstDisplaceMeshDirectionalFilterProperties>;
	public inline extern function get_DirectionalFilterProperties(): cpp.Star<DisplaceMeshDirectionalFilterProperties.ConstDisplaceMeshDirectionalFilterProperties> return this.DirectionalFilterProperties;
	public extern var TextureMapProperties(get, never): cpp.Star<DisplaceMeshTextureMapProperties.ConstDisplaceMeshTextureMapProperties>;
	public inline extern function get_TextureMapProperties(): cpp.Star<DisplaceMeshTextureMapProperties.ConstDisplaceMeshTextureMapProperties> return this.TextureMapProperties;
	public extern var NoiseProperties(get, never): cpp.Star<DisplaceMeshPerlinNoiseProperties.ConstDisplaceMeshPerlinNoiseProperties>;
	public inline extern function get_NoiseProperties(): cpp.Star<DisplaceMeshPerlinNoiseProperties.ConstDisplaceMeshPerlinNoiseProperties> return this.NoiseProperties;
	public extern var SineWaveProperties(get, never): cpp.Star<DisplaceMeshSineWaveProperties.ConstDisplaceMeshSineWaveProperties>;
	public inline extern function get_SineWaveProperties(): cpp.Star<DisplaceMeshSineWaveProperties.ConstDisplaceMeshSineWaveProperties> return this.SineWaveProperties;
	public extern var SelectiveTessellationProperties(get, never): cpp.Star<SelectiveTessellationProperties.ConstSelectiveTessellationProperties>;
	public inline extern function get_SelectiveTessellationProperties(): cpp.Star<SelectiveTessellationProperties.ConstSelectiveTessellationProperties> return this.SelectiveTessellationProperties;
	public extern var ActiveContrastCurveTarget(get, never): cpp.Star<CurveFloat.ConstCurveFloat>;
	public inline extern function get_ActiveContrastCurveTarget(): cpp.Star<CurveFloat.ConstCurveFloat> return this.ActiveContrastCurveTarget;
}

@:forward
@:nativeGen
@:native("DisplaceMeshTool*")
abstract DisplaceMeshToolPtr(cpp.Star<DisplaceMeshTool>) from cpp.Star<DisplaceMeshTool> to cpp.Star<DisplaceMeshTool>{
	@:from
	public static extern inline function fromValue(v: DisplaceMeshTool): DisplaceMeshToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DisplaceMeshTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}