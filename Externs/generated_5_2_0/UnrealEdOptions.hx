// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UUnrealEdOptions")
@:include("Preferences/UnrealEdOptions.h")
@:valueType
extern class UnrealEdOptions extends Object {
	public var EditorCategories: TArray<EditorCommandCategory>;
	public var EditorCommands: TArray<EditorCommand>;
	public var EditorKeyBindings: ucpp.Ptr<UnrealEdKeyBindings>;
	public var bExpandClassPickerClassList: Bool;
	public var NewAssetDefaultClasses: TArray<ClassPickerDefaults>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstUnrealEdOptions(UnrealEdOptions) from UnrealEdOptions {
	public extern var EditorCategories(get, never): TArray<EditorCommandCategory>;
	public inline extern function get_EditorCategories(): TArray<EditorCommandCategory> return this.EditorCategories;
	public extern var EditorCommands(get, never): TArray<EditorCommand>;
	public inline extern function get_EditorCommands(): TArray<EditorCommand> return this.EditorCommands;
	public extern var EditorKeyBindings(get, never): ucpp.Ptr<UnrealEdKeyBindings.ConstUnrealEdKeyBindings>;
	public inline extern function get_EditorKeyBindings(): ucpp.Ptr<UnrealEdKeyBindings.ConstUnrealEdKeyBindings> return this.EditorKeyBindings;
	public extern var bExpandClassPickerClassList(get, never): Bool;
	public inline extern function get_bExpandClassPickerClassList(): Bool return this.bExpandClassPickerClassList;
	public extern var NewAssetDefaultClasses(get, never): TArray<ClassPickerDefaults>;
	public inline extern function get_NewAssetDefaultClasses(): TArray<ClassPickerDefaults> return this.NewAssetDefaultClasses;
}

@:forward
@:nativeGen
@:native("UnrealEdOptions*")
abstract UnrealEdOptionsPtr(ucpp.Ptr<UnrealEdOptions>) from ucpp.Ptr<UnrealEdOptions> to ucpp.Ptr<UnrealEdOptions>{
	@:from
	public static extern inline function fromValue(v: UnrealEdOptions): UnrealEdOptionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): UnrealEdOptions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}