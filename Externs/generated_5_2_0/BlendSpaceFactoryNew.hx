// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBlendSpaceFactoryNew")
@:include("Factories/BlendSpaceFactoryNew.h")
@:structAccess
extern class BlendSpaceFactoryNew extends Factory {
	public var TargetSkeleton: cpp.Star<Skeleton>;
	public var PreviewSkeletalMesh: cpp.Star<SkeletalMesh>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstBlendSpaceFactoryNew(BlendSpaceFactoryNew) from BlendSpaceFactoryNew {
	public extern var TargetSkeleton(get, never): cpp.Star<Skeleton.ConstSkeleton>;
	public inline extern function get_TargetSkeleton(): cpp.Star<Skeleton.ConstSkeleton> return this.TargetSkeleton;
	public extern var PreviewSkeletalMesh(get, never): cpp.Star<SkeletalMesh.ConstSkeletalMesh>;
	public inline extern function get_PreviewSkeletalMesh(): cpp.Star<SkeletalMesh.ConstSkeletalMesh> return this.PreviewSkeletalMesh;
}

@:forward
@:nativeGen
@:native("BlendSpaceFactoryNew*")
abstract BlendSpaceFactoryNewPtr(cpp.Star<BlendSpaceFactoryNew>) from cpp.Star<BlendSpaceFactoryNew> to cpp.Star<BlendSpaceFactoryNew>{
	@:from
	public static extern inline function fromValue(v: BlendSpaceFactoryNew): BlendSpaceFactoryNewPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BlendSpaceFactoryNew {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}