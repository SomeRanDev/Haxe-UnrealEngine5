// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTypedElementWorldInterface")
@:valueType
extern class TypedElementWorldInterface extends Interface {
	public function SetWorldTransform(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, InTransform: ucpp.Ref<Transform>): Bool;
	public function SetRelativeTransform(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, InTransform: ucpp.Ref<Transform>): Bool;
	public function SetPivotOffset(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, InPivotOffset: ucpp.Ref<Vector>): Bool;
	public function PromoteElement(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, OverrideWorld: ucpp.Ptr<World>): ScriptTypedElementHandle;
	public function NotifyMovementStarted(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): Void;
	public function NotifyMovementOngoing(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): Void;
	public function NotifyMovementEnded(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): Void;
	public function IsTemplateElement(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): Bool;
	public function GetWorldTransform(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, OutTransform: ucpp.Ref<Transform>): Bool;
	public function GetRelativeTransform(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, OutTransform: ucpp.Ref<Transform>): Bool;
	public function GetPivotOffset(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, OutPivotOffset: ucpp.Ref<Vector>): Bool;
	public function GetOwnerWorld(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): ucpp.Ptr<World>;
	public function GetOwnerLevel(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): ucpp.Ptr<Level>;
	public function GetBounds(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, OutBounds: ucpp.Ref<BoxSphereBounds>): Bool;
	public function DuplicateElement(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, InWorld: ucpp.Ptr<World>, InLocationOffset: ucpp.Ref<Vector>): ScriptTypedElementHandle;
	public function DeleteElement(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, InWorld: ucpp.Ptr<World>, InSelectionSet: ucpp.Ptr<TypedElementSelectionSet>, InDeletionOptions: ucpp.Ref<TypedElementDeletionOptions>): Bool;
	public function CanPromoteElement(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): Bool;
	public function CanMoveElement(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>, InWorldType: ETypedElementWorldType): Bool;
	public function CanEditElement(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): Bool;
	public function CanDuplicateElement(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): Bool;
	public function CanDeleteElement(InElementHandle: ucpp.Ref<ScriptTypedElementHandle>): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstTypedElementWorldInterface(TypedElementWorldInterface) from TypedElementWorldInterface {
}

@:forward
@:nativeGen
@:native("TypedElementWorldInterface*")
abstract TypedElementWorldInterfacePtr(ucpp.Ptr<TypedElementWorldInterface>) from ucpp.Ptr<TypedElementWorldInterface> to ucpp.Ptr<TypedElementWorldInterface>{
	@:from
	public static extern inline function fromValue(v: TypedElementWorldInterface): TypedElementWorldInterfacePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TypedElementWorldInterface {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}