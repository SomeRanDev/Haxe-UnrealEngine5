// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimationImportTestFunctions")
@:include("ImportTestFunctions/AnimationImportTestFunctions.h")
@:structAccess
extern class AnimationImportTestFunctions extends ImportTestFunctionsBase {
	public function CheckImportedAnimSequenceCount(AnimSequences: cpp.Reference<TArray<cpp.Star<AnimSequence>>>, ExpectedNumberOfImportedAnimSequences: cpp.Int32): InterchangeTestFunctionResult;
	public function CheckCurveKeyValue(AnimSequence: cpp.Star<AnimSequence>, CurveName: FString, KeyIndex: cpp.Int32, ExpectedCurveKeyValue: cpp.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyTime(AnimSequence: cpp.Star<AnimSequence>, CurveName: FString, KeyIndex: cpp.Int32, ExpectedCurveKeyTime: cpp.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyLeaveTangentWeight(AnimSequence: cpp.Star<AnimSequence>, CurveName: FString, KeyIndex: cpp.Int32, ExpectedCurveKeyLeaveTangentWeight: cpp.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyLeaveTangent(AnimSequence: cpp.Star<AnimSequence>, CurveName: FString, KeyIndex: cpp.Int32, ExpectedCurveKeyLeaveTangent: cpp.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyArriveTangentWeight(AnimSequence: cpp.Star<AnimSequence>, CurveName: FString, KeyIndex: cpp.Int32, ExpectedCurveKeyArriveTangentWeight: cpp.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyArriveTangent(AnimSequence: cpp.Star<AnimSequence>, CurveName: FString, KeyIndex: cpp.Int32, ExpectedCurveKeyArriveTangent: cpp.Float32): InterchangeTestFunctionResult;
	public function CheckAnimationLength(AnimSequence: cpp.Star<AnimSequence>, ExpectedAnimationLength: cpp.Float32): InterchangeTestFunctionResult;
	public function CheckAnimationFrameNumber(AnimSequence: cpp.Star<AnimSequence>, ExpectedFrameNumber: cpp.Int32): InterchangeTestFunctionResult;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimationImportTestFunctions(AnimationImportTestFunctions) from AnimationImportTestFunctions {
}

@:forward
@:nativeGen
@:native("AnimationImportTestFunctions*")
abstract AnimationImportTestFunctionsPtr(cpp.Star<AnimationImportTestFunctions>) from cpp.Star<AnimationImportTestFunctions> to cpp.Star<AnimationImportTestFunctions>{
	@:from
	public static extern inline function fromValue(v: AnimationImportTestFunctions): AnimationImportTestFunctionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimationImportTestFunctions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}