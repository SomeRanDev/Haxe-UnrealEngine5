// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimationImportTestFunctions")
@:include("ImportTestFunctions/AnimationImportTestFunctions.h")
@:valueType
extern class AnimationImportTestFunctions extends ImportTestFunctionsBase {
	public function CheckImportedAnimSequenceCount(AnimSequences: ucpp.Ref<TArray<ucpp.Ptr<AnimSequence>>>, ExpectedNumberOfImportedAnimSequences: ucpp.num.Int32): InterchangeTestFunctionResult;
	public function CheckCurveKeyValue(AnimSequence: ucpp.Ptr<AnimSequence>, CurveName: FString, KeyIndex: ucpp.num.Int32, ExpectedCurveKeyValue: ucpp.num.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyTime(AnimSequence: ucpp.Ptr<AnimSequence>, CurveName: FString, KeyIndex: ucpp.num.Int32, ExpectedCurveKeyTime: ucpp.num.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyLeaveTangentWeight(AnimSequence: ucpp.Ptr<AnimSequence>, CurveName: FString, KeyIndex: ucpp.num.Int32, ExpectedCurveKeyLeaveTangentWeight: ucpp.num.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyLeaveTangent(AnimSequence: ucpp.Ptr<AnimSequence>, CurveName: FString, KeyIndex: ucpp.num.Int32, ExpectedCurveKeyLeaveTangent: ucpp.num.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyArriveTangentWeight(AnimSequence: ucpp.Ptr<AnimSequence>, CurveName: FString, KeyIndex: ucpp.num.Int32, ExpectedCurveKeyArriveTangentWeight: ucpp.num.Float32): InterchangeTestFunctionResult;
	public function CheckCurveKeyArriveTangent(AnimSequence: ucpp.Ptr<AnimSequence>, CurveName: FString, KeyIndex: ucpp.num.Int32, ExpectedCurveKeyArriveTangent: ucpp.num.Float32): InterchangeTestFunctionResult;
	public function CheckAnimationLength(AnimSequence: ucpp.Ptr<AnimSequence>, ExpectedAnimationLength: ucpp.num.Float32): InterchangeTestFunctionResult;
	public function CheckAnimationFrameNumber(AnimSequence: ucpp.Ptr<AnimSequence>, ExpectedFrameNumber: ucpp.num.Int32): InterchangeTestFunctionResult;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimationImportTestFunctions(AnimationImportTestFunctions) from AnimationImportTestFunctions {
}

@:forward
@:nativeGen
@:native("AnimationImportTestFunctions*")
abstract AnimationImportTestFunctionsPtr(ucpp.Ptr<AnimationImportTestFunctions>) from ucpp.Ptr<AnimationImportTestFunctions> to ucpp.Ptr<AnimationImportTestFunctions>{
	@:from
	public static extern inline function fromValue(v: AnimationImportTestFunctions): AnimationImportTestFunctionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimationImportTestFunctions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}