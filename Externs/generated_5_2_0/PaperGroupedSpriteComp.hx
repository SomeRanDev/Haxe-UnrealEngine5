// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPaperGroupedSpriteComponent")
@:include("PaperGroupedSpriteComponent.h")
@:valueType
extern class PaperGroupedSpriteComp extends MeshComp {
	@:protected public var InstanceMaterials: TArray<ucpp.Ptr<MaterialInterface>>;
	@:protected public var PerInstanceSpriteData: TArray<SpriteInstanceData>;

	public function UpdateInstanceTransform(InstanceIndex: ucpp.num.Int32, NewInstanceTransform: ucpp.Ref<Transform>, bWorldSpace: Bool, bMarkRenderStateDirty: Bool, bTeleport: Bool): Bool;
	public function UpdateInstanceColor(InstanceIndex: ucpp.num.Int32, NewInstanceColor: LinearColor, bMarkRenderStateDirty: Bool): Bool;
	public function SortInstancesAlongAxis(WorldSpaceSortAxis: Vector): Void;
	public function RemoveInstance(InstanceIndex: ucpp.num.Int32): Bool;
	public function GetInstanceTransform(InstanceIndex: ucpp.num.Int32, OutInstanceTransform: ucpp.Ref<Transform>, bWorldSpace: Bool): Bool;
	public function GetInstanceCount(): ucpp.num.Int32;
	public function ClearInstances(): Void;
	public function AddInstance(Transform: ucpp.Ref<Transform>, Sprite: ucpp.Ptr<PaperSprite>, bWorldSpace: Bool, Color: LinearColor): ucpp.num.Int32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetInstanceTransform, GetInstanceCount)
@:nativeGen
abstract ConstPaperGroupedSpriteComp(PaperGroupedSpriteComp) from PaperGroupedSpriteComp {
}

@:forward
@:nativeGen
@:native("PaperGroupedSpriteComp*")
abstract PaperGroupedSpriteCompPtr(ucpp.Ptr<PaperGroupedSpriteComp>) from ucpp.Ptr<PaperGroupedSpriteComp> to ucpp.Ptr<PaperGroupedSpriteComp>{
	@:from
	public static extern inline function fromValue(v: PaperGroupedSpriteComp): PaperGroupedSpriteCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PaperGroupedSpriteComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}