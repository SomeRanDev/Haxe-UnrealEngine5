// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFractureModeCustomizationSettings")
@:include("FractureEditorMode.h")
@:valueType
extern class FractureModeCustomizationSettings extends DeveloperSettings {
	public var ToolSectionOrder: TArray<FString>;
	public var ToolFavorites: TArray<FString>;
	public var SectionColors: TArray<FractureModeCustomSectionColor>;
	public var ToolColors: TArray<FractureModeCustomToolColor>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstFractureModeCustomizationSettings(FractureModeCustomizationSettings) from FractureModeCustomizationSettings {
	public extern var ToolSectionOrder(get, never): TArray<FString>;
	public inline extern function get_ToolSectionOrder(): TArray<FString> return this.ToolSectionOrder;
	public extern var ToolFavorites(get, never): TArray<FString>;
	public inline extern function get_ToolFavorites(): TArray<FString> return this.ToolFavorites;
	public extern var SectionColors(get, never): TArray<FractureModeCustomSectionColor>;
	public inline extern function get_SectionColors(): TArray<FractureModeCustomSectionColor> return this.SectionColors;
	public extern var ToolColors(get, never): TArray<FractureModeCustomToolColor>;
	public inline extern function get_ToolColors(): TArray<FractureModeCustomToolColor> return this.ToolColors;
}

@:forward
@:nativeGen
@:native("FractureModeCustomizationSettings*")
abstract FractureModeCustomizationSettingsPtr(ucpp.Ptr<FractureModeCustomizationSettings>) from ucpp.Ptr<FractureModeCustomizationSettings> to ucpp.Ptr<FractureModeCustomizationSettings>{
	@:from
	public static extern inline function fromValue(v: FractureModeCustomizationSettings): FractureModeCustomizationSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): FractureModeCustomizationSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}