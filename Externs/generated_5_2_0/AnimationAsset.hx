// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimationAsset")
@:include("Animation/AnimationAsset.h")
@:structAccess
extern class AnimationAsset extends Object {
	private var Skeleton: cpp.Star<Skeleton>;
	private var MetaData: TArray<cpp.Star<AnimMetaData>>;
	@:protected public var AssetUserData: TArray<cpp.Star<AssetUserData>>;

	public function SetPreviewSkeletalMesh(PreviewMesh: cpp.Star<SkeletalMesh>): Void;
	public function GetPlayLength(): cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetPlayLength)
@:nativeGen
abstract ConstAnimationAsset(AnimationAsset) from AnimationAsset {
}

@:forward
@:nativeGen
@:native("AnimationAsset*")
abstract AnimationAssetPtr(cpp.Star<AnimationAsset>) from cpp.Star<AnimationAsset> to cpp.Star<AnimationAsset>{
	@:from
	public static extern inline function fromValue(v: AnimationAsset): AnimationAssetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimationAsset {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}