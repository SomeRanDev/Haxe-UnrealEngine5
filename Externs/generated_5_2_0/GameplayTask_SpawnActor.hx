// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGameplayTask_SpawnActor")
@:include("Tasks/GameplayTask_SpawnActor.h")
@:structAccess
extern class GameplayTask_SpawnActor extends GameplayTask {
	public var Success: HaxeMulticastSparseDelegateProperty<(cpp.Star<Actor>) -> Void>;
	public var DidNotSpawn: HaxeMulticastSparseDelegateProperty<(cpp.Star<Actor>) -> Void>;
	@:protected public var ClassToSpawn: TSubclassOf<Actor>;

	public function SpawnActor(TaskOwner: GameplayTaskOwnerInterface, SpawnLocation: Vector, SpawnRotation: Rotator, Class: TSubclassOf<Actor>, bSpawnOnlyOnAuthority: Bool): cpp.Star<GameplayTask_SpawnActor>;
	public function FinishSpawningActor(WorldContextObject: cpp.Star<Object>, SpawnedActor: cpp.Star<Actor>): Void;
	public function BeginSpawningActor(WorldContextObject: cpp.Star<Object>, SpawnedActor: cpp.Reference<cpp.Star<Actor>>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGameplayTask_SpawnActor(GameplayTask_SpawnActor) from GameplayTask_SpawnActor {
	public extern var Success(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<Actor.ConstActor>) -> Void>;
	public inline extern function get_Success(): HaxeMulticastSparseDelegateProperty<(cpp.Star<Actor.ConstActor>) -> Void> return this.Success;
	public extern var DidNotSpawn(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<Actor.ConstActor>) -> Void>;
	public inline extern function get_DidNotSpawn(): HaxeMulticastSparseDelegateProperty<(cpp.Star<Actor.ConstActor>) -> Void> return this.DidNotSpawn;
}

@:forward
@:nativeGen
@:native("GameplayTask_SpawnActor*")
abstract GameplayTask_SpawnActorPtr(cpp.Star<GameplayTask_SpawnActor>) from cpp.Star<GameplayTask_SpawnActor> to cpp.Star<GameplayTask_SpawnActor>{
	@:from
	public static extern inline function fromValue(v: GameplayTask_SpawnActor): GameplayTask_SpawnActorPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GameplayTask_SpawnActor {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}