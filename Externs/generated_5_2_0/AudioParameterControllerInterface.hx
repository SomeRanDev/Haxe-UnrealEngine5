// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAudioParameterControllerInterface")
@:valueType
extern class AudioParameterControllerInterface extends Interface {
	public function SetTriggerParameter(InName: FName): Void;
	public function SetStringParameter(InName: FName, InValue: FString): Void;
	public function SetStringArrayParameter(InName: FName, InValue: ucpp.Ref<TArray<FString>>): Void;
	public function SetParameters_Blueprint(InParameters: ucpp.Ref<TArray<AudioParameter>>): Void;
	public function SetObjectParameter(InName: FName, InValue: ucpp.Ptr<Object>): Void;
	public function SetObjectArrayParameter(InName: FName, InValue: ucpp.Ref<TArray<ucpp.Ptr<Object>>>): Void;
	public function SetIntParameter(InName: FName, InInt: ucpp.num.Int32): Void;
	public function SetIntArrayParameter(InName: FName, InValue: ucpp.Ref<TArray<ucpp.num.Int32>>): Void;
	public function SetFloatParameter(InName: FName, InFloat: ucpp.num.Float32): Void;
	public function SetFloatArrayParameter(InName: FName, InValue: ucpp.Ref<TArray<ucpp.num.Float32>>): Void;
	public function SetBoolParameter(InName: FName, InBool: Bool): Void;
	public function SetBoolArrayParameter(InName: FName, InValue: ucpp.Ref<TArray<Bool>>): Void;
	public function ResetParameters(): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAudioParameterControllerInterface(AudioParameterControllerInterface) from AudioParameterControllerInterface {
}

@:forward
@:nativeGen
@:native("AudioParameterControllerInterface*")
abstract AudioParameterControllerInterfacePtr(ucpp.Ptr<AudioParameterControllerInterface>) from ucpp.Ptr<AudioParameterControllerInterface> to ucpp.Ptr<AudioParameterControllerInterface>{
	@:from
	public static extern inline function fromValue(v: AudioParameterControllerInterface): AudioParameterControllerInterfacePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AudioParameterControllerInterface {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}