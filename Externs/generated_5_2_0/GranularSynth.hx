// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGranularSynth")
@:include("SynthComponents/SynthComponentGranulator.h")
@:valueType
extern class GranularSynth extends SynthComp {
	@:protected public var GranulatedSoundWave: ucpp.Ptr<SoundWave>;

	public function SetSustainGain(SustainGain: ucpp.num.Float32): Void;
	public function SetSoundWave(InSoundWave: ucpp.Ptr<SoundWave>): Void;
	public function SetScrubMode(bScrubMode: Bool): Void;
	public function SetReleaseTimeMsec(ReleaseTimeMsec: ucpp.num.Float32): Void;
	public function SetPlayheadTime(InPositionSec: ucpp.num.Float32, LerpTimeSec: ucpp.num.Float32, SeekType: EGranularSynthSeekType): Void;
	public function SetPlaybackSpeed(InPlayheadRate: ucpp.num.Float32): Void;
	public function SetGrainVolume(BaseVolume: ucpp.num.Float32, VolumeRange: Vector2D): Void;
	public function SetGrainsPerSecond(InGrainsPerSecond: ucpp.num.Float32): Void;
	public function SetGrainProbability(InGrainProbability: ucpp.num.Float32): Void;
	public function SetGrainPitch(BasePitch: ucpp.num.Float32, PitchRange: Vector2D): Void;
	public function SetGrainPan(BasePan: ucpp.num.Float32, PanRange: Vector2D): Void;
	public function SetGrainEnvelopeType(EnvelopeType: EGranularSynthEnvelopeType): Void;
	public function SetGrainDuration(BaseDurationMsec: ucpp.num.Float32, DurationRange: Vector2D): Void;
	public function SetDecayTime(DecayTimeMsec: ucpp.num.Float32): Void;
	public function SetAttackTime(AttackTimeMsec: ucpp.num.Float32): Void;
	public function NoteOn(Note: ucpp.num.Float32, Velocity: ucpp.num.Int32, Duration: ucpp.num.Float32): Void;
	public function NoteOff(Note: ucpp.num.Float32, bKill: Bool): Void;
	public function IsLoaded(): Bool;
	public function GetSampleDuration(): ucpp.num.Float32;
	public function GetCurrentPlayheadTime(): ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsLoaded, GetSampleDuration, GetCurrentPlayheadTime)
@:nativeGen
abstract ConstGranularSynth(GranularSynth) from GranularSynth {
}

@:forward
@:nativeGen
@:native("GranularSynth*")
abstract GranularSynthPtr(ucpp.Ptr<GranularSynth>) from ucpp.Ptr<GranularSynth> to ucpp.Ptr<GranularSynth>{
	@:from
	public static extern inline function fromValue(v: GranularSynth): GranularSynthPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GranularSynth {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}