// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAssetRegistryHelpers")
@:include("AssetRegistry/AssetRegistryHelpers.h")
@:valueType
extern class AssetRegistryHelpers extends Object {
	public function ToSoftObjectPath(InAssetData: ucpp.Ref<AssetData>): SoftObjectPath;
	public function SetFilterTagsAndValues(InFilter: ucpp.Ref<ARFilter>, InTagsAndValues: ucpp.Ref<TArray<TagAndValue>>): ARFilter;
	public function IsValid(InAssetData: ucpp.Ref<AssetData>): Bool;
	public function IsUAsset(InAssetData: ucpp.Ref<AssetData>): Bool;
	public function IsRedirector(InAssetData: ucpp.Ref<AssetData>): Bool;
	public function IsAssetLoaded(InAssetData: ucpp.Ref<AssetData>): Bool;
	public function GetTagValue(InAssetData: ucpp.Ref<AssetData>, InTagName: ucpp.Ref<FName>, OutTagValue: ucpp.Ref<FString>): Bool;
	public function GetFullName(InAssetData: ucpp.Ref<AssetData>): FString;
	public function GetExportTextName(InAssetData: ucpp.Ref<AssetData>): FString;
	public function GetClass(InAssetData: ucpp.Ref<AssetData>): ucpp.Ptr<Class>;
	public function GetBlueprintAssets(InFilter: ucpp.Ref<ARFilter>, OutAssetData: ucpp.Ref<TArray<AssetData>>): Void;
	public function GetAssetRegistry(): AssetRegistry;
	public function GetAsset(InAssetData: ucpp.Ref<AssetData>): ucpp.Ptr<Object>;
	public function FindAssetNativeClass(AssetData: ucpp.Ref<AssetData>): ucpp.Ptr<Class>;
	public function CreateAssetData(InAsset: ucpp.Ptr<Object.ConstObject>, bAllowBlueprintClass: Bool): AssetData;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAssetRegistryHelpers(AssetRegistryHelpers) from AssetRegistryHelpers {
}

@:forward
@:nativeGen
@:native("AssetRegistryHelpers*")
abstract AssetRegistryHelpersPtr(ucpp.Ptr<AssetRegistryHelpers>) from ucpp.Ptr<AssetRegistryHelpers> to ucpp.Ptr<AssetRegistryHelpers>{
	@:from
	public static extern inline function fromValue(v: AssetRegistryHelpers): AssetRegistryHelpersPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AssetRegistryHelpers {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}