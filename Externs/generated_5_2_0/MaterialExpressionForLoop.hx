// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionForLoop")
@:include("Materials/MaterialExpressionForLoop.h")
@:valueType
extern class MaterialExpressionForLoop extends MaterialExpression {
	public var LoopBody: ExpressionExecOutput;
	public var Completed: ExpressionExecOutput;
	public var StartIndex: ExpressionInput;
	public var EndIndex: ExpressionInput;
	public var IndexStep: ExpressionInput;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionForLoop(MaterialExpressionForLoop) from MaterialExpressionForLoop {
	public extern var LoopBody(get, never): ExpressionExecOutput;
	public inline extern function get_LoopBody(): ExpressionExecOutput return this.LoopBody;
	public extern var Completed(get, never): ExpressionExecOutput;
	public inline extern function get_Completed(): ExpressionExecOutput return this.Completed;
	public extern var StartIndex(get, never): ExpressionInput;
	public inline extern function get_StartIndex(): ExpressionInput return this.StartIndex;
	public extern var EndIndex(get, never): ExpressionInput;
	public inline extern function get_EndIndex(): ExpressionInput return this.EndIndex;
	public extern var IndexStep(get, never): ExpressionInput;
	public inline extern function get_IndexStep(): ExpressionInput return this.IndexStep;
}

@:forward
@:nativeGen
@:native("MaterialExpressionForLoop*")
abstract MaterialExpressionForLoopPtr(ucpp.Ptr<MaterialExpressionForLoop>) from ucpp.Ptr<MaterialExpressionForLoop> to ucpp.Ptr<MaterialExpressionForLoop>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionForLoop): MaterialExpressionForLoopPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionForLoop {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}