// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USourceEffectBitCrusherPreset")
@:include("SourceEffects/SourceEffectBitCrusher.h")
@:valueType
extern class SourceEffectBitCrusherPreset extends SoundEffectSourcePreset {
	public var Settings: SourceEffectBitCrusherSettings;

	public function SetSettings(Settings: ucpp.Ref<SourceEffectBitCrusherBaseSettings>): Void;
	public function SetSampleRateModulators(InModulators: ucpp.Ref<TSet<ucpp.Ptr<SoundModulatorBase>>>): Void;
	public function SetSampleRateModulator(Modulator: ucpp.Ptr<SoundModulatorBase.ConstSoundModulatorBase>): Void;
	public function SetSampleRate(SampleRate: ucpp.num.Float32): Void;
	public function SetModulationSettings(ModulationSettings: ucpp.Ref<SourceEffectBitCrusherSettings>): Void;
	public function SetBits(Bits: ucpp.num.Float32): Void;
	public function SetBitModulators(InModulators: ucpp.Ref<TSet<ucpp.Ptr<SoundModulatorBase>>>): Void;
	public function SetBitModulator(Modulator: ucpp.Ptr<SoundModulatorBase.ConstSoundModulatorBase>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstSourceEffectBitCrusherPreset(SourceEffectBitCrusherPreset) from SourceEffectBitCrusherPreset {
	public extern var Settings(get, never): SourceEffectBitCrusherSettings;
	public inline extern function get_Settings(): SourceEffectBitCrusherSettings return this.Settings;
}

@:forward
@:nativeGen
@:native("SourceEffectBitCrusherPreset*")
abstract SourceEffectBitCrusherPresetPtr(ucpp.Ptr<SourceEffectBitCrusherPreset>) from ucpp.Ptr<SourceEffectBitCrusherPreset> to ucpp.Ptr<SourceEffectBitCrusherPreset>{
	@:from
	public static extern inline function fromValue(v: SourceEffectBitCrusherPreset): SourceEffectBitCrusherPresetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SourceEffectBitCrusherPreset {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}