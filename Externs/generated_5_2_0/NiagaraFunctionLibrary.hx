// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UNiagaraFunctionLibrary")
@:include("NiagaraFunctionLibrary.h")
@:structAccess
extern class NiagaraFunctionLibrary extends BlueprintFunctionLibrary {
	public function SpawnSystemAttachedWithParams(SpawnParams: cpp.Reference<FXSystemSpawnParameters>): cpp.Star<NiagaraComp>;
	public function SpawnSystemAttached(SystemTemplate: cpp.Star<NiagaraSystem>, AttachToComponent: cpp.Star<SceneComp>, AttachPointName: FName, Location: Vector, Rotation: Rotator, LocationType: TEnumAsByte<EAttachLocation>, bAutoDestroy: Bool, bAutoActivate: Bool, PoolingMethod: ENCPoolMethod, bPreCullCheck: Bool): cpp.Star<NiagaraComp>;
	public function SpawnSystemAtLocationWithParams(SpawnParams: cpp.Reference<FXSystemSpawnParameters>): cpp.Star<NiagaraComp>;
	public function SpawnSystemAtLocation(WorldContextObject: cpp.Star<Object.ConstObject>, SystemTemplate: cpp.Star<NiagaraSystem>, Location: Vector, Rotation: Rotator, Scale: Vector, bAutoDestroy: Bool, bAutoActivate: Bool, PoolingMethod: ENCPoolMethod, bPreCullCheck: Bool): cpp.Star<NiagaraComp>;
	public function SetVolumeTextureObject(NiagaraSystem: cpp.Star<NiagaraComp>, OverrideName: FString, Texture: cpp.Star<VolumeTexture>): Void;
	public function SetTextureObject(NiagaraSystem: cpp.Star<NiagaraComp>, OverrideName: FString, Texture: cpp.Star<Texture>): Void;
	public function SetTexture2DArrayObject(NiagaraSystem: cpp.Star<NiagaraComp>, OverrideName: FString, Texture: cpp.Star<Texture2DArray>): Void;
	public function SetSkeletalMeshDataInterfaceSamplingRegions(NiagaraSystem: cpp.Star<NiagaraComp>, OverrideName: FString, SamplingRegions: cpp.Reference<TArray<FName>>): Void;
	public function SetSkeletalMeshDataInterfaceFilteredSockets(NiagaraSystem: cpp.Star<NiagaraComp>, OverrideName: FString, FilteredSockets: cpp.Reference<TArray<FName>>): Void;
	public function SetSkeletalMeshDataInterfaceFilteredBones(NiagaraSystem: cpp.Star<NiagaraComp>, OverrideName: FString, FilteredBones: cpp.Reference<TArray<FName>>): Void;
	public function SetComponentNiagaraGPURayTracedCollisionGroup(WorldContextObject: cpp.Star<Object>, Primitive: cpp.Star<PrimitiveComp>, CollisionGroup: cpp.Int32): Void;
	public function SetActorNiagaraGPURayTracedCollisionGroup(WorldContextObject: cpp.Star<Object>, Actor: cpp.Star<Actor>, CollisionGroup: cpp.Int32): Void;
	public function ReleaseNiagaraGPURayTracedCollisionGroup(WorldContextObject: cpp.Star<Object>, CollisionGroup: cpp.Int32): Void;
	public function OverrideSystemUserVariableStaticMeshComponent(NiagaraSystem: cpp.Star<NiagaraComp>, OverrideName: FString, StaticMeshComponent: cpp.Star<StaticMeshComp>): Void;
	public function OverrideSystemUserVariableStaticMesh(NiagaraSystem: cpp.Star<NiagaraComp>, OverrideName: FString, StaticMesh: cpp.Star<StaticMesh>): Void;
	public function OverrideSystemUserVariableSkeletalMeshComponent(NiagaraSystem: cpp.Star<NiagaraComp>, OverrideName: FString, SkeletalMeshComponent: cpp.Star<SkeletalMeshComp>): Void;
	public function GetNiagaraParameterCollection(WorldContextObject: cpp.Star<Object>, Collection: cpp.Star<NiagaraParameterCollection>): cpp.Star<NiagaraParameterCollectionInstance>;
	public function AcquireNiagaraGPURayTracedCollisionGroup(WorldContextObject: cpp.Star<Object>): cpp.Int32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstNiagaraFunctionLibrary(NiagaraFunctionLibrary) from NiagaraFunctionLibrary {
}

@:forward
@:nativeGen
@:native("NiagaraFunctionLibrary*")
abstract NiagaraFunctionLibraryPtr(cpp.Star<NiagaraFunctionLibrary>) from cpp.Star<NiagaraFunctionLibrary> to cpp.Star<NiagaraFunctionLibrary>{
	@:from
	public static extern inline function fromValue(v: NiagaraFunctionLibrary): NiagaraFunctionLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): NiagaraFunctionLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}