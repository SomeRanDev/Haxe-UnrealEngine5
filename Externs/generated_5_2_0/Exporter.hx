// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UExporter")
@:include("Exporters/Exporter.h")
@:valueType
extern class Exporter extends Object {
	public var SupportedClass: TSubclassOf<Object>;
	public var ExportRootScope: ucpp.Ptr<Object>;
	public var FormatExtension: TArray<FString>;
	public var FormatDescription: TArray<FString>;
	public var PreferredFormatIndex: ucpp.num.Int32;
	public var TextIndent: ucpp.num.Int32;
	public var bText: Bool;
	public var bSelectedOnly: Bool;
	public var bForceFileOperations: Bool;
	public var ExportTask: ucpp.Ptr<AssetExportTask>;

	public function ScriptRunAssetExportTask(Task: ucpp.Ptr<AssetExportTask>): Bool;
	public function RunAssetExportTasks(ExportTasks: ucpp.Ref<TArray<ucpp.Ptr<AssetExportTask>>>): Bool;
	public function RunAssetExportTask(Task: ucpp.Ptr<AssetExportTask>): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstExporter(Exporter) from Exporter {
	public extern var SupportedClass(get, never): TSubclassOf<Object.ConstObject>;
	public inline extern function get_SupportedClass(): TSubclassOf<Object.ConstObject> return this.SupportedClass;
	public extern var ExportRootScope(get, never): ucpp.Ptr<Object.ConstObject>;
	public inline extern function get_ExportRootScope(): ucpp.Ptr<Object.ConstObject> return this.ExportRootScope;
	public extern var FormatExtension(get, never): TArray<FString>;
	public inline extern function get_FormatExtension(): TArray<FString> return this.FormatExtension;
	public extern var FormatDescription(get, never): TArray<FString>;
	public inline extern function get_FormatDescription(): TArray<FString> return this.FormatDescription;
	public extern var PreferredFormatIndex(get, never): ucpp.num.Int32;
	public inline extern function get_PreferredFormatIndex(): ucpp.num.Int32 return this.PreferredFormatIndex;
	public extern var TextIndent(get, never): ucpp.num.Int32;
	public inline extern function get_TextIndent(): ucpp.num.Int32 return this.TextIndent;
	public extern var bText(get, never): Bool;
	public inline extern function get_bText(): Bool return this.bText;
	public extern var bSelectedOnly(get, never): Bool;
	public inline extern function get_bSelectedOnly(): Bool return this.bSelectedOnly;
	public extern var bForceFileOperations(get, never): Bool;
	public inline extern function get_bForceFileOperations(): Bool return this.bForceFileOperations;
	public extern var ExportTask(get, never): ucpp.Ptr<AssetExportTask.ConstAssetExportTask>;
	public inline extern function get_ExportTask(): ucpp.Ptr<AssetExportTask.ConstAssetExportTask> return this.ExportTask;
}

@:forward
@:nativeGen
@:native("Exporter*")
abstract ExporterPtr(ucpp.Ptr<Exporter>) from ucpp.Ptr<Exporter> to ucpp.Ptr<Exporter>{
	@:from
	public static extern inline function fromValue(v: Exporter): ExporterPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): Exporter {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}