// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInputTrigger")
@:include("InputTriggers.h")
@:valueType
extern class InputTrigger extends Object {
	public var ActuationThreshold: ucpp.num.Float32;
	public var bShouldAlwaysTick: Bool;
	public var LastValue: InputActionValue;

	public function UpdateState(PlayerInput: ucpp.Ptr<EnhancedPlayerInput.ConstEnhancedPlayerInput>, ModifiedValue: InputActionValue, DeltaTime: ucpp.num.Float32): ETriggerState;
	public function IsActuated(ForValue: ucpp.Ref<InputActionValue>): Bool;
	public function GetTriggerType(): ETriggerType;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsActuated, GetTriggerType)
@:nativeGen
abstract ConstInputTrigger(InputTrigger) from InputTrigger {
	public extern var ActuationThreshold(get, never): ucpp.num.Float32;
	public inline extern function get_ActuationThreshold(): ucpp.num.Float32 return this.ActuationThreshold;
	public extern var bShouldAlwaysTick(get, never): Bool;
	public inline extern function get_bShouldAlwaysTick(): Bool return this.bShouldAlwaysTick;
	public extern var LastValue(get, never): InputActionValue;
	public inline extern function get_LastValue(): InputActionValue return this.LastValue;
}

@:forward
@:nativeGen
@:native("InputTrigger*")
abstract InputTriggerPtr(ucpp.Ptr<InputTrigger>) from ucpp.Ptr<InputTrigger> to ucpp.Ptr<InputTrigger>{
	@:from
	public static extern inline function fromValue(v: InputTrigger): InputTriggerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InputTrigger {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}