// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ALocationVolume")
@:include("LocationVolume.h")
@:structAccess
extern class LocationVolume extends Volume {
	public var DebugColor: Color;
	public var bIsRuntime: Bool;

	public function Unload(): Void;
	public function Load(): Void;
	public function IsLoaded(): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(IsLoaded)
@:nativeGen
abstract ConstLocationVolume(LocationVolume) from LocationVolume {
	public extern var DebugColor(get, never): Color;
	public inline extern function get_DebugColor(): Color return this.DebugColor;
	public extern var bIsRuntime(get, never): Bool;
	public inline extern function get_bIsRuntime(): Bool return this.bIsRuntime;
}

@:forward
@:nativeGen
@:native("LocationVolume*")
abstract LocationVolumePtr(cpp.Star<LocationVolume>) from cpp.Star<LocationVolume> to cpp.Star<LocationVolume>{
	@:from
	public static extern inline function fromValue(v: LocationVolume): LocationVolumePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LocationVolume {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}