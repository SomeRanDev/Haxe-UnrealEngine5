// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULoudnessSettings")
@:include("Loudness.h")
@:valueType
extern class LoudnessSettings extends AudioSynesthesiaSettings {
	public var AnalysisPeriod: ucpp.num.Float32;
	public var MinimumFrequency: ucpp.num.Float32;
	public var MaximumFrequency: ucpp.num.Float32;
	public var CurveType: ELoudnessCurveTypeEnum;
	public var NoiseFloorDb: ucpp.num.Float32;
	public var ExpectedMaxLoudness: ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstLoudnessSettings(LoudnessSettings) from LoudnessSettings {
	public extern var AnalysisPeriod(get, never): ucpp.num.Float32;
	public inline extern function get_AnalysisPeriod(): ucpp.num.Float32 return this.AnalysisPeriod;
	public extern var MinimumFrequency(get, never): ucpp.num.Float32;
	public inline extern function get_MinimumFrequency(): ucpp.num.Float32 return this.MinimumFrequency;
	public extern var MaximumFrequency(get, never): ucpp.num.Float32;
	public inline extern function get_MaximumFrequency(): ucpp.num.Float32 return this.MaximumFrequency;
	public extern var CurveType(get, never): ELoudnessCurveTypeEnum;
	public inline extern function get_CurveType(): ELoudnessCurveTypeEnum return this.CurveType;
	public extern var NoiseFloorDb(get, never): ucpp.num.Float32;
	public inline extern function get_NoiseFloorDb(): ucpp.num.Float32 return this.NoiseFloorDb;
	public extern var ExpectedMaxLoudness(get, never): ucpp.num.Float32;
	public inline extern function get_ExpectedMaxLoudness(): ucpp.num.Float32 return this.ExpectedMaxLoudness;
}

@:forward
@:nativeGen
@:native("LoudnessSettings*")
abstract LoudnessSettingsPtr(ucpp.Ptr<LoudnessSettings>) from ucpp.Ptr<LoudnessSettings> to ucpp.Ptr<LoudnessSettings>{
	@:from
	public static extern inline function fromValue(v: LoudnessSettings): LoudnessSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LoudnessSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}