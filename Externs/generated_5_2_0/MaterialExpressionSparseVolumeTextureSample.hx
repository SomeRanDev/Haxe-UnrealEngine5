// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionSparseVolumeTextureSample")
@:include("Materials/MaterialExpressionSparseVolumeTextureSample.h")
@:valueType
extern class MaterialExpressionSparseVolumeTextureSample extends MaterialExpression {
	public var Coordinates: ExpressionInput;
	public var SparseVolumeTexture: ucpp.Ptr<SparseVolumeTexture>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionSparseVolumeTextureSample(MaterialExpressionSparseVolumeTextureSample) from MaterialExpressionSparseVolumeTextureSample {
	public extern var Coordinates(get, never): ExpressionInput;
	public inline extern function get_Coordinates(): ExpressionInput return this.Coordinates;
	public extern var SparseVolumeTexture(get, never): ucpp.Ptr<SparseVolumeTexture.ConstSparseVolumeTexture>;
	public inline extern function get_SparseVolumeTexture(): ucpp.Ptr<SparseVolumeTexture.ConstSparseVolumeTexture> return this.SparseVolumeTexture;
}

@:forward
@:nativeGen
@:native("MaterialExpressionSparseVolumeTextureSample*")
abstract MaterialExpressionSparseVolumeTextureSamplePtr(ucpp.Ptr<MaterialExpressionSparseVolumeTextureSample>) from ucpp.Ptr<MaterialExpressionSparseVolumeTextureSample> to ucpp.Ptr<MaterialExpressionSparseVolumeTextureSample>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionSparseVolumeTextureSample): MaterialExpressionSparseVolumeTextureSamplePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionSparseVolumeTextureSample {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}