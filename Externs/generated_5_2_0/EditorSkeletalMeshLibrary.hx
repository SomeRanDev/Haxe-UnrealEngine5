// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDEPRECATED_EditorSkeletalMeshLibrary")
@:include("EditorSkeletalMeshLibrary.h")
@:structAccess
extern class EditorSkeletalMeshLibrary extends BlueprintFunctionLibrary {
	public function StripLODGeometry(SkeletalMesh: cpp.Star<SkeletalMesh>, LODIndex: cpp.Int32, TextureMask: cpp.Star<Texture2D>, Threshold: cpp.Float32): Bool;
	public function SetLodBuildSettings(SkeletalMesh: cpp.Star<SkeletalMesh>, LodIndex: cpp.Int32, BuildOptions: cpp.Reference<SkeletalMeshBuildSettings>): Void;
	public function RenameSocket(SkeletalMesh: cpp.Star<SkeletalMesh>, OldName: FName, NewName: FName): Bool;
	public function RemoveLODs(SkeletalMesh: cpp.Star<SkeletalMesh>, ToRemoveLODs: TArray<cpp.Int32>): Bool;
	public function ReimportAllCustomLODs(SkeletalMesh: cpp.Star<SkeletalMesh>): Bool;
	public function RegenerateLOD(SkeletalMesh: cpp.Star<SkeletalMesh>, NewLODCount: cpp.Int32, bRegenerateEvenIfImported: Bool, bGenerateBaseLOD: Bool): Bool;
	public function ImportLOD(BaseMesh: cpp.Star<SkeletalMesh>, LODIndex: cpp.Int32, SourceFilename: FString): cpp.Int32;
	public function GetNumVerts(SkeletalMesh: cpp.Star<SkeletalMesh>, LODIndex: cpp.Int32): cpp.Int32;
	public function GetLODCount(SkeletalMesh: cpp.Star<SkeletalMesh>): cpp.Int32;
	public function GetLodBuildSettings(SkeletalMesh: cpp.Star<SkeletalMesh.ConstSkeletalMesh>, LodIndex: cpp.Int32, OutBuildOptions: cpp.Reference<SkeletalMeshBuildSettings>): Void;
	public function CreatePhysicsAsset(SkeletalMesh: cpp.Star<SkeletalMesh>): cpp.Star<PhysicsAsset>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstEditorSkeletalMeshLibrary(EditorSkeletalMeshLibrary) from EditorSkeletalMeshLibrary {
}

@:forward
@:nativeGen
@:native("EditorSkeletalMeshLibrary*")
abstract EditorSkeletalMeshLibraryPtr(cpp.Star<EditorSkeletalMeshLibrary>) from cpp.Star<EditorSkeletalMeshLibrary> to cpp.Star<EditorSkeletalMeshLibrary>{
	@:from
	public static extern inline function fromValue(v: EditorSkeletalMeshLibrary): EditorSkeletalMeshLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EditorSkeletalMeshLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}