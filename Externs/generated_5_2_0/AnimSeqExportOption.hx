// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimSeqExportOption")
@:include("Exporters/AnimSeqExportOption.h")
@:valueType
extern class AnimSeqExportOption extends Object {
	public var bExportTransforms: Bool;
	public var bExportMorphTargets: Bool;
	public var bExportAttributeCurves: Bool;
	public var bExportMaterialCurves: Bool;
	public var bRecordInWorldSpace: Bool;
	public var bEvaluateAllSkeletalMeshComponents: Bool;
	public var Interpolation: EAnimInterpolationType;
	public var CurveInterpolation: TEnumAsByte<ERichCurveInterpMode>;
	public var IncludeAnimationNames: TArray<FString>;
	public var ExcludeAnimationNames: TArray<FString>;
	public var WarmUpFrames: FrameNumber;
	public var DelayBeforeStart: FrameNumber;
	public var bTransactRecording: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimSeqExportOption(AnimSeqExportOption) from AnimSeqExportOption {
	public extern var bExportTransforms(get, never): Bool;
	public inline extern function get_bExportTransforms(): Bool return this.bExportTransforms;
	public extern var bExportMorphTargets(get, never): Bool;
	public inline extern function get_bExportMorphTargets(): Bool return this.bExportMorphTargets;
	public extern var bExportAttributeCurves(get, never): Bool;
	public inline extern function get_bExportAttributeCurves(): Bool return this.bExportAttributeCurves;
	public extern var bExportMaterialCurves(get, never): Bool;
	public inline extern function get_bExportMaterialCurves(): Bool return this.bExportMaterialCurves;
	public extern var bRecordInWorldSpace(get, never): Bool;
	public inline extern function get_bRecordInWorldSpace(): Bool return this.bRecordInWorldSpace;
	public extern var bEvaluateAllSkeletalMeshComponents(get, never): Bool;
	public inline extern function get_bEvaluateAllSkeletalMeshComponents(): Bool return this.bEvaluateAllSkeletalMeshComponents;
	public extern var Interpolation(get, never): EAnimInterpolationType;
	public inline extern function get_Interpolation(): EAnimInterpolationType return this.Interpolation;
	public extern var CurveInterpolation(get, never): TEnumAsByte<ERichCurveInterpMode>;
	public inline extern function get_CurveInterpolation(): TEnumAsByte<ERichCurveInterpMode> return this.CurveInterpolation;
	public extern var IncludeAnimationNames(get, never): TArray<FString>;
	public inline extern function get_IncludeAnimationNames(): TArray<FString> return this.IncludeAnimationNames;
	public extern var ExcludeAnimationNames(get, never): TArray<FString>;
	public inline extern function get_ExcludeAnimationNames(): TArray<FString> return this.ExcludeAnimationNames;
	public extern var WarmUpFrames(get, never): FrameNumber;
	public inline extern function get_WarmUpFrames(): FrameNumber return this.WarmUpFrames;
	public extern var DelayBeforeStart(get, never): FrameNumber;
	public inline extern function get_DelayBeforeStart(): FrameNumber return this.DelayBeforeStart;
	public extern var bTransactRecording(get, never): Bool;
	public inline extern function get_bTransactRecording(): Bool return this.bTransactRecording;
}

@:forward
@:nativeGen
@:native("AnimSeqExportOption*")
abstract AnimSeqExportOptionPtr(ucpp.Ptr<AnimSeqExportOption>) from ucpp.Ptr<AnimSeqExportOption> to ucpp.Ptr<AnimSeqExportOption>{
	@:from
	public static extern inline function fromValue(v: AnimSeqExportOption): AnimSeqExportOptionPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimSeqExportOption {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}