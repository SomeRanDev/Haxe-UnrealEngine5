// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USequencerSettings")
@:include("SequencerSettings.h")
@:structAccess
extern class SequencerSettings extends Object {
	@:protected public var AutoChangeMode: EAutoChangeMode;
	@:protected public var AllowEditsMode: EAllowEditsMode;
	@:protected public var KeyGroupMode: EKeyGroupMode;
	@:protected public var KeyInterpolation: EMovieSceneKeyInterpolation;
	@:protected public var bAutoSetTrackDefaults: Bool;
	@:protected public var SpawnPosition: TEnumAsByte<ESequencerSpawnPosition>;
	@:protected public var bCreateSpawnableCameras: Bool;
	@:protected public var bShowRangeSlider: Bool;
	@:protected public var bIsSnapEnabled: Bool;
	@:protected public var bSnapKeyTimesToInterval: Bool;
	@:protected public var bSnapKeyTimesToKeys: Bool;
	@:protected public var bSnapSectionTimesToInterval: Bool;
	@:protected public var bSnapSectionTimesToSections: Bool;
	@:protected public var bSnapKeysAndSectionsToPlayRange: Bool;
	@:protected public var bSnapPlayTimeToKeys: Bool;
	@:protected public var bSnapPlayTimeToSections: Bool;
	@:protected public var bSnapPlayTimeToMarkers: Bool;
	@:protected public var bSnapPlayTimeToInterval: Bool;
	@:protected public var bSnapPlayTimeToPressedKey: Bool;
	@:protected public var bSnapPlayTimeToDraggedKey: Bool;
	@:protected public var bSnapCurveValueToInterval: Bool;
	@:protected public var bShowSelectedNodesOnly: Bool;
	@:protected public var bRewindOnRecord: Bool;
	@:protected public var bLeftMouseDragDoesMarquee: Bool;
	@:protected public var ZoomPosition: TEnumAsByte<ESequencerZoomPosition>;
	@:protected public var bAutoScrollEnabled: Bool;
	@:protected public var bLinkCurveEditorTimeRange: Bool;
	@:protected public var bSynchronizeCurveEditorSelection: Bool;
	@:protected public var bIsolateCurveEditorToSelection: Bool;
	@:protected public var LoopMode: TEnumAsByte<ESequencerLoopMode>;
	@:protected public var bResetPlayheadWhenNavigating: Bool;
	@:protected public var bKeepCursorInPlayRangeWhileScrubbing: Bool;
	@:protected public var bKeepPlayRangeInSectionBounds: Bool;
	@:protected public var ZeroPadFrames: cpp.UInt8;
	@:protected public var JumpFrameIncrement: FrameNumber;
	@:protected public var bShowLayerBars: Bool;
	@:protected public var bShowKeyBars: Bool;
	@:protected public var bInfiniteKeyAreas: Bool;
	@:protected public var bShowChannelColors: Bool;
	@:protected public var bShowStatusBar: Bool;
	@:protected public var bShowTickLines: Bool;
	@:protected public var bShowSequencerToolbar: Bool;
	@:protected public var KeyAreaCurveExtents: FString;
	@:protected public var KeyAreaHeightWithCurves: cpp.Float32;
	@:protected public var ReduceKeysTolerance: cpp.Float32;
	@:protected public var bDeleteKeysWhenTrimming: Bool;
	@:protected public var bDisableSectionsAfterBaking: Bool;
	@:protected public var SectionColorTints: TArray<Color>;
	@:protected public var bCleanPlaybackMode: Bool;
	@:protected public var bActivateRealtimeViewports: Bool;
	@:protected public var bEvaluateSubSequencesInIsolation: Bool;
	@:protected public var bRerunConstructionScripts: Bool;
	@:protected public var bShowDebugVisualization: Bool;
	@:protected public var bVisualizePreAndPostRoll: Bool;
	@:protected public var bCompileDirectorOnEvaluate: Bool;
	@:protected public var TrajectoryPathCap: cpp.UInt32;
	@:protected public var FrameNumberDisplayFormat: EFrameNumberDisplayFormats;
	@:protected public var MovieRendererName: FString;
	@:protected public var bAutoExpandNodesOnSelection: Bool;
	@:protected public var TreeViewWidth: cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSequencerSettings(SequencerSettings) from SequencerSettings {
}

@:forward
@:nativeGen
@:native("SequencerSettings*")
abstract SequencerSettingsPtr(cpp.Star<SequencerSettings>) from cpp.Star<SequencerSettings> to cpp.Star<SequencerSettings>{
	@:from
	public static extern inline function fromValue(v: SequencerSettings): SequencerSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SequencerSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}