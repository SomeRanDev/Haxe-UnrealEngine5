// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMetasoundParameterPack")
@:include("MetasoundParameterPack.h")
@:valueType
extern class MetasoundParameterPack extends Object {
	public function SetTrigger(ParameterName: FName, OnlyIfExists: Bool): ESetParamResult;
	public function SetString(ParameterName: FName, InValue: FString, OnlyIfExists: Bool): ESetParamResult;
	public function SetInt(ParameterName: FName, InValue: ucpp.num.Int32, OnlyIfExists: Bool): ESetParamResult;
	public function SetFloat(ParameterName: FName, InValue: ucpp.num.Float32, OnlyIfExists: Bool): ESetParamResult;
	public function SetBool(ParameterName: FName, InValue: Bool, OnlyIfExists: Bool): ESetParamResult;
	public function MakeMetasoundParameterPack(): ucpp.Ptr<MetasoundParameterPack>;
	public function HasTrigger(ParameterName: FName): Bool;
	public function HasString(ParameterName: FName): Bool;
	public function HasInt(ParameterName: FName): Bool;
	public function HasFloat(ParameterName: FName): Bool;
	public function HasBool(ParameterName: FName): Bool;
	public function GetTrigger(ParameterName: FName, Result: ucpp.Ref<ESetParamResult>): Bool;
	public function GetString(ParameterName: FName, Result: ucpp.Ref<ESetParamResult>): FString;
	public function GetInt(ParameterName: FName, Result: ucpp.Ref<ESetParamResult>): ucpp.num.Int32;
	public function GetFloat(ParameterName: FName, Result: ucpp.Ref<ESetParamResult>): ucpp.num.Float32;
	public function GetBool(ParameterName: FName, Result: ucpp.Ref<ESetParamResult>): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMetasoundParameterPack(MetasoundParameterPack) from MetasoundParameterPack {
}

@:forward
@:nativeGen
@:native("MetasoundParameterPack*")
abstract MetasoundParameterPackPtr(ucpp.Ptr<MetasoundParameterPack>) from ucpp.Ptr<MetasoundParameterPack> to ucpp.Ptr<MetasoundParameterPack>{
	@:from
	public static extern inline function fromValue(v: MetasoundParameterPack): MetasoundParameterPackPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MetasoundParameterPack {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}