// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionVectorNoise")
@:include("Materials/MaterialExpressionVectorNoise.h")
@:structAccess
extern class MaterialExpressionVectorNoise extends MaterialExpression {
	public var Position: ExpressionInput;
	public var NoiseFunction: TEnumAsByte<EVectorNoiseFunction>;
	public var Quality: cpp.Int32;
	public var bTiling: Bool;
	public var TileSize: cpp.UInt32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionVectorNoise(MaterialExpressionVectorNoise) from MaterialExpressionVectorNoise {
	public extern var Position(get, never): ExpressionInput;
	public inline extern function get_Position(): ExpressionInput return this.Position;
	public extern var NoiseFunction(get, never): TEnumAsByte<EVectorNoiseFunction>;
	public inline extern function get_NoiseFunction(): TEnumAsByte<EVectorNoiseFunction> return this.NoiseFunction;
	public extern var Quality(get, never): cpp.Int32;
	public inline extern function get_Quality(): cpp.Int32 return this.Quality;
	public extern var bTiling(get, never): Bool;
	public inline extern function get_bTiling(): Bool return this.bTiling;
	public extern var TileSize(get, never): cpp.UInt32;
	public inline extern function get_TileSize(): cpp.UInt32 return this.TileSize;
}

@:forward
@:nativeGen
@:native("MaterialExpressionVectorNoise*")
abstract MaterialExpressionVectorNoisePtr(cpp.Star<MaterialExpressionVectorNoise>) from cpp.Star<MaterialExpressionVectorNoise> to cpp.Star<MaterialExpressionVectorNoise>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionVectorNoise): MaterialExpressionVectorNoisePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionVectorNoise {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}