// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBodySetup")
@:include("PhysicsEngine/BodySetup.h")
@:valueType
extern class BodySetup extends BodySetupCore {
	public var AggGeom: KAggregateGeom;
	public var bConsiderForBounds: Bool;
	public var bMeshCollideAll: Bool;
	public var bDoubleSidedGeometry: Bool;
	public var bGenerateNonMirroredCollision: Bool;
	public var bSharedCookedData: Bool;
	public var bGenerateMirroredCollision: Bool;
	public var bSupportUVsAndFaceRemap: Bool;
	public var bNeverNeedsCookedCollisionData: Bool;
	public var PhysMaterial: ucpp.Ptr<PhysicalMaterial>;
	public var WalkableSlopeOverride: WalkableSlopeOverride;
	public var DefaultInstance: BodyInstance;
	public var BuildScale3D: Vector;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstBodySetup(BodySetup) from BodySetup {
	public extern var AggGeom(get, never): KAggregateGeom;
	public inline extern function get_AggGeom(): KAggregateGeom return this.AggGeom;
	public extern var bConsiderForBounds(get, never): Bool;
	public inline extern function get_bConsiderForBounds(): Bool return this.bConsiderForBounds;
	public extern var bMeshCollideAll(get, never): Bool;
	public inline extern function get_bMeshCollideAll(): Bool return this.bMeshCollideAll;
	public extern var bDoubleSidedGeometry(get, never): Bool;
	public inline extern function get_bDoubleSidedGeometry(): Bool return this.bDoubleSidedGeometry;
	public extern var bGenerateNonMirroredCollision(get, never): Bool;
	public inline extern function get_bGenerateNonMirroredCollision(): Bool return this.bGenerateNonMirroredCollision;
	public extern var bSharedCookedData(get, never): Bool;
	public inline extern function get_bSharedCookedData(): Bool return this.bSharedCookedData;
	public extern var bGenerateMirroredCollision(get, never): Bool;
	public inline extern function get_bGenerateMirroredCollision(): Bool return this.bGenerateMirroredCollision;
	public extern var bSupportUVsAndFaceRemap(get, never): Bool;
	public inline extern function get_bSupportUVsAndFaceRemap(): Bool return this.bSupportUVsAndFaceRemap;
	public extern var bNeverNeedsCookedCollisionData(get, never): Bool;
	public inline extern function get_bNeverNeedsCookedCollisionData(): Bool return this.bNeverNeedsCookedCollisionData;
	public extern var PhysMaterial(get, never): ucpp.Ptr<PhysicalMaterial.ConstPhysicalMaterial>;
	public inline extern function get_PhysMaterial(): ucpp.Ptr<PhysicalMaterial.ConstPhysicalMaterial> return this.PhysMaterial;
	public extern var WalkableSlopeOverride(get, never): WalkableSlopeOverride;
	public inline extern function get_WalkableSlopeOverride(): WalkableSlopeOverride return this.WalkableSlopeOverride;
	public extern var DefaultInstance(get, never): BodyInstance;
	public inline extern function get_DefaultInstance(): BodyInstance return this.DefaultInstance;
	public extern var BuildScale3D(get, never): Vector;
	public inline extern function get_BuildScale3D(): Vector return this.BuildScale3D;
}

@:forward
@:nativeGen
@:native("BodySetup*")
abstract BodySetupPtr(ucpp.Ptr<BodySetup>) from ucpp.Ptr<BodySetup> to ucpp.Ptr<BodySetup>{
	@:from
	public static extern inline function fromValue(v: BodySetup): BodySetupPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BodySetup {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}