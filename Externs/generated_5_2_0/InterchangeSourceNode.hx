// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeSourceNode")
@:include("Nodes/InterchangeSourceNode.h")
@:structAccess
extern class InterchangeSourceNode extends InterchangeBaseNode {
	public function SetCustomSourceTimelineStart(AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function SetCustomSourceTimelineEnd(AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function SetCustomSourceFrameRateNumerator(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function SetCustomSourceFrameRateDenominator(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function SetCustomImportUnusedMaterial(AttributeValue: cpp.Reference<Bool>): Bool;
	public function SetCustomAnimatedTimeStart(AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function SetCustomAnimatedTimeEnd(AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function InitializeSourceNode(UniqueID: FString, DisplayLabel: FString): Void;
	public function GetCustomSourceTimelineStart(AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function GetCustomSourceTimelineEnd(AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function GetCustomSourceFrameRateNumerator(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomSourceFrameRateDenominator(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomImportUnusedMaterial(AttributeValue: cpp.Reference<Bool>): Bool;
	public function GetCustomAnimatedTimeStart(AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function GetCustomAnimatedTimeEnd(AttributeValue: cpp.Reference<cpp.Float64>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetCustomSourceTimelineStart, GetCustomSourceTimelineEnd, GetCustomSourceFrameRateNumerator, GetCustomSourceFrameRateDenominator, GetCustomImportUnusedMaterial, GetCustomAnimatedTimeStart, GetCustomAnimatedTimeEnd)
@:nativeGen
abstract ConstInterchangeSourceNode(InterchangeSourceNode) from InterchangeSourceNode {
}

@:forward
@:nativeGen
@:native("InterchangeSourceNode*")
abstract InterchangeSourceNodePtr(cpp.Star<InterchangeSourceNode>) from cpp.Star<InterchangeSourceNode> to cpp.Star<InterchangeSourceNode>{
	@:from
	public static extern inline function fromValue(v: InterchangeSourceNode): InterchangeSourceNodePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeSourceNode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}