// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimationDataModel")
@:structAccess
extern class AnimationDataModel extends Interface {
	public function IsValidBoneTrackName(TrackName: cpp.Reference<FName>): Bool;
	public function IsValidBoneTrackIndex(TrackIndex: cpp.Int32): Bool;
	public function GetPlayLength(): cpp.Float64;
	public function GetNumBoneTracks(): cpp.Int32;
	public function GetNumberOfTransformCurves(): cpp.Int32;
	public function GetNumberOfKeys(): cpp.Int32;
	public function GetNumberOfFrames(): cpp.Int32;
	public function GetNumberOfFloatCurves(): cpp.Int32;
	public function GetFrameRate(): FrameRate;
	public function GetBoneTrackNames(OutNames: cpp.Reference<TArray<FName>>): Void;
	public function GetBoneTrackIndexByName(TrackName: FName): cpp.Int32;
	public function GetBoneTrackIndex(Track: cpp.Reference<BoneAnimationTrack>): cpp.Int32;
	public function GetBoneTrackByName(TrackName: FName): BoneAnimationTrack;
	public function GetBoneTrackByIndex(TrackIndex: cpp.Int32): BoneAnimationTrack;
	public function GetBoneAnimationTracks(): TArray<BoneAnimationTrack>;
	public function GetAnimationSequence(): cpp.Star<AnimSequence>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	IsValidBoneTrackName, IsValidBoneTrackIndex, GetPlayLength, GetNumBoneTracks, GetNumberOfTransformCurves,
	GetNumberOfKeys, GetNumberOfFrames, GetNumberOfFloatCurves, GetFrameRate, GetBoneTrackNames,
	GetBoneTrackIndexByName, GetBoneTrackIndex, GetBoneTrackByName, GetBoneTrackByIndex, GetBoneAnimationTracks,
	GetAnimationSequence
)
@:nativeGen
abstract ConstAnimationDataModel(AnimationDataModel) from AnimationDataModel {
}

@:forward
@:nativeGen
@:native("AnimationDataModel*")
abstract AnimationDataModelPtr(cpp.Star<AnimationDataModel>) from cpp.Star<AnimationDataModel> to cpp.Star<AnimationDataModel>{
	@:from
	public static extern inline function fromValue(v: AnimationDataModel): AnimationDataModelPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimationDataModel {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}