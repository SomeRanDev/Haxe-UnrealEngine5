// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimationDataModel")
@:valueType
extern class AnimationDataModel extends Interface {
	public function IsValidBoneTrackName(TrackName: ucpp.Ref<FName>): Bool;
	public function IsValidBoneTrackIndex(TrackIndex: ucpp.num.Int32): Bool;
	public function GetPlayLength(): ucpp.num.Float64;
	public function GetNumBoneTracks(): ucpp.num.Int32;
	public function GetNumberOfTransformCurves(): ucpp.num.Int32;
	public function GetNumberOfKeys(): ucpp.num.Int32;
	public function GetNumberOfFrames(): ucpp.num.Int32;
	public function GetNumberOfFloatCurves(): ucpp.num.Int32;
	public function GetFrameRate(): FrameRate;
	public function GetBoneTrackNames(OutNames: ucpp.Ref<TArray<FName>>): Void;
	public function GetBoneTrackIndexByName(TrackName: FName): ucpp.num.Int32;
	public function GetBoneTrackIndex(Track: ucpp.Ref<BoneAnimationTrack>): ucpp.num.Int32;
	public function GetBoneTrackByName(TrackName: FName): BoneAnimationTrack;
	public function GetBoneTrackByIndex(TrackIndex: ucpp.num.Int32): BoneAnimationTrack;
	public function GetBoneAnimationTracks(): TArray<BoneAnimationTrack>;
	public function GetAnimationSequence(): ucpp.Ptr<AnimSequence>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(
	IsValidBoneTrackName, IsValidBoneTrackIndex, GetPlayLength, GetNumBoneTracks, GetNumberOfTransformCurves,
	GetNumberOfKeys, GetNumberOfFrames, GetNumberOfFloatCurves, GetFrameRate, GetBoneTrackNames,
	GetBoneTrackIndexByName, GetBoneTrackIndex, GetBoneTrackByName, GetBoneTrackByIndex, GetBoneAnimationTracks,
	GetAnimationSequence
)
@:nativeGen
abstract ConstAnimationDataModel(AnimationDataModel) from AnimationDataModel {
}

@:forward
@:nativeGen
@:native("AnimationDataModel*")
abstract AnimationDataModelPtr(ucpp.Ptr<AnimationDataModel>) from ucpp.Ptr<AnimationDataModel> to ucpp.Ptr<AnimationDataModel>{
	@:from
	public static extern inline function fromValue(v: AnimationDataModel): AnimationDataModelPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimationDataModel {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}