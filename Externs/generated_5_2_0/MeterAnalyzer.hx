// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMeterAnalyzer")
@:include("Meter.h")
@:valueType
extern class MeterAnalyzer extends AudioAnalyzer {
	public var Settings: ucpp.Ptr<MeterSettings>;
	public var OnOverallMeterResults: HaxeMulticastSparseDelegateProperty<(ucpp.Ref<TArray<MeterResults>>) -> Void>;
	public var OnPerChannelMeterResults: HaxeMulticastSparseDelegateProperty<(ucpp.num.Int32, ucpp.Ref<TArray<MeterResults>>) -> Void>;
	public var OnLatestOverallMeterResults: HaxeMulticastSparseDelegateProperty<(ucpp.Ref<MeterResults>) -> Void>;
	public var OnLatestPerChannelMeterResults: HaxeMulticastSparseDelegateProperty<(ucpp.num.Int32, ucpp.Ref<MeterResults>) -> Void>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMeterAnalyzer(MeterAnalyzer) from MeterAnalyzer {
	public extern var Settings(get, never): ucpp.Ptr<MeterSettings.ConstMeterSettings>;
	public inline extern function get_Settings(): ucpp.Ptr<MeterSettings.ConstMeterSettings> return this.Settings;
	public extern var OnOverallMeterResults(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<TArray<MeterResults>>) -> Void>;
	public inline extern function get_OnOverallMeterResults(): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<TArray<MeterResults>>) -> Void> return this.OnOverallMeterResults;
	public extern var OnPerChannelMeterResults(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.num.Int32, ucpp.Ref<TArray<MeterResults>>) -> Void>;
	public inline extern function get_OnPerChannelMeterResults(): HaxeMulticastSparseDelegateProperty<(ucpp.num.Int32, ucpp.Ref<TArray<MeterResults>>) -> Void> return this.OnPerChannelMeterResults;
	public extern var OnLatestOverallMeterResults(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<MeterResults>) -> Void>;
	public inline extern function get_OnLatestOverallMeterResults(): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<MeterResults>) -> Void> return this.OnLatestOverallMeterResults;
	public extern var OnLatestPerChannelMeterResults(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.num.Int32, ucpp.Ref<MeterResults>) -> Void>;
	public inline extern function get_OnLatestPerChannelMeterResults(): HaxeMulticastSparseDelegateProperty<(ucpp.num.Int32, ucpp.Ref<MeterResults>) -> Void> return this.OnLatestPerChannelMeterResults;
}

@:forward
@:nativeGen
@:native("MeterAnalyzer*")
abstract MeterAnalyzerPtr(ucpp.Ptr<MeterAnalyzer>) from ucpp.Ptr<MeterAnalyzer> to ucpp.Ptr<MeterAnalyzer>{
	@:from
	public static extern inline function fromValue(v: MeterAnalyzer): MeterAnalyzerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MeterAnalyzer {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}