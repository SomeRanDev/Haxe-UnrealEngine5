// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UUVEditorMode")
@:include("UVEditorMode.h")
@:valueType
extern class UVEditorMode extends EdMode {
	public var BackgroundVisualization: ucpp.Ptr<UVEditorBackgroundPreview>;
	public var UVEditorGridProperties: ucpp.Ptr<UVEditorGridProperties>;
	public var UVEditorUDIMProperties: ucpp.Ptr<UVEditorUDIMProperties>;
	@:protected public var RegisteredActions: TArray<ucpp.Ptr<UVToolAction>>;
	@:protected public var OriginalObjectsToEdit: TArray<ucpp.Ptr<Object>>;
	@:protected public var ToolTargets: TArray<ucpp.Ptr<ToolTarget>>;
	@:protected public var ToolInputObjects: TArray<ucpp.Ptr<UVEditorToolMeshInput>>;
	@:protected public var LivePreviewWorld: ucpp.Ptr<World>;
	@:protected public var SelectionAPI: ucpp.Ptr<UVToolSelectionAPI>;
	@:protected public var PropertyObjectsToTick: TArray<ucpp.Ptr<InteractiveToolPropertySet>>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstUVEditorMode(UVEditorMode) from UVEditorMode {
	public extern var BackgroundVisualization(get, never): ucpp.Ptr<UVEditorBackgroundPreview.ConstUVEditorBackgroundPreview>;
	public inline extern function get_BackgroundVisualization(): ucpp.Ptr<UVEditorBackgroundPreview.ConstUVEditorBackgroundPreview> return this.BackgroundVisualization;
	public extern var UVEditorGridProperties(get, never): ucpp.Ptr<UVEditorGridProperties.ConstUVEditorGridProperties>;
	public inline extern function get_UVEditorGridProperties(): ucpp.Ptr<UVEditorGridProperties.ConstUVEditorGridProperties> return this.UVEditorGridProperties;
	public extern var UVEditorUDIMProperties(get, never): ucpp.Ptr<UVEditorUDIMProperties.ConstUVEditorUDIMProperties>;
	public inline extern function get_UVEditorUDIMProperties(): ucpp.Ptr<UVEditorUDIMProperties.ConstUVEditorUDIMProperties> return this.UVEditorUDIMProperties;
}

@:forward
@:nativeGen
@:native("UVEditorMode*")
abstract UVEditorModePtr(ucpp.Ptr<UVEditorMode>) from ucpp.Ptr<UVEditorMode> to ucpp.Ptr<UVEditorMode>{
	@:from
	public static extern inline function fromValue(v: UVEditorMode): UVEditorModePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): UVEditorMode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}