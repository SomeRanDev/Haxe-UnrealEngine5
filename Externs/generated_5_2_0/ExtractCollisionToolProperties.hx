// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UExtractCollisionToolProperties")
@:include("Physics/ExtractCollisionGeometryTool.h")
@:valueType
extern class ExtractCollisionToolProperties extends InteractiveToolPropertySet {
	public var CollisionType: EExtractCollisionOutputType;
	public var bWeldEdges: Bool;
	public var bOutputSeparateMeshes: Bool;
	public var bShowPreview: Bool;
	public var bShowInputMesh: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstExtractCollisionToolProperties(ExtractCollisionToolProperties) from ExtractCollisionToolProperties {
	public extern var CollisionType(get, never): EExtractCollisionOutputType;
	public inline extern function get_CollisionType(): EExtractCollisionOutputType return this.CollisionType;
	public extern var bWeldEdges(get, never): Bool;
	public inline extern function get_bWeldEdges(): Bool return this.bWeldEdges;
	public extern var bOutputSeparateMeshes(get, never): Bool;
	public inline extern function get_bOutputSeparateMeshes(): Bool return this.bOutputSeparateMeshes;
	public extern var bShowPreview(get, never): Bool;
	public inline extern function get_bShowPreview(): Bool return this.bShowPreview;
	public extern var bShowInputMesh(get, never): Bool;
	public inline extern function get_bShowInputMesh(): Bool return this.bShowInputMesh;
}

@:forward
@:nativeGen
@:native("ExtractCollisionToolProperties*")
abstract ExtractCollisionToolPropertiesPtr(ucpp.Ptr<ExtractCollisionToolProperties>) from ucpp.Ptr<ExtractCollisionToolProperties> to ucpp.Ptr<ExtractCollisionToolProperties>{
	@:from
	public static extern inline function fromValue(v: ExtractCollisionToolProperties): ExtractCollisionToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ExtractCollisionToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}