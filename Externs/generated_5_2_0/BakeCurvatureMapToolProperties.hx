// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBakeCurvatureMapToolProperties")
@:include("BakeMeshAttributeToolCommon.h")
@:valueType
extern class BakeCurvatureMapToolProperties extends InteractiveToolPropertySet {
	public var CurvatureType: EBakeCurvatureTypeMode;
	public var ColorMapping: EBakeCurvatureColorMode;
	public var ColorRangeMultiplier: ucpp.num.Float32;
	public var MinRangeMultiplier: ucpp.num.Float32;
	public var Clamping: EBakeCurvatureClampMode;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstBakeCurvatureMapToolProperties(BakeCurvatureMapToolProperties) from BakeCurvatureMapToolProperties {
	public extern var CurvatureType(get, never): EBakeCurvatureTypeMode;
	public inline extern function get_CurvatureType(): EBakeCurvatureTypeMode return this.CurvatureType;
	public extern var ColorMapping(get, never): EBakeCurvatureColorMode;
	public inline extern function get_ColorMapping(): EBakeCurvatureColorMode return this.ColorMapping;
	public extern var ColorRangeMultiplier(get, never): ucpp.num.Float32;
	public inline extern function get_ColorRangeMultiplier(): ucpp.num.Float32 return this.ColorRangeMultiplier;
	public extern var MinRangeMultiplier(get, never): ucpp.num.Float32;
	public inline extern function get_MinRangeMultiplier(): ucpp.num.Float32 return this.MinRangeMultiplier;
	public extern var Clamping(get, never): EBakeCurvatureClampMode;
	public inline extern function get_Clamping(): EBakeCurvatureClampMode return this.Clamping;
}

@:forward
@:nativeGen
@:native("BakeCurvatureMapToolProperties*")
abstract BakeCurvatureMapToolPropertiesPtr(ucpp.Ptr<BakeCurvatureMapToolProperties>) from ucpp.Ptr<BakeCurvatureMapToolProperties> to ucpp.Ptr<BakeCurvatureMapToolProperties>{
	@:from
	public static extern inline function fromValue(v: BakeCurvatureMapToolProperties): BakeCurvatureMapToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BakeCurvatureMapToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}