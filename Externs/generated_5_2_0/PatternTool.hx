// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPatternTool")
@:include("PatternTool.h")
@:valueType
extern class PatternTool extends MultiSelectionMeshEditingTool {
	public var Settings: ucpp.Ptr<PatternToolSettings>;
	public var BoundingBoxSettings: ucpp.Ptr<PatternTool_BoundingBoxSettings>;
	public var LinearSettings: ucpp.Ptr<PatternTool_LinearSettings>;
	public var GridSettings: ucpp.Ptr<PatternTool_GridSettings>;
	public var RadialSettings: ucpp.Ptr<PatternTool_RadialSettings>;
	public var RotationSettings: ucpp.Ptr<PatternTool_RotationSettings>;
	public var TranslationSettings: ucpp.Ptr<PatternTool_TranslationSettings>;
	public var ScaleSettings: ucpp.Ptr<PatternTool_ScaleSettings>;
	public var OutputSettings: ucpp.Ptr<PatternTool_OutputSettings>;
	@:protected public var PatternGizmoProxy: ucpp.Ptr<TransformProxy>;
	@:protected public var PatternGizmo: ucpp.Ptr<CombinedTransformGizmo>;
	@:protected public var DragAlignmentMechanic: ucpp.Ptr<DragAlignmentMechanic>;
	@:protected public var PlaneMechanic: ucpp.Ptr<ConstructionPlaneMechanic>;
	@:protected public var AllComponents: TSet<ucpp.Ptr<PrimitiveComp>>;
	@:protected public var PreviewGeometry: ucpp.Ptr<PreviewGeometry>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPatternTool(PatternTool) from PatternTool {
	public extern var Settings(get, never): ucpp.Ptr<PatternToolSettings.ConstPatternToolSettings>;
	public inline extern function get_Settings(): ucpp.Ptr<PatternToolSettings.ConstPatternToolSettings> return this.Settings;
	public extern var BoundingBoxSettings(get, never): ucpp.Ptr<PatternTool_BoundingBoxSettings.ConstPatternTool_BoundingBoxSettings>;
	public inline extern function get_BoundingBoxSettings(): ucpp.Ptr<PatternTool_BoundingBoxSettings.ConstPatternTool_BoundingBoxSettings> return this.BoundingBoxSettings;
	public extern var LinearSettings(get, never): ucpp.Ptr<PatternTool_LinearSettings.ConstPatternTool_LinearSettings>;
	public inline extern function get_LinearSettings(): ucpp.Ptr<PatternTool_LinearSettings.ConstPatternTool_LinearSettings> return this.LinearSettings;
	public extern var GridSettings(get, never): ucpp.Ptr<PatternTool_GridSettings.ConstPatternTool_GridSettings>;
	public inline extern function get_GridSettings(): ucpp.Ptr<PatternTool_GridSettings.ConstPatternTool_GridSettings> return this.GridSettings;
	public extern var RadialSettings(get, never): ucpp.Ptr<PatternTool_RadialSettings.ConstPatternTool_RadialSettings>;
	public inline extern function get_RadialSettings(): ucpp.Ptr<PatternTool_RadialSettings.ConstPatternTool_RadialSettings> return this.RadialSettings;
	public extern var RotationSettings(get, never): ucpp.Ptr<PatternTool_RotationSettings.ConstPatternTool_RotationSettings>;
	public inline extern function get_RotationSettings(): ucpp.Ptr<PatternTool_RotationSettings.ConstPatternTool_RotationSettings> return this.RotationSettings;
	public extern var TranslationSettings(get, never): ucpp.Ptr<PatternTool_TranslationSettings.ConstPatternTool_TranslationSettings>;
	public inline extern function get_TranslationSettings(): ucpp.Ptr<PatternTool_TranslationSettings.ConstPatternTool_TranslationSettings> return this.TranslationSettings;
	public extern var ScaleSettings(get, never): ucpp.Ptr<PatternTool_ScaleSettings.ConstPatternTool_ScaleSettings>;
	public inline extern function get_ScaleSettings(): ucpp.Ptr<PatternTool_ScaleSettings.ConstPatternTool_ScaleSettings> return this.ScaleSettings;
	public extern var OutputSettings(get, never): ucpp.Ptr<PatternTool_OutputSettings.ConstPatternTool_OutputSettings>;
	public inline extern function get_OutputSettings(): ucpp.Ptr<PatternTool_OutputSettings.ConstPatternTool_OutputSettings> return this.OutputSettings;
}

@:forward
@:nativeGen
@:native("PatternTool*")
abstract PatternToolPtr(ucpp.Ptr<PatternTool>) from ucpp.Ptr<PatternTool> to ucpp.Ptr<PatternTool>{
	@:from
	public static extern inline function fromValue(v: PatternTool): PatternToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PatternTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}