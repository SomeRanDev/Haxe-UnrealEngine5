// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTakeRecorderActorSource")
@:include("TakeRecorderActorSource.h")
@:valueType
extern class TakeRecorderActorSource extends TakeRecorderSource {
	public var Target: TSoftObjectPtr<Actor>;
	public var RecordType: ETakeRecorderActorRecordType;
	public var bRecordParentHierarchy: Bool;
	public var bReduceKeys: Bool;
	public var RecordedProperties: ucpp.Ptr<ActorRecorderPropertyMap>;
	public var IncludeAnimationNames: TArray<FString>;
	public var ExcludeAnimationNames: TArray<FString>;
	public var TargetLevelSequence: ucpp.Ptr<LevelSequence>;
	public var RootLevelSequence: ucpp.Ptr<LevelSequence>;
	public var FactorySettings: TArray<ucpp.Ptr<Object>>;
	public var TrackRecorders: TArray<ucpp.Ptr<MovieSceneTrackRecorder>>;
	public var ParentSource: ucpp.Ptr<TakeRecorderActorSource>;
	public var bShowProgressDialog: Bool;

	public function SetSourceActor(InTarget: TSoftObjectPtr<Actor>): Void;
	public function RemoveActorFromSources(InActor: ucpp.Ptr<Actor>, InSources: ucpp.Ptr<TakeRecorderSources>): Void;
	public function GetSourceActor(): TSoftObjectPtr<Actor>;
	public function AddSourceForActor(InActor: ucpp.Ptr<Actor>, InSources: ucpp.Ptr<TakeRecorderSources>): ucpp.Ptr<TakeRecorderSource>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetSourceActor)
@:nativeGen
abstract ConstTakeRecorderActorSource(TakeRecorderActorSource) from TakeRecorderActorSource {
	public extern var Target(get, never): TSoftObjectPtr<Actor.ConstActor>;
	public inline extern function get_Target(): TSoftObjectPtr<Actor.ConstActor> return this.Target;
	public extern var RecordType(get, never): ETakeRecorderActorRecordType;
	public inline extern function get_RecordType(): ETakeRecorderActorRecordType return this.RecordType;
	public extern var bRecordParentHierarchy(get, never): Bool;
	public inline extern function get_bRecordParentHierarchy(): Bool return this.bRecordParentHierarchy;
	public extern var bReduceKeys(get, never): Bool;
	public inline extern function get_bReduceKeys(): Bool return this.bReduceKeys;
	public extern var RecordedProperties(get, never): ucpp.Ptr<ActorRecorderPropertyMap.ConstActorRecorderPropertyMap>;
	public inline extern function get_RecordedProperties(): ucpp.Ptr<ActorRecorderPropertyMap.ConstActorRecorderPropertyMap> return this.RecordedProperties;
	public extern var IncludeAnimationNames(get, never): TArray<FString>;
	public inline extern function get_IncludeAnimationNames(): TArray<FString> return this.IncludeAnimationNames;
	public extern var ExcludeAnimationNames(get, never): TArray<FString>;
	public inline extern function get_ExcludeAnimationNames(): TArray<FString> return this.ExcludeAnimationNames;
	public extern var TargetLevelSequence(get, never): ucpp.Ptr<LevelSequence.ConstLevelSequence>;
	public inline extern function get_TargetLevelSequence(): ucpp.Ptr<LevelSequence.ConstLevelSequence> return this.TargetLevelSequence;
	public extern var RootLevelSequence(get, never): ucpp.Ptr<LevelSequence.ConstLevelSequence>;
	public inline extern function get_RootLevelSequence(): ucpp.Ptr<LevelSequence.ConstLevelSequence> return this.RootLevelSequence;
	public extern var FactorySettings(get, never): TArray<ucpp.Ptr<Object.ConstObject>>;
	public inline extern function get_FactorySettings(): TArray<ucpp.Ptr<Object.ConstObject>> return this.FactorySettings;
	public extern var TrackRecorders(get, never): TArray<ucpp.Ptr<MovieSceneTrackRecorder.ConstMovieSceneTrackRecorder>>;
	public inline extern function get_TrackRecorders(): TArray<ucpp.Ptr<MovieSceneTrackRecorder.ConstMovieSceneTrackRecorder>> return this.TrackRecorders;
	public extern var ParentSource(get, never): ucpp.Ptr<TakeRecorderActorSource.ConstTakeRecorderActorSource>;
	public inline extern function get_ParentSource(): ucpp.Ptr<TakeRecorderActorSource.ConstTakeRecorderActorSource> return this.ParentSource;
	public extern var bShowProgressDialog(get, never): Bool;
	public inline extern function get_bShowProgressDialog(): Bool return this.bShowProgressDialog;
}

@:forward
@:nativeGen
@:native("TakeRecorderActorSource*")
abstract TakeRecorderActorSourcePtr(ucpp.Ptr<TakeRecorderActorSource>) from ucpp.Ptr<TakeRecorderActorSource> to ucpp.Ptr<TakeRecorderActorSource>{
	@:from
	public static extern inline function fromValue(v: TakeRecorderActorSource): TakeRecorderActorSourcePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TakeRecorderActorSource {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}