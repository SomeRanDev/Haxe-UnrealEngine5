// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTimeManagementBlueprintLibrary")
@:include("TimeManagementBlueprintLibrary.h")
@:valueType
extern class TimeManagementBlueprintLibrary extends BlueprintFunctionLibrary {
	public function TransformTime(SourceTime: ucpp.Ref<FrameTime>, SourceRate: ucpp.Ref<FrameRate>, DestinationRate: ucpp.Ref<FrameRate>): FrameTime;
	public function Subtract_FrameNumberInteger(A: FrameNumber, B: ucpp.num.Int32): FrameNumber;
	public function Subtract_FrameNumberFrameNumber(A: FrameNumber, B: FrameNumber): FrameNumber;
	public function SnapFrameTimeToRate(SourceTime: ucpp.Ref<FrameTime>, SourceRate: ucpp.Ref<FrameRate>, SnapToRate: ucpp.Ref<FrameRate>): FrameTime;
	public function Multiply_SecondsFrameRate(TimeInSeconds: ucpp.num.Float32, FrameRate: ucpp.Ref<FrameRate>): FrameTime;
	public function Multiply_FrameNumberInteger(A: FrameNumber, B: ucpp.num.Int32): FrameNumber;
	public function IsValid_MultipleOf(InFrameRate: ucpp.Ref<FrameRate>, OtherFramerate: ucpp.Ref<FrameRate>): Bool;
	public function IsValid_Framerate(InFrameRate: ucpp.Ref<FrameRate>): Bool;
	public function GetTimecodeFrameRate(): FrameRate;
	public function GetTimecode(): Timecode;
	public function Divide_FrameNumberInteger(A: FrameNumber, B: ucpp.num.Int32): FrameNumber;
	public function Conv_TimecodeToString(InTimecode: ucpp.Ref<Timecode>, bForceSignDisplay: Bool): FString;
	public function Conv_QualifiedFrameTimeToSeconds(InFrameTime: ucpp.Ref<QualifiedFrameTime>): ucpp.num.Float32;
	public function Conv_FrameRateToSeconds(InFrameRate: ucpp.Ref<FrameRate>): ucpp.num.Float32;
	public function Conv_FrameNumberToInteger(InFrameNumber: ucpp.Ref<FrameNumber>): ucpp.num.Int32;
	public function Add_FrameNumberInteger(A: FrameNumber, B: ucpp.num.Int32): FrameNumber;
	public function Add_FrameNumberFrameNumber(A: FrameNumber, B: FrameNumber): FrameNumber;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstTimeManagementBlueprintLibrary(TimeManagementBlueprintLibrary) from TimeManagementBlueprintLibrary {
}

@:forward
@:nativeGen
@:native("TimeManagementBlueprintLibrary*")
abstract TimeManagementBlueprintLibraryPtr(ucpp.Ptr<TimeManagementBlueprintLibrary>) from ucpp.Ptr<TimeManagementBlueprintLibrary> to ucpp.Ptr<TimeManagementBlueprintLibrary>{
	@:from
	public static extern inline function fromValue(v: TimeManagementBlueprintLibrary): TimeManagementBlueprintLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TimeManagementBlueprintLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}