// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URevolveProperties")
@:include("Properties/RevolveProperties.h")
@:valueType
extern class RevolveProperties extends InteractiveToolPropertySet {
	public var RevolveDegreesClamped: ucpp.num.Float64;
	public var RevolveDegrees: ucpp.num.Float64;
	public var RevolveDegreesOffset: ucpp.num.Float64;
	public var StepsMaxDegrees: ucpp.num.Float64;
	public var bExplicitSteps: Bool;
	public var NumExplicitSteps: ucpp.num.Int32;
	public var HeightOffsetPerDegree: ucpp.num.Float64;
	public var bReverseRevolutionDirection: Bool;
	public var bFlipMesh: Bool;
	public var bSharpNormals: Bool;
	public var SharpNormalsDegreeThreshold: ucpp.num.Float64;
	public var bPathAtMidpointOfStep: Bool;
	public var PolygroupMode: ERevolvePropertiesPolygroupMode;
	public var QuadSplitMode: ERevolvePropertiesQuadSplit;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstRevolveProperties(RevolveProperties) from RevolveProperties {
	public extern var RevolveDegreesClamped(get, never): ucpp.num.Float64;
	public inline extern function get_RevolveDegreesClamped(): ucpp.num.Float64 return this.RevolveDegreesClamped;
	public extern var RevolveDegrees(get, never): ucpp.num.Float64;
	public inline extern function get_RevolveDegrees(): ucpp.num.Float64 return this.RevolveDegrees;
	public extern var RevolveDegreesOffset(get, never): ucpp.num.Float64;
	public inline extern function get_RevolveDegreesOffset(): ucpp.num.Float64 return this.RevolveDegreesOffset;
	public extern var StepsMaxDegrees(get, never): ucpp.num.Float64;
	public inline extern function get_StepsMaxDegrees(): ucpp.num.Float64 return this.StepsMaxDegrees;
	public extern var bExplicitSteps(get, never): Bool;
	public inline extern function get_bExplicitSteps(): Bool return this.bExplicitSteps;
	public extern var NumExplicitSteps(get, never): ucpp.num.Int32;
	public inline extern function get_NumExplicitSteps(): ucpp.num.Int32 return this.NumExplicitSteps;
	public extern var HeightOffsetPerDegree(get, never): ucpp.num.Float64;
	public inline extern function get_HeightOffsetPerDegree(): ucpp.num.Float64 return this.HeightOffsetPerDegree;
	public extern var bReverseRevolutionDirection(get, never): Bool;
	public inline extern function get_bReverseRevolutionDirection(): Bool return this.bReverseRevolutionDirection;
	public extern var bFlipMesh(get, never): Bool;
	public inline extern function get_bFlipMesh(): Bool return this.bFlipMesh;
	public extern var bSharpNormals(get, never): Bool;
	public inline extern function get_bSharpNormals(): Bool return this.bSharpNormals;
	public extern var SharpNormalsDegreeThreshold(get, never): ucpp.num.Float64;
	public inline extern function get_SharpNormalsDegreeThreshold(): ucpp.num.Float64 return this.SharpNormalsDegreeThreshold;
	public extern var bPathAtMidpointOfStep(get, never): Bool;
	public inline extern function get_bPathAtMidpointOfStep(): Bool return this.bPathAtMidpointOfStep;
	public extern var PolygroupMode(get, never): ERevolvePropertiesPolygroupMode;
	public inline extern function get_PolygroupMode(): ERevolvePropertiesPolygroupMode return this.PolygroupMode;
	public extern var QuadSplitMode(get, never): ERevolvePropertiesQuadSplit;
	public inline extern function get_QuadSplitMode(): ERevolvePropertiesQuadSplit return this.QuadSplitMode;
}

@:forward
@:nativeGen
@:native("RevolveProperties*")
abstract RevolvePropertiesPtr(ucpp.Ptr<RevolveProperties>) from ucpp.Ptr<RevolveProperties> to ucpp.Ptr<RevolveProperties>{
	@:from
	public static extern inline function fromValue(v: RevolveProperties): RevolvePropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RevolveProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}