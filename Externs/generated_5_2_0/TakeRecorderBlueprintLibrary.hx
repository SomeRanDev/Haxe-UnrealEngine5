// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTakeRecorderBlueprintLibrary")
@:include("Recorder/TakeRecorderBlueprintLibrary.h")
@:valueType
extern class TakeRecorderBlueprintLibrary extends BlueprintFunctionLibrary {
	public function StopRecording(): Void;
	public function StartRecording(LevelSequence: ucpp.Ptr<LevelSequence>, Sources: ucpp.Ptr<TakeRecorderSources>, MetaData: ucpp.Ptr<TakeMetaData>, Parameters: ucpp.Ref<TakeRecorderParameters>): ucpp.Ptr<TakeRecorder>;
	public function SetOnTakeRecorderStopped(OnTakeRecorderStopped: HaxeDelegateProperty<() -> Void>): Void;
	public function SetOnTakeRecorderStarted(OnTakeRecorderStarted: HaxeDelegateProperty<() -> Void>): Void;
	public function SetOnTakeRecorderPreInitialize(OnTakeRecorderPreInitialize: HaxeDelegateProperty<() -> Void>): Void;
	public function SetOnTakeRecorderPanelChanged(OnTakeRecorderPanelChanged: HaxeDelegateProperty<() -> Void>): Void;
	public function SetOnTakeRecorderMarkedFrameAdded(OnTakeRecorderMarkedFrameAdded: HaxeDelegateProperty<(ucpp.Ref<MovieSceneMarkedFrame>) -> Void>): Void;
	public function SetOnTakeRecorderFinished(OnTakeRecorderFinished: HaxeDelegateProperty<(ucpp.Ptr<LevelSequence>) -> Void>): Void;
	public function SetOnTakeRecorderCancelled(OnTakeRecorderCancelled: HaxeDelegateProperty<() -> Void>): Void;
	public function SetDefaultParameters(DefaultParameters: ucpp.Ref<TakeRecorderParameters>): Void;
	public function OpenTakeRecorderPanel(): ucpp.Ptr<TakeRecorderPanel>;
	public function IsTakeRecorderEnabled(): Bool;
	public function IsRecording(): Bool;
	public function GetTakeRecorderPanel(): ucpp.Ptr<TakeRecorderPanel>;
	public function GetDefaultParameters(): TakeRecorderParameters;
	public function GetActiveRecorder(): ucpp.Ptr<TakeRecorder>;
	public function CancelRecording(): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstTakeRecorderBlueprintLibrary(TakeRecorderBlueprintLibrary) from TakeRecorderBlueprintLibrary {
}

@:forward
@:nativeGen
@:native("TakeRecorderBlueprintLibrary*")
abstract TakeRecorderBlueprintLibraryPtr(ucpp.Ptr<TakeRecorderBlueprintLibrary>) from ucpp.Ptr<TakeRecorderBlueprintLibrary> to ucpp.Ptr<TakeRecorderBlueprintLibrary>{
	@:from
	public static extern inline function fromValue(v: TakeRecorderBlueprintLibrary): TakeRecorderBlueprintLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TakeRecorderBlueprintLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}