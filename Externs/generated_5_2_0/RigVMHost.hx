// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URigVMHost")
@:include("RigVMHost.h")
@:valueType
extern class RigVMHost extends Object {
	public var VMRuntimeSettings: RigVMRuntimeSettings;
	@:protected public var VM: ucpp.Ptr<RigVM>;
	public var DrawContainer: RigVMDrawContainer;
	public var EventQueue: TArray<FName>;
	@:protected public var AssetUserData: TArray<ucpp.Ptr<AssetUserData>>;

	public function SupportsEvent(InEventName: ucpp.Ref<FName>): Bool;
	public function SetVariableFromString(InVariableName: ucpp.Ref<FName>, InValue: FString): Bool;
	public function SetFramesPerSecond(InFramesPerSecond: ucpp.num.Float32): Void;
	public function SetDeltaTime(InDeltaTime: ucpp.num.Float32): Void;
	public function SetAbsoluteTime(InAbsoluteTime: ucpp.num.Float32, InSetDeltaTimeZero: Bool): Void;
	public function SetAbsoluteAndDeltaTime(InAbsoluteTime: ucpp.num.Float32, InDeltaTime: ucpp.num.Float32): Void;
	public function RequestRunOnceEvent(InEventName: ucpp.Ref<FName>, InEventIndex: ucpp.num.Int32): Void;
	public function RequestInit(): Void;
	public function RemoveRunOnceEvent(InEventName: ucpp.Ref<FName>): Bool;
	public function GetVM(): ucpp.Ptr<RigVM>;
	public function GetVariableType(InVariableName: ucpp.Ref<FName>): FName;
	public function GetVariableAsString(InVariableName: ucpp.Ref<FName>): FString;
	public function GetSupportedEvents(): TArray<FName>;
	public function GetScriptAccessibleVariables(): TArray<FName>;
	public function GetDeltaTime(): ucpp.num.Float32;
	public function GetCurrentFramesPerSecond(): ucpp.num.Float32;
	public function GetAbsoluteTime(): ucpp.num.Float32;
	public function FindRigVMHosts(Outer: ucpp.Ptr<Object>, OptionalClass: TSubclassOf<RigVMHost>): TArray<ucpp.Ptr<RigVMHost>>;
	public function ExecuteEvent(InEventName: ucpp.Ref<FName>): Bool;
	public function Execute(InEventName: ucpp.Ref<FName>): Bool;
	public function CanExecute(): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(SupportsEvent, GetVariableType, GetVariableAsString, GetSupportedEvents, GetScriptAccessibleVariables, GetDeltaTime, GetCurrentFramesPerSecond, GetAbsoluteTime, CanExecute)
@:nativeGen
abstract ConstRigVMHost(RigVMHost) from RigVMHost {
	public extern var VMRuntimeSettings(get, never): RigVMRuntimeSettings;
	public inline extern function get_VMRuntimeSettings(): RigVMRuntimeSettings return this.VMRuntimeSettings;
	public extern var DrawContainer(get, never): RigVMDrawContainer;
	public inline extern function get_DrawContainer(): RigVMDrawContainer return this.DrawContainer;
	public extern var EventQueue(get, never): TArray<FName>;
	public inline extern function get_EventQueue(): TArray<FName> return this.EventQueue;
}

@:forward
@:nativeGen
@:native("RigVMHost*")
abstract RigVMHostPtr(ucpp.Ptr<RigVMHost>) from ucpp.Ptr<RigVMHost> to ucpp.Ptr<RigVMHost>{
	@:from
	public static extern inline function fromValue(v: RigVMHost): RigVMHostPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RigVMHost {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}