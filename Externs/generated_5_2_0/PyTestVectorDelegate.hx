// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPyTestVectorDelegate")
@:include("PyTest.h")
@:valueType
extern class PyTestVectorDelegate extends Object {
	public var OnNameCollisionTestDelegate: HaxeMulticastSparseDelegateProperty<(ucpp.Ref<Vector2D>) -> Void>;

	public function OnNameCollisionDelegate__DelegateSignature(Vec: ucpp.Ref<Vector2D>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPyTestVectorDelegate(PyTestVectorDelegate) from PyTestVectorDelegate {
	public extern var OnNameCollisionTestDelegate(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<Vector2D>) -> Void>;
	public inline extern function get_OnNameCollisionTestDelegate(): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<Vector2D>) -> Void> return this.OnNameCollisionTestDelegate;
}

@:forward
@:nativeGen
@:native("PyTestVectorDelegate*")
abstract PyTestVectorDelegatePtr(ucpp.Ptr<PyTestVectorDelegate>) from ucpp.Ptr<PyTestVectorDelegate> to ucpp.Ptr<PyTestVectorDelegate>{
	@:from
	public static extern inline function fromValue(v: PyTestVectorDelegate): PyTestVectorDelegatePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PyTestVectorDelegate {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}