// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UImgMediaProcessEXROptions")
@:include("Widgets/ImgMediaProcessEXROptions.h")
@:structAccess
extern class ImgMediaProcessEXROptions extends Object {
	public var InputPath: FilePath;
	public var OutputPath: DirectoryPath;
	public var bEnableMipMapping: Bool;
	public var bEnableTiling: Bool;
	public var TileSizeX: cpp.Int32;
	public var TileSizeY: cpp.Int32;
	public var NumThreads: cpp.Int32;
	public var bUsePlayer: Bool;
	public var NumTilesX: cpp.Int32;
	public var NumTilesY: cpp.Int32;
	public var bEnableMipLevelTint: Bool;
	public var MipLevelTints: TArray<LinearColor>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstImgMediaProcessEXROptions(ImgMediaProcessEXROptions) from ImgMediaProcessEXROptions {
	public extern var InputPath(get, never): FilePath;
	public inline extern function get_InputPath(): FilePath return this.InputPath;
	public extern var OutputPath(get, never): DirectoryPath;
	public inline extern function get_OutputPath(): DirectoryPath return this.OutputPath;
	public extern var bEnableMipMapping(get, never): Bool;
	public inline extern function get_bEnableMipMapping(): Bool return this.bEnableMipMapping;
	public extern var bEnableTiling(get, never): Bool;
	public inline extern function get_bEnableTiling(): Bool return this.bEnableTiling;
	public extern var TileSizeX(get, never): cpp.Int32;
	public inline extern function get_TileSizeX(): cpp.Int32 return this.TileSizeX;
	public extern var TileSizeY(get, never): cpp.Int32;
	public inline extern function get_TileSizeY(): cpp.Int32 return this.TileSizeY;
	public extern var NumThreads(get, never): cpp.Int32;
	public inline extern function get_NumThreads(): cpp.Int32 return this.NumThreads;
	public extern var bUsePlayer(get, never): Bool;
	public inline extern function get_bUsePlayer(): Bool return this.bUsePlayer;
	public extern var NumTilesX(get, never): cpp.Int32;
	public inline extern function get_NumTilesX(): cpp.Int32 return this.NumTilesX;
	public extern var NumTilesY(get, never): cpp.Int32;
	public inline extern function get_NumTilesY(): cpp.Int32 return this.NumTilesY;
	public extern var bEnableMipLevelTint(get, never): Bool;
	public inline extern function get_bEnableMipLevelTint(): Bool return this.bEnableMipLevelTint;
	public extern var MipLevelTints(get, never): TArray<LinearColor>;
	public inline extern function get_MipLevelTints(): TArray<LinearColor> return this.MipLevelTints;
}

@:forward
@:nativeGen
@:native("ImgMediaProcessEXROptions*")
abstract ImgMediaProcessEXROptionsPtr(cpp.Star<ImgMediaProcessEXROptions>) from cpp.Star<ImgMediaProcessEXROptions> to cpp.Star<ImgMediaProcessEXROptions>{
	@:from
	public static extern inline function fromValue(v: ImgMediaProcessEXROptions): ImgMediaProcessEXROptionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ImgMediaProcessEXROptions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}