// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UUVLayoutPreview")
@:include("Drawing/UVLayoutPreview.h")
@:valueType
extern class UVLayoutPreview extends Object {
	public var Settings: ucpp.Ptr<UVLayoutPreviewProperties>;
	public var PreviewMesh: ucpp.Ptr<PreviewMesh>;
	public var TriangleComponent: ucpp.Ptr<TriangleSetComp>;
	public var bShowBackingRectangle: Bool;
	public var BackingRectangleMaterial: ucpp.Ptr<MaterialInterface>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstUVLayoutPreview(UVLayoutPreview) from UVLayoutPreview {
	public extern var Settings(get, never): ucpp.Ptr<UVLayoutPreviewProperties.ConstUVLayoutPreviewProperties>;
	public inline extern function get_Settings(): ucpp.Ptr<UVLayoutPreviewProperties.ConstUVLayoutPreviewProperties> return this.Settings;
	public extern var PreviewMesh(get, never): ucpp.Ptr<PreviewMesh.ConstPreviewMesh>;
	public inline extern function get_PreviewMesh(): ucpp.Ptr<PreviewMesh.ConstPreviewMesh> return this.PreviewMesh;
	public extern var TriangleComponent(get, never): ucpp.Ptr<TriangleSetComp.ConstTriangleSetComp>;
	public inline extern function get_TriangleComponent(): ucpp.Ptr<TriangleSetComp.ConstTriangleSetComp> return this.TriangleComponent;
	public extern var bShowBackingRectangle(get, never): Bool;
	public inline extern function get_bShowBackingRectangle(): Bool return this.bShowBackingRectangle;
	public extern var BackingRectangleMaterial(get, never): ucpp.Ptr<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_BackingRectangleMaterial(): ucpp.Ptr<MaterialInterface.ConstMaterialInterface> return this.BackingRectangleMaterial;
}

@:forward
@:nativeGen
@:native("UVLayoutPreview*")
abstract UVLayoutPreviewPtr(ucpp.Ptr<UVLayoutPreview>) from ucpp.Ptr<UVLayoutPreview> to ucpp.Ptr<UVLayoutPreview>{
	@:from
	public static extern inline function fromValue(v: UVLayoutPreview): UVLayoutPreviewPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): UVLayoutPreview {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}