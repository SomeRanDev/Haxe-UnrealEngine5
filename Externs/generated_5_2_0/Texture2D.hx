// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTexture2D")
@:include("Engine/Texture2D.h")
@:valueType
extern class Texture2D extends Texture {
	public var FirstResourceMemMip: ucpp.num.Int32;
	private var bTemporarilyDisableStreaming: Bool;
	public var AddressX: TEnumAsByte<TextureAddress>;
	public var AddressY: TEnumAsByte<TextureAddress>;
	private var ImportedSize: IntPoint;

	public function Blueprint_GetSizeY(): ucpp.num.Int32;
	public function Blueprint_GetSizeX(): ucpp.num.Int32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(Blueprint_GetSizeY, Blueprint_GetSizeX)
@:nativeGen
abstract ConstTexture2D(Texture2D) from Texture2D {
	public extern var FirstResourceMemMip(get, never): ucpp.num.Int32;
	public inline extern function get_FirstResourceMemMip(): ucpp.num.Int32 return this.FirstResourceMemMip;
	public extern var AddressX(get, never): TEnumAsByte<TextureAddress>;
	public inline extern function get_AddressX(): TEnumAsByte<TextureAddress> return this.AddressX;
	public extern var AddressY(get, never): TEnumAsByte<TextureAddress>;
	public inline extern function get_AddressY(): TEnumAsByte<TextureAddress> return this.AddressY;
}

@:forward
@:nativeGen
@:native("Texture2D*")
abstract Texture2DPtr(ucpp.Ptr<Texture2D>) from ucpp.Ptr<Texture2D> to ucpp.Ptr<Texture2D>{
	@:from
	public static extern inline function fromValue(v: Texture2D): Texture2DPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): Texture2D {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}