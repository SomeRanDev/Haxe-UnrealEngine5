// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMeshInspectorMaterialProperties")
@:include("MeshInspectorTool.h")
@:valueType
extern class MeshInspectorMaterialProperties extends InteractiveToolPropertySet {
	public var MaterialMode: EMeshInspectorMaterialMode;
	public var CheckerDensity: ucpp.num.Float32;
	public var OverrideMaterial: ucpp.Ptr<MaterialInterface>;
	public var UVChannel: FString;
	public var UVChannelNamesList: TArray<FString>;
	public var bFlatShading: Bool;
	public var Color: LinearColor;
	public var Opacity: ucpp.num.Float64;
	public var TransparentMaterialColor: LinearColor;
	public var bTwoSided: Bool;
	public var CheckerMaterial: ucpp.Ptr<MaterialInstanceDynamic>;
	public var ActiveCustomMaterial: ucpp.Ptr<MaterialInstanceDynamic>;

	public function GetUVChannelNamesFunc(): TArray<FString>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetUVChannelNamesFunc)
@:nativeGen
abstract ConstMeshInspectorMaterialProperties(MeshInspectorMaterialProperties) from MeshInspectorMaterialProperties {
	public extern var MaterialMode(get, never): EMeshInspectorMaterialMode;
	public inline extern function get_MaterialMode(): EMeshInspectorMaterialMode return this.MaterialMode;
	public extern var CheckerDensity(get, never): ucpp.num.Float32;
	public inline extern function get_CheckerDensity(): ucpp.num.Float32 return this.CheckerDensity;
	public extern var OverrideMaterial(get, never): ucpp.Ptr<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_OverrideMaterial(): ucpp.Ptr<MaterialInterface.ConstMaterialInterface> return this.OverrideMaterial;
	public extern var UVChannel(get, never): FString;
	public inline extern function get_UVChannel(): FString return this.UVChannel;
	public extern var UVChannelNamesList(get, never): TArray<FString>;
	public inline extern function get_UVChannelNamesList(): TArray<FString> return this.UVChannelNamesList;
	public extern var bFlatShading(get, never): Bool;
	public inline extern function get_bFlatShading(): Bool return this.bFlatShading;
	public extern var Color(get, never): LinearColor;
	public inline extern function get_Color(): LinearColor return this.Color;
	public extern var Opacity(get, never): ucpp.num.Float64;
	public inline extern function get_Opacity(): ucpp.num.Float64 return this.Opacity;
	public extern var TransparentMaterialColor(get, never): LinearColor;
	public inline extern function get_TransparentMaterialColor(): LinearColor return this.TransparentMaterialColor;
	public extern var bTwoSided(get, never): Bool;
	public inline extern function get_bTwoSided(): Bool return this.bTwoSided;
	public extern var CheckerMaterial(get, never): ucpp.Ptr<MaterialInstanceDynamic.ConstMaterialInstanceDynamic>;
	public inline extern function get_CheckerMaterial(): ucpp.Ptr<MaterialInstanceDynamic.ConstMaterialInstanceDynamic> return this.CheckerMaterial;
	public extern var ActiveCustomMaterial(get, never): ucpp.Ptr<MaterialInstanceDynamic.ConstMaterialInstanceDynamic>;
	public inline extern function get_ActiveCustomMaterial(): ucpp.Ptr<MaterialInstanceDynamic.ConstMaterialInstanceDynamic> return this.ActiveCustomMaterial;
}

@:forward
@:nativeGen
@:native("MeshInspectorMaterialProperties*")
abstract MeshInspectorMaterialPropertiesPtr(ucpp.Ptr<MeshInspectorMaterialProperties>) from ucpp.Ptr<MeshInspectorMaterialProperties> to ucpp.Ptr<MeshInspectorMaterialProperties>{
	@:from
	public static extern inline function fromValue(v: MeshInspectorMaterialProperties): MeshInspectorMaterialPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MeshInspectorMaterialProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}