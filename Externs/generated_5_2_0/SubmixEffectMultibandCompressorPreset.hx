// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USubmixEffectMultibandCompressorPreset")
@:include("SubmixEffects/SubmixEffectMultiBandCompressor.h")
@:structAccess
extern class SubmixEffectMultibandCompressorPreset extends SoundEffectSubmixPreset {
	public var Settings: SubmixEffectMultibandCompressorSettings;

	public function SetSettings(InSettings: cpp.Reference<SubmixEffectMultibandCompressorSettings>): Void;
	public function SetExternalSubmix(Submix: cpp.Star<SoundSubmix>): Void;
	public function SetAudioBus(AudioBus: cpp.Star<AudioBus>): Void;
	public function ResetKey(): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSubmixEffectMultibandCompressorPreset(SubmixEffectMultibandCompressorPreset) from SubmixEffectMultibandCompressorPreset {
	public extern var Settings(get, never): SubmixEffectMultibandCompressorSettings;
	public inline extern function get_Settings(): SubmixEffectMultibandCompressorSettings return this.Settings;
}

@:forward
@:nativeGen
@:native("SubmixEffectMultibandCompressorPreset*")
abstract SubmixEffectMultibandCompressorPresetPtr(cpp.Star<SubmixEffectMultibandCompressorPreset>) from cpp.Star<SubmixEffectMultibandCompressorPreset> to cpp.Star<SubmixEffectMultibandCompressorPreset>{
	@:from
	public static extern inline function fromValue(v: SubmixEffectMultibandCompressorPreset): SubmixEffectMultibandCompressorPresetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SubmixEffectMultibandCompressorPreset {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}