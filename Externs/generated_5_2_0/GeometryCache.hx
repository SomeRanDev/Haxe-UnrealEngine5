// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGeometryCache")
@:include("GeometryCache.h")
@:structAccess
extern class GeometryCache extends Object {
	public var Materials: TArray<cpp.Star<MaterialInterface>>;
	public var Tracks: TArray<cpp.Star<GeometryCacheTrack>>;
	@:protected public var StartFrame: cpp.Int32;
	@:protected public var EndFrame: cpp.Int32;
	@:protected public var Hash: cpp.UInt64;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGeometryCache(GeometryCache) from GeometryCache {
	public extern var Materials(get, never): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>>;
	public inline extern function get_Materials(): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>> return this.Materials;
	public extern var Tracks(get, never): TArray<cpp.Star<GeometryCacheTrack.ConstGeometryCacheTrack>>;
	public inline extern function get_Tracks(): TArray<cpp.Star<GeometryCacheTrack.ConstGeometryCacheTrack>> return this.Tracks;
}

@:forward
@:nativeGen
@:native("GeometryCache*")
abstract GeometryCachePtr(cpp.Star<GeometryCache>) from cpp.Star<GeometryCache> to cpp.Star<GeometryCache>{
	@:from
	public static extern inline function fromValue(v: GeometryCache): GeometryCachePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GeometryCache {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}