// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGizmoLineHandleComponent")
@:include("BaseGizmos/GizmoLineHandleComponent.h")
@:structAccess
extern class GizmoLineHandleComp extends GizmoBaseComp {
	public var Normal: Vector;
	public var HandleSize: cpp.Float32;
	public var Thickness: cpp.Float32;
	public var Direction: Vector;
	public var Length: cpp.Float32;
	public var bImageScale: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGizmoLineHandleComp(GizmoLineHandleComp) from GizmoLineHandleComp {
	public extern var Normal(get, never): Vector;
	public inline extern function get_Normal(): Vector return this.Normal;
	public extern var HandleSize(get, never): cpp.Float32;
	public inline extern function get_HandleSize(): cpp.Float32 return this.HandleSize;
	public extern var Thickness(get, never): cpp.Float32;
	public inline extern function get_Thickness(): cpp.Float32 return this.Thickness;
	public extern var Direction(get, never): Vector;
	public inline extern function get_Direction(): Vector return this.Direction;
	public extern var Length(get, never): cpp.Float32;
	public inline extern function get_Length(): cpp.Float32 return this.Length;
	public extern var bImageScale(get, never): Bool;
	public inline extern function get_bImageScale(): Bool return this.bImageScale;
}

@:forward
@:nativeGen
@:native("GizmoLineHandleComp*")
abstract GizmoLineHandleCompPtr(cpp.Star<GizmoLineHandleComp>) from cpp.Star<GizmoLineHandleComp> to cpp.Star<GizmoLineHandleComp>{
	@:from
	public static extern inline function fromValue(v: GizmoLineHandleComp): GizmoLineHandleCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GizmoLineHandleComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}