// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDataLayerEditorSubsystem")
@:include("DataLayer/DataLayerEditorSubsystem.h")
@:structAccess
extern class DataLayerEditorSubsystem extends EditorSubsystem {
	public function UpdateAllViewVisibility(DataLayerThatChanged: cpp.Star<DataLayer>): Void;
	public function UpdateAllActorsVisibility(bNotifySelectionChange: Bool, bRedrawViewports: Bool): Bool;
	public function UpdateActorVisibility(Actor: cpp.Star<Actor>, bOutSelectionChanged: cpp.Reference<Bool>, bOutActorModified: cpp.Reference<Bool>, bNotifySelectionChange: Bool, bRedrawViewports: Bool): Bool;
	public function UpdateActorAllViewsVisibility(Actor: cpp.Star<Actor>): Void;
	public function ToggleDataLayerVisibility(DataLayer: cpp.Star<DataLayerInstance>): Void;
	public function ToggleDataLayersVisibility(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>): Void;
	public function ToggleDataLayersIsLoadedInEditor(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>, bIsFromUserChange: Bool): Bool;
	public function ToggleDataLayersIsDynamicallyLoadedInEditor(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayer>>>, bIsFromUserChange: Bool): Bool;
	public function ToggleDataLayerIsLoadedInEditor(DataLayer: cpp.Star<DataLayerInstance>, bIsFromUserChange: Bool): Bool;
	public function ToggleDataLayerIsDynamicallyLoadedInEditor(DataLayer: cpp.Star<DataLayer>, bIsFromUserChange: Bool): Bool;
	public function SetParentDataLayer(DataLayer: cpp.Star<DataLayerInstance>, ParentDataLayer: cpp.Star<DataLayerInstance>): Bool;
	public function SetDataLayerVisibility(DataLayer: cpp.Star<DataLayerInstance>, bIsVisible: Bool): Void;
	public function SetDataLayersVisibility(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>, bIsVisible: Bool): Void;
	public function SetDataLayersIsLoadedInEditor(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>, bIsLoadedInEditor: Bool, bIsFromUserChange: Bool): Bool;
	public function SetDataLayersIsDynamicallyLoadedInEditor(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayer>>>, bIsLoadedInEditor: Bool, bIsFromUserChange: Bool): Bool;
	public function SetDataLayerIsLoadedInEditor(DataLayer: cpp.Star<DataLayerInstance>, bIsLoadedInEditor: Bool, bIsFromUserChange: Bool): Bool;
	public function SetDataLayerIsDynamicallyLoadedInEditor(DataLayer: cpp.Star<DataLayer>, bIsLoadedInEditor: Bool, bIsFromUserChange: Bool): Bool;
	public function SelectActorsInDataLayers(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>, bSelect: Bool, bNotify: Bool, bSelectEvenIfHidden: Bool): Bool;
	public function SelectActorsInDataLayer(DataLayer: cpp.Star<DataLayerInstance>, bSelect: Bool, bNotify: Bool, bSelectEvenIfHidden: Bool): Bool;
	public function RenameDataLayer(DataLayer: cpp.Star<DataLayerInstance>, NewDataLayerLabel: cpp.Reference<FName>): Bool;
	public function RemoveSelectedActorsFromDataLayers(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>): Bool;
	public function RemoveSelectedActorsFromDataLayer(DataLayer: cpp.Star<DataLayerInstance>): Bool;
	public function RemoveActorsFromDataLayers(Actors: cpp.Reference<TArray<cpp.Star<Actor>>>, DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>): Bool;
	public function RemoveActorsFromDataLayer(Actors: cpp.Reference<TArray<cpp.Star<Actor>>>, DataLayer: cpp.Star<DataLayerInstance>): Bool;
	public function RemoveActorsFromAllDataLayers(Actors: cpp.Reference<TArray<cpp.Star<Actor>>>): Bool;
	public function RemoveActorFromDataLayers(Actor: cpp.Star<Actor>, DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>): Bool;
	public function RemoveActorFromDataLayer(Actor: cpp.Star<Actor>, DataLayerToRemove: cpp.Star<DataLayerInstance>): Bool;
	public function RemoveActorFromAllDataLayers(Actor: cpp.Star<Actor>): Bool;
	public function MakeAllDataLayersVisible(): Void;
	public function IsActorValidForDataLayer(Actor: cpp.Star<Actor>): Bool;
	public function GetDataLayerInstances(DataLayerAssets: TArray<cpp.Star<DataLayerAsset>>): TArray<cpp.Star<DataLayerInstance>>;
	public function GetDataLayerInstance(DataLayerAsset: cpp.Star<DataLayerAsset.ConstDataLayerAsset>): cpp.Star<DataLayerInstance>;
	public function GetDataLayerFromLabel(DataLayerLabel: cpp.Reference<FName>): cpp.Star<DataLayerInstance>;
	public function GetDataLayer(ActorDataLayer: cpp.Reference<ActorDataLayer>): cpp.Star<DataLayerInstance>;
	public function GetAllDataLayers(): TArray<cpp.Star<DataLayerInstance>>;
	public function GetActorsFromDataLayers(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>): TArray<cpp.Star<Actor>>;
	public function GetActorsFromDataLayer(DataLayer: cpp.Star<DataLayerInstance>): TArray<cpp.Star<Actor>>;
	public function DeleteDataLayers(DataLayersToDelete: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>): Void;
	public function DeleteDataLayer(DataLayerToDelete: cpp.Star<DataLayerInstance>): Void;
	public function CreateDataLayerInstance(Parameters: cpp.Reference<DataLayerCreationParameters>): cpp.Star<DataLayerInstance>;
	public function CreateDataLayer(ParentDataLayer: cpp.Star<DataLayerInstance>): cpp.Star<DataLayerInstance>;
	public function AppendActorsFromDataLayers(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>, InOutActors: cpp.Reference<TArray<cpp.Star<Actor>>>): Void;
	public function AppendActorsFromDataLayer(DataLayer: cpp.Star<DataLayerInstance>, InOutActors: cpp.Reference<TArray<cpp.Star<Actor>>>): Void;
	public function AddSelectedActorsToDataLayers(DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>): Bool;
	public function AddSelectedActorsToDataLayer(DataLayer: cpp.Star<DataLayerInstance>): Bool;
	public function AddActorToDataLayers(Actor: cpp.Star<Actor>, DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>): Bool;
	public function AddActorToDataLayer(Actor: cpp.Star<Actor>, DataLayer: cpp.Star<DataLayerInstance>): Bool;
	public function AddActorsToDataLayers(Actors: cpp.Reference<TArray<cpp.Star<Actor>>>, DataLayers: cpp.Reference<TArray<cpp.Star<DataLayerInstance>>>): Bool;
	public function AddActorsToDataLayer(Actors: cpp.Reference<TArray<cpp.Star<Actor>>>, DataLayer: cpp.Star<DataLayerInstance>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetDataLayerInstances, GetDataLayerInstance, GetDataLayerFromLabel, GetDataLayer, GetActorsFromDataLayers, GetActorsFromDataLayer, AppendActorsFromDataLayers, AppendActorsFromDataLayer)
@:nativeGen
abstract ConstDataLayerEditorSubsystem(DataLayerEditorSubsystem) from DataLayerEditorSubsystem {
}

@:forward
@:nativeGen
@:native("DataLayerEditorSubsystem*")
abstract DataLayerEditorSubsystemPtr(cpp.Star<DataLayerEditorSubsystem>) from cpp.Star<DataLayerEditorSubsystem> to cpp.Star<DataLayerEditorSubsystem>{
	@:from
	public static extern inline function fromValue(v: DataLayerEditorSubsystem): DataLayerEditorSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DataLayerEditorSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}