// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimCurveBaseCopyObject")
@:include("AnimTimeline/AnimTimelineClipboard.h")
@:valueType
extern class AnimCurveBaseCopyObject extends Object {
	public var DisplayName: FName;
	public var UID: ucpp.num.UInt16;
	public var CurveType: ERawCurveTrackTypes;
	public var Channel: ETransformCurveChannel;
	public var Axis: EVectorCurveChannel;
	public var OriginName: FName;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimCurveBaseCopyObject(AnimCurveBaseCopyObject) from AnimCurveBaseCopyObject {
	public extern var DisplayName(get, never): FName;
	public inline extern function get_DisplayName(): FName return this.DisplayName;
	public extern var UID(get, never): ucpp.num.UInt16;
	public inline extern function get_UID(): ucpp.num.UInt16 return this.UID;
	public extern var CurveType(get, never): ERawCurveTrackTypes;
	public inline extern function get_CurveType(): ERawCurveTrackTypes return this.CurveType;
	public extern var Channel(get, never): ETransformCurveChannel;
	public inline extern function get_Channel(): ETransformCurveChannel return this.Channel;
	public extern var Axis(get, never): EVectorCurveChannel;
	public inline extern function get_Axis(): EVectorCurveChannel return this.Axis;
	public extern var OriginName(get, never): FName;
	public inline extern function get_OriginName(): FName return this.OriginName;
}

@:forward
@:nativeGen
@:native("AnimCurveBaseCopyObject*")
abstract AnimCurveBaseCopyObjectPtr(ucpp.Ptr<AnimCurveBaseCopyObject>) from ucpp.Ptr<AnimCurveBaseCopyObject> to ucpp.Ptr<AnimCurveBaseCopyObject>{
	@:from
	public static extern inline function fromValue(v: AnimCurveBaseCopyObject): AnimCurveBaseCopyObjectPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimCurveBaseCopyObject {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}