// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimStateNode")
@:include("AnimStateNode.h")
@:valueType
extern class AnimStateNode extends AnimStateNodeBase {
	public var BoundGraph: ucpp.Ptr<EdGraph>;
	public var StateType: TEnumAsByte<EAnimStateType>;
	public var StateEntered: AnimNotifyEvent;
	public var StateLeft: AnimNotifyEvent;
	public var StateFullyBlended: AnimNotifyEvent;
	public var bAlwaysResetOnEntry: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimStateNode(AnimStateNode) from AnimStateNode {
	public extern var BoundGraph(get, never): ucpp.Ptr<EdGraph.ConstEdGraph>;
	public inline extern function get_BoundGraph(): ucpp.Ptr<EdGraph.ConstEdGraph> return this.BoundGraph;
	public extern var StateType(get, never): TEnumAsByte<EAnimStateType>;
	public inline extern function get_StateType(): TEnumAsByte<EAnimStateType> return this.StateType;
	public extern var StateEntered(get, never): AnimNotifyEvent;
	public inline extern function get_StateEntered(): AnimNotifyEvent return this.StateEntered;
	public extern var StateLeft(get, never): AnimNotifyEvent;
	public inline extern function get_StateLeft(): AnimNotifyEvent return this.StateLeft;
	public extern var StateFullyBlended(get, never): AnimNotifyEvent;
	public inline extern function get_StateFullyBlended(): AnimNotifyEvent return this.StateFullyBlended;
	public extern var bAlwaysResetOnEntry(get, never): Bool;
	public inline extern function get_bAlwaysResetOnEntry(): Bool return this.bAlwaysResetOnEntry;
}

@:forward
@:nativeGen
@:native("AnimStateNode*")
abstract AnimStateNodePtr(ucpp.Ptr<AnimStateNode>) from ucpp.Ptr<AnimStateNode> to ucpp.Ptr<AnimStateNode>{
	@:from
	public static extern inline function fromValue(v: AnimStateNode): AnimStateNodePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimStateNode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}