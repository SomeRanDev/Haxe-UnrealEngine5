// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeSkeletalAnimationTrackNode")
@:include("InterchangeAnimationTrackSetNode.h")
@:structAccess
extern class InterchangeSkeletalAnimationTrackNode extends InterchangeAnimationTrackBaseNode {
	public function SetCustomSkeletonNodeUid(AttributeValue: FString): Bool;
	public function SetCustomSkeletalMeshNodeUid(AttributeValue: FString): Bool;
	public function SetCustomAnimationStopTime(StopTime: cpp.Reference<cpp.Float64>): Bool;
	public function SetCustomAnimationStartTime(StartTime: cpp.Reference<cpp.Float64>): Bool;
	public function SetCustomAnimationSampleRate(SampleRate: cpp.Reference<cpp.Float64>): Bool;
	public function SetAnimationPayloadKeyForSceneNodeUid(SceneNodeUid: FString, PayloadKey: FString): Bool;
	public function SetAnimationPayloadKeyForMorphTargetNodeUid(MorphTargetNodeUid: FString, PayloadKey: FString): Bool;
	public function RemoveAnimationPayloadKeyForSceneNodeUid(SceneNodeUid: FString): Bool;
	public function RemoveAnimationPayloadKeyForMorphTargetNodeUid(MorphTargetNodeUid: FString): Bool;
	public function GetSceneNodeAnimationPayloadKeys(OutSceneNodeAnimationPayloadKeys: cpp.Reference<TMap<FString, FString>>): Void;
	public function GetMorphTargetNodeAnimationPayloadKeys(OutMorphTargetNodeAnimationPayloads: cpp.Reference<TMap<FString, FString>>): Void;
	public function GetCustomSkeletonNodeUid(AttributeValue: cpp.Reference<FString>): Bool;
	public function GetCustomSkeletalMeshNodeUid(AttributeValue: cpp.Reference<FString>): Bool;
	public function GetCustomAnimationStopTime(StopTime: cpp.Reference<cpp.Float64>): Bool;
	public function GetCustomAnimationStartTime(StartTime: cpp.Reference<cpp.Float64>): Bool;
	public function GetCustomAnimationSampleRate(SampleRate: cpp.Reference<cpp.Float64>): Bool;
	public function GetAnimationPayloadKeyFromSceneNodeUid(SceneNodeUid: FString, OutPayloadKey: cpp.Reference<FString>): Bool;
	public function GetAnimationPayloadKeyFromMorphTargetNodeUid(MorphTargetNodeUid: FString, OutPayloadKey: cpp.Reference<FString>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetSceneNodeAnimationPayloadKeys, GetMorphTargetNodeAnimationPayloadKeys, GetCustomSkeletonNodeUid, GetCustomSkeletalMeshNodeUid, GetCustomAnimationStopTime, GetCustomAnimationStartTime, GetCustomAnimationSampleRate, GetAnimationPayloadKeyFromSceneNodeUid, GetAnimationPayloadKeyFromMorphTargetNodeUid)
@:nativeGen
abstract ConstInterchangeSkeletalAnimationTrackNode(InterchangeSkeletalAnimationTrackNode) from InterchangeSkeletalAnimationTrackNode {
}

@:forward
@:nativeGen
@:native("InterchangeSkeletalAnimationTrackNode*")
abstract InterchangeSkeletalAnimationTrackNodePtr(cpp.Star<InterchangeSkeletalAnimationTrackNode>) from cpp.Star<InterchangeSkeletalAnimationTrackNode> to cpp.Star<InterchangeSkeletalAnimationTrackNode>{
	@:from
	public static extern inline function fromValue(v: InterchangeSkeletalAnimationTrackNode): InterchangeSkeletalAnimationTrackNodePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeSkeletalAnimationTrackNode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}