// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USkeletalMeshEditorSubsystem")
@:include("SkeletalMeshEditorSubsystem.h")
@:valueType
extern class SkeletalMeshEditorSubsystem extends EditorSubsystem {
	public function SetSectionVisibleInRayTracing(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32, bVisibleInRayTracing: Bool): Bool;
	public function SetSectionRecomputeTangentsVertexMaskChannel(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32, RecomputeTangentsVertexMaskChannel: ucpp.num.UInt8): Bool;
	public function SetSectionRecomputeTangent(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32, bRecomputeTangent: Bool): Bool;
	public function SetSectionCastShadow(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32, bCastShadow: Bool): Bool;
	public function SetLodBuildSettings(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, LodIndex: ucpp.num.Int32, BuildOptions: ucpp.Ref<SkeletalMeshBuildSettings>): Void;
	public function RenameSocket(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, OldName: FName, NewName: FName): Bool;
	public function ReimportAllCustomLODs(SkeletalMesh: ucpp.Ptr<SkeletalMesh>): Bool;
	public function RegenerateLOD(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, NewLODCount: ucpp.num.Int32, bRegenerateEvenIfImported: Bool, bGenerateBaseLOD: Bool): Bool;
	public function ImportLOD(BaseMesh: ucpp.Ptr<SkeletalMesh>, LODIndex: ucpp.num.Int32, SourceFilename: FString): ucpp.num.Int32;
	public function GetSectionVisibleInRayTracing(SkeletalMesh: ucpp.Ptr<SkeletalMesh.ConstSkeletalMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32, bOutVisibleInRayTracing: ucpp.Ref<Bool>): Bool;
	public function GetSectionRecomputeTangentsVertexMaskChannel(SkeletalMesh: ucpp.Ptr<SkeletalMesh.ConstSkeletalMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32, OutRecomputeTangentsVertexMaskChannel: ucpp.Ref<ucpp.num.UInt8>): Bool;
	public function GetSectionRecomputeTangent(SkeletalMesh: ucpp.Ptr<SkeletalMesh.ConstSkeletalMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32, bOutRecomputeTangent: ucpp.Ref<Bool>): Bool;
	public function GetSectionCastShadow(SkeletalMesh: ucpp.Ptr<SkeletalMesh.ConstSkeletalMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32, bOutCastShadow: ucpp.Ref<Bool>): Bool;
	public function GetNumVerts(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, LODIndex: ucpp.num.Int32): ucpp.num.Int32;
	public function GetNumSections(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, LODIndex: ucpp.num.Int32): ucpp.num.Int32;
	public function GetLODMaterialSlot(SkeletalMesh: ucpp.Ptr<SkeletalMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32): ucpp.num.Int32;
	public function GetLODCount(SkeletalMesh: ucpp.Ptr<SkeletalMesh>): ucpp.num.Int32;
	public function GetLodBuildSettings(SkeletalMesh: ucpp.Ptr<SkeletalMesh.ConstSkeletalMesh>, LodIndex: ucpp.num.Int32, OutBuildOptions: ucpp.Ref<SkeletalMeshBuildSettings>): Void;
	public function CreatePhysicsAsset(SkeletalMesh: ucpp.Ptr<SkeletalMesh>): ucpp.Ptr<PhysicsAsset>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstSkeletalMeshEditorSubsystem(SkeletalMeshEditorSubsystem) from SkeletalMeshEditorSubsystem {
}

@:forward
@:nativeGen
@:native("SkeletalMeshEditorSubsystem*")
abstract SkeletalMeshEditorSubsystemPtr(ucpp.Ptr<SkeletalMeshEditorSubsystem>) from ucpp.Ptr<SkeletalMeshEditorSubsystem> to ucpp.Ptr<SkeletalMeshEditorSubsystem>{
	@:from
	public static extern inline function fromValue(v: SkeletalMeshEditorSubsystem): SkeletalMeshEditorSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SkeletalMeshEditorSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}