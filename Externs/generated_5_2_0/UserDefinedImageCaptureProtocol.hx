// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UUserDefinedImageCaptureProtocol")
@:include("Protocols/UserDefinedCaptureProtocol.h")
@:valueType
extern class UserDefinedImageCaptureProtocol extends UserDefinedCaptureProtocol {
	public var Format: EDesiredImageFormat;
	public var bEnableCompression: Bool;
	public var CompressionQuality: ucpp.num.Int32;

	public function WriteImageToDisk(PixelData: ucpp.Ref<CapturedPixels>, StreamID: ucpp.Ref<CapturedPixelsID>, FrameMetrics: ucpp.Ref<FrameMetrics>, bCopyImageData: Bool): Void;
	public function GenerateFilenameForCurrentFrame(): FString;
	public function GenerateFilenameForBuffer(Buffer: ucpp.Ptr<Texture>, StreamID: ucpp.Ref<CapturedPixelsID>): FString;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstUserDefinedImageCaptureProtocol(UserDefinedImageCaptureProtocol) from UserDefinedImageCaptureProtocol {
	public extern var Format(get, never): EDesiredImageFormat;
	public inline extern function get_Format(): EDesiredImageFormat return this.Format;
	public extern var bEnableCompression(get, never): Bool;
	public inline extern function get_bEnableCompression(): Bool return this.bEnableCompression;
	public extern var CompressionQuality(get, never): ucpp.num.Int32;
	public inline extern function get_CompressionQuality(): ucpp.num.Int32 return this.CompressionQuality;
}

@:forward
@:nativeGen
@:native("UserDefinedImageCaptureProtocol*")
abstract UserDefinedImageCaptureProtocolPtr(ucpp.Ptr<UserDefinedImageCaptureProtocol>) from ucpp.Ptr<UserDefinedImageCaptureProtocol> to ucpp.Ptr<UserDefinedImageCaptureProtocol>{
	@:from
	public static extern inline function fromValue(v: UserDefinedImageCaptureProtocol): UserDefinedImageCaptureProtocolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): UserDefinedImageCaptureProtocol {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}