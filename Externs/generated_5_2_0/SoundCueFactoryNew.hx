// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USoundCueFactoryNew")
@:include("Factories/SoundCueFactoryNew.h")
@:valueType
extern class SoundCueFactoryNew extends Factory {
	public var InitialSoundWave: ucpp.Ptr<SoundWave>;
	public var InitialSoundWaves: TArray<TWeakObjectPtr<SoundWave>>;
	public var InitialDialogueWave: ucpp.Ptr<DialogueWave>;
	public var InitialDialogueWaves: TArray<TWeakObjectPtr<DialogueWave>>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstSoundCueFactoryNew(SoundCueFactoryNew) from SoundCueFactoryNew {
	public extern var InitialSoundWave(get, never): ucpp.Ptr<SoundWave.ConstSoundWave>;
	public inline extern function get_InitialSoundWave(): ucpp.Ptr<SoundWave.ConstSoundWave> return this.InitialSoundWave;
	public extern var InitialSoundWaves(get, never): TArray<TWeakObjectPtr<SoundWave.ConstSoundWave>>;
	public inline extern function get_InitialSoundWaves(): TArray<TWeakObjectPtr<SoundWave.ConstSoundWave>> return this.InitialSoundWaves;
	public extern var InitialDialogueWave(get, never): ucpp.Ptr<DialogueWave.ConstDialogueWave>;
	public inline extern function get_InitialDialogueWave(): ucpp.Ptr<DialogueWave.ConstDialogueWave> return this.InitialDialogueWave;
	public extern var InitialDialogueWaves(get, never): TArray<TWeakObjectPtr<DialogueWave.ConstDialogueWave>>;
	public inline extern function get_InitialDialogueWaves(): TArray<TWeakObjectPtr<DialogueWave.ConstDialogueWave>> return this.InitialDialogueWaves;
}

@:forward
@:nativeGen
@:native("SoundCueFactoryNew*")
abstract SoundCueFactoryNewPtr(ucpp.Ptr<SoundCueFactoryNew>) from ucpp.Ptr<SoundCueFactoryNew> to ucpp.Ptr<SoundCueFactoryNew>{
	@:from
	public static extern inline function fromValue(v: SoundCueFactoryNew): SoundCueFactoryNewPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SoundCueFactoryNew {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}