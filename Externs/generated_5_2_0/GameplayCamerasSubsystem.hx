// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGameplayCamerasSubsystem")
@:include("GameplayCamerasSubsystem.h")
@:valueType
extern class GameplayCamerasSubsystem extends WorldSubsystem {
	public function StopCameraAnimation(PlayerController: ucpp.Ptr<PlayerController>, Handle: ucpp.Ref<CameraAnimationHandle>, bImmediate: Bool): Void;
	public function StopAllCameraAnimationsOf(PlayerController: ucpp.Ptr<PlayerController>, Sequence: ucpp.Ptr<CameraAnimationSequence>, bImmediate: Bool): Void;
	public function StopAllCameraAnimations(PlayerController: ucpp.Ptr<PlayerController>, bImmediate: Bool): Void;
	public function PlayCameraAnimation(PlayerController: ucpp.Ptr<PlayerController>, Sequence: ucpp.Ptr<CameraAnimationSequence>, Params: CameraAnimationParams): CameraAnimationHandle;
	public function IsCameraAnimationActive(PlayerController: ucpp.Ptr<PlayerController>, Handle: ucpp.Ref<CameraAnimationHandle>): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsCameraAnimationActive)
@:nativeGen
abstract ConstGameplayCamerasSubsystem(GameplayCamerasSubsystem) from GameplayCamerasSubsystem {
}

@:forward
@:nativeGen
@:native("GameplayCamerasSubsystem*")
abstract GameplayCamerasSubsystemPtr(ucpp.Ptr<GameplayCamerasSubsystem>) from ucpp.Ptr<GameplayCamerasSubsystem> to ucpp.Ptr<GameplayCamerasSubsystem>{
	@:from
	public static extern inline function fromValue(v: GameplayCamerasSubsystem): GameplayCamerasSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GameplayCamerasSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}