// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGameplayCamerasSubsystem")
@:include("GameplayCamerasSubsystem.h")
@:structAccess
extern class GameplayCamerasSubsystem extends WorldSubsystem {
	public function StopCameraAnimation(PlayerController: cpp.Star<PlayerController>, Handle: cpp.Reference<CameraAnimationHandle>, bImmediate: Bool): Void;
	public function StopAllCameraAnimationsOf(PlayerController: cpp.Star<PlayerController>, Sequence: cpp.Star<CameraAnimationSequence>, bImmediate: Bool): Void;
	public function StopAllCameraAnimations(PlayerController: cpp.Star<PlayerController>, bImmediate: Bool): Void;
	public function PlayCameraAnimation(PlayerController: cpp.Star<PlayerController>, Sequence: cpp.Star<CameraAnimationSequence>, Params: CameraAnimationParams): CameraAnimationHandle;
	public function IsCameraAnimationActive(PlayerController: cpp.Star<PlayerController>, Handle: cpp.Reference<CameraAnimationHandle>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(IsCameraAnimationActive)
@:nativeGen
abstract ConstGameplayCamerasSubsystem(GameplayCamerasSubsystem) from GameplayCamerasSubsystem {
}

@:forward
@:nativeGen
@:native("GameplayCamerasSubsystem*")
abstract GameplayCamerasSubsystemPtr(cpp.Star<GameplayCamerasSubsystem>) from cpp.Star<GameplayCamerasSubsystem> to cpp.Star<GameplayCamerasSubsystem>{
	@:from
	public static extern inline function fromValue(v: GameplayCamerasSubsystem): GameplayCamerasSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GameplayCamerasSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}