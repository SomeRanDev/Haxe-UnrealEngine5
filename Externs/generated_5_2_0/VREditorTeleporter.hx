// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AVREditorTeleporter")
@:include("Teleporter/VREditorTeleporter.h")
@:valueType
extern class VREditorTeleporter extends Actor {
	private var VRMode: ucpp.Ptr<VREditorMode>;
	private var TeleportDirectionMeshComponent: ucpp.Ptr<StaticMeshComp>;
	private var HMDMeshComponent: ucpp.Ptr<StaticMeshComp>;
	private var LeftMotionControllerMeshComponent: ucpp.Ptr<StaticMeshComp>;
	private var RightMotionControllerMeshComponent: ucpp.Ptr<StaticMeshComp>;
	private var TeleportMID: ucpp.Ptr<MaterialInstanceDynamic>;
	private var InteractorTryingTeleport: ucpp.Ptr<ViewportInteractor>;

	public function TeleportDone(): Void;
	private function StopAiming(): Void;
	public function StartTeleport(): Void;
	private function StartAiming(Interactor: ucpp.Ptr<ViewportInteractor>): Void;
	public function Shutdown(): Void;
	public function SetVisibility(bVisible: Bool): Void;
	public function SetColor(Color: ucpp.Ref<LinearColor>): Void;
	public function IsTeleporting(): Bool;
	public function IsAiming(): Bool;
	public function Init(InMode: ucpp.Ptr<VREditorMode>): Void;
	public function GetVRMode(): ucpp.Ptr<VREditorMode>;
	public function GetSlideDelta(Interactor: ucpp.Ptr<VREditorInteractor>, Axis: Bool): ucpp.num.Float32;
	private function GetInteractorTryingTeleport(): ucpp.Ptr<ViewportInteractor>;
	private function DoTeleport(): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsTeleporting, IsAiming, GetVRMode, GetInteractorTryingTeleport)
@:nativeGen
abstract ConstVREditorTeleporter(VREditorTeleporter) from VREditorTeleporter {
}

@:forward
@:nativeGen
@:native("VREditorTeleporter*")
abstract VREditorTeleporterPtr(ucpp.Ptr<VREditorTeleporter>) from ucpp.Ptr<VREditorTeleporter> to ucpp.Ptr<VREditorTeleporter>{
	@:from
	public static extern inline function fromValue(v: VREditorTeleporter): VREditorTeleporterPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): VREditorTeleporter {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}