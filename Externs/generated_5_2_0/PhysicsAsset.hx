// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPhysicsAsset")
@:include("PhysicsEngine/PhysicsAsset.h")
@:valueType
extern class PhysicsAsset extends Object {
	public var BoundsBodies: TArray<ucpp.num.Int32>;
	public var SkeletalBodySetups: TArray<ucpp.Ptr<SkeletalBodySetup>>;
	public var ConstraintSetup: TArray<ucpp.Ptr<PhysicsConstraintTemplate>>;
	public var SolverSettings: PhysicsAssetSolverSettings;
	public var SolverIterations: SolverIterations;
	public var SolverType: EPhysicsAssetSolverType;
	public var bNotForDedicatedServer: Bool;
	public var ThumbnailInfo: ucpp.Ptr<ThumbnailInfo>;

	public function GetConstraints(bIncludesTerminated: Bool, OutConstraints: ucpp.Ref<TArray<ConstraintInstanceAccessor>>): Void;
	public function GetConstraintByName(ConstraintName: FName): ConstraintInstanceAccessor;
	public function GetConstraintByBoneNames(Bone1Name: FName, Bone2Name: FName): ConstraintInstanceAccessor;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPhysicsAsset(PhysicsAsset) from PhysicsAsset {
	public extern var BoundsBodies(get, never): TArray<ucpp.num.Int32>;
	public inline extern function get_BoundsBodies(): TArray<ucpp.num.Int32> return this.BoundsBodies;
	public extern var SkeletalBodySetups(get, never): TArray<ucpp.Ptr<SkeletalBodySetup.ConstSkeletalBodySetup>>;
	public inline extern function get_SkeletalBodySetups(): TArray<ucpp.Ptr<SkeletalBodySetup.ConstSkeletalBodySetup>> return this.SkeletalBodySetups;
	public extern var ConstraintSetup(get, never): TArray<ucpp.Ptr<PhysicsConstraintTemplate.ConstPhysicsConstraintTemplate>>;
	public inline extern function get_ConstraintSetup(): TArray<ucpp.Ptr<PhysicsConstraintTemplate.ConstPhysicsConstraintTemplate>> return this.ConstraintSetup;
	public extern var SolverSettings(get, never): PhysicsAssetSolverSettings;
	public inline extern function get_SolverSettings(): PhysicsAssetSolverSettings return this.SolverSettings;
	public extern var SolverIterations(get, never): SolverIterations;
	public inline extern function get_SolverIterations(): SolverIterations return this.SolverIterations;
	public extern var SolverType(get, never): EPhysicsAssetSolverType;
	public inline extern function get_SolverType(): EPhysicsAssetSolverType return this.SolverType;
	public extern var bNotForDedicatedServer(get, never): Bool;
	public inline extern function get_bNotForDedicatedServer(): Bool return this.bNotForDedicatedServer;
	public extern var ThumbnailInfo(get, never): ucpp.Ptr<ThumbnailInfo.ConstThumbnailInfo>;
	public inline extern function get_ThumbnailInfo(): ucpp.Ptr<ThumbnailInfo.ConstThumbnailInfo> return this.ThumbnailInfo;
}

@:forward
@:nativeGen
@:native("PhysicsAsset*")
abstract PhysicsAssetPtr(ucpp.Ptr<PhysicsAsset>) from ucpp.Ptr<PhysicsAsset> to ucpp.Ptr<PhysicsAsset>{
	@:from
	public static extern inline function fromValue(v: PhysicsAsset): PhysicsAssetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PhysicsAsset {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}