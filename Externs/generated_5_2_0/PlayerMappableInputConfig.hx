// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPlayerMappableInputConfig")
@:include("PlayerMappableInputConfig.h")
@:valueType
extern class PlayerMappableInputConfig extends PrimaryDataAsset {
	@:protected public var ConfigName: FName;
	@:protected public var ConfigDisplayName: FText;
	@:protected public var bIsDeprecated: Bool;
	@:protected public var Metadata: ucpp.Ptr<Object>;
	@:protected public var Contexts: TMap<ucpp.Ptr<InputMappingContext>, ucpp.num.Int32>;

	public function ResetToDefault(): Void;
	public function IsDeprecated(): Bool;
	public function GetPlayerMappableKeys(): TArray<EnhancedActionKeyMapping>;
	public function GetMetadata(): ucpp.Ptr<Object>;
	public function GetMappingContexts(): TMap<ucpp.Ptr<InputMappingContext>, ucpp.num.Int32>;
	public function GetMappingByName(MappingName: FName): EnhancedActionKeyMapping;
	public function GetKeysBoundToAction(InAction: ucpp.Ptr<InputAction.ConstInputAction>): TArray<EnhancedActionKeyMapping>;
	public function GetDisplayName(): FText;
	public function GetConfigName(): FName;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsDeprecated, GetPlayerMappableKeys, GetMetadata, GetMappingContexts, GetMappingByName, GetKeysBoundToAction, GetDisplayName, GetConfigName)
@:nativeGen
abstract ConstPlayerMappableInputConfig(PlayerMappableInputConfig) from PlayerMappableInputConfig {
}

@:forward
@:nativeGen
@:native("PlayerMappableInputConfig*")
abstract PlayerMappableInputConfigPtr(ucpp.Ptr<PlayerMappableInputConfig>) from ucpp.Ptr<PlayerMappableInputConfig> to ucpp.Ptr<PlayerMappableInputConfig>{
	@:from
	public static extern inline function fromValue(v: PlayerMappableInputConfig): PlayerMappableInputConfigPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PlayerMappableInputConfig {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}