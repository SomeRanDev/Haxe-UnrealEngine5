// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGizmoElementBase")
@:include("BaseGizmos/GizmoElementBase.h")
@:structAccess
extern class GizmoElementBase extends Object {
	@:protected public var bEnabled: Bool;
	@:protected public var bEnabledForPerspectiveProjection: Bool;
	@:protected public var bEnabledForOrthographicProjection: Bool;
	@:protected public var bEnabledForDefaultState: Bool;
	@:protected public var bEnabledForHoveringState: Bool;
	@:protected public var bEnabledForInteractingState: Bool;
	@:protected public var PartIdentifier: cpp.UInt32;
	@:protected public var MeshRenderAttributes: GizmoElementMeshRenderStateAttributes;
	@:protected public var ElementState: EGizmoElementState;
	@:protected public var ElementInteractionState: EGizmoElementInteractionState;
	@:protected public var ViewDependentType: EGizmoElementViewDependentType;
	@:protected public var ViewDependentAxis: Vector;
	@:protected public var ViewDependentAngleTol: cpp.Float32;
	@:protected public var ViewDependentAxialMaxCosAngleTol: cpp.Float32;
	@:protected public var ViewDependentPlanarMinCosAngleTol: cpp.Float32;
	@:protected public var ViewAlignType: EGizmoElementViewAlignType;
	@:protected public var ViewAlignAxis: Vector;
	@:protected public var ViewAlignNormal: Vector;
	@:protected public var ViewAlignAxialAngleTol: cpp.Float32;
	@:protected public var ViewAlignAxialMaxCosAngleTol: cpp.Float32;
	@:protected public var PixelHitDistanceThreshold: cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGizmoElementBase(GizmoElementBase) from GizmoElementBase {
}

@:forward
@:nativeGen
@:native("GizmoElementBase*")
abstract GizmoElementBasePtr(cpp.Star<GizmoElementBase>) from cpp.Star<GizmoElementBase> to cpp.Star<GizmoElementBase>{
	@:from
	public static extern inline function fromValue(v: GizmoElementBase): GizmoElementBasePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GizmoElementBase {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}