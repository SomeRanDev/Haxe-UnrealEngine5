// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USubmixEffectConvolutionReverbPreset")
@:include("SubmixEffects/SubmixEffectConvolutionReverb.h")
@:valueType
extern class SubmixEffectConvolutionReverbPreset extends SoundEffectSubmixPreset {
	public var ImpulseResponse: ucpp.Ptr<AudioImpulseResponse>;
	public var Settings: SubmixEffectConvolutionReverbSettings;
	public var BlockSize: ESubmixEffectConvolutionReverbBlockSize;
	public var bEnableHardwareAcceleration: Bool;

	public function SetSettings(InSettings: ucpp.Ref<SubmixEffectConvolutionReverbSettings>): Void;
	public function SetImpulseResponse(InImpulseResponse: ucpp.Ptr<AudioImpulseResponse>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstSubmixEffectConvolutionReverbPreset(SubmixEffectConvolutionReverbPreset) from SubmixEffectConvolutionReverbPreset {
	public extern var ImpulseResponse(get, never): ucpp.Ptr<AudioImpulseResponse.ConstAudioImpulseResponse>;
	public inline extern function get_ImpulseResponse(): ucpp.Ptr<AudioImpulseResponse.ConstAudioImpulseResponse> return this.ImpulseResponse;
	public extern var Settings(get, never): SubmixEffectConvolutionReverbSettings;
	public inline extern function get_Settings(): SubmixEffectConvolutionReverbSettings return this.Settings;
	public extern var BlockSize(get, never): ESubmixEffectConvolutionReverbBlockSize;
	public inline extern function get_BlockSize(): ESubmixEffectConvolutionReverbBlockSize return this.BlockSize;
	public extern var bEnableHardwareAcceleration(get, never): Bool;
	public inline extern function get_bEnableHardwareAcceleration(): Bool return this.bEnableHardwareAcceleration;
}

@:forward
@:nativeGen
@:native("SubmixEffectConvolutionReverbPreset*")
abstract SubmixEffectConvolutionReverbPresetPtr(ucpp.Ptr<SubmixEffectConvolutionReverbPreset>) from ucpp.Ptr<SubmixEffectConvolutionReverbPreset> to ucpp.Ptr<SubmixEffectConvolutionReverbPreset>{
	@:from
	public static extern inline function fromValue(v: SubmixEffectConvolutionReverbPreset): SubmixEffectConvolutionReverbPresetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SubmixEffectConvolutionReverbPreset {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}