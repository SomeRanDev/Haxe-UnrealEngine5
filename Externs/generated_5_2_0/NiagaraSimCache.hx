// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UNiagaraSimCache")
@:include("NiagaraSimCache.h")
@:structAccess
extern class NiagaraSimCache extends Object {
	private var CacheGuid: Guid;
	private var SoftNiagaraSystem: TSoftObjectPtr<NiagaraSystem>;
	private var StartSeconds: cpp.Float32;
	private var DurationSeconds: cpp.Float32;
	private var CreateParameters: NiagaraSimCacheCreateParameters;
	private var bNeedsReadComponentMappingRecache: Bool;
	private var CacheLayout: NiagaraSimCacheLayout;
	private var CacheFrames: TArray<NiagaraSimCacheFrame>;
	private var DataInterfaceStorage: TMap<NiagaraVariableBase, cpp.Star<Object>>;

	public function ReadVectorAttribute(OutValues: cpp.Reference<TArray<Vector>>, AttributeName: FName, EmitterName: FName, FrameIndex: cpp.Int32): Void;
	public function ReadVector4Attribute(OutValues: cpp.Reference<TArray<Vector4>>, AttributeName: FName, EmitterName: FName, FrameIndex: cpp.Int32): Void;
	public function ReadVector2Attribute(OutValues: cpp.Reference<TArray<Vector2D>>, AttributeName: FName, EmitterName: FName, FrameIndex: cpp.Int32): Void;
	public function ReadQuatAttributeWithRebase(OutValues: cpp.Reference<TArray<Quat>>, Quat: Quat, AttributeName: FName, EmitterName: FName, FrameIndex: cpp.Int32): Void;
	public function ReadQuatAttribute(OutValues: cpp.Reference<TArray<Quat>>, AttributeName: FName, EmitterName: FName, bLocalSpaceToWorld: Bool, FrameIndex: cpp.Int32): Void;
	public function ReadPositionAttributeWithRebase(OutValues: cpp.Reference<TArray<Vector>>, Transform: Transform, AttributeName: FName, EmitterName: FName, FrameIndex: cpp.Int32): Void;
	public function ReadPositionAttribute(OutValues: cpp.Reference<TArray<Vector>>, AttributeName: FName, EmitterName: FName, bLocalSpaceToWorld: Bool, FrameIndex: cpp.Int32): Void;
	public function ReadIntAttribute(OutValues: cpp.Reference<TArray<cpp.Int32>>, AttributeName: FName, EmitterName: FName, FrameIndex: cpp.Int32): Void;
	public function ReadFloatAttribute(OutValues: cpp.Reference<TArray<cpp.Float32>>, AttributeName: FName, EmitterName: FName, FrameIndex: cpp.Int32): Void;
	public function ReadColorAttribute(OutValues: cpp.Reference<TArray<LinearColor>>, AttributeName: FName, EmitterName: FName, FrameIndex: cpp.Int32): Void;
	public function IsEmpty(): Bool;
	public function IsCacheValid(): Bool;
	public function GetStartSeconds(): cpp.Float32;
	public function GetNumFrames(): cpp.Int32;
	public function GetNumEmitters(): cpp.Int32;
	public function GetEmitterNames(): TArray<FName>;
	public function GetEmitterName(EmitterIndex: cpp.Int32): FName;
	public function GetAttributeCaptureMode(): ENiagaraSimCacheAttributeCaptureMode;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	ReadVectorAttribute, ReadVector4Attribute, ReadVector2Attribute, ReadQuatAttributeWithRebase, ReadQuatAttribute,
	ReadPositionAttributeWithRebase, ReadPositionAttribute, ReadIntAttribute, ReadFloatAttribute, ReadColorAttribute,
	IsEmpty, IsCacheValid, GetStartSeconds, GetNumFrames, GetNumEmitters,
	GetEmitterNames, GetEmitterName, GetAttributeCaptureMode
)
@:nativeGen
abstract ConstNiagaraSimCache(NiagaraSimCache) from NiagaraSimCache {
}

@:forward
@:nativeGen
@:native("NiagaraSimCache*")
abstract NiagaraSimCachePtr(cpp.Star<NiagaraSimCache>) from cpp.Star<NiagaraSimCache> to cpp.Star<NiagaraSimCache>{
	@:from
	public static extern inline function fromValue(v: NiagaraSimCache): NiagaraSimCachePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): NiagaraSimCache {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}