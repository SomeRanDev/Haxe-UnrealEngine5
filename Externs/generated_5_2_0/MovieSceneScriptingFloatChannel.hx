// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovieSceneScriptingFloatChannel")
@:include("KeysAndChannels/MovieSceneScriptingFloat.h")
@:structAccess
extern class MovieSceneScriptingFloatChannel extends MovieSceneScriptingChannel {
	public function SetPreInfinityExtrapolation(InExtrapolation: TEnumAsByte<ERichCurveExtrapolation>): Void;
	public function SetPostInfinityExtrapolation(InExtrapolation: TEnumAsByte<ERichCurveExtrapolation>): Void;
	public function SetDefault(InDefaultValue: cpp.Float32): Void;
	public function RemoveKey(Key: cpp.Star<MovieSceneScriptingKey>): Void;
	public function RemoveDefault(): Void;
	public function HasDefault(): Bool;
	public function GetPreInfinityExtrapolation(): TEnumAsByte<ERichCurveExtrapolation>;
	public function GetPostInfinityExtrapolation(): TEnumAsByte<ERichCurveExtrapolation>;
	public function GetNumKeys(): cpp.Int32;
	public function GetKeys(): TArray<cpp.Star<MovieSceneScriptingKey>>;
	public function GetDefault(): cpp.Float32;
	public function EvaluateKeys(Range: SequencerScriptingRange, FrameRate: FrameRate): TArray<cpp.Float32>;
	public function ComputeEffectiveRange(): SequencerScriptingRange;
	public function AddKey(InTime: cpp.Reference<FrameNumber>, NewValue: cpp.Float32, SubFrame: cpp.Float32, TimeUnit: ESequenceTimeUnit, InInterpolation: EMovieSceneKeyInterpolation): cpp.Star<MovieSceneScriptingFloatKey>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(HasDefault, GetPreInfinityExtrapolation, GetPostInfinityExtrapolation, GetNumKeys, GetKeys, GetDefault, EvaluateKeys, ComputeEffectiveRange)
@:nativeGen
abstract ConstMovieSceneScriptingFloatChannel(MovieSceneScriptingFloatChannel) from MovieSceneScriptingFloatChannel {
}

@:forward
@:nativeGen
@:native("MovieSceneScriptingFloatChannel*")
abstract MovieSceneScriptingFloatChannelPtr(cpp.Star<MovieSceneScriptingFloatChannel>) from cpp.Star<MovieSceneScriptingFloatChannel> to cpp.Star<MovieSceneScriptingFloatChannel>{
	@:from
	public static extern inline function fromValue(v: MovieSceneScriptingFloatChannel): MovieSceneScriptingFloatChannelPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MovieSceneScriptingFloatChannel {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}