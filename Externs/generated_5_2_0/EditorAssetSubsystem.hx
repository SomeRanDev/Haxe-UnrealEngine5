// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEditorAssetSubsystem")
@:include("Subsystems/EditorAssetSubsystem.h")
@:valueType
extern class EditorAssetSubsystem extends EditorSubsystem {
	public function SetMetadataTag(Object: ucpp.Ptr<Object>, Tag: FName, Value: FString): Void;
	public function SaveLoadedAssets(AssetsToSave: ucpp.Ref<TArray<ucpp.Ptr<Object>>>, bOnlyIfIsDirty: Bool): Bool;
	public function SaveLoadedAsset(AssetToSave: ucpp.Ptr<Object>, bOnlyIfIsDirty: Bool): Bool;
	public function SaveDirectory(DirectoryPath: FString, bOnlyIfIsDirty: Bool, bRecursive: Bool): Bool;
	public function SaveAsset(AssetToSave: FString, bOnlyIfIsDirty: Bool): Bool;
	public function RenameLoadedAsset(SourceAsset: ucpp.Ptr<Object>, DestinationAssetPath: FString): Bool;
	public function RenameDirectory(SourceDirectoryPath: FString, DestinationDirectoryPath: FString): Bool;
	public function RenameAsset(SourceAssetPath: FString, DestinationAssetPath: FString): Bool;
	public function RemoveOnExtractAssetFromFile(Delegate: HaxeDelegateProperty<(ucpp.Ref<TArray<FString>>, ucpp.Ref<TArray<AssetData>>) -> Void>): Void;
	public function RemoveMetadataTag(Object: ucpp.Ptr<Object>, Tag: FName): Void;
	public function OnExtractAssetFromFileDynamic__DelegateSignature(Files: ucpp.Ref<TArray<FString>>, AssetDataArray: ucpp.Ref<TArray<AssetData>>): Void;
	public function MakeDirectory(DirectoryPath: FString): Bool;
	public function LoadBlueprintClass(AssetPath: FString): ucpp.Ptr<Class>;
	public function LoadAsset(AssetPath: FString): ucpp.Ptr<Object>;
	public function ListAssetsByTagValue(TagName: FName, TagValue: FString): TArray<FString>;
	public function ListAssets(DirectoryPath: FString, bRecursive: Bool, bIncludeFolder: Bool): TArray<FString>;
	public function GetTagValues(AssetPath: FString): TMap<FName, FString>;
	public function GetPathNameForLoadedAsset(LoadedAsset: ucpp.Ptr<Object>): FString;
	public function GetMetadataTagValues(Object: ucpp.Ptr<Object>): TMap<FName, FString>;
	public function GetMetadataTag(Object: ucpp.Ptr<Object>, Tag: FName): FString;
	public function FindPackageReferencersForAsset(AssetPath: FString, bLoadAssetsToConfirm: Bool): TArray<FString>;
	public function FindAssetData(AssetPath: FString): AssetData;
	public function DuplicateLoadedAsset(SourceAsset: ucpp.Ptr<Object>, DestinationAssetPath: FString): ucpp.Ptr<Object>;
	public function DuplicateDirectory(SourceDirectoryPath: FString, DestinationDirectoryPath: FString): Bool;
	public function DuplicateAsset(SourceAssetPath: FString, DestinationAssetPath: FString): ucpp.Ptr<Object>;
	public function DoesDirectoryExist(DirectoryPath: FString): Bool;
	public function DoesDirectoryContainAssets(DirectoryPath: FString, bRecursive: Bool): Bool;
	public function DoesAssetExist(AssetPath: FString): Bool;
	public function DoAssetsExist(AssetPaths: ucpp.Ref<TArray<FString>>): Bool;
	public function DeleteLoadedAssets(AssetsToDelete: ucpp.Ref<TArray<ucpp.Ptr<Object>>>): Bool;
	public function DeleteLoadedAsset(AssetToDelete: ucpp.Ptr<Object>): Bool;
	public function DeleteDirectory(DirectoryPath: FString): Bool;
	public function DeleteAsset(AssetPathToDelete: FString): Bool;
	public function ConsolidateAssets(AssetToConsolidateTo: ucpp.Ptr<Object>, AssetsToConsolidate: ucpp.Ref<TArray<ucpp.Ptr<Object>>>): Bool;
	public function CheckoutLoadedAssets(AssetsToCheckout: ucpp.Ref<TArray<ucpp.Ptr<Object>>>): Bool;
	public function CheckoutLoadedAsset(AssetToCheckout: ucpp.Ptr<Object>): Bool;
	public function CheckoutDirectory(DirectoryPath: FString, bRecursive: Bool): Bool;
	public function CheckoutAsset(AssetToCheckout: FString): Bool;
	public function AddOnExtractAssetFromFile(Delegate: HaxeDelegateProperty<(ucpp.Ref<TArray<FString>>, ucpp.Ref<TArray<AssetData>>) -> Void>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstEditorAssetSubsystem(EditorAssetSubsystem) from EditorAssetSubsystem {
}

@:forward
@:nativeGen
@:native("EditorAssetSubsystem*")
abstract EditorAssetSubsystemPtr(ucpp.Ptr<EditorAssetSubsystem>) from ucpp.Ptr<EditorAssetSubsystem> to ucpp.Ptr<EditorAssetSubsystem>{
	@:from
	public static extern inline function fromValue(v: EditorAssetSubsystem): EditorAssetSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EditorAssetSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}