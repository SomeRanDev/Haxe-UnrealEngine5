// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEnhancedInputDeveloperSettings")
@:include("EnhancedInputDeveloperSettings.h")
@:structAccess
extern class EnhancedInputDeveloperSettings extends DeveloperSettingsBackedByCVars {
	public var DefaultMappingContexts: TArray<DefaultContextSetting>;
	public var DefaultWorldSubsystemMappingContexts: TArray<DefaultContextSetting>;
	public var DefaultWorldInputClass: TSoftClassPtr<Class>;
	public var PlatformSettings: PerPlatformSettings;
	public var bEnableDefaultMappingContexts: Bool;
	public var bShouldOnlyTriggerLastActionInChord: Bool;
	public var bEnableWorldSubsystem: Bool;
	public var bShouldLogAllWorldSubsystemInputs: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstEnhancedInputDeveloperSettings(EnhancedInputDeveloperSettings) from EnhancedInputDeveloperSettings {
	public extern var DefaultMappingContexts(get, never): TArray<DefaultContextSetting>;
	public inline extern function get_DefaultMappingContexts(): TArray<DefaultContextSetting> return this.DefaultMappingContexts;
	public extern var DefaultWorldSubsystemMappingContexts(get, never): TArray<DefaultContextSetting>;
	public inline extern function get_DefaultWorldSubsystemMappingContexts(): TArray<DefaultContextSetting> return this.DefaultWorldSubsystemMappingContexts;
	public extern var DefaultWorldInputClass(get, never): TSoftClassPtr<Class.ConstClass>;
	public inline extern function get_DefaultWorldInputClass(): TSoftClassPtr<Class.ConstClass> return this.DefaultWorldInputClass;
	public extern var PlatformSettings(get, never): PerPlatformSettings;
	public inline extern function get_PlatformSettings(): PerPlatformSettings return this.PlatformSettings;
	public extern var bEnableDefaultMappingContexts(get, never): Bool;
	public inline extern function get_bEnableDefaultMappingContexts(): Bool return this.bEnableDefaultMappingContexts;
	public extern var bShouldOnlyTriggerLastActionInChord(get, never): Bool;
	public inline extern function get_bShouldOnlyTriggerLastActionInChord(): Bool return this.bShouldOnlyTriggerLastActionInChord;
	public extern var bEnableWorldSubsystem(get, never): Bool;
	public inline extern function get_bEnableWorldSubsystem(): Bool return this.bEnableWorldSubsystem;
	public extern var bShouldLogAllWorldSubsystemInputs(get, never): Bool;
	public inline extern function get_bShouldLogAllWorldSubsystemInputs(): Bool return this.bShouldLogAllWorldSubsystemInputs;
}

@:forward
@:nativeGen
@:native("EnhancedInputDeveloperSettings*")
abstract EnhancedInputDeveloperSettingsPtr(cpp.Star<EnhancedInputDeveloperSettings>) from cpp.Star<EnhancedInputDeveloperSettings> to cpp.Star<EnhancedInputDeveloperSettings>{
	@:from
	public static extern inline function fromValue(v: EnhancedInputDeveloperSettings): EnhancedInputDeveloperSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EnhancedInputDeveloperSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}