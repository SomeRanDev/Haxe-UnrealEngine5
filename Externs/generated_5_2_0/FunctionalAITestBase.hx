// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AFunctionalAITestBase")
@:include("FunctionalAITest.h")
@:structAccess
extern class FunctionalAITestBase extends FunctionalTest {
	@:protected public var SpawnLocationRandomizationRange: cpp.Float32;
	@:protected public var SpawnedPawns: TArray<cpp.Star<Pawn>>;
	@:protected public var PendingDelayedSpawns: TArray<PendingDelayedSpawn>;
	@:protected public var CurrentSpawnSetIndex: cpp.Int32;
	@:protected public var CurrentSpawnSetName: FString;
	@:protected public var OnAISpawned: HaxeMulticastSparseDelegateProperty<(cpp.Star<AIController>, cpp.Star<Pawn>) -> Void>;
	@:protected public var OnAllAISPawned: HaxeMulticastSparseDelegateProperty<() -> Void>;
	@:protected public var NavMeshDebugOrigin: Vector;
	@:protected public var NavMeshDebugExtent: Vector;
	@:protected public var bWaitForNavMesh: Bool;
	@:protected public var bDebugNavMeshOnTimeout: Bool;

	public function IsOneOfSpawnedPawns(Actor: cpp.Star<Actor>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstFunctionalAITestBase(FunctionalAITestBase) from FunctionalAITestBase {
}

@:forward
@:nativeGen
@:native("FunctionalAITestBase*")
abstract FunctionalAITestBasePtr(cpp.Star<FunctionalAITestBase>) from cpp.Star<FunctionalAITestBase> to cpp.Star<FunctionalAITestBase>{
	@:from
	public static extern inline function fromValue(v: FunctionalAITestBase): FunctionalAITestBasePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): FunctionalAITestBase {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}