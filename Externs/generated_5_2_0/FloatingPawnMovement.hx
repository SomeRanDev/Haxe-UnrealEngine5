// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFloatingPawnMovement")
@:include("GameFramework/FloatingPawnMovement.h")
@:valueType
extern class FloatingPawnMovement extends PawnMovementComp {
	public var MaxSpeed: ucpp.num.Float32;
	public var Acceleration: ucpp.num.Float32;
	public var Deceleration: ucpp.num.Float32;
	public var TurningBoost: ucpp.num.Float32;
	@:protected public var bPositionCorrected: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstFloatingPawnMovement(FloatingPawnMovement) from FloatingPawnMovement {
	public extern var MaxSpeed(get, never): ucpp.num.Float32;
	public inline extern function get_MaxSpeed(): ucpp.num.Float32 return this.MaxSpeed;
	public extern var Acceleration(get, never): ucpp.num.Float32;
	public inline extern function get_Acceleration(): ucpp.num.Float32 return this.Acceleration;
	public extern var Deceleration(get, never): ucpp.num.Float32;
	public inline extern function get_Deceleration(): ucpp.num.Float32 return this.Deceleration;
	public extern var TurningBoost(get, never): ucpp.num.Float32;
	public inline extern function get_TurningBoost(): ucpp.num.Float32 return this.TurningBoost;
}

@:forward
@:nativeGen
@:native("FloatingPawnMovement*")
abstract FloatingPawnMovementPtr(ucpp.Ptr<FloatingPawnMovement>) from ucpp.Ptr<FloatingPawnMovement> to ucpp.Ptr<FloatingPawnMovement>{
	@:from
	public static extern inline function fromValue(v: FloatingPawnMovement): FloatingPawnMovementPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): FloatingPawnMovement {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}