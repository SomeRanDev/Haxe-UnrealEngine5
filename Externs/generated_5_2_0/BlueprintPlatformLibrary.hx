// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBlueprintPlatformLibrary")
@:include("Kismet/BlueprintPlatformLibrary.h")
@:valueType
extern class BlueprintPlatformLibrary extends BlueprintFunctionLibrary {
	public function SetAllowedDeviceOrientation(NewAllowedDeviceOrientation: TEnumAsByte<EScreenOrientation>): Void;
	public function ScheduleLocalNotificationFromNow(inSecondsFromNow: ucpp.num.Int32, Title: ucpp.Ref<FText>, Body: ucpp.Ref<FText>, Action: ucpp.Ref<FText>, ActivationEvent: FString): ucpp.num.Int32;
	public function ScheduleLocalNotificationBadgeFromNow(inSecondsFromNow: ucpp.num.Int32, ActivationEvent: FString): Void;
	public function ScheduleLocalNotificationBadgeAtTime(FireDateTime: ucpp.Ref<DateTime>, LocalTime: Bool, ActivationEvent: FString): ucpp.num.Int32;
	public function ScheduleLocalNotificationAtTime(FireDateTime: ucpp.Ref<DateTime>, LocalTime: Bool, Title: ucpp.Ref<FText>, Body: ucpp.Ref<FText>, Action: ucpp.Ref<FText>, ActivationEvent: FString): ucpp.num.Int32;
	public function GetLaunchNotification(NotificationLaunchedApp: ucpp.Ref<Bool>, ActivationEvent: ucpp.Ref<FString>, FireDate: ucpp.Ref<ucpp.num.Int32>): Void;
	public function GetDeviceOrientation(): TEnumAsByte<EScreenOrientation>;
	public function GetAllowedDeviceOrientation(): TEnumAsByte<EScreenOrientation>;
	public function ClearAllLocalNotifications(): Void;
	public function CancelLocalNotificationById(NotificationId: ucpp.num.Int32): Void;
	public function CancelLocalNotification(ActivationEvent: FString): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstBlueprintPlatformLibrary(BlueprintPlatformLibrary) from BlueprintPlatformLibrary {
}

@:forward
@:nativeGen
@:native("BlueprintPlatformLibrary*")
abstract BlueprintPlatformLibraryPtr(ucpp.Ptr<BlueprintPlatformLibrary>) from ucpp.Ptr<BlueprintPlatformLibrary> to ucpp.Ptr<BlueprintPlatformLibrary>{
	@:from
	public static extern inline function fromValue(v: BlueprintPlatformLibrary): BlueprintPlatformLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BlueprintPlatformLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}