// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBakeRenderCaptureResults")
@:include("BakeRenderCaptureTool.h")
@:structAccess
extern class BakeRenderCaptureResults extends InteractiveToolPropertySet {
	public var BaseColorMap: cpp.Star<Texture2D>;
	public var NormalMap: cpp.Star<Texture2D>;
	public var PackedMRSMap: cpp.Star<Texture2D>;
	public var MetallicMap: cpp.Star<Texture2D>;
	public var RoughnessMap: cpp.Star<Texture2D>;
	public var SpecularMap: cpp.Star<Texture2D>;
	public var EmissiveMap: cpp.Star<Texture2D>;
	public var OpacityMap: cpp.Star<Texture2D>;
	public var SubsurfaceColorMap: cpp.Star<Texture2D>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstBakeRenderCaptureResults(BakeRenderCaptureResults) from BakeRenderCaptureResults {
	public extern var BaseColorMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_BaseColorMap(): cpp.Star<Texture2D.ConstTexture2D> return this.BaseColorMap;
	public extern var NormalMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_NormalMap(): cpp.Star<Texture2D.ConstTexture2D> return this.NormalMap;
	public extern var PackedMRSMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_PackedMRSMap(): cpp.Star<Texture2D.ConstTexture2D> return this.PackedMRSMap;
	public extern var MetallicMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_MetallicMap(): cpp.Star<Texture2D.ConstTexture2D> return this.MetallicMap;
	public extern var RoughnessMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_RoughnessMap(): cpp.Star<Texture2D.ConstTexture2D> return this.RoughnessMap;
	public extern var SpecularMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_SpecularMap(): cpp.Star<Texture2D.ConstTexture2D> return this.SpecularMap;
	public extern var EmissiveMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_EmissiveMap(): cpp.Star<Texture2D.ConstTexture2D> return this.EmissiveMap;
	public extern var OpacityMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_OpacityMap(): cpp.Star<Texture2D.ConstTexture2D> return this.OpacityMap;
	public extern var SubsurfaceColorMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_SubsurfaceColorMap(): cpp.Star<Texture2D.ConstTexture2D> return this.SubsurfaceColorMap;
}

@:forward
@:nativeGen
@:native("BakeRenderCaptureResults*")
abstract BakeRenderCaptureResultsPtr(cpp.Star<BakeRenderCaptureResults>) from cpp.Star<BakeRenderCaptureResults> to cpp.Star<BakeRenderCaptureResults>{
	@:from
	public static extern inline function fromValue(v: BakeRenderCaptureResults): BakeRenderCaptureResultsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BakeRenderCaptureResults {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}