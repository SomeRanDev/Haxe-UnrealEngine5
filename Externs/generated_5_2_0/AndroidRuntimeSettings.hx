// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAndroidRuntimeSettings")
@:include("AndroidRuntimeSettings.h")
@:structAccess
extern class AndroidRuntimeSettings extends Object {
	public var PackageName: FString;
	public var StoreVersion: cpp.Int32;
	public var StoreVersionOffsetArm64: cpp.Int32;
	public var StoreVersionOffsetX8664: cpp.Int32;
	public var ApplicationDisplayName: FString;
	public var VersionDisplayName: FString;
	public var MinSDKVersion: cpp.Int32;
	public var TargetSDKVersion: cpp.Int32;
	public var InstallLocation: TEnumAsByte<EAndroidInstallLocation>;
	public var bEnableLint: Bool;
	public var bPackageDataInsideApk: Bool;
	public var bCreateAllPlatformsInstall: Bool;
	public var bDisableVerifyOBBOnStartUp: Bool;
	public var bForceSmallOBBFiles: Bool;
	public var bAllowLargeOBBFiles: Bool;
	public var bAllowPatchOBBFile: Bool;
	public var bAllowOverflowOBBFiles: Bool;
	public var bUseExternalFilesDir: Bool;
	public var bPublicLogFiles: Bool;
	public var Orientation: TEnumAsByte<EAndroidScreenOrientation>;
	public var MaxAspectRatio: cpp.Float32;
	public var bUseDisplayCutout: Bool;
	public var bRestoreNotificationsOnReboot: Bool;
	public var bFullScreen: Bool;
	public var bEnableNewKeyboard: Bool;
	public var DepthBufferPreference: TEnumAsByte<EAndroidDepthBufferPreference>;
	public var bValidateTextureFormats: Bool;
	public var bForceCompressNativeLibs: Bool;
	public var bEnableAdvancedBinaryCompression: Bool;
	public var bEnableBundle: Bool;
	public var bEnableUniversalAPK: Bool;
	public var bBundleABISplit: Bool;
	public var bBundleLanguageSplit: Bool;
	public var bBundleDensitySplit: Bool;
	public var ExtraManifestNodeTags: TArray<FString>;
	public var ExtraApplicationNodeTags: TArray<FString>;
	public var ExtraApplicationSettings: FString;
	public var ExtraActivityNodeTags: TArray<FString>;
	public var ExtraActivitySettings: FString;
	public var ExtraPermissions: TArray<FString>;
	public var bAndroidVoiceEnabled: Bool;
	public var bEnableMulticastSupport: Bool;
	public var PackageForOculusMobile: TArray<TEnumAsByte<EOculusMobileDevice>>;
	public var bRemoveOSIG: Bool;
	public var KeyStore: FString;
	public var KeyAlias: FString;
	public var KeyStorePassword: FString;
	public var KeyPassword: FString;
	public var bBuildForArm64: Bool;
	public var bBuildForX8664: Bool;
	public var bBuildForES31: Bool;
	public var bSupportsVulkan: Bool;
	public var bSupportsVulkanSM5: Bool;
	public var DebugVulkanLayerDirectory: DirectoryPath;
	public var DebugVulkanDeviceLayers: TArray<FString>;
	public var DebugVulkanInstanceLayers: TArray<FString>;
	public var bAndroidOpenGLSupportsBackbufferSampling: Bool;
	public var bDetectVulkanByDefault: Bool;
	public var bBuildWithHiddenSymbolVisibility: Bool;
	public var bDisableStackProtector: Bool;
	public var bDisableLibCppSharedDependencyValidation: Bool;
	public var bSaveSymbols: Bool;
	public var bStripShaderReflection: Bool;
	public var bEnableGooglePlaySupport: Bool;
	public var bUseGetAccounts: Bool;
	public var GamesAppID: FString;
	public var AchievementMap: TArray<GooglePlayAchievementMapping>;
	public var LeaderboardMap: TArray<GooglePlayLeaderboardMapping>;
	public var bEnableSnapshots: Bool;
	public var bSupportAdMob: Bool;
	public var AdMobAdUnitID: FString;
	public var AdMobAdUnitIDs: TArray<FString>;
	public var GooglePlayLicenseKey: FString;
	public var GCMClientSenderID: FString;
	public var bShowLaunchImage: Bool;
	public var bAllowIMU: Bool;
	public var bAllowControllers: Bool;
	public var bBlockAndroidKeysOnControllers: Bool;
	public var bControllersBlockDeviceFeedback: Bool;
	public var AndroidAudio: TEnumAsByte<EAndroidAudio>;
	public var AudioSampleRate: cpp.Int32;
	public var AudioCallbackBufferFrameSize: cpp.Int32;
	public var AudioNumBuffersToEnqueue: cpp.Int32;
	public var AudioMaxChannels: cpp.Int32;
	public var AudioNumSourceWorkers: cpp.Int32;
	public var SpatializationPlugin: FString;
	public var SourceDataOverridePlugin: FString;
	public var ReverbPlugin: FString;
	public var OcclusionPlugin: FString;
	public var CompressionOverrides: PlatformRuntimeAudioCompressionOverrides;
	public var CacheSizeKB: cpp.Int32;
	public var MaxChunkSizeOverrideKB: cpp.Int32;
	public var bResampleForDevice: Bool;
	public var SoundCueCookQualityIndex: cpp.Int32;
	public var MaxSampleRate: cpp.Float32;
	public var HighSampleRate: cpp.Float32;
	public var MedSampleRate: cpp.Float32;
	public var LowSampleRate: cpp.Float32;
	public var MinSampleRate: cpp.Float32;
	public var CompressionQualityModifier: cpp.Float32;
	public var AutoStreamingThreshold: cpp.Float32;
	public var AndroidGraphicsDebugger: TEnumAsByte<EAndroidGraphicsDebugger>;
	public var MaliGraphicsDebuggerPath: DirectoryPath;
	public var bEnableMaliPerfCounters: Bool;
	public var bMultiTargetFormat_ETC2: Bool;
	public var bMultiTargetFormat_DXT: Bool;
	public var bMultiTargetFormat_ASTC: Bool;
	public var TextureFormatPriority_ETC2: cpp.Float32;
	public var TextureFormatPriority_DXT: cpp.Float32;
	public var TextureFormatPriority_ASTC: cpp.Float32;
	public var SDKAPILevelOverride: FString;
	public var NDKAPILevelOverride: FString;
	public var BuildToolsOverride: FString;
	public var bStreamLandscapeMeshLODs: Bool;
	public var bEnableDomStorage: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAndroidRuntimeSettings(AndroidRuntimeSettings) from AndroidRuntimeSettings {
	public extern var PackageName(get, never): FString;
	public inline extern function get_PackageName(): FString return this.PackageName;
	public extern var StoreVersion(get, never): cpp.Int32;
	public inline extern function get_StoreVersion(): cpp.Int32 return this.StoreVersion;
	public extern var StoreVersionOffsetArm64(get, never): cpp.Int32;
	public inline extern function get_StoreVersionOffsetArm64(): cpp.Int32 return this.StoreVersionOffsetArm64;
	public extern var StoreVersionOffsetX8664(get, never): cpp.Int32;
	public inline extern function get_StoreVersionOffsetX8664(): cpp.Int32 return this.StoreVersionOffsetX8664;
	public extern var ApplicationDisplayName(get, never): FString;
	public inline extern function get_ApplicationDisplayName(): FString return this.ApplicationDisplayName;
	public extern var VersionDisplayName(get, never): FString;
	public inline extern function get_VersionDisplayName(): FString return this.VersionDisplayName;
	public extern var MinSDKVersion(get, never): cpp.Int32;
	public inline extern function get_MinSDKVersion(): cpp.Int32 return this.MinSDKVersion;
	public extern var TargetSDKVersion(get, never): cpp.Int32;
	public inline extern function get_TargetSDKVersion(): cpp.Int32 return this.TargetSDKVersion;
	public extern var InstallLocation(get, never): TEnumAsByte<EAndroidInstallLocation>;
	public inline extern function get_InstallLocation(): TEnumAsByte<EAndroidInstallLocation> return this.InstallLocation;
	public extern var bEnableLint(get, never): Bool;
	public inline extern function get_bEnableLint(): Bool return this.bEnableLint;
	public extern var bPackageDataInsideApk(get, never): Bool;
	public inline extern function get_bPackageDataInsideApk(): Bool return this.bPackageDataInsideApk;
	public extern var bCreateAllPlatformsInstall(get, never): Bool;
	public inline extern function get_bCreateAllPlatformsInstall(): Bool return this.bCreateAllPlatformsInstall;
	public extern var bDisableVerifyOBBOnStartUp(get, never): Bool;
	public inline extern function get_bDisableVerifyOBBOnStartUp(): Bool return this.bDisableVerifyOBBOnStartUp;
	public extern var bForceSmallOBBFiles(get, never): Bool;
	public inline extern function get_bForceSmallOBBFiles(): Bool return this.bForceSmallOBBFiles;
	public extern var bAllowLargeOBBFiles(get, never): Bool;
	public inline extern function get_bAllowLargeOBBFiles(): Bool return this.bAllowLargeOBBFiles;
	public extern var bAllowPatchOBBFile(get, never): Bool;
	public inline extern function get_bAllowPatchOBBFile(): Bool return this.bAllowPatchOBBFile;
	public extern var bAllowOverflowOBBFiles(get, never): Bool;
	public inline extern function get_bAllowOverflowOBBFiles(): Bool return this.bAllowOverflowOBBFiles;
	public extern var bUseExternalFilesDir(get, never): Bool;
	public inline extern function get_bUseExternalFilesDir(): Bool return this.bUseExternalFilesDir;
	public extern var bPublicLogFiles(get, never): Bool;
	public inline extern function get_bPublicLogFiles(): Bool return this.bPublicLogFiles;
	public extern var Orientation(get, never): TEnumAsByte<EAndroidScreenOrientation>;
	public inline extern function get_Orientation(): TEnumAsByte<EAndroidScreenOrientation> return this.Orientation;
	public extern var MaxAspectRatio(get, never): cpp.Float32;
	public inline extern function get_MaxAspectRatio(): cpp.Float32 return this.MaxAspectRatio;
	public extern var bUseDisplayCutout(get, never): Bool;
	public inline extern function get_bUseDisplayCutout(): Bool return this.bUseDisplayCutout;
	public extern var bRestoreNotificationsOnReboot(get, never): Bool;
	public inline extern function get_bRestoreNotificationsOnReboot(): Bool return this.bRestoreNotificationsOnReboot;
	public extern var bFullScreen(get, never): Bool;
	public inline extern function get_bFullScreen(): Bool return this.bFullScreen;
	public extern var bEnableNewKeyboard(get, never): Bool;
	public inline extern function get_bEnableNewKeyboard(): Bool return this.bEnableNewKeyboard;
	public extern var DepthBufferPreference(get, never): TEnumAsByte<EAndroidDepthBufferPreference>;
	public inline extern function get_DepthBufferPreference(): TEnumAsByte<EAndroidDepthBufferPreference> return this.DepthBufferPreference;
	public extern var bValidateTextureFormats(get, never): Bool;
	public inline extern function get_bValidateTextureFormats(): Bool return this.bValidateTextureFormats;
	public extern var bForceCompressNativeLibs(get, never): Bool;
	public inline extern function get_bForceCompressNativeLibs(): Bool return this.bForceCompressNativeLibs;
	public extern var bEnableAdvancedBinaryCompression(get, never): Bool;
	public inline extern function get_bEnableAdvancedBinaryCompression(): Bool return this.bEnableAdvancedBinaryCompression;
	public extern var bEnableBundle(get, never): Bool;
	public inline extern function get_bEnableBundle(): Bool return this.bEnableBundle;
	public extern var bEnableUniversalAPK(get, never): Bool;
	public inline extern function get_bEnableUniversalAPK(): Bool return this.bEnableUniversalAPK;
	public extern var bBundleABISplit(get, never): Bool;
	public inline extern function get_bBundleABISplit(): Bool return this.bBundleABISplit;
	public extern var bBundleLanguageSplit(get, never): Bool;
	public inline extern function get_bBundleLanguageSplit(): Bool return this.bBundleLanguageSplit;
	public extern var bBundleDensitySplit(get, never): Bool;
	public inline extern function get_bBundleDensitySplit(): Bool return this.bBundleDensitySplit;
	public extern var ExtraManifestNodeTags(get, never): TArray<FString>;
	public inline extern function get_ExtraManifestNodeTags(): TArray<FString> return this.ExtraManifestNodeTags;
	public extern var ExtraApplicationNodeTags(get, never): TArray<FString>;
	public inline extern function get_ExtraApplicationNodeTags(): TArray<FString> return this.ExtraApplicationNodeTags;
	public extern var ExtraApplicationSettings(get, never): FString;
	public inline extern function get_ExtraApplicationSettings(): FString return this.ExtraApplicationSettings;
	public extern var ExtraActivityNodeTags(get, never): TArray<FString>;
	public inline extern function get_ExtraActivityNodeTags(): TArray<FString> return this.ExtraActivityNodeTags;
	public extern var ExtraActivitySettings(get, never): FString;
	public inline extern function get_ExtraActivitySettings(): FString return this.ExtraActivitySettings;
	public extern var ExtraPermissions(get, never): TArray<FString>;
	public inline extern function get_ExtraPermissions(): TArray<FString> return this.ExtraPermissions;
	public extern var bAndroidVoiceEnabled(get, never): Bool;
	public inline extern function get_bAndroidVoiceEnabled(): Bool return this.bAndroidVoiceEnabled;
	public extern var bEnableMulticastSupport(get, never): Bool;
	public inline extern function get_bEnableMulticastSupport(): Bool return this.bEnableMulticastSupport;
	public extern var PackageForOculusMobile(get, never): TArray<TEnumAsByte<EOculusMobileDevice>>;
	public inline extern function get_PackageForOculusMobile(): TArray<TEnumAsByte<EOculusMobileDevice>> return this.PackageForOculusMobile;
	public extern var bRemoveOSIG(get, never): Bool;
	public inline extern function get_bRemoveOSIG(): Bool return this.bRemoveOSIG;
	public extern var KeyStore(get, never): FString;
	public inline extern function get_KeyStore(): FString return this.KeyStore;
	public extern var KeyAlias(get, never): FString;
	public inline extern function get_KeyAlias(): FString return this.KeyAlias;
	public extern var KeyStorePassword(get, never): FString;
	public inline extern function get_KeyStorePassword(): FString return this.KeyStorePassword;
	public extern var KeyPassword(get, never): FString;
	public inline extern function get_KeyPassword(): FString return this.KeyPassword;
	public extern var bBuildForArm64(get, never): Bool;
	public inline extern function get_bBuildForArm64(): Bool return this.bBuildForArm64;
	public extern var bBuildForX8664(get, never): Bool;
	public inline extern function get_bBuildForX8664(): Bool return this.bBuildForX8664;
	public extern var bBuildForES31(get, never): Bool;
	public inline extern function get_bBuildForES31(): Bool return this.bBuildForES31;
	public extern var bSupportsVulkan(get, never): Bool;
	public inline extern function get_bSupportsVulkan(): Bool return this.bSupportsVulkan;
	public extern var bSupportsVulkanSM5(get, never): Bool;
	public inline extern function get_bSupportsVulkanSM5(): Bool return this.bSupportsVulkanSM5;
	public extern var DebugVulkanLayerDirectory(get, never): DirectoryPath;
	public inline extern function get_DebugVulkanLayerDirectory(): DirectoryPath return this.DebugVulkanLayerDirectory;
	public extern var DebugVulkanDeviceLayers(get, never): TArray<FString>;
	public inline extern function get_DebugVulkanDeviceLayers(): TArray<FString> return this.DebugVulkanDeviceLayers;
	public extern var DebugVulkanInstanceLayers(get, never): TArray<FString>;
	public inline extern function get_DebugVulkanInstanceLayers(): TArray<FString> return this.DebugVulkanInstanceLayers;
	public extern var bAndroidOpenGLSupportsBackbufferSampling(get, never): Bool;
	public inline extern function get_bAndroidOpenGLSupportsBackbufferSampling(): Bool return this.bAndroidOpenGLSupportsBackbufferSampling;
	public extern var bDetectVulkanByDefault(get, never): Bool;
	public inline extern function get_bDetectVulkanByDefault(): Bool return this.bDetectVulkanByDefault;
	public extern var bBuildWithHiddenSymbolVisibility(get, never): Bool;
	public inline extern function get_bBuildWithHiddenSymbolVisibility(): Bool return this.bBuildWithHiddenSymbolVisibility;
	public extern var bDisableStackProtector(get, never): Bool;
	public inline extern function get_bDisableStackProtector(): Bool return this.bDisableStackProtector;
	public extern var bDisableLibCppSharedDependencyValidation(get, never): Bool;
	public inline extern function get_bDisableLibCppSharedDependencyValidation(): Bool return this.bDisableLibCppSharedDependencyValidation;
	public extern var bSaveSymbols(get, never): Bool;
	public inline extern function get_bSaveSymbols(): Bool return this.bSaveSymbols;
	public extern var bStripShaderReflection(get, never): Bool;
	public inline extern function get_bStripShaderReflection(): Bool return this.bStripShaderReflection;
	public extern var bEnableGooglePlaySupport(get, never): Bool;
	public inline extern function get_bEnableGooglePlaySupport(): Bool return this.bEnableGooglePlaySupport;
	public extern var bUseGetAccounts(get, never): Bool;
	public inline extern function get_bUseGetAccounts(): Bool return this.bUseGetAccounts;
	public extern var GamesAppID(get, never): FString;
	public inline extern function get_GamesAppID(): FString return this.GamesAppID;
	public extern var AchievementMap(get, never): TArray<GooglePlayAchievementMapping>;
	public inline extern function get_AchievementMap(): TArray<GooglePlayAchievementMapping> return this.AchievementMap;
	public extern var LeaderboardMap(get, never): TArray<GooglePlayLeaderboardMapping>;
	public inline extern function get_LeaderboardMap(): TArray<GooglePlayLeaderboardMapping> return this.LeaderboardMap;
	public extern var bEnableSnapshots(get, never): Bool;
	public inline extern function get_bEnableSnapshots(): Bool return this.bEnableSnapshots;
	public extern var bSupportAdMob(get, never): Bool;
	public inline extern function get_bSupportAdMob(): Bool return this.bSupportAdMob;
	public extern var AdMobAdUnitID(get, never): FString;
	public inline extern function get_AdMobAdUnitID(): FString return this.AdMobAdUnitID;
	public extern var AdMobAdUnitIDs(get, never): TArray<FString>;
	public inline extern function get_AdMobAdUnitIDs(): TArray<FString> return this.AdMobAdUnitIDs;
	public extern var GooglePlayLicenseKey(get, never): FString;
	public inline extern function get_GooglePlayLicenseKey(): FString return this.GooglePlayLicenseKey;
	public extern var GCMClientSenderID(get, never): FString;
	public inline extern function get_GCMClientSenderID(): FString return this.GCMClientSenderID;
	public extern var bShowLaunchImage(get, never): Bool;
	public inline extern function get_bShowLaunchImage(): Bool return this.bShowLaunchImage;
	public extern var bAllowIMU(get, never): Bool;
	public inline extern function get_bAllowIMU(): Bool return this.bAllowIMU;
	public extern var bAllowControllers(get, never): Bool;
	public inline extern function get_bAllowControllers(): Bool return this.bAllowControllers;
	public extern var bBlockAndroidKeysOnControllers(get, never): Bool;
	public inline extern function get_bBlockAndroidKeysOnControllers(): Bool return this.bBlockAndroidKeysOnControllers;
	public extern var bControllersBlockDeviceFeedback(get, never): Bool;
	public inline extern function get_bControllersBlockDeviceFeedback(): Bool return this.bControllersBlockDeviceFeedback;
	public extern var AndroidAudio(get, never): TEnumAsByte<EAndroidAudio>;
	public inline extern function get_AndroidAudio(): TEnumAsByte<EAndroidAudio> return this.AndroidAudio;
	public extern var AudioSampleRate(get, never): cpp.Int32;
	public inline extern function get_AudioSampleRate(): cpp.Int32 return this.AudioSampleRate;
	public extern var AudioCallbackBufferFrameSize(get, never): cpp.Int32;
	public inline extern function get_AudioCallbackBufferFrameSize(): cpp.Int32 return this.AudioCallbackBufferFrameSize;
	public extern var AudioNumBuffersToEnqueue(get, never): cpp.Int32;
	public inline extern function get_AudioNumBuffersToEnqueue(): cpp.Int32 return this.AudioNumBuffersToEnqueue;
	public extern var AudioMaxChannels(get, never): cpp.Int32;
	public inline extern function get_AudioMaxChannels(): cpp.Int32 return this.AudioMaxChannels;
	public extern var AudioNumSourceWorkers(get, never): cpp.Int32;
	public inline extern function get_AudioNumSourceWorkers(): cpp.Int32 return this.AudioNumSourceWorkers;
	public extern var SpatializationPlugin(get, never): FString;
	public inline extern function get_SpatializationPlugin(): FString return this.SpatializationPlugin;
	public extern var SourceDataOverridePlugin(get, never): FString;
	public inline extern function get_SourceDataOverridePlugin(): FString return this.SourceDataOverridePlugin;
	public extern var ReverbPlugin(get, never): FString;
	public inline extern function get_ReverbPlugin(): FString return this.ReverbPlugin;
	public extern var OcclusionPlugin(get, never): FString;
	public inline extern function get_OcclusionPlugin(): FString return this.OcclusionPlugin;
	public extern var CompressionOverrides(get, never): PlatformRuntimeAudioCompressionOverrides;
	public inline extern function get_CompressionOverrides(): PlatformRuntimeAudioCompressionOverrides return this.CompressionOverrides;
	public extern var CacheSizeKB(get, never): cpp.Int32;
	public inline extern function get_CacheSizeKB(): cpp.Int32 return this.CacheSizeKB;
	public extern var MaxChunkSizeOverrideKB(get, never): cpp.Int32;
	public inline extern function get_MaxChunkSizeOverrideKB(): cpp.Int32 return this.MaxChunkSizeOverrideKB;
	public extern var bResampleForDevice(get, never): Bool;
	public inline extern function get_bResampleForDevice(): Bool return this.bResampleForDevice;
	public extern var SoundCueCookQualityIndex(get, never): cpp.Int32;
	public inline extern function get_SoundCueCookQualityIndex(): cpp.Int32 return this.SoundCueCookQualityIndex;
	public extern var MaxSampleRate(get, never): cpp.Float32;
	public inline extern function get_MaxSampleRate(): cpp.Float32 return this.MaxSampleRate;
	public extern var HighSampleRate(get, never): cpp.Float32;
	public inline extern function get_HighSampleRate(): cpp.Float32 return this.HighSampleRate;
	public extern var MedSampleRate(get, never): cpp.Float32;
	public inline extern function get_MedSampleRate(): cpp.Float32 return this.MedSampleRate;
	public extern var LowSampleRate(get, never): cpp.Float32;
	public inline extern function get_LowSampleRate(): cpp.Float32 return this.LowSampleRate;
	public extern var MinSampleRate(get, never): cpp.Float32;
	public inline extern function get_MinSampleRate(): cpp.Float32 return this.MinSampleRate;
	public extern var CompressionQualityModifier(get, never): cpp.Float32;
	public inline extern function get_CompressionQualityModifier(): cpp.Float32 return this.CompressionQualityModifier;
	public extern var AutoStreamingThreshold(get, never): cpp.Float32;
	public inline extern function get_AutoStreamingThreshold(): cpp.Float32 return this.AutoStreamingThreshold;
	public extern var AndroidGraphicsDebugger(get, never): TEnumAsByte<EAndroidGraphicsDebugger>;
	public inline extern function get_AndroidGraphicsDebugger(): TEnumAsByte<EAndroidGraphicsDebugger> return this.AndroidGraphicsDebugger;
	public extern var MaliGraphicsDebuggerPath(get, never): DirectoryPath;
	public inline extern function get_MaliGraphicsDebuggerPath(): DirectoryPath return this.MaliGraphicsDebuggerPath;
	public extern var bEnableMaliPerfCounters(get, never): Bool;
	public inline extern function get_bEnableMaliPerfCounters(): Bool return this.bEnableMaliPerfCounters;
	public extern var bMultiTargetFormat_ETC2(get, never): Bool;
	public inline extern function get_bMultiTargetFormat_ETC2(): Bool return this.bMultiTargetFormat_ETC2;
	public extern var bMultiTargetFormat_DXT(get, never): Bool;
	public inline extern function get_bMultiTargetFormat_DXT(): Bool return this.bMultiTargetFormat_DXT;
	public extern var bMultiTargetFormat_ASTC(get, never): Bool;
	public inline extern function get_bMultiTargetFormat_ASTC(): Bool return this.bMultiTargetFormat_ASTC;
	public extern var TextureFormatPriority_ETC2(get, never): cpp.Float32;
	public inline extern function get_TextureFormatPriority_ETC2(): cpp.Float32 return this.TextureFormatPriority_ETC2;
	public extern var TextureFormatPriority_DXT(get, never): cpp.Float32;
	public inline extern function get_TextureFormatPriority_DXT(): cpp.Float32 return this.TextureFormatPriority_DXT;
	public extern var TextureFormatPriority_ASTC(get, never): cpp.Float32;
	public inline extern function get_TextureFormatPriority_ASTC(): cpp.Float32 return this.TextureFormatPriority_ASTC;
	public extern var SDKAPILevelOverride(get, never): FString;
	public inline extern function get_SDKAPILevelOverride(): FString return this.SDKAPILevelOverride;
	public extern var NDKAPILevelOverride(get, never): FString;
	public inline extern function get_NDKAPILevelOverride(): FString return this.NDKAPILevelOverride;
	public extern var BuildToolsOverride(get, never): FString;
	public inline extern function get_BuildToolsOverride(): FString return this.BuildToolsOverride;
	public extern var bStreamLandscapeMeshLODs(get, never): Bool;
	public inline extern function get_bStreamLandscapeMeshLODs(): Bool return this.bStreamLandscapeMeshLODs;
	public extern var bEnableDomStorage(get, never): Bool;
	public inline extern function get_bEnableDomStorage(): Bool return this.bEnableDomStorage;
}

@:forward
@:nativeGen
@:native("AndroidRuntimeSettings*")
abstract AndroidRuntimeSettingsPtr(cpp.Star<AndroidRuntimeSettings>) from cpp.Star<AndroidRuntimeSettings> to cpp.Star<AndroidRuntimeSettings>{
	@:from
	public static extern inline function fromValue(v: AndroidRuntimeSettings): AndroidRuntimeSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AndroidRuntimeSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}