// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URemoveOccludedTrianglesToolProperties")
@:include("RemoveOccludedTrianglesTool.h")
@:valueType
extern class RemoveOccludedTrianglesToolProperties extends InteractiveToolPropertySet {
	public var OcclusionTestMethod: EOcclusionCalculationUIMode;
	public var TriangleSampling: EOcclusionTriangleSamplingUIMode;
	public var WindingIsoValue: ucpp.num.Float64;
	public var AddRandomRays: ucpp.num.Int32;
	public var AddTriangleSamples: ucpp.num.Int32;
	public var bOnlySelfOcclude: Bool;
	public var ShrinkRemoval: ucpp.num.Int32;
	public var MinAreaIsland: ucpp.num.Float64;
	public var MinTriCountIsland: ucpp.num.Int32;
	public var Action: EOccludedAction;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstRemoveOccludedTrianglesToolProperties(RemoveOccludedTrianglesToolProperties) from RemoveOccludedTrianglesToolProperties {
	public extern var OcclusionTestMethod(get, never): EOcclusionCalculationUIMode;
	public inline extern function get_OcclusionTestMethod(): EOcclusionCalculationUIMode return this.OcclusionTestMethod;
	public extern var TriangleSampling(get, never): EOcclusionTriangleSamplingUIMode;
	public inline extern function get_TriangleSampling(): EOcclusionTriangleSamplingUIMode return this.TriangleSampling;
	public extern var WindingIsoValue(get, never): ucpp.num.Float64;
	public inline extern function get_WindingIsoValue(): ucpp.num.Float64 return this.WindingIsoValue;
	public extern var AddRandomRays(get, never): ucpp.num.Int32;
	public inline extern function get_AddRandomRays(): ucpp.num.Int32 return this.AddRandomRays;
	public extern var AddTriangleSamples(get, never): ucpp.num.Int32;
	public inline extern function get_AddTriangleSamples(): ucpp.num.Int32 return this.AddTriangleSamples;
	public extern var bOnlySelfOcclude(get, never): Bool;
	public inline extern function get_bOnlySelfOcclude(): Bool return this.bOnlySelfOcclude;
	public extern var ShrinkRemoval(get, never): ucpp.num.Int32;
	public inline extern function get_ShrinkRemoval(): ucpp.num.Int32 return this.ShrinkRemoval;
	public extern var MinAreaIsland(get, never): ucpp.num.Float64;
	public inline extern function get_MinAreaIsland(): ucpp.num.Float64 return this.MinAreaIsland;
	public extern var MinTriCountIsland(get, never): ucpp.num.Int32;
	public inline extern function get_MinTriCountIsland(): ucpp.num.Int32 return this.MinTriCountIsland;
	public extern var Action(get, never): EOccludedAction;
	public inline extern function get_Action(): EOccludedAction return this.Action;
}

@:forward
@:nativeGen
@:native("RemoveOccludedTrianglesToolProperties*")
abstract RemoveOccludedTrianglesToolPropertiesPtr(ucpp.Ptr<RemoveOccludedTrianglesToolProperties>) from ucpp.Ptr<RemoveOccludedTrianglesToolProperties> to ucpp.Ptr<RemoveOccludedTrianglesToolProperties>{
	@:from
	public static extern inline function fromValue(v: RemoveOccludedTrianglesToolProperties): RemoveOccludedTrianglesToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RemoveOccludedTrianglesToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}