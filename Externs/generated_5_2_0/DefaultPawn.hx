// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ADefaultPawn")
@:include("GameFramework/DefaultPawn.h")
@:structAccess
extern class DefaultPawn extends Pawn {
	public var BaseTurnRate: cpp.Float32;
	public var BaseLookUpRate: cpp.Float32;
	@:protected public var MovementComponent: cpp.Star<PawnMovementComp>;
	private var CollisionComponent: cpp.Star<SphereComp>;
	private var MeshComponent: cpp.Star<StaticMeshComp>;
	public var bAddDefaultMovementBindings: Bool;

	public function TurnAtRate(Rate: cpp.Float32): Void;
	public function MoveUp_World(Val: cpp.Float32): Void;
	public function MoveRight(Val: cpp.Float32): Void;
	public function MoveForward(Val: cpp.Float32): Void;
	public function LookUpAtRate(Rate: cpp.Float32): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstDefaultPawn(DefaultPawn) from DefaultPawn {
	public extern var BaseTurnRate(get, never): cpp.Float32;
	public inline extern function get_BaseTurnRate(): cpp.Float32 return this.BaseTurnRate;
	public extern var BaseLookUpRate(get, never): cpp.Float32;
	public inline extern function get_BaseLookUpRate(): cpp.Float32 return this.BaseLookUpRate;
	public extern var bAddDefaultMovementBindings(get, never): Bool;
	public inline extern function get_bAddDefaultMovementBindings(): Bool return this.bAddDefaultMovementBindings;
}

@:forward
@:nativeGen
@:native("DefaultPawn*")
abstract DefaultPawnPtr(cpp.Star<DefaultPawn>) from cpp.Star<DefaultPawn> to cpp.Star<DefaultPawn>{
	@:from
	public static extern inline function fromValue(v: DefaultPawn): DefaultPawnPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DefaultPawn {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}