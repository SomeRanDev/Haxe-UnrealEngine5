// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URevolveToolProperties")
@:include("DrawAndRevolveTool.h")
@:structAccess
extern class RevolveToolProperties extends RevolveProperties {
	public var CapFillMode: ERevolvePropertiesCapFillMode;
	public var bClosePathToAxis: Bool;
	public var DrawPlaneOrigin: Vector;
	public var DrawPlaneOrientation: Rotator;
	public var bEnableSnapping: Bool;
	public var bAllowedToEditDrawPlane: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstRevolveToolProperties(RevolveToolProperties) from RevolveToolProperties {
	public extern var CapFillMode(get, never): ERevolvePropertiesCapFillMode;
	public inline extern function get_CapFillMode(): ERevolvePropertiesCapFillMode return this.CapFillMode;
	public extern var bClosePathToAxis(get, never): Bool;
	public inline extern function get_bClosePathToAxis(): Bool return this.bClosePathToAxis;
	public extern var DrawPlaneOrigin(get, never): Vector;
	public inline extern function get_DrawPlaneOrigin(): Vector return this.DrawPlaneOrigin;
	public extern var DrawPlaneOrientation(get, never): Rotator;
	public inline extern function get_DrawPlaneOrientation(): Rotator return this.DrawPlaneOrientation;
	public extern var bEnableSnapping(get, never): Bool;
	public inline extern function get_bEnableSnapping(): Bool return this.bEnableSnapping;
	public extern var bAllowedToEditDrawPlane(get, never): Bool;
	public inline extern function get_bAllowedToEditDrawPlane(): Bool return this.bAllowedToEditDrawPlane;
}

@:forward
@:nativeGen
@:native("RevolveToolProperties*")
abstract RevolveToolPropertiesPtr(cpp.Star<RevolveToolProperties>) from cpp.Star<RevolveToolProperties> to cpp.Star<RevolveToolProperties>{
	@:from
	public static extern inline function fromValue(v: RevolveToolProperties): RevolveToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RevolveToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}