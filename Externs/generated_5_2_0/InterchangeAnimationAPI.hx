// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeAnimationAPI")
@:include("Nodes/InterchangeAnimationAPI.h")
@:structAccess
extern class InterchangeAnimationAPI extends Object {
	public function SetCustomNodeTransformPayloadKey(InterchangeBaseNode: cpp.Star<InterchangeBaseNode>, AttributeValue: FString): Bool;
	public function SetCustomNodeTransformAnimationStartTime(InterchangeBaseNode: cpp.Star<InterchangeBaseNode>, AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function SetCustomNodeTransformAnimationKeyCount(InterchangeBaseNode: cpp.Star<InterchangeBaseNode>, AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function SetCustomNodeTransformAnimationEndTime(InterchangeBaseNode: cpp.Star<InterchangeBaseNode>, AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function SetCustomIsNodeTransformAnimated(InterchangeBaseNode: cpp.Star<InterchangeBaseNode>, AttributeValue: cpp.Reference<Bool>): Bool;
	public function GetCustomNodeTransformPayloadKey(InterchangeBaseNode: cpp.Star<InterchangeBaseNode.ConstInterchangeBaseNode>, AttributeValue: cpp.Reference<FString>): Bool;
	public function GetCustomNodeTransformAnimationStartTime(InterchangeBaseNode: cpp.Star<InterchangeBaseNode.ConstInterchangeBaseNode>, AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function GetCustomNodeTransformAnimationKeyCount(InterchangeBaseNode: cpp.Star<InterchangeBaseNode.ConstInterchangeBaseNode>, AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomNodeTransformAnimationEndTime(InterchangeBaseNode: cpp.Star<InterchangeBaseNode.ConstInterchangeBaseNode>, AttributeValue: cpp.Reference<cpp.Float64>): Bool;
	public function GetCustomIsNodeTransformAnimated(InterchangeBaseNode: cpp.Star<InterchangeBaseNode.ConstInterchangeBaseNode>, AttributeValue: cpp.Reference<Bool>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstInterchangeAnimationAPI(InterchangeAnimationAPI) from InterchangeAnimationAPI {
}

@:forward
@:nativeGen
@:native("InterchangeAnimationAPI*")
abstract InterchangeAnimationAPIPtr(cpp.Star<InterchangeAnimationAPI>) from cpp.Star<InterchangeAnimationAPI> to cpp.Star<InterchangeAnimationAPI>{
	@:from
	public static extern inline function fromValue(v: InterchangeAnimationAPI): InterchangeAnimationAPIPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeAnimationAPI {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}