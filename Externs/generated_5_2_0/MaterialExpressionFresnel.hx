// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionFresnel")
@:include("Materials/MaterialExpressionFresnel.h")
@:valueType
extern class MaterialExpressionFresnel extends MaterialExpression {
	public var ExponentIn: ExpressionInput;
	public var Exponent: ucpp.num.Float32;
	public var BaseReflectFractionIn: ExpressionInput;
	public var BaseReflectFraction: ucpp.num.Float32;
	public var Normal: ExpressionInput;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionFresnel(MaterialExpressionFresnel) from MaterialExpressionFresnel {
	public extern var ExponentIn(get, never): ExpressionInput;
	public inline extern function get_ExponentIn(): ExpressionInput return this.ExponentIn;
	public extern var Exponent(get, never): ucpp.num.Float32;
	public inline extern function get_Exponent(): ucpp.num.Float32 return this.Exponent;
	public extern var BaseReflectFractionIn(get, never): ExpressionInput;
	public inline extern function get_BaseReflectFractionIn(): ExpressionInput return this.BaseReflectFractionIn;
	public extern var BaseReflectFraction(get, never): ucpp.num.Float32;
	public inline extern function get_BaseReflectFraction(): ucpp.num.Float32 return this.BaseReflectFraction;
	public extern var Normal(get, never): ExpressionInput;
	public inline extern function get_Normal(): ExpressionInput return this.Normal;
}

@:forward
@:nativeGen
@:native("MaterialExpressionFresnel*")
abstract MaterialExpressionFresnelPtr(ucpp.Ptr<MaterialExpressionFresnel>) from ucpp.Ptr<MaterialExpressionFresnel> to ucpp.Ptr<MaterialExpressionFresnel>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionFresnel): MaterialExpressionFresnelPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionFresnel {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}