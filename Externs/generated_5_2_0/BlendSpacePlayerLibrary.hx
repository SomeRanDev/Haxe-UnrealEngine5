// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBlendSpacePlayerLibrary")
@:include("BlendSpacePlayerLibrary.h")
@:valueType
extern class BlendSpacePlayerLibrary extends BlueprintFunctionLibrary {
	public function SnapToPosition(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>, NewPosition: Vector): Void;
	public function ShouldResetPlayTimeWhenBlendSpaceChanges(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>): Bool;
	public function SetResetPlayTimeWhenBlendSpaceChanges(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>, bReset: Bool): BlendSpacePlayerReference;
	public function SetPlayRate(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>, PlayRate: ucpp.num.Float32): BlendSpacePlayerReference;
	public function SetLoop(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>, bLoop: Bool): BlendSpacePlayerReference;
	public function SetBlendSpaceWithInertialBlending(UpdateContext: ucpp.Ref<AnimUpdateContext>, BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>, BlendSpace: ucpp.Ptr<BlendSpace>, BlendTime: ucpp.num.Float32): BlendSpacePlayerReference;
	public function SetBlendSpace(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>, BlendSpace: ucpp.Ptr<BlendSpace>): BlendSpacePlayerReference;
	public function GetStartPosition(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>): ucpp.num.Float32;
	public function GetPosition(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>): Vector;
	public function GetPlayRate(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>): ucpp.num.Float32;
	public function GetLoop(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>): Bool;
	public function GetBlendSpace(BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>): ucpp.Ptr<BlendSpace>;
	public function ConvertToBlendSpacePlayerPure(Node: ucpp.Ref<AnimNodeReference>, BlendSpacePlayer: ucpp.Ref<BlendSpacePlayerReference>, Result: ucpp.Ref<Bool>): Void;
	public function ConvertToBlendSpacePlayer(Node: ucpp.Ref<AnimNodeReference>, Result: ucpp.Ref<EAnimNodeReferenceConversionResult>): BlendSpacePlayerReference;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstBlendSpacePlayerLibrary(BlendSpacePlayerLibrary) from BlendSpacePlayerLibrary {
}

@:forward
@:nativeGen
@:native("BlendSpacePlayerLibrary*")
abstract BlendSpacePlayerLibraryPtr(ucpp.Ptr<BlendSpacePlayerLibrary>) from ucpp.Ptr<BlendSpacePlayerLibrary> to ucpp.Ptr<BlendSpacePlayerLibrary>{
	@:from
	public static extern inline function fromValue(v: BlendSpacePlayerLibrary): BlendSpacePlayerLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BlendSpacePlayerLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}