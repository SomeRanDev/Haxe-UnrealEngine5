// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovieSceneTrackExtensions")
@:include("ExtensionLibraries/MovieSceneTrackExtensions.h")
@:valueType
extern class MovieSceneTrackExtensions extends BlueprintFunctionLibrary {
	public function SetTrackRowDisplayName(Track: ucpp.Ptr<MovieSceneTrack>, InName: ucpp.Ref<FText>, RowIndex: ucpp.num.Int32): Void;
	public function SetSortingOrder(Track: ucpp.Ptr<MovieSceneTrack>, SortingOrder: ucpp.num.Int32): Void;
	public function SetSectionToKey(Track: ucpp.Ptr<MovieSceneTrack>, Section: ucpp.Ptr<MovieSceneSection>): Void;
	public function SetDisplayName(Track: ucpp.Ptr<MovieSceneTrack>, InName: ucpp.Ref<FText>): Void;
	public function SetColorTint(Track: ucpp.Ptr<MovieSceneTrack>, ColorTint: ucpp.Ref<Color>): Void;
	public function RemoveSection(Track: ucpp.Ptr<MovieSceneTrack>, Section: ucpp.Ptr<MovieSceneSection>): Void;
	public function GetTrackRowDisplayName(Track: ucpp.Ptr<MovieSceneTrack>, RowIndex: ucpp.num.Int32): FText;
	public function GetSortingOrder(Track: ucpp.Ptr<MovieSceneTrack>): ucpp.num.Int32;
	public function GetSectionToKey(Track: ucpp.Ptr<MovieSceneTrack>): ucpp.Ptr<MovieSceneSection>;
	public function GetSections(Track: ucpp.Ptr<MovieSceneTrack>): TArray<ucpp.Ptr<MovieSceneSection>>;
	public function GetDisplayName(Track: ucpp.Ptr<MovieSceneTrack>): FText;
	public function GetColorTint(Track: ucpp.Ptr<MovieSceneTrack>): Color;
	public function AddSection(Track: ucpp.Ptr<MovieSceneTrack>): ucpp.Ptr<MovieSceneSection>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMovieSceneTrackExtensions(MovieSceneTrackExtensions) from MovieSceneTrackExtensions {
}

@:forward
@:nativeGen
@:native("MovieSceneTrackExtensions*")
abstract MovieSceneTrackExtensionsPtr(ucpp.Ptr<MovieSceneTrackExtensions>) from ucpp.Ptr<MovieSceneTrackExtensions> to ucpp.Ptr<MovieSceneTrackExtensions>{
	@:from
	public static extern inline function fromValue(v: MovieSceneTrackExtensions): MovieSceneTrackExtensionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MovieSceneTrackExtensions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}