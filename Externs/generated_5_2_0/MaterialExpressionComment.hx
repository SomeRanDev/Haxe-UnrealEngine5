// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionComment")
@:include("Materials/MaterialExpressionComment.h")
@:structAccess
extern class MaterialExpressionComment extends MaterialExpression {
	public var SizeX: cpp.Int32;
	public var SizeY: cpp.Int32;
	public var Text: FString;
	public var CommentColor: LinearColor;
	public var FontSize: cpp.Int32;
	public var bCommentBubbleVisible_InDetailsPanel: Bool;
	public var bColorCommentBubble: Bool;
	public var bGroupMode: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionComment(MaterialExpressionComment) from MaterialExpressionComment {
	public extern var SizeX(get, never): cpp.Int32;
	public inline extern function get_SizeX(): cpp.Int32 return this.SizeX;
	public extern var SizeY(get, never): cpp.Int32;
	public inline extern function get_SizeY(): cpp.Int32 return this.SizeY;
	public extern var Text(get, never): FString;
	public inline extern function get_Text(): FString return this.Text;
	public extern var CommentColor(get, never): LinearColor;
	public inline extern function get_CommentColor(): LinearColor return this.CommentColor;
	public extern var FontSize(get, never): cpp.Int32;
	public inline extern function get_FontSize(): cpp.Int32 return this.FontSize;
	public extern var bCommentBubbleVisible_InDetailsPanel(get, never): Bool;
	public inline extern function get_bCommentBubbleVisible_InDetailsPanel(): Bool return this.bCommentBubbleVisible_InDetailsPanel;
	public extern var bColorCommentBubble(get, never): Bool;
	public inline extern function get_bColorCommentBubble(): Bool return this.bColorCommentBubble;
	public extern var bGroupMode(get, never): Bool;
	public inline extern function get_bGroupMode(): Bool return this.bGroupMode;
}

@:forward
@:nativeGen
@:native("MaterialExpressionComment*")
abstract MaterialExpressionCommentPtr(cpp.Star<MaterialExpressionComment>) from cpp.Star<MaterialExpressionComment> to cpp.Star<MaterialExpressionComment>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionComment): MaterialExpressionCommentPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionComment {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}