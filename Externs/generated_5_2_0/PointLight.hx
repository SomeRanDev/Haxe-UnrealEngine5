// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("APointLight")
@:include("Engine/PointLight.h")
@:valueType
extern class PointLight extends Light {
	public var PointLightComponent: ucpp.Ptr<PointLightComp>;

	public function SetRadius(NewRadius: ucpp.num.Float32): Void;
	public function SetLightFalloffExponent(NewLightFalloffExponent: ucpp.num.Float32): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPointLight(PointLight) from PointLight {
	public extern var PointLightComponent(get, never): ucpp.Ptr<PointLightComp.ConstPointLightComp>;
	public inline extern function get_PointLightComponent(): ucpp.Ptr<PointLightComp.ConstPointLightComp> return this.PointLightComponent;
}

@:forward
@:nativeGen
@:native("PointLight*")
abstract PointLightPtr(ucpp.Ptr<PointLight>) from ucpp.Ptr<PointLight> to ucpp.Ptr<PointLight>{
	@:from
	public static extern inline function fromValue(v: PointLight): PointLightPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PointLight {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}