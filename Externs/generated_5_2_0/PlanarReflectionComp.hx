// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPlanarReflectionComponent")
@:include("Components/PlanarReflectionComponent.h")
@:valueType
extern class PlanarReflectionComp extends SceneCaptureComp {
	public var PreviewBox: ucpp.Ptr<BoxComp>;
	public var NormalDistortionStrength: ucpp.num.Float32;
	public var PrefilterRoughness: ucpp.num.Float32;
	public var PrefilterRoughnessDistance: ucpp.num.Float32;
	public var ScreenPercentage: ucpp.num.Int32;
	public var ExtraFOV: ucpp.num.Float32;
	public var DistanceFromPlaneFadeoutStart: ucpp.num.Float32;
	public var DistanceFromPlaneFadeoutEnd: ucpp.num.Float32;
	public var AngleFromPlaneFadeStart: ucpp.num.Float32;
	public var AngleFromPlaneFadeEnd: ucpp.num.Float32;
	public var bShowPreviewPlane: Bool;
	public var bRenderSceneTwoSided: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPlanarReflectionComp(PlanarReflectionComp) from PlanarReflectionComp {
	public extern var PreviewBox(get, never): ucpp.Ptr<BoxComp.ConstBoxComp>;
	public inline extern function get_PreviewBox(): ucpp.Ptr<BoxComp.ConstBoxComp> return this.PreviewBox;
	public extern var NormalDistortionStrength(get, never): ucpp.num.Float32;
	public inline extern function get_NormalDistortionStrength(): ucpp.num.Float32 return this.NormalDistortionStrength;
	public extern var PrefilterRoughness(get, never): ucpp.num.Float32;
	public inline extern function get_PrefilterRoughness(): ucpp.num.Float32 return this.PrefilterRoughness;
	public extern var PrefilterRoughnessDistance(get, never): ucpp.num.Float32;
	public inline extern function get_PrefilterRoughnessDistance(): ucpp.num.Float32 return this.PrefilterRoughnessDistance;
	public extern var ScreenPercentage(get, never): ucpp.num.Int32;
	public inline extern function get_ScreenPercentage(): ucpp.num.Int32 return this.ScreenPercentage;
	public extern var ExtraFOV(get, never): ucpp.num.Float32;
	public inline extern function get_ExtraFOV(): ucpp.num.Float32 return this.ExtraFOV;
	public extern var DistanceFromPlaneFadeoutStart(get, never): ucpp.num.Float32;
	public inline extern function get_DistanceFromPlaneFadeoutStart(): ucpp.num.Float32 return this.DistanceFromPlaneFadeoutStart;
	public extern var DistanceFromPlaneFadeoutEnd(get, never): ucpp.num.Float32;
	public inline extern function get_DistanceFromPlaneFadeoutEnd(): ucpp.num.Float32 return this.DistanceFromPlaneFadeoutEnd;
	public extern var AngleFromPlaneFadeStart(get, never): ucpp.num.Float32;
	public inline extern function get_AngleFromPlaneFadeStart(): ucpp.num.Float32 return this.AngleFromPlaneFadeStart;
	public extern var AngleFromPlaneFadeEnd(get, never): ucpp.num.Float32;
	public inline extern function get_AngleFromPlaneFadeEnd(): ucpp.num.Float32 return this.AngleFromPlaneFadeEnd;
	public extern var bShowPreviewPlane(get, never): Bool;
	public inline extern function get_bShowPreviewPlane(): Bool return this.bShowPreviewPlane;
	public extern var bRenderSceneTwoSided(get, never): Bool;
	public inline extern function get_bRenderSceneTwoSided(): Bool return this.bRenderSceneTwoSided;
}

@:forward
@:nativeGen
@:native("PlanarReflectionComp*")
abstract PlanarReflectionCompPtr(ucpp.Ptr<PlanarReflectionComp>) from ucpp.Ptr<PlanarReflectionComp> to ucpp.Ptr<PlanarReflectionComp>{
	@:from
	public static extern inline function fromValue(v: PlanarReflectionComp): PlanarReflectionCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PlanarReflectionComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}