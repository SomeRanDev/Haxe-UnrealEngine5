// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USourceEffectConvolutionReverbPreset")
@:include("SourceEffects/SourceEffectConvolutionReverb.h")
@:valueType
extern class SourceEffectConvolutionReverbPreset extends SoundEffectSourcePreset {
	public var ImpulseResponse: ucpp.Ptr<AudioImpulseResponse>;
	public var Settings: SourceEffectConvolutionReverbSettings;
	public var BlockSize: ESubmixEffectConvolutionReverbBlockSize;
	public var bEnableHardwareAcceleration: Bool;

	public function SetSettings(InSettings: ucpp.Ref<SourceEffectConvolutionReverbSettings>): Void;
	public function SetImpulseResponse(InImpulseResponse: ucpp.Ptr<AudioImpulseResponse>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstSourceEffectConvolutionReverbPreset(SourceEffectConvolutionReverbPreset) from SourceEffectConvolutionReverbPreset {
	public extern var ImpulseResponse(get, never): ucpp.Ptr<AudioImpulseResponse.ConstAudioImpulseResponse>;
	public inline extern function get_ImpulseResponse(): ucpp.Ptr<AudioImpulseResponse.ConstAudioImpulseResponse> return this.ImpulseResponse;
	public extern var Settings(get, never): SourceEffectConvolutionReverbSettings;
	public inline extern function get_Settings(): SourceEffectConvolutionReverbSettings return this.Settings;
	public extern var BlockSize(get, never): ESubmixEffectConvolutionReverbBlockSize;
	public inline extern function get_BlockSize(): ESubmixEffectConvolutionReverbBlockSize return this.BlockSize;
	public extern var bEnableHardwareAcceleration(get, never): Bool;
	public inline extern function get_bEnableHardwareAcceleration(): Bool return this.bEnableHardwareAcceleration;
}

@:forward
@:nativeGen
@:native("SourceEffectConvolutionReverbPreset*")
abstract SourceEffectConvolutionReverbPresetPtr(ucpp.Ptr<SourceEffectConvolutionReverbPreset>) from ucpp.Ptr<SourceEffectConvolutionReverbPreset> to ucpp.Ptr<SourceEffectConvolutionReverbPreset>{
	@:from
	public static extern inline function fromValue(v: SourceEffectConvolutionReverbPreset): SourceEffectConvolutionReverbPresetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SourceEffectConvolutionReverbPreset {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}