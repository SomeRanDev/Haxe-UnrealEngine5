// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULayeredBoneBlendLibrary")
@:include("LayeredBoneBlendLibrary.h")
@:valueType
extern class LayeredBoneBlendLibrary extends BlueprintFunctionLibrary {
	public function SetBlendMask(UpdateContext: ucpp.Ref<AnimUpdateContext>, LayeredBoneBlend: ucpp.Ref<LayeredBoneBlendReference>, PoseIndex: ucpp.num.Int32, BlendMaskName: FName): LayeredBoneBlendReference;
	public function GetNumPoses(LayeredBoneBlend: ucpp.Ref<LayeredBoneBlendReference>): ucpp.num.Int32;
	public function ConvertToLayeredBoneBlend(Node: ucpp.Ref<AnimNodeReference>, Result: ucpp.Ref<EAnimNodeReferenceConversionResult>): LayeredBoneBlendReference;
	public function ConvertToLayeredBlendPerBonePure(Node: ucpp.Ref<AnimNodeReference>, LayeredBoneBlend: ucpp.Ref<LayeredBoneBlendReference>, Result: ucpp.Ref<Bool>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstLayeredBoneBlendLibrary(LayeredBoneBlendLibrary) from LayeredBoneBlendLibrary {
}

@:forward
@:nativeGen
@:native("LayeredBoneBlendLibrary*")
abstract LayeredBoneBlendLibraryPtr(ucpp.Ptr<LayeredBoneBlendLibrary>) from ucpp.Ptr<LayeredBoneBlendLibrary> to ucpp.Ptr<LayeredBoneBlendLibrary>{
	@:from
	public static extern inline function fromValue(v: LayeredBoneBlendLibrary): LayeredBoneBlendLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LayeredBoneBlendLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}