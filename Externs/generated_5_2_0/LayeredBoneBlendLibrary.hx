// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULayeredBoneBlendLibrary")
@:include("LayeredBoneBlendLibrary.h")
@:structAccess
extern class LayeredBoneBlendLibrary extends BlueprintFunctionLibrary {
	public function SetBlendMask(UpdateContext: cpp.Reference<AnimUpdateContext>, LayeredBoneBlend: cpp.Reference<LayeredBoneBlendReference>, PoseIndex: cpp.Int32, BlendMaskName: FName): LayeredBoneBlendReference;
	public function GetNumPoses(LayeredBoneBlend: cpp.Reference<LayeredBoneBlendReference>): cpp.Int32;
	public function ConvertToLayeredBoneBlend(Node: cpp.Reference<AnimNodeReference>, Result: cpp.Reference<EAnimNodeReferenceConversionResult>): LayeredBoneBlendReference;
	public function ConvertToLayeredBlendPerBonePure(Node: cpp.Reference<AnimNodeReference>, LayeredBoneBlend: cpp.Reference<LayeredBoneBlendReference>, Result: cpp.Reference<Bool>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstLayeredBoneBlendLibrary(LayeredBoneBlendLibrary) from LayeredBoneBlendLibrary {
}

@:forward
@:nativeGen
@:native("LayeredBoneBlendLibrary*")
abstract LayeredBoneBlendLibraryPtr(cpp.Star<LayeredBoneBlendLibrary>) from cpp.Star<LayeredBoneBlendLibrary> to cpp.Star<LayeredBoneBlendLibrary>{
	@:from
	public static extern inline function fromValue(v: LayeredBoneBlendLibrary): LayeredBoneBlendLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LayeredBoneBlendLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}