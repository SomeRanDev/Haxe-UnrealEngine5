// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPlayerInput")
@:include("GameFramework/PlayerInput.h")
@:valueType
extern class PlayerInput extends Object {
	public var DebugExecBindings: TArray<KeyBind>;
	public var InvertedAxis: TArray<FName>;

	public function SetMouseSensitivity(Sensitivity: ucpp.num.Float32): Void;
	public function SetBind(BindName: FName, Command: FString): Void;
	public function InvertAxisKey(AxisKey: Key): Void;
	public function InvertAxis(AxisName: FName): Void;
	public function GetOuterAPlayerController(): ucpp.Ptr<PlayerController>;
	public function ClearSmoothing(): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetOuterAPlayerController)
@:nativeGen
abstract ConstPlayerInput(PlayerInput) from PlayerInput {
	public extern var DebugExecBindings(get, never): TArray<KeyBind>;
	public inline extern function get_DebugExecBindings(): TArray<KeyBind> return this.DebugExecBindings;
	public extern var InvertedAxis(get, never): TArray<FName>;
	public inline extern function get_InvertedAxis(): TArray<FName> return this.InvertedAxis;
}

@:forward
@:nativeGen
@:native("PlayerInput*")
abstract PlayerInputPtr(ucpp.Ptr<PlayerInput>) from ucpp.Ptr<PlayerInput> to ucpp.Ptr<PlayerInput>{
	@:from
	public static extern inline function fromValue(v: PlayerInput): PlayerInputPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PlayerInput {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}