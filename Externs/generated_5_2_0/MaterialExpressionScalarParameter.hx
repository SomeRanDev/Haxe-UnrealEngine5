// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionScalarParameter")
@:include("Materials/MaterialExpressionScalarParameter.h")
@:structAccess
extern class MaterialExpressionScalarParameter extends MaterialExpressionParameter {
	public var DefaultValue: cpp.Float32;
	public var bUseCustomPrimitiveData: Bool;
	public var PrimitiveDataIndex: cpp.UInt8;
	public var SliderMin: cpp.Float32;
	public var SliderMax: cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionScalarParameter(MaterialExpressionScalarParameter) from MaterialExpressionScalarParameter {
	public extern var DefaultValue(get, never): cpp.Float32;
	public inline extern function get_DefaultValue(): cpp.Float32 return this.DefaultValue;
	public extern var bUseCustomPrimitiveData(get, never): Bool;
	public inline extern function get_bUseCustomPrimitiveData(): Bool return this.bUseCustomPrimitiveData;
	public extern var PrimitiveDataIndex(get, never): cpp.UInt8;
	public inline extern function get_PrimitiveDataIndex(): cpp.UInt8 return this.PrimitiveDataIndex;
	public extern var SliderMin(get, never): cpp.Float32;
	public inline extern function get_SliderMin(): cpp.Float32 return this.SliderMin;
	public extern var SliderMax(get, never): cpp.Float32;
	public inline extern function get_SliderMax(): cpp.Float32 return this.SliderMax;
}

@:forward
@:nativeGen
@:native("MaterialExpressionScalarParameter*")
abstract MaterialExpressionScalarParameterPtr(cpp.Star<MaterialExpressionScalarParameter>) from cpp.Star<MaterialExpressionScalarParameter> to cpp.Star<MaterialExpressionScalarParameter>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionScalarParameter): MaterialExpressionScalarParameterPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionScalarParameter {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}