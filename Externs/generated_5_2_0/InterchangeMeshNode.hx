// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeMeshNode")
@:include("InterchangeMeshNode.h")
@:structAccess
extern class InterchangeMeshNode extends InterchangeBaseNode {
	public function SetSlotMaterialDependencyUid(SlotName: FString, MaterialDependencyUid: FString): Bool;
	public function SetSkinnedMesh(bIsSkinnedMesh: Bool): Bool;
	public function SetSkeletonDependencyUid(DependencyUid: FString): Bool;
	public function SetSceneInstanceUid(DependencyUid: FString): Bool;
	public function SetPayLoadKey(PayloadKey: FString): Void;
	public function SetMorphTargetName(MorphTargetName: FString): Bool;
	public function SetMorphTargetDependencyUid(DependencyUid: FString): Bool;
	public function SetMorphTarget(bIsMorphTarget: Bool): Bool;
	public function SetCustomVertexCount(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function SetCustomUVCount(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function SetCustomPolygonCount(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function SetCustomHasVertexTangent(AttributeValue: cpp.Reference<Bool>): Bool;
	public function SetCustomHasVertexNormal(AttributeValue: cpp.Reference<Bool>): Bool;
	public function SetCustomHasVertexColor(AttributeValue: cpp.Reference<Bool>): Bool;
	public function SetCustomHasVertexBinormal(AttributeValue: cpp.Reference<Bool>): Bool;
	public function SetCustomHasSmoothGroup(AttributeValue: cpp.Reference<Bool>): Bool;
	public function SetCustomBoundingBox(AttributeValue: cpp.Reference<Box>): Bool;
	public function SetAnimationCurvePayLoadKey(PayloadKey: FString): Void;
	public function RemoveSlotMaterialDependencyUid(SlotName: FString): Bool;
	public function RemoveSkeletonDependencyUid(DependencyUid: FString): Bool;
	public function RemoveSceneInstanceUid(DependencyUid: FString): Bool;
	public function RemoveMorphTargetDependencyUid(DependencyUid: FString): Bool;
	public function IsSkinnedMesh(): Bool;
	public function IsMorphTarget(): Bool;
	public function GetSlotMaterialDependencyUid(SlotName: FString, OutMaterialDependency: cpp.Reference<FString>): Bool;
	public function GetSlotMaterialDependencies(OutMaterialDependencies: cpp.Reference<TMap<FString, FString>>): Void;
	public function GetSkeletonDependency(Index: cpp.Int32, OutDependency: cpp.Reference<FString>): Void;
	public function GetSkeletonDependencies(OutDependencies: cpp.Reference<TArray<FString>>): Void;
	public function GetSkeletonDependeciesCount(): cpp.Int32;
	public function GetSceneInstanceUidsCount(): cpp.Int32;
	public function GetSceneInstanceUids(OutDependencies: cpp.Reference<TArray<FString>>): Void;
	public function GetSceneInstanceUid(Index: cpp.Int32, OutDependency: cpp.Reference<FString>): Void;
	public function GetMorphTargetName(OutMorphTargetName: cpp.Reference<FString>): Bool;
	public function GetMorphTargetDependency(Index: cpp.Int32, OutDependency: cpp.Reference<FString>): Void;
	public function GetMorphTargetDependencies(OutDependencies: cpp.Reference<TArray<FString>>): Void;
	public function GetMorphTargetDependeciesCount(): cpp.Int32;
	public function GetCustomVertexCount(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomUVCount(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomPolygonCount(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomHasVertexTangent(AttributeValue: cpp.Reference<Bool>): Bool;
	public function GetCustomHasVertexNormal(AttributeValue: cpp.Reference<Bool>): Bool;
	public function GetCustomHasVertexColor(AttributeValue: cpp.Reference<Bool>): Bool;
	public function GetCustomHasVertexBinormal(AttributeValue: cpp.Reference<Bool>): Bool;
	public function GetCustomHasSmoothGroup(AttributeValue: cpp.Reference<Bool>): Bool;
	public function GetCustomBoundingBox(AttributeValue: cpp.Reference<Box>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	IsSkinnedMesh, IsMorphTarget, GetSlotMaterialDependencyUid, GetSlotMaterialDependencies, GetSkeletonDependency,
	GetSkeletonDependencies, GetSkeletonDependeciesCount, GetSceneInstanceUidsCount, GetSceneInstanceUids, GetSceneInstanceUid,
	GetMorphTargetName, GetMorphTargetDependency, GetMorphTargetDependencies, GetMorphTargetDependeciesCount, GetCustomVertexCount,
	GetCustomUVCount, GetCustomPolygonCount, GetCustomHasVertexTangent, GetCustomHasVertexNormal, GetCustomHasVertexColor,
	GetCustomHasVertexBinormal, GetCustomHasSmoothGroup, GetCustomBoundingBox
)
@:nativeGen
abstract ConstInterchangeMeshNode(InterchangeMeshNode) from InterchangeMeshNode {
}

@:forward
@:nativeGen
@:native("InterchangeMeshNode*")
abstract InterchangeMeshNodePtr(cpp.Star<InterchangeMeshNode>) from cpp.Star<InterchangeMeshNode> to cpp.Star<InterchangeMeshNode>{
	@:from
	public static extern inline function fromValue(v: InterchangeMeshNode): InterchangeMeshNodePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeMeshNode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}