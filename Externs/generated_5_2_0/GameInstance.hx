// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGameInstance")
@:include("Engine/GameInstance.h")
@:structAccess
extern class GameInstance extends Object {
	@:protected public var LocalPlayers: TArray<cpp.Star<LocalPlayer>>;
	@:protected public var OnlineSession: cpp.Star<OnlineSession>;
	@:protected public var ReferencedObjects: TArray<cpp.Star<Object>>;
	@:protected public var OnPawnControllerChangedDelegates: HaxeMulticastSparseDelegateProperty<(cpp.Star<Pawn>, cpp.Star<Controller>) -> Void>;
	public var OnInputDeviceConnectionChange: HaxeMulticastSparseDelegateProperty<(EInputDeviceConnectionState, PlatformUserId, InputDeviceId) -> Void>;
	public var OnUserInputDevicePairingChange: HaxeMulticastSparseDelegateProperty<(InputDeviceId, PlatformUserId, PlatformUserId) -> Void>;

	public function ReceiveShutdown(): Void;
	public function ReceiveInit(): Void;
	public function HandleTravelError(FailureType: TEnumAsByte<ETravelFailure>): Void;
	public function HandleNetworkError(FailureType: TEnumAsByte<ENetworkFailure>, bIsServer: Bool): Void;
	public function DebugRemovePlayer(ControllerId: cpp.Int32): Void;
	public function DebugCreatePlayer(ControllerId: cpp.Int32): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGameInstance(GameInstance) from GameInstance {
	public extern var OnInputDeviceConnectionChange(get, never): HaxeMulticastSparseDelegateProperty<(EInputDeviceConnectionState, PlatformUserId, InputDeviceId) -> Void>;
	public inline extern function get_OnInputDeviceConnectionChange(): HaxeMulticastSparseDelegateProperty<(EInputDeviceConnectionState, PlatformUserId, InputDeviceId) -> Void> return this.OnInputDeviceConnectionChange;
	public extern var OnUserInputDevicePairingChange(get, never): HaxeMulticastSparseDelegateProperty<(InputDeviceId, PlatformUserId, PlatformUserId) -> Void>;
	public inline extern function get_OnUserInputDevicePairingChange(): HaxeMulticastSparseDelegateProperty<(InputDeviceId, PlatformUserId, PlatformUserId) -> Void> return this.OnUserInputDevicePairingChange;
}

@:forward
@:nativeGen
@:native("GameInstance*")
abstract GameInstancePtr(cpp.Star<GameInstance>) from cpp.Star<GameInstance> to cpp.Star<GameInstance>{
	@:from
	public static extern inline function fromValue(v: GameInstance): GameInstancePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GameInstance {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}