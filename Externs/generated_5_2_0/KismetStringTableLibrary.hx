// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UKismetStringTableLibrary")
@:include("Kismet/KismetStringTableLibrary.h")
@:valueType
extern class KismetStringTableLibrary extends BlueprintFunctionLibrary {
	public function IsRegisteredTableId(TableId: FName): Bool;
	public function IsRegisteredTableEntry(TableId: FName, Key: FString): Bool;
	public function GetTableNamespace(TableId: FName): FString;
	public function GetTableEntrySourceString(TableId: FName, Key: FString): FString;
	public function GetTableEntryMetaData(TableId: FName, Key: FString, MetaDataId: FName): FString;
	public function GetRegisteredStringTables(): TArray<FName>;
	public function GetMetaDataIdsFromStringTableEntry(TableId: FName, Key: FString): TArray<FName>;
	public function GetKeysFromStringTable(TableId: FName): TArray<FString>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstKismetStringTableLibrary(KismetStringTableLibrary) from KismetStringTableLibrary {
}

@:forward
@:nativeGen
@:native("KismetStringTableLibrary*")
abstract KismetStringTableLibraryPtr(ucpp.Ptr<KismetStringTableLibrary>) from ucpp.Ptr<KismetStringTableLibrary> to ucpp.Ptr<KismetStringTableLibrary>{
	@:from
	public static extern inline function fromValue(v: KismetStringTableLibrary): KismetStringTableLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): KismetStringTableLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}