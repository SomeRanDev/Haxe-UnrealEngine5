// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGizmoElementArrow")
@:include("BaseGizmos/GizmoElementArrow.h")
@:valueType
extern class GizmoElementArrow extends GizmoElementBase {
	@:protected public var CylinderElement: ucpp.Ptr<GizmoElementCylinder>;
	@:protected public var ConeElement: ucpp.Ptr<GizmoElementCone>;
	@:protected public var BoxElement: ucpp.Ptr<GizmoElementBox>;
	@:protected public var Base: Vector;
	@:protected public var Direction: Vector;
	@:protected public var SideDirection: Vector;
	@:protected public var BodyLength: ucpp.num.Float32;
	@:protected public var BodyRadius: ucpp.num.Float32;
	@:protected public var HeadLength: ucpp.num.Float32;
	@:protected public var HeadRadius: ucpp.num.Float32;
	@:protected public var NumSides: ucpp.num.Int32;
	@:protected public var HeadType: EGizmoElementArrowHeadType;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstGizmoElementArrow(GizmoElementArrow) from GizmoElementArrow {
}

@:forward
@:nativeGen
@:native("GizmoElementArrow*")
abstract GizmoElementArrowPtr(ucpp.Ptr<GizmoElementArrow>) from ucpp.Ptr<GizmoElementArrow> to ucpp.Ptr<GizmoElementArrow>{
	@:from
	public static extern inline function fromValue(v: GizmoElementArrow): GizmoElementArrowPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GizmoElementArrow {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}