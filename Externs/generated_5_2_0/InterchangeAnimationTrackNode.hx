// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeAnimationTrackNode")
@:include("InterchangeAnimationTrackSetNode.h")
@:structAccess
extern class InterchangeAnimationTrackNode extends InterchangeAnimationTrackBaseNode {
	public function SetCustomTargetedProperty(TargetedProperty: cpp.Reference<cpp.Int32>): Bool;
	public function SetCustomFrameCount(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function SetCustomAnimationPayloadKey(PayloadKey: FString): Bool;
	public function SetCustomActorDependencyUid(DependencyUid: FString): Bool;
	public function GetCustomTargetedProperty(TargetedProperty: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomFrameCount(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomAnimationPayloadKey(PayloadKey: cpp.Reference<FString>): Bool;
	public function GetCustomActorDependencyUid(DependencyUid: cpp.Reference<FString>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetCustomTargetedProperty, GetCustomFrameCount, GetCustomAnimationPayloadKey, GetCustomActorDependencyUid)
@:nativeGen
abstract ConstInterchangeAnimationTrackNode(InterchangeAnimationTrackNode) from InterchangeAnimationTrackNode {
}

@:forward
@:nativeGen
@:native("InterchangeAnimationTrackNode*")
abstract InterchangeAnimationTrackNodePtr(cpp.Star<InterchangeAnimationTrackNode>) from cpp.Star<InterchangeAnimationTrackNode> to cpp.Star<InterchangeAnimationTrackNode>{
	@:from
	public static extern inline function fromValue(v: InterchangeAnimationTrackNode): InterchangeAnimationTrackNodePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeAnimationTrackNode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}