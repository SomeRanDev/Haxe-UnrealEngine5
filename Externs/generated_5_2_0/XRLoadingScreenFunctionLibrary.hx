// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UXRLoadingScreenFunctionLibrary")
@:include("XRLoadingScreenFunctionLibrary.h")
@:structAccess
extern class XRLoadingScreenFunctionLibrary extends BlueprintFunctionLibrary {
	public function ShowLoadingScreen(): Void;
	public function SetLoadingScreen(Texture: cpp.Star<Texture>, Scale: Vector2D, Offset: Vector, bShowLoadingMovie: Bool, bShowOnSet: Bool): Void;
	public function HideLoadingScreen(): Void;
	public function ClearLoadingScreenSplashes(): Void;
	public function AddLoadingScreenSplash(Texture: cpp.Star<Texture>, Translation: Vector, Rotation: Rotator, Size: Vector2D, DeltaRotation: Rotator, bClearBeforeAdd: Bool): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstXRLoadingScreenFunctionLibrary(XRLoadingScreenFunctionLibrary) from XRLoadingScreenFunctionLibrary {
}

@:forward
@:nativeGen
@:native("XRLoadingScreenFunctionLibrary*")
abstract XRLoadingScreenFunctionLibraryPtr(cpp.Star<XRLoadingScreenFunctionLibrary>) from cpp.Star<XRLoadingScreenFunctionLibrary> to cpp.Star<XRLoadingScreenFunctionLibrary>{
	@:from
	public static extern inline function fromValue(v: XRLoadingScreenFunctionLibrary): XRLoadingScreenFunctionLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): XRLoadingScreenFunctionLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}