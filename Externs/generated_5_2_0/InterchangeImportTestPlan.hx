// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeImportTestPlan")
@:include("InterchangeImportTestPlan.h")
@:valueType
extern class InterchangeImportTestPlan extends Object {
	public var Steps: TArray<ucpp.Ptr<InterchangeImportTestStepBase>>;
	public var bIsEnabledInAutomationTests: Bool;
	public var DisabledTestReason: FString;

	public function RunThisTest(): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstInterchangeImportTestPlan(InterchangeImportTestPlan) from InterchangeImportTestPlan {
	public extern var Steps(get, never): TArray<ucpp.Ptr<InterchangeImportTestStepBase.ConstInterchangeImportTestStepBase>>;
	public inline extern function get_Steps(): TArray<ucpp.Ptr<InterchangeImportTestStepBase.ConstInterchangeImportTestStepBase>> return this.Steps;
	public extern var bIsEnabledInAutomationTests(get, never): Bool;
	public inline extern function get_bIsEnabledInAutomationTests(): Bool return this.bIsEnabledInAutomationTests;
	public extern var DisabledTestReason(get, never): FString;
	public inline extern function get_DisabledTestReason(): FString return this.DisabledTestReason;
}

@:forward
@:nativeGen
@:native("InterchangeImportTestPlan*")
abstract InterchangeImportTestPlanPtr(ucpp.Ptr<InterchangeImportTestPlan>) from ucpp.Ptr<InterchangeImportTestPlan> to ucpp.Ptr<InterchangeImportTestPlan>{
	@:from
	public static extern inline function fromValue(v: InterchangeImportTestPlan): InterchangeImportTestPlanPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeImportTestPlan {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}