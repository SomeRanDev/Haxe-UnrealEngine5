// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULevelSequenceEditorSubsystem")
@:include("LevelSequenceEditorSubsystem.h")
@:valueType
extern class LevelSequenceEditorSubsystem extends EditorSubsystem {
	public function SyncSectionsUsingSourceTimecode(Sections: ucpp.Ref<TArray<ucpp.Ptr<MovieSceneSection>>>): Void;
	public function SnapSectionsToTimelineUsingSourceTimecode(Sections: ucpp.Ref<TArray<ucpp.Ptr<MovieSceneSection>>>): Void;
	public function ReplaceBindingWithActors(Actors: ucpp.Ref<TArray<ucpp.Ptr<Actor>>>, ObjectBinding: ucpp.Ref<MovieSceneBindingProxy>): Void;
	public function RemoveInvalidBindings(ObjectBinding: ucpp.Ref<MovieSceneBindingProxy>): Void;
	public function RemoveAllBindings(ObjectBinding: ucpp.Ref<MovieSceneBindingProxy>): Void;
	public function RemoveActorsFromBinding(Actors: ucpp.Ref<TArray<ucpp.Ptr<Actor>>>, ObjectBinding: ucpp.Ref<MovieSceneBindingProxy>): Void;
	public function RebindComponent(ComponentBindings: ucpp.Ref<TArray<MovieSceneBindingProxy>>, ComponentName: ucpp.Ref<FName>): Void;
	public function PasteTracks(TextToImport: FString, PasteTracksParams: MovieScenePasteTracksParams, OutTracks: ucpp.Ref<TArray<ucpp.Ptr<MovieSceneTrack>>>): Bool;
	public function PasteSections(TextToImport: FString, PasteSectionsParams: MovieScenePasteSectionsParams, OutSections: ucpp.Ref<TArray<ucpp.Ptr<MovieSceneSection>>>): Bool;
	public function PasteFolders(TextToImport: FString, PasteFoldersParams: MovieScenePasteFoldersParams, OutFolders: ucpp.Ref<TArray<ucpp.Ptr<MovieSceneFolder>>>): Bool;
	public function PasteBindings(TextToImport: FString, PasteBindingsParams: MovieScenePasteBindingsParams, OutObjectBindings: ucpp.Ref<TArray<MovieSceneBindingProxy>>): Bool;
	public function FixActorReferences(): Void;
	public function CreateCamera(bSpawnable: Bool, OutActor: ucpp.Ref<ucpp.Ptr<CineCameraActor>>): MovieSceneBindingProxy;
	public function CopyTracks(Tracks: ucpp.Ref<TArray<ucpp.Ptr<MovieSceneTrack>>>, ExportedText: ucpp.Ref<FString>): Void;
	public function CopySections(Sections: ucpp.Ref<TArray<ucpp.Ptr<MovieSceneSection>>>, ExportedText: ucpp.Ref<FString>): Void;
	public function CopyFolders(Folders: ucpp.Ref<TArray<ucpp.Ptr<MovieSceneFolder>>>, ExportedText: ucpp.Ref<FString>): Void;
	public function CopyBindings(Bindings: ucpp.Ref<TArray<MovieSceneBindingProxy>>, ExportedText: ucpp.Ref<FString>): Void;
	public function ConvertToSpawnable(ObjectBinding: ucpp.Ref<MovieSceneBindingProxy>): TArray<MovieSceneBindingProxy>;
	public function ConvertToPossessable(ObjectBinding: ucpp.Ref<MovieSceneBindingProxy>): MovieSceneBindingProxy;
	public function BakeTransform(ObjectBindings: ucpp.Ref<TArray<MovieSceneBindingProxy>>, BakeInTime: ucpp.Ref<FrameTime>, BakeOutTime: ucpp.Ref<FrameTime>, BakeInterval: ucpp.Ref<FrameTime>, Params: ucpp.Ref<MovieSceneScriptingParams>): Void;
	public function AddActorsToBinding(Actors: ucpp.Ref<TArray<ucpp.Ptr<Actor>>>, ObjectBinding: ucpp.Ref<MovieSceneBindingProxy>): Void;
	public function AddActors(Actors: ucpp.Ref<TArray<ucpp.Ptr<Actor>>>): TArray<MovieSceneBindingProxy>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstLevelSequenceEditorSubsystem(LevelSequenceEditorSubsystem) from LevelSequenceEditorSubsystem {
}

@:forward
@:nativeGen
@:native("LevelSequenceEditorSubsystem*")
abstract LevelSequenceEditorSubsystemPtr(ucpp.Ptr<LevelSequenceEditorSubsystem>) from ucpp.Ptr<LevelSequenceEditorSubsystem> to ucpp.Ptr<LevelSequenceEditorSubsystem>{
	@:from
	public static extern inline function fromValue(v: LevelSequenceEditorSubsystem): LevelSequenceEditorSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LevelSequenceEditorSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}