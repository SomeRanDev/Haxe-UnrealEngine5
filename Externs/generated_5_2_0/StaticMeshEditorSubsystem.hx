// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UStaticMeshEditorSubsystem")
@:include("StaticMeshEditorSubsystem.h")
@:valueType
extern class StaticMeshEditorSubsystem extends EditorSubsystem {
	public function SetNaniteSettings(StaticMesh: ucpp.Ptr<StaticMesh>, NaniteSettings: MeshNaniteSettings, bApplyChanges: Bool): Void;
	public function SetLodsWithNotification(StaticMesh: ucpp.Ptr<StaticMesh>, ReductionOptions: ucpp.Ref<StaticMeshReductionOptions>, bApplyChanges: Bool): ucpp.num.Int32;
	public function SetLodScreenSizes(StaticMesh: ucpp.Ptr<StaticMesh>, ScreenSizes: ucpp.Ref<TArray<ucpp.num.Float32>>): Bool;
	public function SetLods(StaticMesh: ucpp.Ptr<StaticMesh>, ReductionOptions: ucpp.Ref<StaticMeshReductionOptions>): ucpp.num.Int32;
	public function SetLodReductionSettings(StaticMesh: ucpp.Ptr<StaticMesh>, LodIndex: ucpp.num.Int32, ReductionOptions: ucpp.Ref<MeshReductionSettings>): Void;
	public function SetLODMaterialSlot(StaticMesh: ucpp.Ptr<StaticMesh>, MaterialSlotIndex: ucpp.num.Int32, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32): Void;
	public function SetLODGroup(StaticMesh: ucpp.Ptr<StaticMesh>, LODGroup: FName, bRebuildImmediately: Bool): Bool;
	public function SetLodFromStaticMesh(DestinationStaticMesh: ucpp.Ptr<StaticMesh>, DestinationLodIndex: ucpp.num.Int32, SourceStaticMesh: ucpp.Ptr<StaticMesh>, SourceLodIndex: ucpp.num.Int32, bReuseExistingMaterialSlots: Bool): ucpp.num.Int32;
	public function SetLodBuildSettings(StaticMesh: ucpp.Ptr<StaticMesh>, LodIndex: ucpp.num.Int32, BuildOptions: ucpp.Ref<MeshBuildSettings>): Void;
	public function SetGenerateLightmapUVs(StaticMesh: ucpp.Ptr<StaticMesh>, bGenerateLightmapUVs: Bool): Bool;
	public function SetConvexDecompositionCollisionsWithNotification(StaticMesh: ucpp.Ptr<StaticMesh>, HullCount: ucpp.num.Int32, MaxHullVerts: ucpp.num.Int32, HullPrecision: ucpp.num.Int32, bApplyChanges: Bool): Bool;
	public function SetConvexDecompositionCollisions(StaticMesh: ucpp.Ptr<StaticMesh>, HullCount: ucpp.num.Int32, MaxHullVerts: ucpp.num.Int32, HullPrecision: ucpp.num.Int32): Bool;
	public function SetAllowCPUAccess(StaticMesh: ucpp.Ptr<StaticMesh>, bAllowCPUAccess: Bool): Void;
	public function ReplaceMeshComponentsMeshesOnActors(Actors: ucpp.Ref<TArray<ucpp.Ptr<Actor>>>, MeshToBeReplaced: ucpp.Ptr<StaticMesh>, NewMesh: ucpp.Ptr<StaticMesh>): Void;
	public function ReplaceMeshComponentsMeshes(MeshComponents: ucpp.Ref<TArray<ucpp.Ptr<StaticMeshComp>>>, MeshToBeReplaced: ucpp.Ptr<StaticMesh>, NewMesh: ucpp.Ptr<StaticMesh>): Void;
	public function ReplaceMeshComponentsMaterialsOnActors(Actors: ucpp.Ref<TArray<ucpp.Ptr<Actor>>>, MaterialToBeReplaced: ucpp.Ptr<MaterialInterface>, NewMaterial: ucpp.Ptr<MaterialInterface>): Void;
	public function ReplaceMeshComponentsMaterials(MeshComponents: ucpp.Ref<TArray<ucpp.Ptr<MeshComp>>>, MaterialToBeReplaced: ucpp.Ptr<MaterialInterface>, NewMaterial: ucpp.Ptr<MaterialInterface>): Void;
	public function RemoveUVChannel(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32, UVChannelIndex: ucpp.num.Int32): Bool;
	public function RemoveLods(StaticMesh: ucpp.Ptr<StaticMesh>): Bool;
	public function RemoveCollisionsWithNotification(StaticMesh: ucpp.Ptr<StaticMesh>, bApplyChanges: Bool): Bool;
	public function RemoveCollisions(StaticMesh: ucpp.Ptr<StaticMesh>): Bool;
	public function ReimportAllCustomLODs(StaticMesh: ucpp.Ptr<StaticMesh>): Bool;
	public function MergeStaticMeshActors(ActorsToMerge: ucpp.Ref<TArray<ucpp.Ptr<StaticMeshActor>>>, MergeOptions: ucpp.Ref<MergeStaticMeshActorsOptions>, OutMergedActor: ucpp.Ref<ucpp.Ptr<StaticMeshActor>>): Bool;
	public function JoinStaticMeshActors(ActorsToJoin: ucpp.Ref<TArray<ucpp.Ptr<StaticMeshActor>>>, JoinOptions: ucpp.Ref<JoinStaticMeshActorsOptions>): ucpp.Ptr<Actor>;
	public function IsSectionCollisionEnabled(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32): Bool;
	public function InsertUVChannel(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32, UVChannelIndex: ucpp.num.Int32): Bool;
	public function ImportLOD(BaseStaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32, SourceFilename: FString): ucpp.num.Int32;
	public function HasVertexColors(StaticMesh: ucpp.Ptr<StaticMesh>): Bool;
	public function HasInstanceVertexColors(StaticMeshComponent: ucpp.Ptr<StaticMeshComp>): Bool;
	public function GetSimpleCollisionCount(StaticMesh: ucpp.Ptr<StaticMesh>): ucpp.num.Int32;
	public function GetNumUVChannels(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32): ucpp.num.Int32;
	public function GetNumberVerts(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32): ucpp.num.Int32;
	public function GetNumberMaterials(StaticMesh: ucpp.Ptr<StaticMesh>): ucpp.num.Int32;
	public function GetNaniteSettings(StaticMesh: ucpp.Ptr<StaticMesh>): MeshNaniteSettings;
	public function GetLodScreenSizes(StaticMesh: ucpp.Ptr<StaticMesh>): TArray<ucpp.num.Float32>;
	public function GetLodReductionSettings(StaticMesh: ucpp.Ptr<StaticMesh.ConstStaticMesh>, LodIndex: ucpp.num.Int32, OutReductionOptions: ucpp.Ref<MeshReductionSettings>): Void;
	public function GetLODMaterialSlot(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32): ucpp.num.Int32;
	public function GetLODGroup(StaticMesh: ucpp.Ptr<StaticMesh>): FName;
	public function GetLodCount(StaticMesh: ucpp.Ptr<StaticMesh>): ucpp.num.Int32;
	public function GetLodBuildSettings(StaticMesh: ucpp.Ptr<StaticMesh.ConstStaticMesh>, LodIndex: ucpp.num.Int32, OutBuildOptions: ucpp.Ref<MeshBuildSettings>): Void;
	public function GetConvexCollisionCount(StaticMesh: ucpp.Ptr<StaticMesh>): ucpp.num.Int32;
	public function GetCollisionComplexity(StaticMesh: ucpp.Ptr<StaticMesh>): TEnumAsByte<ECollisionTraceFlag>;
	public function GeneratePlanarUVChannel(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32, UVChannelIndex: ucpp.num.Int32, Position: ucpp.Ref<Vector>, Orientation: ucpp.Ref<Rotator>, Tiling: ucpp.Ref<Vector2D>): Bool;
	public function GenerateCylindricalUVChannel(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32, UVChannelIndex: ucpp.num.Int32, Position: ucpp.Ref<Vector>, Orientation: ucpp.Ref<Rotator>, Tiling: ucpp.Ref<Vector2D>): Bool;
	public function GenerateBoxUVChannel(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32, UVChannelIndex: ucpp.num.Int32, Position: ucpp.Ref<Vector>, Orientation: ucpp.Ref<Rotator>, Size: ucpp.Ref<Vector>): Bool;
	public function EnableSectionCollision(StaticMesh: ucpp.Ptr<StaticMesh>, bCollisionEnabled: Bool, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32): Void;
	public function EnableSectionCastShadow(StaticMesh: ucpp.Ptr<StaticMesh>, bCastShadow: Bool, LODIndex: ucpp.num.Int32, SectionIndex: ucpp.num.Int32): Void;
	public function CreateProxyMeshActor(ActorsToMerge: ucpp.Ref<TArray<ucpp.Ptr<StaticMeshActor>>>, MergeOptions: ucpp.Ref<CreateProxyMeshActorOptions>, OutMergedActor: ucpp.Ref<ucpp.Ptr<StaticMeshActor>>): Bool;
	public function BulkSetConvexDecompositionCollisionsWithNotification(StaticMeshes: ucpp.Ref<TArray<ucpp.Ptr<StaticMesh>>>, HullCount: ucpp.num.Int32, MaxHullVerts: ucpp.num.Int32, HullPrecision: ucpp.num.Int32, bApplyChanges: Bool): Bool;
	public function BulkSetConvexDecompositionCollisions(StaticMeshes: ucpp.Ref<TArray<ucpp.Ptr<StaticMesh>>>, HullCount: ucpp.num.Int32, MaxHullVerts: ucpp.num.Int32, HullPrecision: ucpp.num.Int32): Bool;
	public function AddUVChannel(StaticMesh: ucpp.Ptr<StaticMesh>, LODIndex: ucpp.num.Int32): Bool;
	public function AddSimpleCollisionsWithNotification(StaticMesh: ucpp.Ptr<StaticMesh>, ShapeType: EScriptCollisionShapeType, bApplyChanges: Bool): ucpp.num.Int32;
	public function AddSimpleCollisions(StaticMesh: ucpp.Ptr<StaticMesh>, ShapeType: EScriptCollisionShapeType): ucpp.num.Int32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstStaticMeshEditorSubsystem(StaticMeshEditorSubsystem) from StaticMeshEditorSubsystem {
}

@:forward
@:nativeGen
@:native("StaticMeshEditorSubsystem*")
abstract StaticMeshEditorSubsystemPtr(ucpp.Ptr<StaticMeshEditorSubsystem>) from ucpp.Ptr<StaticMeshEditorSubsystem> to ucpp.Ptr<StaticMeshEditorSubsystem>{
	@:from
	public static extern inline function fromValue(v: StaticMeshEditorSubsystem): StaticMeshEditorSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): StaticMeshEditorSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}