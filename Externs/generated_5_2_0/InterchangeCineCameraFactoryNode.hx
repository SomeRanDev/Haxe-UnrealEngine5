// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeCineCameraFactoryNode")
@:include("InterchangeCineCameraFactoryNode.h")
@:valueType
extern class InterchangeCineCameraFactoryNode extends InterchangeActorFactoryNode {
	public function SetCustomSensorWidth(AttributeValue: ucpp.Ref<ucpp.num.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomSensorHeight(AttributeValue: ucpp.Ref<ucpp.num.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomFocusMethod(AttributeValue: ucpp.Ref<ECameraFocusMethod>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomFocalLength(AttributeValue: ucpp.Ref<ucpp.num.Float32>, bAddApplyDelegate: Bool): Bool;
	public function GetCustomSensorWidth(AttributeValue: ucpp.Ref<ucpp.num.Float32>): Bool;
	public function GetCustomSensorHeight(AttributeValue: ucpp.Ref<ucpp.num.Float32>): Bool;
	public function GetCustomFocusMethod(AttributeValue: ucpp.Ref<ECameraFocusMethod>): Bool;
	public function GetCustomFocalLength(AttributeValue: ucpp.Ref<ucpp.num.Float32>): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetCustomSensorWidth, GetCustomSensorHeight, GetCustomFocusMethod, GetCustomFocalLength)
@:nativeGen
abstract ConstInterchangeCineCameraFactoryNode(InterchangeCineCameraFactoryNode) from InterchangeCineCameraFactoryNode {
}

@:forward
@:nativeGen
@:native("InterchangeCineCameraFactoryNode*")
abstract InterchangeCineCameraFactoryNodePtr(ucpp.Ptr<InterchangeCineCameraFactoryNode>) from ucpp.Ptr<InterchangeCineCameraFactoryNode> to ucpp.Ptr<InterchangeCineCameraFactoryNode>{
	@:from
	public static extern inline function fromValue(v: InterchangeCineCameraFactoryNode): InterchangeCineCameraFactoryNodePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeCineCameraFactoryNode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}