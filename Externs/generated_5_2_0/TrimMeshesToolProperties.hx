// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTrimMeshesToolProperties")
@:include("CSGMeshesTool.h")
@:valueType
extern class TrimMeshesToolProperties extends InteractiveToolPropertySet {
	public var WhichMesh: ETrimOperation;
	public var TrimSide: ETrimSide;
	public var WindingThreshold: ucpp.num.Float32;
	public var bShowTrimmingMesh: Bool;
	public var OpacityOfTrimmingMesh: ucpp.num.Float32;
	public var ColorOfTrimmingMesh: LinearColor;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstTrimMeshesToolProperties(TrimMeshesToolProperties) from TrimMeshesToolProperties {
	public extern var WhichMesh(get, never): ETrimOperation;
	public inline extern function get_WhichMesh(): ETrimOperation return this.WhichMesh;
	public extern var TrimSide(get, never): ETrimSide;
	public inline extern function get_TrimSide(): ETrimSide return this.TrimSide;
	public extern var WindingThreshold(get, never): ucpp.num.Float32;
	public inline extern function get_WindingThreshold(): ucpp.num.Float32 return this.WindingThreshold;
	public extern var bShowTrimmingMesh(get, never): Bool;
	public inline extern function get_bShowTrimmingMesh(): Bool return this.bShowTrimmingMesh;
	public extern var OpacityOfTrimmingMesh(get, never): ucpp.num.Float32;
	public inline extern function get_OpacityOfTrimmingMesh(): ucpp.num.Float32 return this.OpacityOfTrimmingMesh;
	public extern var ColorOfTrimmingMesh(get, never): LinearColor;
	public inline extern function get_ColorOfTrimmingMesh(): LinearColor return this.ColorOfTrimmingMesh;
}

@:forward
@:nativeGen
@:native("TrimMeshesToolProperties*")
abstract TrimMeshesToolPropertiesPtr(ucpp.Ptr<TrimMeshesToolProperties>) from ucpp.Ptr<TrimMeshesToolProperties> to ucpp.Ptr<TrimMeshesToolProperties>{
	@:from
	public static extern inline function fromValue(v: TrimMeshesToolProperties): TrimMeshesToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TrimMeshesToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}