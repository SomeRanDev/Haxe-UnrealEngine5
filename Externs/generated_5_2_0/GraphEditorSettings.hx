// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGraphEditorSettings")
@:include("GraphEditorSettings.h")
@:valueType
extern class GraphEditorSettings extends Object {
	public var DataPinStyle: TEnumAsByte<EBlueprintPinStyleType>;
	public var PanningMouseButton: EGraphPanningMouseButton;
	public var PaddingAbovePin: ucpp.num.Float32;
	public var PaddingBelowPin: ucpp.num.Float32;
	public var PaddingRightOfInput: ucpp.num.Float32;
	public var PaddingLeftOfOutput: ucpp.num.Float32;
	public var PaddingTowardsNodeEdge: ucpp.num.Float32;
	public var bTreatSplinesLikePins: Bool;
	public var SplineHoverTolerance: ucpp.num.Float32;
	public var SplineCloseTolerance: ucpp.num.Float32;
	public var ForwardSplineHorizontalDeltaRange: ucpp.num.Float32;
	public var ForwardSplineVerticalDeltaRange: ucpp.num.Float32;
	public var ForwardSplineTangentFromHorizontalDelta: Vector2D;
	public var ForwardSplineTangentFromVerticalDelta: Vector2D;
	public var BackwardSplineHorizontalDeltaRange: ucpp.num.Float32;
	public var BackwardSplineVerticalDeltaRange: ucpp.num.Float32;
	public var BackwardSplineTangentFromHorizontalDelta: Vector2D;
	public var BackwardSplineTangentFromVerticalDelta: Vector2D;
	public var DefaultPinTypeColor: LinearColor;
	public var ExecutionPinTypeColor: LinearColor;
	public var BooleanPinTypeColor: LinearColor;
	public var BytePinTypeColor: LinearColor;
	public var ClassPinTypeColor: LinearColor;
	public var IntPinTypeColor: LinearColor;
	public var Int64PinTypeColor: LinearColor;
	public var FloatPinTypeColor: LinearColor;
	public var DoublePinTypeColor: LinearColor;
	public var RealPinTypeColor: LinearColor;
	public var NamePinTypeColor: LinearColor;
	public var SoftObjectPinTypeColor: LinearColor;
	public var SoftClassPinTypeColor: LinearColor;
	public var DelegatePinTypeColor: LinearColor;
	public var ObjectPinTypeColor: LinearColor;
	public var InterfacePinTypeColor: LinearColor;
	public var StringPinTypeColor: LinearColor;
	public var TextPinTypeColor: LinearColor;
	public var StructPinTypeColor: LinearColor;
	public var WildcardPinTypeColor: LinearColor;
	public var VectorPinTypeColor: LinearColor;
	public var RotatorPinTypeColor: LinearColor;
	public var TransformPinTypeColor: LinearColor;
	public var IndexPinTypeColor: LinearColor;
	public var EventNodeTitleColor: LinearColor;
	public var FunctionCallNodeTitleColor: LinearColor;
	public var PureFunctionCallNodeTitleColor: LinearColor;
	public var ParentFunctionCallNodeTitleColor: LinearColor;
	public var FunctionTerminatorNodeTitleColor: LinearColor;
	public var ExecBranchNodeTitleColor: LinearColor;
	public var ExecSequenceNodeTitleColor: LinearColor;
	public var ResultNodeTitleColor: LinearColor;
	public var DefaultCommentNodeTitleColor: LinearColor;
	public var PreviewNodeTitleColor: LinearColor;
	public var DefaultDataWireThickness: ucpp.num.Float32;
	public var DefaultExecutionWireThickness: ucpp.num.Float32;
	public var TraceAttackColor: LinearColor;
	public var TraceAttackWireThickness: ucpp.num.Float32;
	public var TraceAttackHoldPeriod: ucpp.num.Float32;
	public var TraceDecayPeriod: ucpp.num.Float32;
	public var TraceDecayExponent: ucpp.num.Float32;
	public var TraceSustainColor: LinearColor;
	public var TraceSustainWireThickness: ucpp.num.Float32;
	public var TraceSustainHoldPeriod: ucpp.num.Float32;
	public var TraceReleaseColor: LinearColor;
	public var TraceReleaseWireThickness: ucpp.num.Float32;
	public var TraceReleasePeriod: ucpp.num.Float32;
	public var TraceReleaseExponent: ucpp.num.Float32;
	public var TracePositionBonusPeriod: ucpp.num.Float32;
	public var TracePositionExponent: ucpp.num.Float32;
	public var PaddingAutoCollateIncrement: ucpp.num.Float32;
	public var bOpenCreateMenuOnBlankGraphAreas: Bool;
	public var DefaultCommentNodeMoveMode: TEnumAsByte<ECommentBoxMode>;
	public var bShowCommentBubbleWhenZoomedOut: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstGraphEditorSettings(GraphEditorSettings) from GraphEditorSettings {
	public extern var DataPinStyle(get, never): TEnumAsByte<EBlueprintPinStyleType>;
	public inline extern function get_DataPinStyle(): TEnumAsByte<EBlueprintPinStyleType> return this.DataPinStyle;
	public extern var PanningMouseButton(get, never): EGraphPanningMouseButton;
	public inline extern function get_PanningMouseButton(): EGraphPanningMouseButton return this.PanningMouseButton;
	public extern var PaddingAbovePin(get, never): ucpp.num.Float32;
	public inline extern function get_PaddingAbovePin(): ucpp.num.Float32 return this.PaddingAbovePin;
	public extern var PaddingBelowPin(get, never): ucpp.num.Float32;
	public inline extern function get_PaddingBelowPin(): ucpp.num.Float32 return this.PaddingBelowPin;
	public extern var PaddingRightOfInput(get, never): ucpp.num.Float32;
	public inline extern function get_PaddingRightOfInput(): ucpp.num.Float32 return this.PaddingRightOfInput;
	public extern var PaddingLeftOfOutput(get, never): ucpp.num.Float32;
	public inline extern function get_PaddingLeftOfOutput(): ucpp.num.Float32 return this.PaddingLeftOfOutput;
	public extern var PaddingTowardsNodeEdge(get, never): ucpp.num.Float32;
	public inline extern function get_PaddingTowardsNodeEdge(): ucpp.num.Float32 return this.PaddingTowardsNodeEdge;
	public extern var bTreatSplinesLikePins(get, never): Bool;
	public inline extern function get_bTreatSplinesLikePins(): Bool return this.bTreatSplinesLikePins;
	public extern var SplineHoverTolerance(get, never): ucpp.num.Float32;
	public inline extern function get_SplineHoverTolerance(): ucpp.num.Float32 return this.SplineHoverTolerance;
	public extern var SplineCloseTolerance(get, never): ucpp.num.Float32;
	public inline extern function get_SplineCloseTolerance(): ucpp.num.Float32 return this.SplineCloseTolerance;
	public extern var ForwardSplineHorizontalDeltaRange(get, never): ucpp.num.Float32;
	public inline extern function get_ForwardSplineHorizontalDeltaRange(): ucpp.num.Float32 return this.ForwardSplineHorizontalDeltaRange;
	public extern var ForwardSplineVerticalDeltaRange(get, never): ucpp.num.Float32;
	public inline extern function get_ForwardSplineVerticalDeltaRange(): ucpp.num.Float32 return this.ForwardSplineVerticalDeltaRange;
	public extern var ForwardSplineTangentFromHorizontalDelta(get, never): Vector2D;
	public inline extern function get_ForwardSplineTangentFromHorizontalDelta(): Vector2D return this.ForwardSplineTangentFromHorizontalDelta;
	public extern var ForwardSplineTangentFromVerticalDelta(get, never): Vector2D;
	public inline extern function get_ForwardSplineTangentFromVerticalDelta(): Vector2D return this.ForwardSplineTangentFromVerticalDelta;
	public extern var BackwardSplineHorizontalDeltaRange(get, never): ucpp.num.Float32;
	public inline extern function get_BackwardSplineHorizontalDeltaRange(): ucpp.num.Float32 return this.BackwardSplineHorizontalDeltaRange;
	public extern var BackwardSplineVerticalDeltaRange(get, never): ucpp.num.Float32;
	public inline extern function get_BackwardSplineVerticalDeltaRange(): ucpp.num.Float32 return this.BackwardSplineVerticalDeltaRange;
	public extern var BackwardSplineTangentFromHorizontalDelta(get, never): Vector2D;
	public inline extern function get_BackwardSplineTangentFromHorizontalDelta(): Vector2D return this.BackwardSplineTangentFromHorizontalDelta;
	public extern var BackwardSplineTangentFromVerticalDelta(get, never): Vector2D;
	public inline extern function get_BackwardSplineTangentFromVerticalDelta(): Vector2D return this.BackwardSplineTangentFromVerticalDelta;
	public extern var DefaultPinTypeColor(get, never): LinearColor;
	public inline extern function get_DefaultPinTypeColor(): LinearColor return this.DefaultPinTypeColor;
	public extern var ExecutionPinTypeColor(get, never): LinearColor;
	public inline extern function get_ExecutionPinTypeColor(): LinearColor return this.ExecutionPinTypeColor;
	public extern var BooleanPinTypeColor(get, never): LinearColor;
	public inline extern function get_BooleanPinTypeColor(): LinearColor return this.BooleanPinTypeColor;
	public extern var BytePinTypeColor(get, never): LinearColor;
	public inline extern function get_BytePinTypeColor(): LinearColor return this.BytePinTypeColor;
	public extern var ClassPinTypeColor(get, never): LinearColor;
	public inline extern function get_ClassPinTypeColor(): LinearColor return this.ClassPinTypeColor;
	public extern var IntPinTypeColor(get, never): LinearColor;
	public inline extern function get_IntPinTypeColor(): LinearColor return this.IntPinTypeColor;
	public extern var Int64PinTypeColor(get, never): LinearColor;
	public inline extern function get_Int64PinTypeColor(): LinearColor return this.Int64PinTypeColor;
	public extern var FloatPinTypeColor(get, never): LinearColor;
	public inline extern function get_FloatPinTypeColor(): LinearColor return this.FloatPinTypeColor;
	public extern var DoublePinTypeColor(get, never): LinearColor;
	public inline extern function get_DoublePinTypeColor(): LinearColor return this.DoublePinTypeColor;
	public extern var RealPinTypeColor(get, never): LinearColor;
	public inline extern function get_RealPinTypeColor(): LinearColor return this.RealPinTypeColor;
	public extern var NamePinTypeColor(get, never): LinearColor;
	public inline extern function get_NamePinTypeColor(): LinearColor return this.NamePinTypeColor;
	public extern var SoftObjectPinTypeColor(get, never): LinearColor;
	public inline extern function get_SoftObjectPinTypeColor(): LinearColor return this.SoftObjectPinTypeColor;
	public extern var SoftClassPinTypeColor(get, never): LinearColor;
	public inline extern function get_SoftClassPinTypeColor(): LinearColor return this.SoftClassPinTypeColor;
	public extern var DelegatePinTypeColor(get, never): LinearColor;
	public inline extern function get_DelegatePinTypeColor(): LinearColor return this.DelegatePinTypeColor;
	public extern var ObjectPinTypeColor(get, never): LinearColor;
	public inline extern function get_ObjectPinTypeColor(): LinearColor return this.ObjectPinTypeColor;
	public extern var InterfacePinTypeColor(get, never): LinearColor;
	public inline extern function get_InterfacePinTypeColor(): LinearColor return this.InterfacePinTypeColor;
	public extern var StringPinTypeColor(get, never): LinearColor;
	public inline extern function get_StringPinTypeColor(): LinearColor return this.StringPinTypeColor;
	public extern var TextPinTypeColor(get, never): LinearColor;
	public inline extern function get_TextPinTypeColor(): LinearColor return this.TextPinTypeColor;
	public extern var StructPinTypeColor(get, never): LinearColor;
	public inline extern function get_StructPinTypeColor(): LinearColor return this.StructPinTypeColor;
	public extern var WildcardPinTypeColor(get, never): LinearColor;
	public inline extern function get_WildcardPinTypeColor(): LinearColor return this.WildcardPinTypeColor;
	public extern var VectorPinTypeColor(get, never): LinearColor;
	public inline extern function get_VectorPinTypeColor(): LinearColor return this.VectorPinTypeColor;
	public extern var RotatorPinTypeColor(get, never): LinearColor;
	public inline extern function get_RotatorPinTypeColor(): LinearColor return this.RotatorPinTypeColor;
	public extern var TransformPinTypeColor(get, never): LinearColor;
	public inline extern function get_TransformPinTypeColor(): LinearColor return this.TransformPinTypeColor;
	public extern var IndexPinTypeColor(get, never): LinearColor;
	public inline extern function get_IndexPinTypeColor(): LinearColor return this.IndexPinTypeColor;
	public extern var EventNodeTitleColor(get, never): LinearColor;
	public inline extern function get_EventNodeTitleColor(): LinearColor return this.EventNodeTitleColor;
	public extern var FunctionCallNodeTitleColor(get, never): LinearColor;
	public inline extern function get_FunctionCallNodeTitleColor(): LinearColor return this.FunctionCallNodeTitleColor;
	public extern var PureFunctionCallNodeTitleColor(get, never): LinearColor;
	public inline extern function get_PureFunctionCallNodeTitleColor(): LinearColor return this.PureFunctionCallNodeTitleColor;
	public extern var ParentFunctionCallNodeTitleColor(get, never): LinearColor;
	public inline extern function get_ParentFunctionCallNodeTitleColor(): LinearColor return this.ParentFunctionCallNodeTitleColor;
	public extern var FunctionTerminatorNodeTitleColor(get, never): LinearColor;
	public inline extern function get_FunctionTerminatorNodeTitleColor(): LinearColor return this.FunctionTerminatorNodeTitleColor;
	public extern var ExecBranchNodeTitleColor(get, never): LinearColor;
	public inline extern function get_ExecBranchNodeTitleColor(): LinearColor return this.ExecBranchNodeTitleColor;
	public extern var ExecSequenceNodeTitleColor(get, never): LinearColor;
	public inline extern function get_ExecSequenceNodeTitleColor(): LinearColor return this.ExecSequenceNodeTitleColor;
	public extern var ResultNodeTitleColor(get, never): LinearColor;
	public inline extern function get_ResultNodeTitleColor(): LinearColor return this.ResultNodeTitleColor;
	public extern var DefaultCommentNodeTitleColor(get, never): LinearColor;
	public inline extern function get_DefaultCommentNodeTitleColor(): LinearColor return this.DefaultCommentNodeTitleColor;
	public extern var PreviewNodeTitleColor(get, never): LinearColor;
	public inline extern function get_PreviewNodeTitleColor(): LinearColor return this.PreviewNodeTitleColor;
	public extern var DefaultDataWireThickness(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultDataWireThickness(): ucpp.num.Float32 return this.DefaultDataWireThickness;
	public extern var DefaultExecutionWireThickness(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultExecutionWireThickness(): ucpp.num.Float32 return this.DefaultExecutionWireThickness;
	public extern var TraceAttackColor(get, never): LinearColor;
	public inline extern function get_TraceAttackColor(): LinearColor return this.TraceAttackColor;
	public extern var TraceAttackWireThickness(get, never): ucpp.num.Float32;
	public inline extern function get_TraceAttackWireThickness(): ucpp.num.Float32 return this.TraceAttackWireThickness;
	public extern var TraceAttackHoldPeriod(get, never): ucpp.num.Float32;
	public inline extern function get_TraceAttackHoldPeriod(): ucpp.num.Float32 return this.TraceAttackHoldPeriod;
	public extern var TraceDecayPeriod(get, never): ucpp.num.Float32;
	public inline extern function get_TraceDecayPeriod(): ucpp.num.Float32 return this.TraceDecayPeriod;
	public extern var TraceDecayExponent(get, never): ucpp.num.Float32;
	public inline extern function get_TraceDecayExponent(): ucpp.num.Float32 return this.TraceDecayExponent;
	public extern var TraceSustainColor(get, never): LinearColor;
	public inline extern function get_TraceSustainColor(): LinearColor return this.TraceSustainColor;
	public extern var TraceSustainWireThickness(get, never): ucpp.num.Float32;
	public inline extern function get_TraceSustainWireThickness(): ucpp.num.Float32 return this.TraceSustainWireThickness;
	public extern var TraceSustainHoldPeriod(get, never): ucpp.num.Float32;
	public inline extern function get_TraceSustainHoldPeriod(): ucpp.num.Float32 return this.TraceSustainHoldPeriod;
	public extern var TraceReleaseColor(get, never): LinearColor;
	public inline extern function get_TraceReleaseColor(): LinearColor return this.TraceReleaseColor;
	public extern var TraceReleaseWireThickness(get, never): ucpp.num.Float32;
	public inline extern function get_TraceReleaseWireThickness(): ucpp.num.Float32 return this.TraceReleaseWireThickness;
	public extern var TraceReleasePeriod(get, never): ucpp.num.Float32;
	public inline extern function get_TraceReleasePeriod(): ucpp.num.Float32 return this.TraceReleasePeriod;
	public extern var TraceReleaseExponent(get, never): ucpp.num.Float32;
	public inline extern function get_TraceReleaseExponent(): ucpp.num.Float32 return this.TraceReleaseExponent;
	public extern var TracePositionBonusPeriod(get, never): ucpp.num.Float32;
	public inline extern function get_TracePositionBonusPeriod(): ucpp.num.Float32 return this.TracePositionBonusPeriod;
	public extern var TracePositionExponent(get, never): ucpp.num.Float32;
	public inline extern function get_TracePositionExponent(): ucpp.num.Float32 return this.TracePositionExponent;
	public extern var PaddingAutoCollateIncrement(get, never): ucpp.num.Float32;
	public inline extern function get_PaddingAutoCollateIncrement(): ucpp.num.Float32 return this.PaddingAutoCollateIncrement;
	public extern var bOpenCreateMenuOnBlankGraphAreas(get, never): Bool;
	public inline extern function get_bOpenCreateMenuOnBlankGraphAreas(): Bool return this.bOpenCreateMenuOnBlankGraphAreas;
	public extern var DefaultCommentNodeMoveMode(get, never): TEnumAsByte<ECommentBoxMode>;
	public inline extern function get_DefaultCommentNodeMoveMode(): TEnumAsByte<ECommentBoxMode> return this.DefaultCommentNodeMoveMode;
	public extern var bShowCommentBubbleWhenZoomedOut(get, never): Bool;
	public inline extern function get_bShowCommentBubbleWhenZoomedOut(): Bool return this.bShowCommentBubbleWhenZoomedOut;
}

@:forward
@:nativeGen
@:native("GraphEditorSettings*")
abstract GraphEditorSettingsPtr(ucpp.Ptr<GraphEditorSettings>) from ucpp.Ptr<GraphEditorSettings> to ucpp.Ptr<GraphEditorSettings>{
	@:from
	public static extern inline function fromValue(v: GraphEditorSettings): GraphEditorSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GraphEditorSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}