// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBlendSpaceLibrary")
@:include("BlendSpaceLibrary.h")
@:valueType
extern class BlendSpaceLibrary extends BlueprintFunctionLibrary {
	public function SnapToPosition(BlendSpace: ucpp.Ref<BlendSpaceReference>, NewPosition: Vector): Void;
	public function GetPosition(BlendSpace: ucpp.Ref<BlendSpaceReference>): Vector;
	public function GetFilteredPosition(BlendSpace: ucpp.Ref<BlendSpaceReference>): Vector;
	public function ConvertToBlendSpacePure(Node: ucpp.Ref<AnimNodeReference>, BlendSpace: ucpp.Ref<BlendSpaceReference>, Result: ucpp.Ref<Bool>): Void;
	public function ConvertToBlendSpace(Node: ucpp.Ref<AnimNodeReference>, Result: ucpp.Ref<EAnimNodeReferenceConversionResult>): BlendSpaceReference;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstBlendSpaceLibrary(BlendSpaceLibrary) from BlendSpaceLibrary {
}

@:forward
@:nativeGen
@:native("BlendSpaceLibrary*")
abstract BlendSpaceLibraryPtr(ucpp.Ptr<BlendSpaceLibrary>) from ucpp.Ptr<BlendSpaceLibrary> to ucpp.Ptr<BlendSpaceLibrary>{
	@:from
	public static extern inline function fromValue(v: BlendSpaceLibrary): BlendSpaceLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BlendSpaceLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}