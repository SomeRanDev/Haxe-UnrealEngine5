// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionSwitch")
@:include("Materials/MaterialExpressionSwitch.h")
@:valueType
extern class MaterialExpressionSwitch extends MaterialExpression {
	public var Description: FString;
	public var SwitchValue: ExpressionInput;
	public var ConstSwitchValue: ucpp.num.Float32;
	public var Default: ExpressionInput;
	public var ConstDefault: ucpp.num.Float32;
	public var Inputs: TArray<SwitchCustomInput>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionSwitch(MaterialExpressionSwitch) from MaterialExpressionSwitch {
	public extern var Description(get, never): FString;
	public inline extern function get_Description(): FString return this.Description;
	public extern var SwitchValue(get, never): ExpressionInput;
	public inline extern function get_SwitchValue(): ExpressionInput return this.SwitchValue;
	public extern var ConstSwitchValue(get, never): ucpp.num.Float32;
	public inline extern function get_ConstSwitchValue(): ucpp.num.Float32 return this.ConstSwitchValue;
	public extern var Default(get, never): ExpressionInput;
	public inline extern function get_Default(): ExpressionInput return this.Default;
	public extern var ConstDefault(get, never): ucpp.num.Float32;
	public inline extern function get_ConstDefault(): ucpp.num.Float32 return this.ConstDefault;
	public extern var Inputs(get, never): TArray<SwitchCustomInput>;
	public inline extern function get_Inputs(): TArray<SwitchCustomInput> return this.Inputs;
}

@:forward
@:nativeGen
@:native("MaterialExpressionSwitch*")
abstract MaterialExpressionSwitchPtr(ucpp.Ptr<MaterialExpressionSwitch>) from ucpp.Ptr<MaterialExpressionSwitch> to ucpp.Ptr<MaterialExpressionSwitch>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionSwitch): MaterialExpressionSwitchPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionSwitch {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}