// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMeshComponent")
@:include("Components/MeshComponent.h")
@:structAccess
extern class MeshComp extends PrimitiveComp {
	public var OverrideMaterials: TArray<cpp.Star<MaterialInterface>>;
	public var OverlayMaterial: cpp.Star<MaterialInterface>;
	public var OverlayMaterialMaxDrawDistance: cpp.Float32;
	@:protected public var bEnableMaterialParameterCaching: Bool;

	public function SetVectorParameterValueOnMaterials(ParameterName: FName, ParameterValue: Vector): Void;
	public function SetScalarParameterValueOnMaterials(ParameterName: FName, ParameterValue: cpp.Float32): Void;
	public function SetOverlayMaterialMaxDrawDistance(InMaxDrawDistance: cpp.Float32): Void;
	public function SetOverlayMaterial(NewOverlayMaterial: cpp.Star<MaterialInterface>): Void;
	public function PrestreamTextures(Seconds: cpp.Float32, bPrioritizeCharacterTextures: Bool, CinematicTextureGroups: cpp.Int32): Void;
	public function IsMaterialSlotNameValid(MaterialSlotName: FName): Bool;
	public function GetOverlayMaterial(): cpp.Star<MaterialInterface>;
	public function GetMaterialSlotNames(): TArray<FName>;
	public function GetMaterials(): TArray<cpp.Star<MaterialInterface>>;
	public function GetMaterialIndex(MaterialSlotName: FName): cpp.Int32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(IsMaterialSlotNameValid, GetOverlayMaterial, GetMaterialSlotNames, GetMaterials, GetMaterialIndex)
@:nativeGen
abstract ConstMeshComp(MeshComp) from MeshComp {
	public extern var OverrideMaterials(get, never): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>>;
	public inline extern function get_OverrideMaterials(): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>> return this.OverrideMaterials;
	public extern var OverlayMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_OverlayMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.OverlayMaterial;
	public extern var OverlayMaterialMaxDrawDistance(get, never): cpp.Float32;
	public inline extern function get_OverlayMaterialMaxDrawDistance(): cpp.Float32 return this.OverlayMaterialMaxDrawDistance;
}

@:forward
@:nativeGen
@:native("MeshComp*")
abstract MeshCompPtr(cpp.Star<MeshComp>) from cpp.Star<MeshComp> to cpp.Star<MeshComp>{
	@:from
	public static extern inline function fromValue(v: MeshComp): MeshCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MeshComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}