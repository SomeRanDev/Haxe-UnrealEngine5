// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMeshComponent")
@:include("Components/MeshComponent.h")
@:valueType
extern class MeshComp extends PrimitiveComp {
	public var OverrideMaterials: TArray<ucpp.Ptr<MaterialInterface>>;
	public var OverlayMaterial: ucpp.Ptr<MaterialInterface>;
	public var OverlayMaterialMaxDrawDistance: ucpp.num.Float32;
	@:protected public var bEnableMaterialParameterCaching: Bool;

	public function SetVectorParameterValueOnMaterials(ParameterName: FName, ParameterValue: Vector): Void;
	public function SetScalarParameterValueOnMaterials(ParameterName: FName, ParameterValue: ucpp.num.Float32): Void;
	public function SetOverlayMaterialMaxDrawDistance(InMaxDrawDistance: ucpp.num.Float32): Void;
	public function SetOverlayMaterial(NewOverlayMaterial: ucpp.Ptr<MaterialInterface>): Void;
	public function PrestreamTextures(Seconds: ucpp.num.Float32, bPrioritizeCharacterTextures: Bool, CinematicTextureGroups: ucpp.num.Int32): Void;
	public function IsMaterialSlotNameValid(MaterialSlotName: FName): Bool;
	public function GetOverlayMaterial(): ucpp.Ptr<MaterialInterface>;
	public function GetMaterialSlotNames(): TArray<FName>;
	public function GetMaterials(): TArray<ucpp.Ptr<MaterialInterface>>;
	public function GetMaterialIndex(MaterialSlotName: FName): ucpp.num.Int32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsMaterialSlotNameValid, GetOverlayMaterial, GetMaterialSlotNames, GetMaterials, GetMaterialIndex)
@:nativeGen
abstract ConstMeshComp(MeshComp) from MeshComp {
	public extern var OverrideMaterials(get, never): TArray<ucpp.Ptr<MaterialInterface.ConstMaterialInterface>>;
	public inline extern function get_OverrideMaterials(): TArray<ucpp.Ptr<MaterialInterface.ConstMaterialInterface>> return this.OverrideMaterials;
	public extern var OverlayMaterial(get, never): ucpp.Ptr<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_OverlayMaterial(): ucpp.Ptr<MaterialInterface.ConstMaterialInterface> return this.OverlayMaterial;
	public extern var OverlayMaterialMaxDrawDistance(get, never): ucpp.num.Float32;
	public inline extern function get_OverlayMaterialMaxDrawDistance(): ucpp.num.Float32 return this.OverlayMaterialMaxDrawDistance;
}

@:forward
@:nativeGen
@:native("MeshComp*")
abstract MeshCompPtr(ucpp.Ptr<MeshComp>) from ucpp.Ptr<MeshComp> to ucpp.Ptr<MeshComp>{
	@:from
	public static extern inline function fromValue(v: MeshComp): MeshCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MeshComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}