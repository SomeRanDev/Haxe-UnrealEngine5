// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGeomModifier_Clip")
@:include("GeomModifier_Clip.h")
@:structAccess
extern class GeomModifier_Clip extends GeomModifier_Edit {
	public var bFlipNormal: Bool;
	public var bSplit: Bool;
	public var ClipMarkers: TArray<Vector>;
	public var SnappedMouseWorldSpacePos: Vector;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGeomModifier_Clip(GeomModifier_Clip) from GeomModifier_Clip {
	public extern var bFlipNormal(get, never): Bool;
	public inline extern function get_bFlipNormal(): Bool return this.bFlipNormal;
	public extern var bSplit(get, never): Bool;
	public inline extern function get_bSplit(): Bool return this.bSplit;
	public extern var ClipMarkers(get, never): TArray<Vector>;
	public inline extern function get_ClipMarkers(): TArray<Vector> return this.ClipMarkers;
	public extern var SnappedMouseWorldSpacePos(get, never): Vector;
	public inline extern function get_SnappedMouseWorldSpacePos(): Vector return this.SnappedMouseWorldSpacePos;
}

@:forward
@:nativeGen
@:native("GeomModifier_Clip*")
abstract GeomModifier_ClipPtr(cpp.Star<GeomModifier_Clip>) from cpp.Star<GeomModifier_Clip> to cpp.Star<GeomModifier_Clip>{
	@:from
	public static extern inline function fromValue(v: GeomModifier_Clip): GeomModifier_ClipPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GeomModifier_Clip {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}