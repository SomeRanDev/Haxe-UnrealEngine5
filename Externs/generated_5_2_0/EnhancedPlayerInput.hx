// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEnhancedPlayerInput")
@:include("EnhancedPlayerInput.h")
@:valueType
extern class EnhancedPlayerInput extends PlayerInput {
	private var AppliedInputContexts: TMap<ucpp.Ptr<InputMappingContext>, ucpp.num.Int32>;
	private var EnhancedActionMappings: TArray<EnhancedActionKeyMapping>;
	private var ActionInstanceData: TMap<ucpp.Ptr<InputAction>, InputActionInstance>;
	private var KeysPressedThisTick: TMap<Key, Vector>;
	private var InputsInjectedThisTick: TMap<ucpp.Ptr<InputAction>, InjectedInputArray>;
	private var LastInjectedActions: TSet<ucpp.Ptr<InputAction>>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstEnhancedPlayerInput(EnhancedPlayerInput) from EnhancedPlayerInput {
}

@:forward
@:nativeGen
@:native("EnhancedPlayerInput*")
abstract EnhancedPlayerInputPtr(ucpp.Ptr<EnhancedPlayerInput>) from ucpp.Ptr<EnhancedPlayerInput> to ucpp.Ptr<EnhancedPlayerInput>{
	@:from
	public static extern inline function fromValue(v: EnhancedPlayerInput): EnhancedPlayerInputPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EnhancedPlayerInput {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}