// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEnvQueryOption")
@:include("EnvironmentQuery/EnvQueryOption.h")
@:valueType
extern class EnvQueryOption extends Object {
	public var Generator: ucpp.Ptr<EnvQueryGenerator>;
	public var Tests: TArray<ucpp.Ptr<EnvQueryTest>>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstEnvQueryOption(EnvQueryOption) from EnvQueryOption {
	public extern var Generator(get, never): ucpp.Ptr<EnvQueryGenerator.ConstEnvQueryGenerator>;
	public inline extern function get_Generator(): ucpp.Ptr<EnvQueryGenerator.ConstEnvQueryGenerator> return this.Generator;
	public extern var Tests(get, never): TArray<ucpp.Ptr<EnvQueryTest.ConstEnvQueryTest>>;
	public inline extern function get_Tests(): TArray<ucpp.Ptr<EnvQueryTest.ConstEnvQueryTest>> return this.Tests;
}

@:forward
@:nativeGen
@:native("EnvQueryOption*")
abstract EnvQueryOptionPtr(ucpp.Ptr<EnvQueryOption>) from ucpp.Ptr<EnvQueryOption> to ucpp.Ptr<EnvQueryOption>{
	@:from
	public static extern inline function fromValue(v: EnvQueryOption): EnvQueryOptionPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EnvQueryOption {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}