// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovieSceneBindingExtensions")
@:include("ExtensionLibraries/MovieSceneBindingExtensions.h")
@:valueType
extern class MovieSceneBindingExtensions extends BlueprintFunctionLibrary {
	public function SetSpawnableBindingID(InBinding: ucpp.Ref<MovieSceneBindingProxy>, SpawnableBindingID: ucpp.Ref<MovieSceneObjectBindingID>): Void;
	public function SetSortingOrder(InBinding: ucpp.Ref<MovieSceneBindingProxy>, SortingOrder: ucpp.num.Int32): Void;
	public function SetParent(InBinding: ucpp.Ref<MovieSceneBindingProxy>, InParentBinding: ucpp.Ref<MovieSceneBindingProxy>): Void;
	public function SetName(InBinding: ucpp.Ref<MovieSceneBindingProxy>, InName: FString): Void;
	public function SetDisplayName(InBinding: ucpp.Ref<MovieSceneBindingProxy>, InDisplayName: ucpp.Ref<FText>): Void;
	public function RemoveTrack(InBinding: ucpp.Ref<MovieSceneBindingProxy>, TrackToRemove: ucpp.Ptr<MovieSceneTrack>): Void;
	public function Remove(InBinding: ucpp.Ref<MovieSceneBindingProxy>): Void;
	public function MoveBindingContents(SourceBindingId: ucpp.Ref<MovieSceneBindingProxy>, DestinationBindingId: ucpp.Ref<MovieSceneBindingProxy>): Void;
	public function IsValid(InBinding: ucpp.Ref<MovieSceneBindingProxy>): Bool;
	public function GetTracks(InBinding: ucpp.Ref<MovieSceneBindingProxy>): TArray<ucpp.Ptr<MovieSceneTrack>>;
	public function GetSortingOrder(InBinding: ucpp.Ref<MovieSceneBindingProxy>): ucpp.num.Int32;
	public function GetPossessedObjectClass(InBinding: ucpp.Ref<MovieSceneBindingProxy>): ucpp.Ptr<Class>;
	public function GetParent(InBinding: ucpp.Ref<MovieSceneBindingProxy>): MovieSceneBindingProxy;
	public function GetObjectTemplate(InBinding: ucpp.Ref<MovieSceneBindingProxy>): ucpp.Ptr<Object>;
	public function GetName(InBinding: ucpp.Ref<MovieSceneBindingProxy>): FString;
	public function GetId(InBinding: ucpp.Ref<MovieSceneBindingProxy>): Guid;
	public function GetDisplayName(InBinding: ucpp.Ref<MovieSceneBindingProxy>): FText;
	public function GetChildPossessables(InBinding: ucpp.Ref<MovieSceneBindingProxy>): TArray<MovieSceneBindingProxy>;
	public function FindTracksByType(InBinding: ucpp.Ref<MovieSceneBindingProxy>, TrackType: TSubclassOf<MovieSceneTrack>): TArray<ucpp.Ptr<MovieSceneTrack>>;
	public function FindTracksByExactType(InBinding: ucpp.Ref<MovieSceneBindingProxy>, TrackType: TSubclassOf<MovieSceneTrack>): TArray<ucpp.Ptr<MovieSceneTrack>>;
	public function AddTrack(InBinding: ucpp.Ref<MovieSceneBindingProxy>, TrackType: TSubclassOf<MovieSceneTrack>): ucpp.Ptr<MovieSceneTrack>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMovieSceneBindingExtensions(MovieSceneBindingExtensions) from MovieSceneBindingExtensions {
}

@:forward
@:nativeGen
@:native("MovieSceneBindingExtensions*")
abstract MovieSceneBindingExtensionsPtr(ucpp.Ptr<MovieSceneBindingExtensions>) from ucpp.Ptr<MovieSceneBindingExtensions> to ucpp.Ptr<MovieSceneBindingExtensions>{
	@:from
	public static extern inline function fromValue(v: MovieSceneBindingExtensions): MovieSceneBindingExtensionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MovieSceneBindingExtensions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}