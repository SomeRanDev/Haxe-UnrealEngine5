// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UReflectionCaptureComponent")
@:include("Components/ReflectionCaptureComponent.h")
@:valueType
extern class ReflectionCaptureComp extends SceneComp {
	public var CaptureOffsetComponent: ucpp.Ptr<BillboardComp>;
	public var ReflectionSourceType: EReflectionSourceType;
	public var Cubemap: ucpp.Ptr<TextureCube>;
	public var SourceCubemapAngle: ucpp.num.Float32;
	public var Brightness: ucpp.num.Float32;
	public var CaptureOffset: Vector;
	public var MapBuildDataId: Guid;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstReflectionCaptureComp(ReflectionCaptureComp) from ReflectionCaptureComp {
	public extern var CaptureOffsetComponent(get, never): ucpp.Ptr<BillboardComp.ConstBillboardComp>;
	public inline extern function get_CaptureOffsetComponent(): ucpp.Ptr<BillboardComp.ConstBillboardComp> return this.CaptureOffsetComponent;
	public extern var ReflectionSourceType(get, never): EReflectionSourceType;
	public inline extern function get_ReflectionSourceType(): EReflectionSourceType return this.ReflectionSourceType;
	public extern var Cubemap(get, never): ucpp.Ptr<TextureCube.ConstTextureCube>;
	public inline extern function get_Cubemap(): ucpp.Ptr<TextureCube.ConstTextureCube> return this.Cubemap;
	public extern var SourceCubemapAngle(get, never): ucpp.num.Float32;
	public inline extern function get_SourceCubemapAngle(): ucpp.num.Float32 return this.SourceCubemapAngle;
	public extern var Brightness(get, never): ucpp.num.Float32;
	public inline extern function get_Brightness(): ucpp.num.Float32 return this.Brightness;
	public extern var CaptureOffset(get, never): Vector;
	public inline extern function get_CaptureOffset(): Vector return this.CaptureOffset;
	public extern var MapBuildDataId(get, never): Guid;
	public inline extern function get_MapBuildDataId(): Guid return this.MapBuildDataId;
}

@:forward
@:nativeGen
@:native("ReflectionCaptureComp*")
abstract ReflectionCaptureCompPtr(ucpp.Ptr<ReflectionCaptureComp>) from ucpp.Ptr<ReflectionCaptureComp> to ucpp.Ptr<ReflectionCaptureComp>{
	@:from
	public static extern inline function fromValue(v: ReflectionCaptureComp): ReflectionCaptureCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ReflectionCaptureComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}