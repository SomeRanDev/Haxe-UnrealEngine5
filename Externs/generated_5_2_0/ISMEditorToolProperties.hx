// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UISMEditorToolProperties")
@:include("ISMEditorTool.h")
@:structAccess
extern class ISMEditorToolProperties extends InteractiveToolPropertySet {
	public var TransformMode: EISMEditorTransformMode;
	public var bSetPivotMode: Bool;
	public var bShowSelectable: Bool;
	public var bShowSelected: Bool;
	public var bHideWhenDragging: Bool;
	public var SelectedInstances: TArray<FString>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstISMEditorToolProperties(ISMEditorToolProperties) from ISMEditorToolProperties {
	public extern var TransformMode(get, never): EISMEditorTransformMode;
	public inline extern function get_TransformMode(): EISMEditorTransformMode return this.TransformMode;
	public extern var bSetPivotMode(get, never): Bool;
	public inline extern function get_bSetPivotMode(): Bool return this.bSetPivotMode;
	public extern var bShowSelectable(get, never): Bool;
	public inline extern function get_bShowSelectable(): Bool return this.bShowSelectable;
	public extern var bShowSelected(get, never): Bool;
	public inline extern function get_bShowSelected(): Bool return this.bShowSelected;
	public extern var bHideWhenDragging(get, never): Bool;
	public inline extern function get_bHideWhenDragging(): Bool return this.bHideWhenDragging;
	public extern var SelectedInstances(get, never): TArray<FString>;
	public inline extern function get_SelectedInstances(): TArray<FString> return this.SelectedInstances;
}

@:forward
@:nativeGen
@:native("ISMEditorToolProperties*")
abstract ISMEditorToolPropertiesPtr(cpp.Star<ISMEditorToolProperties>) from cpp.Star<ISMEditorToolProperties> to cpp.Star<ISMEditorToolProperties>{
	@:from
	public static extern inline function fromValue(v: ISMEditorToolProperties): ISMEditorToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ISMEditorToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}