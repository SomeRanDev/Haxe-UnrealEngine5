// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AChaosCacheManager")
@:include("Chaos/CacheManagerActor.h")
@:structAccess
extern class ChaosCacheManager extends Actor {
	public var CacheCollection: cpp.Star<ChaosCacheCollection>;
	public var CacheMode: ECacheMode;
	public var StartMode: EStartMode;
	public var StartTime: cpp.Float32;
	private var ObservedComponents: TArray<ObservedComp>;

	@:protected public function TriggerComponentByCache(InCacheName: FName): Void;
	@:protected public function TriggerComponent(InComponent: cpp.Star<PrimitiveComp>): Void;
	@:protected public function TriggerAll(): Void;
	public function SetStartTime(InStartTime: cpp.Float32): Void;
	public function ResetSingleTransform(InIndex: cpp.Int32): Void;
	public function ResetAllComponentTransforms(): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstChaosCacheManager(ChaosCacheManager) from ChaosCacheManager {
	public extern var CacheCollection(get, never): cpp.Star<ChaosCacheCollection.ConstChaosCacheCollection>;
	public inline extern function get_CacheCollection(): cpp.Star<ChaosCacheCollection.ConstChaosCacheCollection> return this.CacheCollection;
	public extern var CacheMode(get, never): ECacheMode;
	public inline extern function get_CacheMode(): ECacheMode return this.CacheMode;
	public extern var StartMode(get, never): EStartMode;
	public inline extern function get_StartMode(): EStartMode return this.StartMode;
	public extern var StartTime(get, never): cpp.Float32;
	public inline extern function get_StartTime(): cpp.Float32 return this.StartTime;
}

@:forward
@:nativeGen
@:native("ChaosCacheManager*")
abstract ChaosCacheManagerPtr(cpp.Star<ChaosCacheManager>) from cpp.Star<ChaosCacheManager> to cpp.Star<ChaosCacheManager>{
	@:from
	public static extern inline function fromValue(v: ChaosCacheManager): ChaosCacheManagerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ChaosCacheManager {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}