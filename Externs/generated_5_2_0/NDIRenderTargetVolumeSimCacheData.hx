// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UNDIRenderTargetVolumeSimCacheData")
@:include("NDIRenderTargetVolumeSimCacheData.h")
@:valueType
extern class NDIRenderTargetVolumeSimCacheData extends Object {
	public var CompressionType: FName;
	public var Frames: TArray<NDIRenderTargetVolumeSimCacheFrame>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstNDIRenderTargetVolumeSimCacheData(NDIRenderTargetVolumeSimCacheData) from NDIRenderTargetVolumeSimCacheData {
	public extern var CompressionType(get, never): FName;
	public inline extern function get_CompressionType(): FName return this.CompressionType;
	public extern var Frames(get, never): TArray<NDIRenderTargetVolumeSimCacheFrame>;
	public inline extern function get_Frames(): TArray<NDIRenderTargetVolumeSimCacheFrame> return this.Frames;
}

@:forward
@:nativeGen
@:native("NDIRenderTargetVolumeSimCacheData*")
abstract NDIRenderTargetVolumeSimCacheDataPtr(ucpp.Ptr<NDIRenderTargetVolumeSimCacheData>) from ucpp.Ptr<NDIRenderTargetVolumeSimCacheData> to ucpp.Ptr<NDIRenderTargetVolumeSimCacheData>{
	@:from
	public static extern inline function fromValue(v: NDIRenderTargetVolumeSimCacheData): NDIRenderTargetVolumeSimCacheDataPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): NDIRenderTargetVolumeSimCacheData {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}