// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USceneComponent")
@:include("Components/SceneComponent.h")
@:structAccess
extern class SceneComp extends ActorComp {
	@:const public function GetComponentLocation(): Vector;
	@:const public function GetComponentRotation(): Rotator;
	@:const public function GetComponentQuat(): Quat;
	@:const public function GetComponentScale(): Vector;
	@:const public function GetComponentToWorld(): cpp.Reference<Transform>;
	@:const public function GetComponentTransform(): cpp.Reference<Transform>;
	@:const public function GetRelativeLocation(): Vector;
	@:const public function GetRelativeLocation_DirectMutable(): cpp.Reference<Vector>;
	@:const public function GetRelativeRotation(): Rotator;
	@:const public function GetRelativeRotation_DirectMutable(): cpp.Reference<Rotator>;
	@:const public function GetRelativeScale3D(): Vector;
	@:const public function GetRelativeScale3D_DirectMutable(): cpp.Reference<Vector>;
	public overload function SetRelativeLocation(NewLocation: Vector): Void;
	public overload function SetRelativeLocation(NewLocation: Vector, bSweep: Bool): Void;
	public overload function SetRelativeLocation(NewLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function SetRelativeLocation(NewLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function SetRelativeRotation(NewRotation: Rotator): Void;
	public overload function SetRelativeRotation(NewRotation: Rotator, bSweep: Bool): Void;
	public overload function SetRelativeRotation(NewRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function SetRelativeRotation(NewRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	@:native("SetRelativeRotation") public overload function SetRelativeRotationQuad(NewRotation: cpp.Reference<Quat>): Void;
	@:native("SetRelativeRotation") public overload function SetRelativeRotationQuad(NewRotation: cpp.Reference<Quat>, bSweep: Bool): Void;
	@:native("SetRelativeRotation") public overload function SetRelativeRotationQuad(NewRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	@:native("SetRelativeRotation") public overload function SetRelativeRotationQuad(NewRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function SetRelativeTransform(NewTransform: cpp.Reference<Transform>): Void;
	public overload function SetRelativeTransform(NewTransform: cpp.Reference<Transform>, bSweep: Bool): Void;
	public overload function SetRelativeTransform(NewTransform: cpp.Reference<Transform>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function SetRelativeTransform(NewTransform: cpp.Reference<Transform>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function AddRelativeLocation(DeltaLocation: Vector): Void;
	public overload function AddRelativeLocation(DeltaLocation: Vector, bSweep: Bool): Void;
	public overload function AddRelativeLocation(DeltaLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function AddRelativeLocation(DeltaLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function AddRelativeRotation(DeltaRotation: Rotator): Void;
	public overload function AddRelativeRotation(DeltaRotation: Rotator, bSweep: Bool): Void;
	public overload function AddRelativeRotation(DeltaRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function AddRelativeRotation(DeltaRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	@:native("AddRelativeRotation") public overload function AddRelativeRotationQuad(DeltaRotation: cpp.Reference<Quat>): Void;
	@:native("AddRelativeRotation") public overload function AddRelativeRotationQuad(DeltaRotation: cpp.Reference<Quat>, bSweep: Bool): Void;
	@:native("AddRelativeRotation") public overload function AddRelativeRotationQuad(DeltaRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	@:native("AddRelativeRotation") public overload function AddRelativeRotationQuad(DeltaRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function AddLocalOffset(DeltaLocation: Vector): Void;
	public overload function AddLocalOffset(DeltaLocation: Vector, bSweep: Bool): Void;
	public overload function AddLocalOffset(DeltaLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function AddLocalOffset(DeltaLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function AddLocalRotation(DeltaRotation: Rotator): Void;
	public overload function AddLocalRotation(DeltaRotation: Rotator, bSweep: Bool): Void;
	public overload function AddLocalRotation(DeltaRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function AddLocalRotation(DeltaRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	@:native("AddLocalRotation") public overload function AddLocalRotationQuad(DeltaRotation: cpp.Reference<Quat>): Void;
	@:native("AddLocalRotation") public overload function AddLocalRotationQuad(DeltaRotation: cpp.Reference<Quat>, bSweep: Bool): Void;
	@:native("AddLocalRotation") public overload function AddLocalRotationQuad(DeltaRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	@:native("AddLocalRotation") public overload function AddLocalRotationQuad(DeltaRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function AddLocalTransform(DeltaTransform: cpp.Reference<Transform>): Void;
	public overload function AddLocalTransform(DeltaTransform: cpp.Reference<Transform>, bSweep: Bool): Void;
	public overload function AddLocalTransform(DeltaTransform: cpp.Reference<Transform>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function AddLocalTransform(DeltaTransform: cpp.Reference<Transform>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function SetWorldLocation(NewLocation: Vector): Void;
	public overload function SetWorldLocation(NewLocation: Vector, bSweep: Bool): Void;
	public overload function SetWorldLocation(NewLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function SetWorldLocation(NewLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function SetWorldRotation(NewRotation: Rotator): Void;
	public overload function SetWorldRotation(NewRotation: Rotator, bSweep: Bool): Void;
	public overload function SetWorldRotation(NewRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function SetWorldRotation(NewRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	@:native("SetWorldRotation") public overload function SetWorldRotationQuad(NewRotation: cpp.Reference<Quat>): Void;
	@:native("SetWorldRotation") public overload function SetWorldRotationQuad(NewRotation: cpp.Reference<Quat>, bSweep: Bool): Void;
	@:native("SetWorldRotation") public overload function SetWorldRotationQuad(NewRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	@:native("SetWorldRotation") public overload function SetWorldRotationQuad(NewRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function SetWorldTransform(NewTransform: cpp.Reference<Transform>): Void;
	public overload function SetWorldTransform(NewTransform: cpp.Reference<Transform>, bSweep: Bool): Void;
	public overload function SetWorldTransform(NewTransform: cpp.Reference<Transform>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function SetWorldTransform(NewTransform: cpp.Reference<Transform>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function AddWorldOffset(DeltaLocation: Vector): Void;
	public overload function AddWorldOffset(DeltaLocation: Vector, bSweep: Bool): Void;
	public overload function AddWorldOffset(DeltaLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function AddWorldOffset(DeltaLocation: Vector, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function AddWorldRotation(DeltaRotation: Rotator): Void;
	public overload function AddWorldRotation(DeltaRotation: Rotator, bSweep: Bool): Void;
	public overload function AddWorldRotation(DeltaRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function AddWorldRotation(DeltaRotation: Rotator, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	@:native("AddWorldRotation") public overload function AddWorldRotationQuad(DeltaRotation: cpp.Reference<Quat>): Void;
	@:native("AddWorldRotation") public overload function AddWorldRotationQuad(DeltaRotation: cpp.Reference<Quat>, bSweep: Bool): Void;
	@:native("AddWorldRotation") public overload function AddWorldRotationQuad(DeltaRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	@:native("AddWorldRotation") public overload function AddWorldRotationQuad(DeltaRotation: cpp.Reference<Quat>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
	public overload function AddWorldTransform(DeltaTransform: cpp.Reference<Transform>): Void;
	public overload function AddWorldTransform(DeltaTransform: cpp.Reference<Transform>, bSweep: Bool): Void;
	public overload function AddWorldTransform(DeltaTransform: cpp.Reference<Transform>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>): Void;
	public overload function AddWorldTransform(DeltaTransform: cpp.Reference<Transform>, bSweep: Bool, OutSweepHitResult: cpp.Star<HitResult>, Teleport: ETeleportType): Void;
}
