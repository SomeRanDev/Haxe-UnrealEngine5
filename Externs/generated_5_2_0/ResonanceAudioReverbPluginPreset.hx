// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UResonanceAudioReverbPluginPreset")
@:include("ResonanceAudioReverb.h")
@:valueType
extern class ResonanceAudioReverbPluginPreset extends SoundEffectSubmixPreset {
	public var Settings: ResonanceAudioReverbPluginSettings;

	public function SetRoomRotation(InRotation: ucpp.Ref<Quat>): Void;
	public function SetRoomPosition(InPosition: ucpp.Ref<Vector>): Void;
	public function SetRoomMaterials(InMaterials: ucpp.Ref<TArray<ERaMaterialName>>): Void;
	public function SetRoomDimensions(InDimensions: ucpp.Ref<Vector>): Void;
	public function SetReverbTimeModifier(InReverbTimeModifier: ucpp.num.Float32): Void;
	public function SetReverbGain(InReverbGain: ucpp.num.Float32): Void;
	public function SetReverbBrightness(InReverbBrightness: ucpp.num.Float32): Void;
	public function SetReflectionScalar(InReflectionScalar: ucpp.num.Float32): Void;
	public function SetEnableRoomEffects(bInEnableRoomEffects: Bool): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstResonanceAudioReverbPluginPreset(ResonanceAudioReverbPluginPreset) from ResonanceAudioReverbPluginPreset {
	public extern var Settings(get, never): ResonanceAudioReverbPluginSettings;
	public inline extern function get_Settings(): ResonanceAudioReverbPluginSettings return this.Settings;
}

@:forward
@:nativeGen
@:native("ResonanceAudioReverbPluginPreset*")
abstract ResonanceAudioReverbPluginPresetPtr(ucpp.Ptr<ResonanceAudioReverbPluginPreset>) from ucpp.Ptr<ResonanceAudioReverbPluginPreset> to ucpp.Ptr<ResonanceAudioReverbPluginPreset>{
	@:from
	public static extern inline function fromValue(v: ResonanceAudioReverbPluginPreset): ResonanceAudioReverbPluginPresetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ResonanceAudioReverbPluginPreset {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}