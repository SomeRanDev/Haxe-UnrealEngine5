// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFbxAnimSequenceImportData")
@:include("Factories/FbxAnimSequenceImportData.h")
@:structAccess
extern class FbxAnimSequenceImportData extends FbxAssetImportData {
	public var bImportMeshesInBoneHierarchy: Bool;
	public var AnimationLength: TEnumAsByte<EFBXAnimationLengthImportType>;
	public var FrameImportRange: Int32Interval;
	public var bUseDefaultSampleRate: Bool;
	public var CustomSampleRate: cpp.Int32;
	public var bSnapToClosestFrameBoundary: Bool;
	public var SourceAnimationName: FString;
	public var bImportCustomAttribute: Bool;
	public var bDeleteExistingCustomAttributeCurves: Bool;
	public var bDeleteExistingNonCurveCustomAttributes: Bool;
	public var bImportBoneTracks: Bool;
	public var bSetMaterialDriveParameterOnCustomAttribute: Bool;
	public var MaterialCurveSuffixes: TArray<FString>;
	public var bRemoveRedundantKeys: Bool;
	public var bDeleteExistingMorphTargetCurves: Bool;
	public var bDoNotImportCurveWithZero: Bool;
	public var bPreserveLocalTransform: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstFbxAnimSequenceImportData(FbxAnimSequenceImportData) from FbxAnimSequenceImportData {
	public extern var bImportMeshesInBoneHierarchy(get, never): Bool;
	public inline extern function get_bImportMeshesInBoneHierarchy(): Bool return this.bImportMeshesInBoneHierarchy;
	public extern var AnimationLength(get, never): TEnumAsByte<EFBXAnimationLengthImportType>;
	public inline extern function get_AnimationLength(): TEnumAsByte<EFBXAnimationLengthImportType> return this.AnimationLength;
	public extern var FrameImportRange(get, never): Int32Interval;
	public inline extern function get_FrameImportRange(): Int32Interval return this.FrameImportRange;
	public extern var bUseDefaultSampleRate(get, never): Bool;
	public inline extern function get_bUseDefaultSampleRate(): Bool return this.bUseDefaultSampleRate;
	public extern var CustomSampleRate(get, never): cpp.Int32;
	public inline extern function get_CustomSampleRate(): cpp.Int32 return this.CustomSampleRate;
	public extern var bSnapToClosestFrameBoundary(get, never): Bool;
	public inline extern function get_bSnapToClosestFrameBoundary(): Bool return this.bSnapToClosestFrameBoundary;
	public extern var SourceAnimationName(get, never): FString;
	public inline extern function get_SourceAnimationName(): FString return this.SourceAnimationName;
	public extern var bImportCustomAttribute(get, never): Bool;
	public inline extern function get_bImportCustomAttribute(): Bool return this.bImportCustomAttribute;
	public extern var bDeleteExistingCustomAttributeCurves(get, never): Bool;
	public inline extern function get_bDeleteExistingCustomAttributeCurves(): Bool return this.bDeleteExistingCustomAttributeCurves;
	public extern var bDeleteExistingNonCurveCustomAttributes(get, never): Bool;
	public inline extern function get_bDeleteExistingNonCurveCustomAttributes(): Bool return this.bDeleteExistingNonCurveCustomAttributes;
	public extern var bImportBoneTracks(get, never): Bool;
	public inline extern function get_bImportBoneTracks(): Bool return this.bImportBoneTracks;
	public extern var bSetMaterialDriveParameterOnCustomAttribute(get, never): Bool;
	public inline extern function get_bSetMaterialDriveParameterOnCustomAttribute(): Bool return this.bSetMaterialDriveParameterOnCustomAttribute;
	public extern var MaterialCurveSuffixes(get, never): TArray<FString>;
	public inline extern function get_MaterialCurveSuffixes(): TArray<FString> return this.MaterialCurveSuffixes;
	public extern var bRemoveRedundantKeys(get, never): Bool;
	public inline extern function get_bRemoveRedundantKeys(): Bool return this.bRemoveRedundantKeys;
	public extern var bDeleteExistingMorphTargetCurves(get, never): Bool;
	public inline extern function get_bDeleteExistingMorphTargetCurves(): Bool return this.bDeleteExistingMorphTargetCurves;
	public extern var bDoNotImportCurveWithZero(get, never): Bool;
	public inline extern function get_bDoNotImportCurveWithZero(): Bool return this.bDoNotImportCurveWithZero;
	public extern var bPreserveLocalTransform(get, never): Bool;
	public inline extern function get_bPreserveLocalTransform(): Bool return this.bPreserveLocalTransform;
}

@:forward
@:nativeGen
@:native("FbxAnimSequenceImportData*")
abstract FbxAnimSequenceImportDataPtr(cpp.Star<FbxAnimSequenceImportData>) from cpp.Star<FbxAnimSequenceImportData> to cpp.Star<FbxAnimSequenceImportData>{
	@:from
	public static extern inline function fromValue(v: FbxAnimSequenceImportData): FbxAnimSequenceImportDataPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): FbxAnimSequenceImportData {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}