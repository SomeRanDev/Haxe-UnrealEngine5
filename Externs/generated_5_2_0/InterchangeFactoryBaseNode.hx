// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeFactoryBaseNode")
@:include("Nodes/InterchangeFactoryBaseNode.h")
@:valueType
extern class InterchangeFactoryBaseNode extends InterchangeBaseNode {
	public function SetReimportStrategyFlags(ReimportStrategyFlags: ucpp.Ref<EReimportStrategyFlags>): Bool;
	public function SetCustomSubPath(AttributeValue: FString): Bool;
	public function SetCustomReferenceObject(AttributeValue: ucpp.Ref<SoftObjectPath>): Bool;
	public function RemoveFactoryDependencyUid(DependencyUid: FString): Bool;
	public function GetReimportStrategyFlags(): EReimportStrategyFlags;
	public function GetFactoryDependency(Index: ucpp.num.Int32, OutDependency: ucpp.Ref<FString>): Void;
	public function GetFactoryDependenciesCount(): ucpp.num.Int32;
	public function GetFactoryDependencies(OutDependencies: ucpp.Ref<TArray<FString>>): Void;
	public function GetCustomSubPath(AttributeValue: ucpp.Ref<FString>): Bool;
	public function GetCustomReferenceObject(AttributeValue: ucpp.Ref<SoftObjectPath>): Bool;
	public function AddFactoryDependencyUid(DependencyUid: FString): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetReimportStrategyFlags, GetFactoryDependency, GetFactoryDependenciesCount, GetFactoryDependencies, GetCustomSubPath, GetCustomReferenceObject)
@:nativeGen
abstract ConstInterchangeFactoryBaseNode(InterchangeFactoryBaseNode) from InterchangeFactoryBaseNode {
}

@:forward
@:nativeGen
@:native("InterchangeFactoryBaseNode*")
abstract InterchangeFactoryBaseNodePtr(ucpp.Ptr<InterchangeFactoryBaseNode>) from ucpp.Ptr<InterchangeFactoryBaseNode> to ucpp.Ptr<InterchangeFactoryBaseNode>{
	@:from
	public static extern inline function fromValue(v: InterchangeFactoryBaseNode): InterchangeFactoryBaseNodePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeFactoryBaseNode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}