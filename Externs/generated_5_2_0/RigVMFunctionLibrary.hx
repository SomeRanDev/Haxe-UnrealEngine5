// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URigVMFunctionLibrary")
@:include("RigVMModel/RigVMFunctionLibrary.h")
@:structAccess
extern class RigVMFunctionLibrary extends RigVMGraph {
	private var PublicFunctionNames: TArray<FName>;
	private var LocalizedFunctions: TMap<FString, cpp.Star<RigVMLibraryNode>>;

	public function GetReferencesForFunction(InFunctionName: cpp.Reference<FName>): TArray<TSoftObjectPtr<RigVMFunctionReferenceNode>>;
	public function GetReferencePathsForFunction(InFunctionName: cpp.Reference<FName>): TArray<FString>;
	public function GetFunctions(): TArray<cpp.Star<RigVMLibraryNode>>;
	public function FindFunctionForNode(InNode: cpp.Star<RigVMNode>): cpp.Star<RigVMLibraryNode>;
	public function FindFunction(InFunctionName: cpp.Reference<FName>): cpp.Star<RigVMLibraryNode>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetFunctions, FindFunctionForNode, FindFunction)
@:nativeGen
abstract ConstRigVMFunctionLibrary(RigVMFunctionLibrary) from RigVMFunctionLibrary {
}

@:forward
@:nativeGen
@:native("RigVMFunctionLibrary*")
abstract RigVMFunctionLibraryPtr(cpp.Star<RigVMFunctionLibrary>) from cpp.Star<RigVMFunctionLibrary> to cpp.Star<RigVMFunctionLibrary>{
	@:from
	public static extern inline function fromValue(v: RigVMFunctionLibrary): RigVMFunctionLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RigVMFunctionLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}