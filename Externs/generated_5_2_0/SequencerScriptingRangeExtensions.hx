// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USequencerScriptingRangeExtensions")
@:include("ExtensionLibraries/SequencerScriptingRangeExtensions.h")
@:structAccess
extern class SequencerScriptingRangeExtensions extends BlueprintFunctionLibrary {
	public function SetStartSeconds(Range: cpp.Reference<SequencerScriptingRange>, Start: cpp.Float32): Void;
	public function SetStartFrame(Range: cpp.Reference<SequencerScriptingRange>, Start: cpp.Int32): Void;
	public function SetEndSeconds(Range: cpp.Reference<SequencerScriptingRange>, End: cpp.Float32): Void;
	public function SetEndFrame(Range: cpp.Reference<SequencerScriptingRange>, End: cpp.Int32): Void;
	public function RemoveStart(Range: cpp.Reference<SequencerScriptingRange>): Void;
	public function RemoveEnd(Range: cpp.Reference<SequencerScriptingRange>): Void;
	public function HasStart(Range: cpp.Reference<SequencerScriptingRange>): Bool;
	public function HasEnd(Range: cpp.Reference<SequencerScriptingRange>): Bool;
	public function GetStartSeconds(Range: cpp.Reference<SequencerScriptingRange>): cpp.Float32;
	public function GetStartFrame(Range: cpp.Reference<SequencerScriptingRange>): cpp.Int32;
	public function GetEndSeconds(Range: cpp.Reference<SequencerScriptingRange>): cpp.Float32;
	public function GetEndFrame(Range: cpp.Reference<SequencerScriptingRange>): cpp.Int32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSequencerScriptingRangeExtensions(SequencerScriptingRangeExtensions) from SequencerScriptingRangeExtensions {
}

@:forward
@:nativeGen
@:native("SequencerScriptingRangeExtensions*")
abstract SequencerScriptingRangeExtensionsPtr(cpp.Star<SequencerScriptingRangeExtensions>) from cpp.Star<SequencerScriptingRangeExtensions> to cpp.Star<SequencerScriptingRangeExtensions>{
	@:from
	public static extern inline function fromValue(v: SequencerScriptingRangeExtensions): SequencerScriptingRangeExtensionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SequencerScriptingRangeExtensions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}