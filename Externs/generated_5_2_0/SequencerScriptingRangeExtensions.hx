// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USequencerScriptingRangeExtensions")
@:include("ExtensionLibraries/SequencerScriptingRangeExtensions.h")
@:valueType
extern class SequencerScriptingRangeExtensions extends BlueprintFunctionLibrary {
	public function SetStartSeconds(Range: ucpp.Ref<SequencerScriptingRange>, Start: ucpp.num.Float32): Void;
	public function SetStartFrame(Range: ucpp.Ref<SequencerScriptingRange>, Start: ucpp.num.Int32): Void;
	public function SetEndSeconds(Range: ucpp.Ref<SequencerScriptingRange>, End: ucpp.num.Float32): Void;
	public function SetEndFrame(Range: ucpp.Ref<SequencerScriptingRange>, End: ucpp.num.Int32): Void;
	public function RemoveStart(Range: ucpp.Ref<SequencerScriptingRange>): Void;
	public function RemoveEnd(Range: ucpp.Ref<SequencerScriptingRange>): Void;
	public function HasStart(Range: ucpp.Ref<SequencerScriptingRange>): Bool;
	public function HasEnd(Range: ucpp.Ref<SequencerScriptingRange>): Bool;
	public function GetStartSeconds(Range: ucpp.Ref<SequencerScriptingRange>): ucpp.num.Float32;
	public function GetStartFrame(Range: ucpp.Ref<SequencerScriptingRange>): ucpp.num.Int32;
	public function GetEndSeconds(Range: ucpp.Ref<SequencerScriptingRange>): ucpp.num.Float32;
	public function GetEndFrame(Range: ucpp.Ref<SequencerScriptingRange>): ucpp.num.Int32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstSequencerScriptingRangeExtensions(SequencerScriptingRangeExtensions) from SequencerScriptingRangeExtensions {
}

@:forward
@:nativeGen
@:native("SequencerScriptingRangeExtensions*")
abstract SequencerScriptingRangeExtensionsPtr(ucpp.Ptr<SequencerScriptingRangeExtensions>) from ucpp.Ptr<SequencerScriptingRangeExtensions> to ucpp.Ptr<SequencerScriptingRangeExtensions>{
	@:from
	public static extern inline function fromValue(v: SequencerScriptingRangeExtensions): SequencerScriptingRangeExtensionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SequencerScriptingRangeExtensions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}