// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeBaseLightNode")
@:include("InterchangeLightNode.h")
@:valueType
extern class InterchangeBaseLightNode extends InterchangeBaseNode {
	public function SetCustomUseTemperature(AttributeValue: Bool): Bool;
	public function SetCustomTemperature(AttributeValue: ucpp.num.Float32): Bool;
	public function SetCustomLightColor(AttributeValue: ucpp.Ref<LinearColor>): Bool;
	public function SetCustomIntensity(AttributeValue: ucpp.num.Float32): Bool;
	public function GetCustomUseTemperature(AttributeValue: ucpp.Ref<Bool>): Bool;
	public function GetCustomTemperature(AttributeValue: ucpp.Ref<ucpp.num.Float32>): Bool;
	public function GetCustomLightColor(AttributeValue: ucpp.Ref<LinearColor>): Bool;
	public function GetCustomIntensity(AttributeValue: ucpp.Ref<ucpp.num.Float32>): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetCustomUseTemperature, GetCustomTemperature, GetCustomLightColor, GetCustomIntensity)
@:nativeGen
abstract ConstInterchangeBaseLightNode(InterchangeBaseLightNode) from InterchangeBaseLightNode {
}

@:forward
@:nativeGen
@:native("InterchangeBaseLightNode*")
abstract InterchangeBaseLightNodePtr(ucpp.Ptr<InterchangeBaseLightNode>) from ucpp.Ptr<InterchangeBaseLightNode> to ucpp.Ptr<InterchangeBaseLightNode>{
	@:from
	public static extern inline function fromValue(v: InterchangeBaseLightNode): InterchangeBaseLightNodePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeBaseLightNode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}