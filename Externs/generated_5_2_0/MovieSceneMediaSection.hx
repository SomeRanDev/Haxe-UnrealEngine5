// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovieSceneMediaSection")
@:include("MovieSceneMediaSection.h")
@:valueType
extern class MovieSceneMediaSection extends MovieSceneSection {
	public var MediaSource: ucpp.Ptr<MediaSource>;
	public var MediaSourceProxyIndex: ucpp.num.Int32;
	public var bLooping: Bool;
	public var StartFrameOffset: FrameNumber;
	public var MediaTexture: ucpp.Ptr<MediaTexture>;
	public var MediaSoundComponent: ucpp.Ptr<MediaSoundComp>;
	public var bUseExternalMediaPlayer: Bool;
	public var ExternalMediaPlayer: ucpp.Ptr<MediaPlayer>;
	public var CacheSettings: MediaSourceCacheSettings;
	public var TextureIndex: ucpp.num.Int32;
	public var bHasMediaPlayerProxy: Bool;
	private var MediaSourceProxyBindingID: MovieSceneObjectBindingID;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMovieSceneMediaSection(MovieSceneMediaSection) from MovieSceneMediaSection {
	public extern var MediaSource(get, never): ucpp.Ptr<MediaSource.ConstMediaSource>;
	public inline extern function get_MediaSource(): ucpp.Ptr<MediaSource.ConstMediaSource> return this.MediaSource;
	public extern var MediaSourceProxyIndex(get, never): ucpp.num.Int32;
	public inline extern function get_MediaSourceProxyIndex(): ucpp.num.Int32 return this.MediaSourceProxyIndex;
	public extern var bLooping(get, never): Bool;
	public inline extern function get_bLooping(): Bool return this.bLooping;
	public extern var StartFrameOffset(get, never): FrameNumber;
	public inline extern function get_StartFrameOffset(): FrameNumber return this.StartFrameOffset;
	public extern var MediaTexture(get, never): ucpp.Ptr<MediaTexture.ConstMediaTexture>;
	public inline extern function get_MediaTexture(): ucpp.Ptr<MediaTexture.ConstMediaTexture> return this.MediaTexture;
	public extern var MediaSoundComponent(get, never): ucpp.Ptr<MediaSoundComp.ConstMediaSoundComp>;
	public inline extern function get_MediaSoundComponent(): ucpp.Ptr<MediaSoundComp.ConstMediaSoundComp> return this.MediaSoundComponent;
	public extern var bUseExternalMediaPlayer(get, never): Bool;
	public inline extern function get_bUseExternalMediaPlayer(): Bool return this.bUseExternalMediaPlayer;
	public extern var ExternalMediaPlayer(get, never): ucpp.Ptr<MediaPlayer.ConstMediaPlayer>;
	public inline extern function get_ExternalMediaPlayer(): ucpp.Ptr<MediaPlayer.ConstMediaPlayer> return this.ExternalMediaPlayer;
	public extern var CacheSettings(get, never): MediaSourceCacheSettings;
	public inline extern function get_CacheSettings(): MediaSourceCacheSettings return this.CacheSettings;
	public extern var TextureIndex(get, never): ucpp.num.Int32;
	public inline extern function get_TextureIndex(): ucpp.num.Int32 return this.TextureIndex;
	public extern var bHasMediaPlayerProxy(get, never): Bool;
	public inline extern function get_bHasMediaPlayerProxy(): Bool return this.bHasMediaPlayerProxy;
}

@:forward
@:nativeGen
@:native("MovieSceneMediaSection*")
abstract MovieSceneMediaSectionPtr(ucpp.Ptr<MovieSceneMediaSection>) from ucpp.Ptr<MovieSceneMediaSection> to ucpp.Ptr<MovieSceneMediaSection>{
	@:from
	public static extern inline function fromValue(v: MovieSceneMediaSection): MovieSceneMediaSectionPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MovieSceneMediaSection {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}