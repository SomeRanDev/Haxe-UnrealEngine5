// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInputComponent")
@:include("Components/InputComponent.h")
@:valueType
extern class InputComp extends ActorComp {
	private var CachedKeyToActionInfo: TArray<CachedKeyToActionInfo>;

	private function WasControllerKeyJustReleased(Key: Key): Bool;
	private function WasControllerKeyJustPressed(Key: Key): Bool;
	private function OnInputOwnerEndPlayed(InOwner: ucpp.Ptr<Actor>, EndPlayReason: TEnumAsByte<EEndPlayReason>): Void;
	private function IsControllerKeyDown(Key: Key): Bool;
	private function GetTouchState(FingerIndex: ucpp.num.Int32, LocationX: ucpp.Ref<ucpp.num.Float32>, LocationY: ucpp.Ref<ucpp.num.Float32>, bIsCurrentlyPressed: ucpp.Ref<Bool>): Void;
	private function GetControllerVectorKeyState(Key: Key): Vector;
	private function GetControllerMouseDelta(DeltaX: ucpp.Ref<ucpp.num.Float32>, DeltaY: ucpp.Ref<ucpp.num.Float32>): Void;
	private function GetControllerKeyTimeDown(Key: Key): ucpp.num.Float32;
	private function GetControllerAnalogStickState(WhichStick: TEnumAsByte<EControllerAnalogStick>, StickX: ucpp.Ref<ucpp.num.Float32>, StickY: ucpp.Ref<ucpp.num.Float32>): Void;
	private function GetControllerAnalogKeyState(Key: Key): ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(WasControllerKeyJustReleased, WasControllerKeyJustPressed, IsControllerKeyDown, GetTouchState, GetControllerVectorKeyState, GetControllerMouseDelta, GetControllerKeyTimeDown, GetControllerAnalogStickState, GetControllerAnalogKeyState)
@:nativeGen
abstract ConstInputComp(InputComp) from InputComp {
}

@:forward
@:nativeGen
@:native("InputComp*")
abstract InputCompPtr(ucpp.Ptr<InputComp>) from ucpp.Ptr<InputComp> to ucpp.Ptr<InputComp>{
	@:from
	public static extern inline function fromValue(v: InputComp): InputCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InputComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}