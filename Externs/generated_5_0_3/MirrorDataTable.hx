// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMirrorDataTable")
@:include("Animation/MirrorDataTable.h")
@:structAccess
extern class MirrorDataTable extends DataTable {
	public var MirrorFindReplaceExpressions: TArray<MirrorFindReplaceExpression>;
	public var MirrorAxis: TEnumAsByte<EAxis>;
	public var Skeleton: cpp.Star<Skeleton>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMirrorDataTable(MirrorDataTable) from MirrorDataTable {
	public extern var MirrorFindReplaceExpressions(get, never): TArray<MirrorFindReplaceExpression>;
	public inline extern function get_MirrorFindReplaceExpressions(): TArray<MirrorFindReplaceExpression> return this.MirrorFindReplaceExpressions;
	public extern var MirrorAxis(get, never): TEnumAsByte<EAxis>;
	public inline extern function get_MirrorAxis(): TEnumAsByte<EAxis> return this.MirrorAxis;
	public extern var Skeleton(get, never): cpp.Star<Skeleton.ConstSkeleton>;
	public inline extern function get_Skeleton(): cpp.Star<Skeleton.ConstSkeleton> return this.Skeleton;
}

@:forward
@:nativeGen
@:native("MirrorDataTable*")
abstract MirrorDataTablePtr(cpp.Star<MirrorDataTable>) from cpp.Star<MirrorDataTable> to cpp.Star<MirrorDataTable>{
	@:from
	public static extern inline function fromValue(v: MirrorDataTable): MirrorDataTablePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MirrorDataTable {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}