// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UARBasicLightEstimate")
@:include("ARLightEstimate.h")
@:structAccess
extern class ARBasicLightEstimate extends ARLightEstimate {
	public var AmbientIntensityLumens: cpp.Float32;
	public var AmbientColorTemperatureKelvin: cpp.Float32;
	public var AmbientColor: LinearColor;

	public function GetAmbientIntensityLumens(): cpp.Reference<cpp.Float32>;
	public function GetAmbientColorTemperatureKelvin(): cpp.Reference<cpp.Float32>;
	public function GetAmbientColor(): cpp.Reference<LinearColor>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetAmbientIntensityLumens, GetAmbientColorTemperatureKelvin, GetAmbientColor)
@:nativeGen
abstract ConstARBasicLightEstimate(ARBasicLightEstimate) from ARBasicLightEstimate {
	public extern var AmbientIntensityLumens(get, never): cpp.Float32;
	public inline extern function get_AmbientIntensityLumens(): cpp.Float32 return this.AmbientIntensityLumens;
	public extern var AmbientColorTemperatureKelvin(get, never): cpp.Float32;
	public inline extern function get_AmbientColorTemperatureKelvin(): cpp.Float32 return this.AmbientColorTemperatureKelvin;
	public extern var AmbientColor(get, never): LinearColor;
	public inline extern function get_AmbientColor(): LinearColor return this.AmbientColor;
}

@:forward
@:nativeGen
@:native("ARBasicLightEstimate*")
abstract ARBasicLightEstimatePtr(cpp.Star<ARBasicLightEstimate>) from cpp.Star<ARBasicLightEstimate> to cpp.Star<ARBasicLightEstimate>{
	@:from
	public static extern inline function fromValue(v: ARBasicLightEstimate): ARBasicLightEstimatePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ARBasicLightEstimate {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}