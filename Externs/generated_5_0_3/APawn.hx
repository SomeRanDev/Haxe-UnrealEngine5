// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("APawn")
@:include("GameFramework/Pawn.h")
extern class APawn extends AActor {
	public var bUseControllerRotationPitch: Bool;
	public var bUseControllerRotationYaw: Bool;
	public var bUseControllerRotationRoll: Bool;
	public var bCanAffectNavigationGeneration: Bool;
	public var bIsLocalViewTarget: Bool;
	public var BaseEyeHeight: cpp.Float32;
	public var AutoPossessPlayer: EAutoReceiveInput;
	public var AutoPossessAI: EAutoPossessAI;
	public var RemoteViewPitch: cpp.UInt8;
	public var AIControllerClass: TSubclassOf<AController>;
	public var PlayerState: TObjectPtr<APlayerState>;
	public var LastHitBy: TObjectPtr<AController>;
	public var Controller: TObjectPtr<AController>;
	public var PreviousController: TObjectPtr<AController>;
	public var ReceiveControllerChangedDelegate: HaxeMulticastSparseDelegateProperty<(cpp.Star<APawn>, cpp.Star<AController>, cpp.Star<AController>) -> Void>;
	public var ReceiveRestartedDelegate: HaxeMulticastSparseDelegateProperty<(cpp.Star<APawn>) -> Void>;
	public var ControlInputVector: FVector;
	public var LastControlInputVector: FVector;

	public function SpawnDefaultController(): Void;
	public function SetCanAffectNavigationGeneration(bNewValue: Bool, bForceUpdate: Bool): Void;
	public function ReceiveUnpossessed(OldController: cpp.Star<AController>): Void;
	public function ReceiveRestarted(): Void;
	public function ReceivePossessed(NewController: cpp.Star<AController>): Void;
	public function ReceiveControllerChanged(OldController: cpp.Star<AController>, NewController: cpp.Star<AController>): Void;
	public function PawnMakeNoise(Loudness: cpp.Float32, NoiseLocation: FVector, bUseNoiseMakerLocation: Bool, NoiseMaker: cpp.Star<AActor>): Void;
	public function OnRep_PlayerState(): Void;
	public function OnRep_Controller(): Void;
	public function IsPlayerControlled(): Bool;
	public function IsPawnControlled(): Bool;
	public function IsMoveInputIgnored(): Bool;
	public function IsLocallyViewed(): Bool;
	public function IsLocallyControlled(): Bool;
	public function IsControlled(): Bool;
	public function IsBotControlled(): Bool;
	public function GetPendingMovementInputVector(): FVector;
	public function GetNavAgentLocation(): FVector;
	public function GetMovementComponent(): cpp.Star<UPawnMovementComponent>;
	public function GetMovementBaseActor(Pawn: cpp.Star<APawn>): cpp.Star<AActor>;
	public function GetLocalViewingPlayerController(): cpp.Star<APlayerController>;
	public function GetLastMovementInputVector(): FVector;
	public function GetControlRotation(): FRotator;
	public function GetController(): cpp.Star<AController>;
	public function GetBaseAimRotation(): FRotator;
	public function DetachFromControllerPendingDestroy(): Void;
	public function ConsumeMovementInputVector(): FVector;
	public function AddMovementInput(WorldDirection: FVector, ScaleValue: cpp.Float32, bForce: Bool): Void;
	public function AddControllerYawInput(Val: cpp.Float32): Void;
	public function AddControllerRollInput(Val: cpp.Float32): Void;
	public function AddControllerPitchInput(Val: cpp.Float32): Void;
}
