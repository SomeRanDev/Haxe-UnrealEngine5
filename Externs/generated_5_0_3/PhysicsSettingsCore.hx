// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPhysicsSettingsCore")
@:include("PhysicsSettingsCore.h")
extern class PhysicsSettingsCore extends DeveloperSettings {
	public var DefaultGravityZ: cpp.Float32;
	public var DefaultTerminalVelocity: cpp.Float32;
	public var DefaultFluidFriction: cpp.Float32;
	public var SimulateScratchMemorySize: cpp.Int32;
	public var RagdollAggregateThreshold: cpp.Int32;
	public var TriangleMeshTriangleMinAreaThreshold: cpp.Float32;
	public var bEnableShapeSharing: Bool;
	public var bEnablePCM: Bool;
	public var bEnableStabilization: Bool;
	public var bWarnMissingLocks: Bool;
	public var bEnable2DPhysics: Bool;
	public var bDefaultHasComplexCollision_DEPRECATED: Bool;
	public var BounceThresholdVelocity: cpp.Float32;
	public var FrictionCombineMode: EFrictionCombineMode;
	public var RestitutionCombineMode: EFrictionCombineMode;
	public var MaxAngularVelocity: cpp.Float32;
	public var MaxDepenetrationVelocity: cpp.Float32;
	public var ContactOffsetMultiplier: cpp.Float32;
	public var MinContactOffset: cpp.Float32;
	public var MaxContactOffset: cpp.Float32;
	public var bSimulateSkeletalMeshOnDedicatedServer: Bool;
	public var DefaultShapeComplexity: ECollisionTraceFlag;
	public var SolverOptions: ChaosSolverConfiguration;
}

@:forward()
@:nativeGen
abstract ConstPhysicsSettingsCore(PhysicsSettingsCore) from PhysicsSettingsCore {
	public extern var DefaultGravityZ(get, never): cpp.Float32;
	public inline extern function get_DefaultGravityZ(): cpp.Float32 return this.DefaultGravityZ;
	public extern var DefaultTerminalVelocity(get, never): cpp.Float32;
	public inline extern function get_DefaultTerminalVelocity(): cpp.Float32 return this.DefaultTerminalVelocity;
	public extern var DefaultFluidFriction(get, never): cpp.Float32;
	public inline extern function get_DefaultFluidFriction(): cpp.Float32 return this.DefaultFluidFriction;
	public extern var SimulateScratchMemorySize(get, never): cpp.Int32;
	public inline extern function get_SimulateScratchMemorySize(): cpp.Int32 return this.SimulateScratchMemorySize;
	public extern var RagdollAggregateThreshold(get, never): cpp.Int32;
	public inline extern function get_RagdollAggregateThreshold(): cpp.Int32 return this.RagdollAggregateThreshold;
	public extern var TriangleMeshTriangleMinAreaThreshold(get, never): cpp.Float32;
	public inline extern function get_TriangleMeshTriangleMinAreaThreshold(): cpp.Float32 return this.TriangleMeshTriangleMinAreaThreshold;
	public extern var bEnableShapeSharing(get, never): Bool;
	public inline extern function get_bEnableShapeSharing(): Bool return this.bEnableShapeSharing;
	public extern var bEnablePCM(get, never): Bool;
	public inline extern function get_bEnablePCM(): Bool return this.bEnablePCM;
	public extern var bEnableStabilization(get, never): Bool;
	public inline extern function get_bEnableStabilization(): Bool return this.bEnableStabilization;
	public extern var bWarnMissingLocks(get, never): Bool;
	public inline extern function get_bWarnMissingLocks(): Bool return this.bWarnMissingLocks;
	public extern var bEnable2DPhysics(get, never): Bool;
	public inline extern function get_bEnable2DPhysics(): Bool return this.bEnable2DPhysics;
	public extern var bDefaultHasComplexCollision_DEPRECATED(get, never): Bool;
	public inline extern function get_bDefaultHasComplexCollision_DEPRECATED(): Bool return this.bDefaultHasComplexCollision_DEPRECATED;
	public extern var BounceThresholdVelocity(get, never): cpp.Float32;
	public inline extern function get_BounceThresholdVelocity(): cpp.Float32 return this.BounceThresholdVelocity;
	public extern var FrictionCombineMode(get, never): EFrictionCombineMode;
	public inline extern function get_FrictionCombineMode(): EFrictionCombineMode return this.FrictionCombineMode;
	public extern var RestitutionCombineMode(get, never): EFrictionCombineMode;
	public inline extern function get_RestitutionCombineMode(): EFrictionCombineMode return this.RestitutionCombineMode;
	public extern var MaxAngularVelocity(get, never): cpp.Float32;
	public inline extern function get_MaxAngularVelocity(): cpp.Float32 return this.MaxAngularVelocity;
	public extern var MaxDepenetrationVelocity(get, never): cpp.Float32;
	public inline extern function get_MaxDepenetrationVelocity(): cpp.Float32 return this.MaxDepenetrationVelocity;
	public extern var ContactOffsetMultiplier(get, never): cpp.Float32;
	public inline extern function get_ContactOffsetMultiplier(): cpp.Float32 return this.ContactOffsetMultiplier;
	public extern var MinContactOffset(get, never): cpp.Float32;
	public inline extern function get_MinContactOffset(): cpp.Float32 return this.MinContactOffset;
	public extern var MaxContactOffset(get, never): cpp.Float32;
	public inline extern function get_MaxContactOffset(): cpp.Float32 return this.MaxContactOffset;
	public extern var bSimulateSkeletalMeshOnDedicatedServer(get, never): Bool;
	public inline extern function get_bSimulateSkeletalMeshOnDedicatedServer(): Bool return this.bSimulateSkeletalMeshOnDedicatedServer;
	public extern var DefaultShapeComplexity(get, never): ECollisionTraceFlag;
	public inline extern function get_DefaultShapeComplexity(): ECollisionTraceFlag return this.DefaultShapeComplexity;
	public extern var SolverOptions(get, never): ChaosSolverConfiguration;
	public inline extern function get_SolverOptions(): ChaosSolverConfiguration return this.SolverOptions;
}