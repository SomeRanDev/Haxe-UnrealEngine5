// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGameUserSettings")
@:include("GameFramework/GameUserSettings.h")
extern class UGameUserSettings extends UObject {
	public var bUseVSync: Bool;
	public var bUseDynamicResolution: Bool;
	public var ResolutionSizeX: cpp.UInt32;
	public var ResolutionSizeY: cpp.UInt32;
	public var LastUserConfirmedResolutionSizeX: cpp.UInt32;
	public var LastUserConfirmedResolutionSizeY: cpp.UInt32;
	public var WindowPosX: cpp.Int32;
	public var WindowPosY: cpp.Int32;
	public var FullscreenMode: cpp.Int32;
	public var LastConfirmedFullscreenMode: cpp.Int32;
	public var PreferredFullscreenMode: cpp.Int32;
	public var Version: cpp.UInt32;
	public var AudioQualityLevel: cpp.Int32;
	public var LastConfirmedAudioQualityLevel: cpp.Int32;
	public var FrameRateLimit: cpp.Float32;
	public var DesiredScreenWidth: cpp.Int32;
	public var bUseDesiredScreenHeight: Bool;
	public var DesiredScreenHeight: cpp.Int32;
	public var LastUserConfirmedDesiredScreenWidth: cpp.Int32;
	public var LastUserConfirmedDesiredScreenHeight: cpp.Int32;
	public var LastRecommendedScreenWidth: cpp.Float32;
	public var LastRecommendedScreenHeight: cpp.Float32;
	public var LastCPUBenchmarkResult: cpp.Float32;
	public var LastGPUBenchmarkResult: cpp.Float32;
	public var LastCPUBenchmarkSteps: TArray<cpp.Float32>;
	public var LastGPUBenchmarkSteps: TArray<cpp.Float32>;
	public var LastGPUBenchmarkMultiplier: cpp.Float32;
	public var bUseHDRDisplayOutput: Bool;
	public var HDRDisplayOutputNits: cpp.Int32;
	public var OnGameUserSettingsUINeedsUpdate: HaxeMulticastSparseDelegateProperty<() -> Void>;

	public function ValidateSettings(): Void;
	public function SupportsHDRDisplayOutput(): Bool;
	public function SetVSyncEnabled(bEnable: Bool): Void;
	public function SetVisualEffectQuality(Value: cpp.Int32): Void;
	public function SetViewDistanceQuality(Value: cpp.Int32): Void;
	public function SetToDefaults(): Void;
	public function SetTextureQuality(Value: cpp.Int32): Void;
	public function SetShadowQuality(Value: cpp.Int32): Void;
	public function SetShadingQuality(Value: cpp.Int32): Void;
	public function SetScreenResolution(Resolution: FIntPoint): Void;
	public function SetResolutionScaleValueEx(NewScaleValue: cpp.Float32): Void;
	public function SetResolutionScaleValue(NewScaleValue: cpp.Int32): Void;
	public function SetResolutionScaleNormalized(NewScaleNormalized: cpp.Float32): Void;
	public function SetReflectionQuality(Value: cpp.Int32): Void;
	public function SetPostProcessingQuality(Value: cpp.Int32): Void;
	public function SetOverallScalabilityLevel(Value: cpp.Int32): Void;
	public function SetGlobalIlluminationQuality(Value: cpp.Int32): Void;
	public function SetFullscreenMode(InFullscreenMode: EWindowMode): Void;
	public function SetFrameRateLimit(NewLimit: cpp.Float32): Void;
	public function SetFoliageQuality(Value: cpp.Int32): Void;
	public function SetDynamicResolutionEnabled(bEnable: Bool): Void;
	public function SetBenchmarkFallbackValues(): Void;
	public function SetAudioQualityLevel(QualityLevel: cpp.Int32): Void;
	public function SetAntiAliasingQuality(Value: cpp.Int32): Void;
	public function SaveSettings(): Void;
	public function RunHardwareBenchmark(WorkScale: cpp.Int32, CPUMultiplier: cpp.Float32, GPUMultiplier: cpp.Float32): Void;
	public function RevertVideoMode(): Void;
	public function ResetToCurrentSettings(): Void;
	public function LoadSettings(bForceReload: Bool): Void;
	public function IsVSyncEnabled(): Bool;
	public function IsVSyncDirty(): Bool;
	public function IsScreenResolutionDirty(): Bool;
	public function IsHDREnabled(): Bool;
	public function IsFullscreenModeDirty(): Bool;
	public function IsDynamicResolutionEnabled(): Bool;
	public function IsDynamicResolutionDirty(): Bool;
	public function IsDirty(): Bool;
	public function GetVisualEffectQuality(): cpp.Int32;
	public function GetViewDistanceQuality(): cpp.Int32;
	public function GetTextureQuality(): cpp.Int32;
	public function GetSyncInterval(): cpp.Int32;
	public function GetShadowQuality(): cpp.Int32;
	public function GetShadingQuality(): cpp.Int32;
	public function GetScreenResolution(): FIntPoint;
	public function GetResolutionScaleNormalized(): cpp.Float32;
	public function GetResolutionScaleInformationEx(CurrentScaleNormalized: cpp.Reference<cpp.Float32>, CurrentScaleValue: cpp.Reference<cpp.Float32>, MinScaleValue: cpp.Reference<cpp.Float32>, MaxScaleValue: cpp.Reference<cpp.Float32>): Void;
	public function GetResolutionScaleInformation(CurrentScaleNormalized: cpp.Reference<cpp.Float32>, CurrentScaleValue: cpp.Reference<cpp.Int32>, MinScaleValue: cpp.Reference<cpp.Int32>, MaxScaleValue: cpp.Reference<cpp.Int32>): Void;
	public function GetReflectionQuality(): cpp.Int32;
	public function GetRecommendedResolutionScale(): cpp.Float32;
	public function GetPreferredFullscreenMode(): EWindowMode;
	public function GetPostProcessingQuality(): cpp.Int32;
	public function GetOverallScalabilityLevel(): cpp.Int32;
	public function GetLastConfirmedScreenResolution(): FIntPoint;
	public function GetLastConfirmedFullscreenMode(): EWindowMode;
	public function GetGlobalIlluminationQuality(): cpp.Int32;
	public function GetGameUserSettings(): cpp.Star<UGameUserSettings>;
	public function GetFullscreenMode(): EWindowMode;
	public function GetFrameRateLimit(): cpp.Float32;
	public function GetFramePace(): cpp.Int32;
	public function GetFoliageQuality(): cpp.Int32;
	public function GetDesktopResolution(): FIntPoint;
	public function GetDefaultWindowPosition(): FIntPoint;
	public function GetDefaultWindowMode(): EWindowMode;
	public function GetDefaultResolutionScale(): cpp.Float32;
	public function GetDefaultResolution(): FIntPoint;
	public function GetCurrentHDRDisplayNits(): cpp.Int32;
	public function GetAudioQualityLevel(): cpp.Int32;
	public function GetAntiAliasingQuality(): cpp.Int32;
	public function EnableHDRDisplayOutput(bEnable: Bool, DisplayNits: cpp.Int32): Void;
	public function ConfirmVideoMode(): Void;
	public function ApplySettings(bCheckForCommandLineOverrides: Bool): Void;
	public function ApplyResolutionSettings(bCheckForCommandLineOverrides: Bool): Void;
	public function ApplyNonResolutionSettings(): Void;
	public function ApplyHardwareBenchmarkResults(): Void;
}
