// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMeshTangentsTool")
@:include("MeshTangentsTool.h")
@:structAccess
extern class MeshTangentsTool extends SingleSelectionMeshEditingTool {
	public var Settings: cpp.Star<MeshTangentsToolProperties>;
	public var DefaultMaterial: cpp.Star<MaterialInterface>;
	public var PreviewMesh: cpp.Star<PreviewMesh>;
	public var PreviewGeometry: cpp.Star<PreviewGeometry>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMeshTangentsTool(MeshTangentsTool) from MeshTangentsTool {
	public extern var Settings(get, never): cpp.Star<MeshTangentsToolProperties.ConstMeshTangentsToolProperties>;
	public inline extern function get_Settings(): cpp.Star<MeshTangentsToolProperties.ConstMeshTangentsToolProperties> return this.Settings;
	public extern var DefaultMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_DefaultMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.DefaultMaterial;
	public extern var PreviewMesh(get, never): cpp.Star<PreviewMesh.ConstPreviewMesh>;
	public inline extern function get_PreviewMesh(): cpp.Star<PreviewMesh.ConstPreviewMesh> return this.PreviewMesh;
	public extern var PreviewGeometry(get, never): cpp.Star<PreviewGeometry.ConstPreviewGeometry>;
	public inline extern function get_PreviewGeometry(): cpp.Star<PreviewGeometry.ConstPreviewGeometry> return this.PreviewGeometry;
}

@:forward
@:nativeGen
@:native("MeshTangentsTool*")
abstract MeshTangentsToolPtr(cpp.Star<MeshTangentsTool>) from cpp.Star<MeshTangentsTool> to cpp.Star<MeshTangentsTool>{
	@:from
	public static extern inline function fromValue(v: MeshTangentsTool): MeshTangentsToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MeshTangentsTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}