// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USynthComponentMonoWaveTable")
@:include("SynthComponents/SynthComponentMonoWaveTable.h")
@:structAccess
extern class SynthComponentMonoWaveTable extends SynthComp {
	public var OnTableAltered: HaxeMulticastSparseDelegateProperty<(cpp.Int32) -> Void>;
	public var OnNumTablesChanged: HaxeMulticastSparseDelegateProperty<() -> Void>;
	@:protected public var CurrentPreset: cpp.Star<MonoWaveTableSynthPreset>;

	public function SetWaveTablePosition(InPosition: cpp.Float32): Void;
	public function SetSustainPedalState(InSustainPedalState: Bool): Void;
	public function SetPosLfoType(InLfoType: ESynthLFOType): Void;
	public function SetPosLfoFrequency(InLfoFrequency: cpp.Float32): Void;
	public function SetPosLfoDepth(InLfoDepth: cpp.Float32): Void;
	public function SetPositionEnvelopeSustainGain(InSustainGain: cpp.Float32): Void;
	public function SetPositionEnvelopeReleaseTime(InReleaseTimeMsec: cpp.Float32): Void;
	public function SetPositionEnvelopeInvert(bInInvert: Bool): Void;
	public function SetPositionEnvelopeDepth(InDepth: cpp.Float32): Void;
	public function SetPositionEnvelopeDecayTime(InDecayTimeMsec: cpp.Float32): Void;
	public function SetPositionEnvelopeBiasInvert(bInBiasInvert: Bool): Void;
	public function SetPositionEnvelopeBiasDepth(InDepth: cpp.Float32): Void;
	public function SetPositionEnvelopeAttackTime(InAttackTimeMsec: cpp.Float32): Void;
	public function SetLowPassFilterResonance(InNewQ: cpp.Float32): Void;
	public function SetFrequencyWithMidiNote(InMidiNote: cpp.Float32): Void;
	public function SetFrequencyPitchBend(FrequencyOffsetCents: cpp.Float32): Void;
	public function SetFrequency(FrequencyHz: cpp.Float32): Void;
	public function SetFilterEnvelopeSustainGain(InSustainGain: cpp.Float32): Void;
	public function SetFilterEnvelopeReleaseTime(InReleaseTimeMsec: cpp.Float32): Void;
	public function SetFilterEnvelopenDecayTime(InDecayTimeMsec: cpp.Float32): Void;
	public function SetFilterEnvelopeInvert(bInInvert: Bool): Void;
	public function SetFilterEnvelopeDepth(InDepth: cpp.Float32): Void;
	public function SetFilterEnvelopeBiasInvert(bInBiasInvert: Bool): Void;
	public function SetFilterEnvelopeBiasDepth(InDepth: cpp.Float32): Void;
	public function SetFilterEnvelopeAttackTime(InAttackTimeMsec: cpp.Float32): Void;
	public function SetCurveValue(TableIndex: cpp.Int32, KeyframeIndex: cpp.Int32, NewValue: cpp.Float32): Bool;
	public function SetCurveTangent(TableIndex: cpp.Int32, InNewTangent: cpp.Float32): Bool;
	public function SetCurveInterpolationType(InterpolationType: CurveInterpolationType, TableIndex: cpp.Int32): Bool;
	public function SetAmpEnvelopeSustainGain(InSustainGain: cpp.Float32): Void;
	public function SetAmpEnvelopeReleaseTime(InReleaseTimeMsec: cpp.Float32): Void;
	public function SetAmpEnvelopeInvert(bInInvert: Bool): Void;
	public function SetAmpEnvelopeDepth(InDepth: cpp.Float32): Void;
	public function SetAmpEnvelopeDecayTime(InDecayTimeMsec: cpp.Float32): Void;
	public function SetAmpEnvelopeBiasInvert(bInBiasInvert: Bool): Void;
	public function SetAmpEnvelopeBiasDepth(InDepth: cpp.Float32): Void;
	public function SetAmpEnvelopeAttackTime(InAttackTimeMsec: cpp.Float32): Void;
	public function RefreshWaveTable(Index: cpp.Int32): Void;
	public function RefreshAllWaveTables(): Void;
	public function NoteOn(InMidiNote: cpp.Float32, InVelocity: cpp.Float32): Void;
	public function NoteOff(InMidiNote: cpp.Float32): Void;
	public function GetNumTableEntries(): cpp.Int32;
	public function GetMaxTableIndex(): cpp.Int32;
	public function GetKeyFrameValuesForTable(TableIndex: cpp.Float32): TArray<cpp.Float32>;
	public function GetCurveTangent(TableIndex: cpp.Int32): cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetMaxTableIndex, GetKeyFrameValuesForTable)
@:nativeGen
abstract ConstSynthComponentMonoWaveTable(SynthComponentMonoWaveTable) from SynthComponentMonoWaveTable {
	public extern var OnTableAltered(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Int32) -> Void>;
	public inline extern function get_OnTableAltered(): HaxeMulticastSparseDelegateProperty<(cpp.Int32) -> Void> return this.OnTableAltered;
	public extern var OnNumTablesChanged(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_OnNumTablesChanged(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.OnNumTablesChanged;
}

@:forward
@:nativeGen
@:native("SynthComponentMonoWaveTable*")
abstract SynthComponentMonoWaveTablePtr(cpp.Star<SynthComponentMonoWaveTable>) from cpp.Star<SynthComponentMonoWaveTable> to cpp.Star<SynthComponentMonoWaveTable>{
	@:from
	public static extern inline function fromValue(v: SynthComponentMonoWaveTable): SynthComponentMonoWaveTablePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SynthComponentMonoWaveTable {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}