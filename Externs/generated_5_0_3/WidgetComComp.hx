// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWidgetComponent")
@:include("Components/WidgetComponent.h")
extern class WidgetComComp extends MeshCompoComp {
	public var Space: EWidgetSpace;
	public var TimingPolicy: EWidgetTimingPolicy;
	public var WidgetClass: TSubclassOf<UserWidget>;
	public var DrawSize: FIntPoint;
	public var bManuallyRedraw: Bool;
	public var bRedrawRequested: Bool;
	public var RedrawTime: cpp.Float32;
	public var CurrentDrawSize: FIntPoint;
	public var bDrawAtDesiredSize: Bool;
	public var Pivot: FVector2D;
	public var bReceiveHardwareInput: Bool;
	public var bWindowFocusable: Bool;
	public var WindowVisibility: EWindowVisibility;
	public var bApplyGammaCorrection: Bool;
	public var OwnerPlayer: cpp.Star<LocalPlayer>;
	public var BackgroundColor: FLinearColor;
	public var TintColorAndOpacity: FLinearColor;
	public var OpacityFromTexture: cpp.Float32;
	public var BlendMode: EWidgetBlendMode;
	public var bIsTwoSided: Bool;
	public var TickWhenOffscreen: Bool;
	public var BodySetup: cpp.Star<BodySetup>;
	public var TranslucentMaterial: cpp.Star<MaterialInterface>;
	public var TranslucentMaterial_OneSided: cpp.Star<MaterialInterface>;
	public var OpaqueMaterial: cpp.Star<MaterialInterface>;
	public var OpaqueMaterial_OneSided: cpp.Star<MaterialInterface>;
	public var MaskedMaterial: cpp.Star<MaterialInterface>;
	public var MaskedMaterial_OneSided: cpp.Star<MaterialInterface>;
	public var RenderTarget: cpp.Star<TextureRenderTarget2D>;
	public var MaterialInstance: cpp.Star<MaterialInstanceDynamic>;
	public var bAddedToScreen: Bool;
	public var bEditTimeUsable: Bool;
	public var SharedLayerName: FName;
	public var LayerZOrder: cpp.Int32;
	public var GeometryMode: EWidgetGeometryMode;
	public var CylinderArcAngle: cpp.Float32;
	public var TickMode: ETickMode;
	public var Widget: cpp.Star<UserWidget>;

	public function SetWindowVisibility(InVisibility: EWindowVisibility): Void;
	public function SetWindowFocusable(bInWindowFocusable: Bool): Void;
	public function SetWidgetSpace(NewSpace: EWidgetSpace): Void;
	public function SetWidget(Widget: cpp.Star<UserWidget>): Void;
	public function SetTwoSided(bWantTwoSided: Bool): Void;
	public function SetTintColorAndOpacity(NewTintColorAndOpacity: FLinearColor): Void;
	public function SetTickWhenOffscreen(bWantTickWhenOffscreen: Bool): Void;
	public function SetTickMode(InTickMode: ETickMode): Void;
	public function SetRedrawTime(InRedrawTime: cpp.Float32): Void;
	public function SetPivot(InPivot: cpp.Reference<FVector2D>): Void;
	public function SetOwnerPlayer(LocalPlayer: cpp.Star<LocalPlayer>): Void;
	public function SetManuallyRedraw(bUseManualRedraw: Bool): Void;
	public function SetGeometryMode(InGeometryMode: EWidgetGeometryMode): Void;
	public function SetDrawSize(Size: FVector2D): Void;
	public function SetDrawAtDesiredSize(bInDrawAtDesiredSize: Bool): Void;
	public function SetCylinderArcAngle(InCylinderArcAngle: cpp.Float32): Void;
	public function SetBackgroundColor(NewBackgroundColor: FLinearColor): Void;
	public function RequestRenderUpdate(): Void;
	public function RequestRedraw(): Void;
	public function IsWidgetVisible(): cpp.Reference<Bool>;
	public function GetWindowVisiblility(): cpp.Reference<EWindowVisibility>;
	public function GetWindowFocusable(): cpp.Reference<Bool>;
	public function GetWidgetSpace(): cpp.Reference<EWidgetSpace>;
	public function GetWidget(): cpp.Reference<cpp.Star<UserWidget>>;
	public function GetUserWidgetObject(): cpp.Reference<cpp.Star<UserWidget>>;
	public function GetTwoSided(): cpp.Reference<Bool>;
	public function GetTickWhenOffscreen(): cpp.Reference<Bool>;
	public function GetRenderTarget(): cpp.Reference<cpp.Star<TextureRenderTarget2D>>;
	public function GetRedrawTime(): cpp.Reference<cpp.Float32>;
	public function GetPivot(): cpp.Reference<FVector2D>;
	public function GetOwnerPlayer(): cpp.Reference<cpp.Star<LocalPlayer>>;
	public function GetMaterialInstance(): cpp.Reference<cpp.Star<MaterialInstanceDynamic>>;
	public function GetManuallyRedraw(): cpp.Reference<Bool>;
	public function GetGeometryMode(): cpp.Reference<EWidgetGeometryMode>;
	public function GetDrawSize(): cpp.Reference<FVector2D>;
	public function GetDrawAtDesiredSize(): cpp.Reference<Bool>;
	public function GetCylinderArcAngle(): cpp.Reference<cpp.Float32>;
	public function GetCurrentDrawSize(): cpp.Reference<FVector2D>;
}

@:forward(
	IsWidgetVisible, GetWindowVisiblility, GetWindowFocusable, GetWidgetSpace, GetWidget,
	GetUserWidgetObject, GetTwoSided, GetTickWhenOffscreen, GetRenderTarget, GetRedrawTime,
	GetPivot, GetOwnerPlayer, GetMaterialInstance, GetManuallyRedraw, GetGeometryMode,
	GetDrawSize, GetDrawAtDesiredSize, GetCylinderArcAngle, GetCurrentDrawSize
)
abstract ConstWidgetComComp(WidgetComComp) from WidgetComComp {
}