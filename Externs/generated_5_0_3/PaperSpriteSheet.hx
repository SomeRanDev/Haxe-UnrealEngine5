// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPaperSpriteSheet")
@:include("PaperSpriteSheet.h")
@:structAccess
extern class PaperSpriteSheet extends Object {
	public var SpriteNames: TArray<FString>;
	public var Sprites: TArray<TSoftObjectPtr<PaperSprite>>;
	public var TextureName: FString;
	public var Texture: cpp.Star<Texture2D>;
	public var NormalMapTextureName: FString;
	public var NormalMapTexture: cpp.Star<Texture2D>;
	public var AssetImportData: cpp.Star<AssetImportData>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstPaperSpriteSheet(PaperSpriteSheet) from PaperSpriteSheet {
	public extern var SpriteNames(get, never): TArray<FString>;
	public inline extern function get_SpriteNames(): TArray<FString> return this.SpriteNames;
	public extern var Sprites(get, never): TArray<TSoftObjectPtr<PaperSprite.ConstPaperSprite>>;
	public inline extern function get_Sprites(): TArray<TSoftObjectPtr<PaperSprite.ConstPaperSprite>> return this.Sprites;
	public extern var TextureName(get, never): FString;
	public inline extern function get_TextureName(): FString return this.TextureName;
	public extern var Texture(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_Texture(): cpp.Star<Texture2D.ConstTexture2D> return this.Texture;
	public extern var NormalMapTextureName(get, never): FString;
	public inline extern function get_NormalMapTextureName(): FString return this.NormalMapTextureName;
	public extern var NormalMapTexture(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_NormalMapTexture(): cpp.Star<Texture2D.ConstTexture2D> return this.NormalMapTexture;
	public extern var AssetImportData(get, never): cpp.Star<AssetImportData.ConstAssetImportData>;
	public inline extern function get_AssetImportData(): cpp.Star<AssetImportData.ConstAssetImportData> return this.AssetImportData;
}

@:forward
@:nativeGen
@:native("PaperSpriteSheet*")
abstract PaperSpriteSheetPtr(cpp.Star<PaperSpriteSheet>) from cpp.Star<PaperSpriteSheet> to cpp.Star<PaperSpriteSheet>{
	@:from
	public static extern inline function fromValue(v: PaperSpriteSheet): PaperSpriteSheetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PaperSpriteSheet {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}