// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UParticleModuleRequired")
@:include("Particles/ParticleModuleRequired.h")
extern class UParticleModuleRequired extends UParticleModule {
	public var Material: TObjectPtr<UMaterialInterface>;
	public var MinFacingCameraBlendDistance: cpp.Float32;
	public var MaxFacingCameraBlendDistance: cpp.Float32;
	public var EmitterOrigin: FVector;
	public var EmitterRotation: FRotator;
	public var ScreenAlignment: EParticleScreenAlignment;
	public var bUseLocalSpace: Bool;
	public var bKillOnDeactivate: Bool;
	public var bKillOnCompleted: Bool;
	public var SortMode: EParticleSortMode;
	public var bUseLegacyEmitterTime: Bool;
	public var bRemoveHMDRoll: Bool;
	public var bSupportLargeWorldCoordinates: Bool;
	public var bEmitterDurationUseRange: Bool;
	public var EmitterDuration: cpp.Float32;
	public var SpawnRate: FRawDistributionFloat;
	public var BurstList: TArray<FParticleBurst>;
	public var EmitterDelay: cpp.Float32;
	public var EmitterDelayLow: cpp.Float32;
	public var bDelayFirstLoopOnly: Bool;
	public var InterpolationMethod: EParticleSubUVInterpMethod;
	public var bScaleUV: Bool;
	public var bEmitterDelayUseRange: Bool;
	public var ParticleBurstMethod: EParticleBurstMethod;
	public var bOverrideSystemMacroUV: Bool;
	public var bUseMaxDrawCount: Bool;
	public var OpacitySourceMode: EOpacitySourceMode;
	public var EmitterNormalsMode: EEmitterNormalsMode;
	public var bOrbitModuleAffectsVelocityAlignment: Bool;
	public var SubImages_Horizontal: cpp.Int32;
	public var SubImages_Vertical: cpp.Int32;
	public var RandomImageTime: cpp.Float32;
	public var RandomImageChanges: cpp.Int32;
	public var MacroUVPosition: FVector;
	public var MacroUVRadius: cpp.Float32;
	public var UVFlippingMode: EParticleUVFlipMode;
	public var BoundingMode: ESubUVBoundingVertexCount;
	public var bDurationRecalcEachLoop: Bool;
	public var NormalsSphereCenter: FVector;
	public var AlphaThreshold: cpp.Float32;
	public var EmitterLoops: cpp.Int32;
	public var CutoutTexture: TObjectPtr<UTexture2D>;
	public var MaxDrawCount: cpp.Int32;
	public var EmitterDurationLow: cpp.Float32;
	public var NormalsCylinderDirection: FVector;
	public var NamedMaterialOverrides: TArray<FName>;
}
