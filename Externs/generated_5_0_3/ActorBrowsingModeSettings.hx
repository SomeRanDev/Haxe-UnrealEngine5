// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UActorBrowsingModeSettings")
@:include("ActorBrowsingModeSettings.h")
@:structAccess
extern class ActorBrowsingModeSettings extends Object {
	public var bHideTemporaryActors: Bool;
	public var bShowOnlyActorsInCurrentLevel: Bool;
	public var bShowOnlySelectedActors: Bool;
	public var bHideActorComponents: Bool;
	public var bHideLevelInstanceHierarchy: Bool;
	public var bHideUnloadedActors: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstActorBrowsingModeSettings(ActorBrowsingModeSettings) from ActorBrowsingModeSettings {
	public extern var bHideTemporaryActors(get, never): Bool;
	public inline extern function get_bHideTemporaryActors(): Bool return this.bHideTemporaryActors;
	public extern var bShowOnlyActorsInCurrentLevel(get, never): Bool;
	public inline extern function get_bShowOnlyActorsInCurrentLevel(): Bool return this.bShowOnlyActorsInCurrentLevel;
	public extern var bShowOnlySelectedActors(get, never): Bool;
	public inline extern function get_bShowOnlySelectedActors(): Bool return this.bShowOnlySelectedActors;
	public extern var bHideActorComponents(get, never): Bool;
	public inline extern function get_bHideActorComponents(): Bool return this.bHideActorComponents;
	public extern var bHideLevelInstanceHierarchy(get, never): Bool;
	public inline extern function get_bHideLevelInstanceHierarchy(): Bool return this.bHideLevelInstanceHierarchy;
	public extern var bHideUnloadedActors(get, never): Bool;
	public inline extern function get_bHideUnloadedActors(): Bool return this.bHideUnloadedActors;
}

@:forward
@:nativeGen
@:native("ActorBrowsingModeSettings*")
abstract ActorBrowsingModeSettingsPtr(cpp.Star<ActorBrowsingModeSettings>) from cpp.Star<ActorBrowsingModeSettings> to cpp.Star<ActorBrowsingModeSettings>{
	@:from
	public static extern inline function fromValue(v: ActorBrowsingModeSettings): ActorBrowsingModeSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ActorBrowsingModeSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}