// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEditConditionTestObject")
@:include("EditConditionParserTests.h")
@:structAccess
extern class EditConditionTestObject extends Object {
	public var BoolProperty: Bool;
	public var EnumProperty: EditConditionTestEnum;
	public var ByteEnumProperty: EditConditionByteEnum;
	public var DoubleProperty: cpp.Float64;
	public var IntegerProperty: cpp.Int32;
	public var UintBitfieldProperty: Bool;
	public var UObjectPtr: cpp.Star<Object>;
	public var SoftClassPtr: TSoftClassPtr<Class>;
	public var WeakObjectPtr: TWeakObjectPtr<Object>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstEditConditionTestObject(EditConditionTestObject) from EditConditionTestObject {
	public extern var BoolProperty(get, never): Bool;
	public inline extern function get_BoolProperty(): Bool return this.BoolProperty;
	public extern var EnumProperty(get, never): EditConditionTestEnum;
	public inline extern function get_EnumProperty(): EditConditionTestEnum return this.EnumProperty;
	public extern var ByteEnumProperty(get, never): EditConditionByteEnum;
	public inline extern function get_ByteEnumProperty(): EditConditionByteEnum return this.ByteEnumProperty;
	public extern var DoubleProperty(get, never): cpp.Float64;
	public inline extern function get_DoubleProperty(): cpp.Float64 return this.DoubleProperty;
	public extern var IntegerProperty(get, never): cpp.Int32;
	public inline extern function get_IntegerProperty(): cpp.Int32 return this.IntegerProperty;
	public extern var UintBitfieldProperty(get, never): Bool;
	public inline extern function get_UintBitfieldProperty(): Bool return this.UintBitfieldProperty;
	public extern var UObjectPtr(get, never): cpp.Star<Object.ConstObject>;
	public inline extern function get_UObjectPtr(): cpp.Star<Object.ConstObject> return this.UObjectPtr;
	public extern var SoftClassPtr(get, never): TSoftClassPtr<Class.ConstClass>;
	public inline extern function get_SoftClassPtr(): TSoftClassPtr<Class.ConstClass> return this.SoftClassPtr;
	public extern var WeakObjectPtr(get, never): TWeakObjectPtr<Object.ConstObject>;
	public inline extern function get_WeakObjectPtr(): TWeakObjectPtr<Object.ConstObject> return this.WeakObjectPtr;
}