// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULevelSequenceEditorBlueprintLibrary")
@:include("LevelSequenceEditorBlueprintLibrary.h")
extern class ULevelSequenceEditorBlueprintLibrary extends UBlueprintFunctionLibrary {

	public function SetTrackFilterEnabled(TrackFilterName: cpp.Reference<FText>, bEnabled: Bool): Void;
	public function SetSelectionRangeStart(NewFrame: cpp.Int32): Void;
	public function SetSelectionRangeEnd(NewFrame: cpp.Int32): Void;
	public function SetRandomColorForChannels(Class: cpp.Star<UClass>, Identifiers: TArray<FString>): Void;
	public function SetLockLevelSequence(bLock: Bool): Void;
	public function SetLockCameraCutToViewport(bLock: Bool): Void;
	public function SetCustomColorForChannels(Class: cpp.Star<UClass>, Identifiers: TArray<FString>, NewColors: TArray<FLinearColor>): Void;
	public function SetCustomColorForChannel(Class: cpp.Star<UClass>, Identifier: FString, NewColor: FLinearColor): Void;
	public function SetCurrentTime(NewFrame: cpp.Int32): Void;
	public function SetCurrentLocalTime(NewFrame: cpp.Int32): Void;
	public function SelectTracks(Tracks: TArray<cpp.Star<UMovieSceneTrack>>): Void;
	public function SelectSections(Sections: TArray<cpp.Star<UMovieSceneSection>>): Void;
	public function SelectObjects(ObjectBinding: TArray<FGuid>): Void;
	public function SelectFolders(Folders: TArray<cpp.Star<UMovieSceneFolder>>): Void;
	public function SelectChannels(Channels: TArray<FSequencerChannelProxy>): Void;
	public function RefreshCurrentLevelSequence(): Void;
	public function PlayTo(PlaybackParams: FMovieSceneSequencePlaybackParams): Void;
	public function Play(): Void;
	public function Pause(): Void;
	public function OpenLevelSequence(LevelSequence: cpp.Star<ULevelSequence>): Bool;
	public function IsTrackFilterEnabled(TrackFilterName: cpp.Reference<FText>): Bool;
	public function IsPlaying(): Bool;
	public function IsLevelSequenceLocked(): Bool;
	public function IsCameraCutLockedToViewport(): Bool;
	public function HasCustomColorForChannel(Class: cpp.Star<UClass>, Identifier: FString): Bool;
	public function GetTrackFilterNames(): TArray<FText>;
	public function GetSelectionRangeStart(): cpp.Int32;
	public function GetSelectionRangeEnd(): cpp.Int32;
	public function GetSelectedTracks(): TArray<cpp.Star<UMovieSceneTrack>>;
	public function GetSelectedSections(): TArray<cpp.Star<UMovieSceneSection>>;
	public function GetSelectedObjects(): TArray<FGuid>;
	public function GetSelectedFolders(): TArray<cpp.Star<UMovieSceneFolder>>;
	public function GetSelectedChannels(): TArray<FSequencerChannelProxy>;
	public function GetFocusedLevelSequence(): cpp.Star<ULevelSequence>;
	public function GetCustomColorForChannel(Class: cpp.Star<UClass>, Identifier: FString): FLinearColor;
	public function GetCurrentTime(): cpp.Int32;
	public function GetCurrentLocalTime(): cpp.Int32;
	public function GetCurrentLevelSequence(): cpp.Star<ULevelSequence>;
	public function GetBoundObjects(ObjectBinding: FMovieSceneObjectBindingID): TArray<cpp.Star<UObject>>;
	public function EmptySelection(): Void;
	public function DeleteColorForChannels(Class: cpp.Star<UClass>, Identifier: cpp.Reference<FString>): Void;
	public function CloseLevelSequence(): Void;
}
