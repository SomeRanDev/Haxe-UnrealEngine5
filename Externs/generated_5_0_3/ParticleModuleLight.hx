// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UParticleModuleLight")
@:include("Particles/Light/ParticleModuleLight.h")
@:structAccess
extern class ParticleModuleLight extends ParticleModuleLightBase {
	public var bUseInverseSquaredFalloff: Bool;
	public var bAffectsTranslucency: Bool;
	public var bPreviewLightRadius: Bool;
	public var SpawnFraction: cpp.Float32;
	public var ColorScaleOverLife: RawDistributionVector;
	public var BrightnessOverLife: RawDistributionFloat;
	public var RadiusScale: RawDistributionFloat;
	public var LightExponent: RawDistributionFloat;
	public var LightingChannels: LightingChannels;
	public var VolumetricScatteringIntensity: cpp.Float32;
	public var bHighQualityLights: Bool;
	public var bShadowCastingLights: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstParticleModuleLight(ParticleModuleLight) from ParticleModuleLight {
	public extern var bUseInverseSquaredFalloff(get, never): Bool;
	public inline extern function get_bUseInverseSquaredFalloff(): Bool return this.bUseInverseSquaredFalloff;
	public extern var bAffectsTranslucency(get, never): Bool;
	public inline extern function get_bAffectsTranslucency(): Bool return this.bAffectsTranslucency;
	public extern var bPreviewLightRadius(get, never): Bool;
	public inline extern function get_bPreviewLightRadius(): Bool return this.bPreviewLightRadius;
	public extern var SpawnFraction(get, never): cpp.Float32;
	public inline extern function get_SpawnFraction(): cpp.Float32 return this.SpawnFraction;
	public extern var ColorScaleOverLife(get, never): RawDistributionVector;
	public inline extern function get_ColorScaleOverLife(): RawDistributionVector return this.ColorScaleOverLife;
	public extern var BrightnessOverLife(get, never): RawDistributionFloat;
	public inline extern function get_BrightnessOverLife(): RawDistributionFloat return this.BrightnessOverLife;
	public extern var RadiusScale(get, never): RawDistributionFloat;
	public inline extern function get_RadiusScale(): RawDistributionFloat return this.RadiusScale;
	public extern var LightExponent(get, never): RawDistributionFloat;
	public inline extern function get_LightExponent(): RawDistributionFloat return this.LightExponent;
	public extern var LightingChannels(get, never): LightingChannels;
	public inline extern function get_LightingChannels(): LightingChannels return this.LightingChannels;
	public extern var VolumetricScatteringIntensity(get, never): cpp.Float32;
	public inline extern function get_VolumetricScatteringIntensity(): cpp.Float32 return this.VolumetricScatteringIntensity;
	public extern var bHighQualityLights(get, never): Bool;
	public inline extern function get_bHighQualityLights(): Bool return this.bHighQualityLights;
	public extern var bShadowCastingLights(get, never): Bool;
	public inline extern function get_bShadowCastingLights(): Bool return this.bShadowCastingLights;
}

@:forward
@:nativeGen
@:native("ParticleModuleLight*")
abstract ParticleModuleLightPtr(cpp.Star<ParticleModuleLight>) from cpp.Star<ParticleModuleLight> to cpp.Star<ParticleModuleLight>{
	@:from
	public static extern inline function fromValue(v: ParticleModuleLight): ParticleModuleLightPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ParticleModuleLight {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}