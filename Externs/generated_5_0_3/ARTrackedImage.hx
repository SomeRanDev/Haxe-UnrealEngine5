// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UARTrackedImage")
@:include("ARTrackable.h")
@:structAccess
extern class ARTrackedImage extends ARTrackedGeometry {
	public var DetectedImage: cpp.Star<ARCandidateImage>;
	public var EstimatedSize: Vector2D;

	public function GetEstimateSize(): cpp.Reference<Vector2D>;
	public function GetDetectedImage(): cpp.Reference<cpp.Star<ARCandidateImage>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetDetectedImage)
@:nativeGen
abstract ConstARTrackedImage(ARTrackedImage) from ARTrackedImage {
	public extern var DetectedImage(get, never): cpp.Star<ARCandidateImage.ConstARCandidateImage>;
	public inline extern function get_DetectedImage(): cpp.Star<ARCandidateImage.ConstARCandidateImage> return this.DetectedImage;
	public extern var EstimatedSize(get, never): Vector2D;
	public inline extern function get_EstimatedSize(): Vector2D return this.EstimatedSize;
}

@:forward
@:nativeGen
@:native("ARTrackedImage*")
abstract ARTrackedImagePtr(cpp.Star<ARTrackedImage>) from cpp.Star<ARTrackedImage> to cpp.Star<ARTrackedImage>{
	@:from
	public static extern inline function fromValue(v: ARTrackedImage): ARTrackedImagePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ARTrackedImage {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}