// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGizmoAxisIntervalParameterSource")
@:include("BaseGizmos/IntervalGizmo.h")
@:structAccess
extern class GizmoAxisIntervalParameterSource extends GizmoBaseFloatParameterSource {
	public var FloatParameterSource: GizmoFloatParameterSource;
	public var MinParameter: cpp.Float32;
	public var MaxParameter: cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGizmoAxisIntervalParameterSource(GizmoAxisIntervalParameterSource) from GizmoAxisIntervalParameterSource {
	public extern var FloatParameterSource(get, never): GizmoFloatParameterSource.ConstGizmoFloatParameterSource;
	public inline extern function get_FloatParameterSource(): GizmoFloatParameterSource.ConstGizmoFloatParameterSource return this.FloatParameterSource;
	public extern var MinParameter(get, never): cpp.Float32;
	public inline extern function get_MinParameter(): cpp.Float32 return this.MinParameter;
	public extern var MaxParameter(get, never): cpp.Float32;
	public inline extern function get_MaxParameter(): cpp.Float32 return this.MaxParameter;
}

@:forward
@:nativeGen
@:native("GizmoAxisIntervalParameterSource*")
abstract GizmoAxisIntervalParameterSourcePtr(cpp.Star<GizmoAxisIntervalParameterSource>) from cpp.Star<GizmoAxisIntervalParameterSource> to cpp.Star<GizmoAxisIntervalParameterSource>{
	@:from
	public static extern inline function fromValue(v: GizmoAxisIntervalParameterSource): GizmoAxisIntervalParameterSourcePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GizmoAxisIntervalParameterSource {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}