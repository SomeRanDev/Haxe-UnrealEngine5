// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovieSceneCompiledDataManager")
@:include("Compilation/MovieSceneCompiledDataManager.h")
@:structAccess
extern class MovieSceneCompiledDataManager extends Object {
	public var Hierarchies: TMap<cpp.Int32, MovieSceneSequenceHierarchy>;
	public var TrackTemplates: TMap<cpp.Int32, MovieSceneEvaluationTemplate>;
	public var TrackTemplateFields: TMap<cpp.Int32, MovieSceneEvaluationField>;
	public var EntityComponentFields: TMap<cpp.Int32, MovieSceneEntityComponentField>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMovieSceneCompiledDataManager(MovieSceneCompiledDataManager) from MovieSceneCompiledDataManager {
	public extern var Hierarchies(get, never): TMap<cpp.Int32, MovieSceneSequenceHierarchy>;
	public inline extern function get_Hierarchies(): TMap<cpp.Int32, MovieSceneSequenceHierarchy> return this.Hierarchies;
	public extern var TrackTemplates(get, never): TMap<cpp.Int32, MovieSceneEvaluationTemplate>;
	public inline extern function get_TrackTemplates(): TMap<cpp.Int32, MovieSceneEvaluationTemplate> return this.TrackTemplates;
	public extern var TrackTemplateFields(get, never): TMap<cpp.Int32, MovieSceneEvaluationField>;
	public inline extern function get_TrackTemplateFields(): TMap<cpp.Int32, MovieSceneEvaluationField> return this.TrackTemplateFields;
	public extern var EntityComponentFields(get, never): TMap<cpp.Int32, MovieSceneEntityComponentField>;
	public inline extern function get_EntityComponentFields(): TMap<cpp.Int32, MovieSceneEntityComponentField> return this.EntityComponentFields;
}

@:forward
@:nativeGen
@:native("MovieSceneCompiledDataManager*")
abstract MovieSceneCompiledDataManagerPtr(cpp.Star<MovieSceneCompiledDataManager>) from cpp.Star<MovieSceneCompiledDataManager> to cpp.Star<MovieSceneCompiledDataManager>{
	@:from
	public static extern inline function fromValue(v: MovieSceneCompiledDataManager): MovieSceneCompiledDataManagerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MovieSceneCompiledDataManager {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}