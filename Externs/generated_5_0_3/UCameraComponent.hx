// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UCameraComponent")
@:include("Camera/CameraComponent.h")
extern class UCameraComponent extends USceneComponent {
	public var FieldOfView: cpp.Float32;
	public var OrthoWidth: cpp.Float32;
	public var OrthoNearClipPlane: cpp.Float32;
	public var OrthoFarClipPlane: cpp.Float32;
	public var AspectRatio: cpp.Float32;
	public var bConstrainAspectRatio: Bool;
	public var bUseFieldOfViewForLOD: Bool;
	public var bDrawFrustumAllowed: Bool;
	public var bCameraMeshHiddenInGame: Bool;
	public var bLockToHmd: Bool;
	public var bUsePawnControlRotation: Bool;
	public var ProjectionMode: ECameraProjectionMode;
	public var CameraMesh: TObjectPtr<UStaticMesh>;
	public var PostProcessBlendWeight: cpp.Float32;
	public var PostProcessSettings: FPostProcessSettings;
	public var bUseControllerViewRotation_DEPRECATED: Bool;

	public function SetUseFieldOfViewForLOD(bInUseFieldOfViewForLOD: Bool): Void;
	public function SetProjectionMode(InProjectionMode: ECameraProjectionMode): Void;
	public function SetPostProcessBlendWeight(InPostProcessBlendWeight: cpp.Float32): Void;
	public function SetOrthoWidth(InOrthoWidth: cpp.Float32): Void;
	public function SetOrthoNearClipPlane(InOrthoNearClipPlane: cpp.Float32): Void;
	public function SetOrthoFarClipPlane(InOrthoFarClipPlane: cpp.Float32): Void;
	public function SetFieldOfView(InFieldOfView: cpp.Float32): Void;
	public function SetConstraintAspectRatio(bInConstrainAspectRatio: Bool): Void;
	public function SetAspectRatio(InAspectRatio: cpp.Float32): Void;
	public function RemoveBlendable(InBlendableObject: UBlendableInterface): Void;
	public function OnCameraMeshHiddenChanged(): Void;
	public function GetFilmbackText(): FText;
	public function GetCameraView(DeltaTime: cpp.Float32, DesiredView: FMinimalViewInfo): Void;
	public function AddOrUpdateBlendable(InBlendableObject: UBlendableInterface, InWeight: cpp.Float32): Void;
}
