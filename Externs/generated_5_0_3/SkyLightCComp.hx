// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USkyLightComponent")
@:include("Components/SkyLightComponent.h")
extern class SkyLightCComp extends LightComponentBase {
	public var bRealTimeCapture: Bool;
	public var SourceType: ESkyLightSourceType;
	public var Cubemap: cpp.Star<TextureCube>;
	public var SourceCubemapAngle: cpp.Float32;
	public var CubemapResolution: cpp.Int32;
	public var SkyDistanceThreshold: cpp.Float32;
	public var bCaptureEmissiveOnly: Bool;
	public var bLowerHemisphereIsBlack: Bool;
	public var LowerHemisphereColor: FLinearColor;
	public var OcclusionMaxDistance: cpp.Float32;
	public var Contrast: cpp.Float32;
	public var OcclusionExponent: cpp.Float32;
	public var MinOcclusion: cpp.Float32;
	public var OcclusionTint: FColor;
	public var bCloudAmbientOcclusion: Bool;
	public var CloudAmbientOcclusionStrength: cpp.Float32;
	public var CloudAmbientOcclusionExtent: cpp.Float32;
	public var CloudAmbientOcclusionMapResolutionScale: cpp.Float32;
	public var CloudAmbientOcclusionApertureScale: cpp.Float32;
	public var OcclusionCombineMode: EOcclusionCombineMode;
	public var BlendDestinationCubemap: cpp.Star<TextureCube>;

	public function SetVolumetricScatteringIntensity(NewIntensity: cpp.Float32): Void;
	public function SetOcclusionTint(InTint: cpp.Reference<FColor>): Void;
	public function SetOcclusionExponent(InOcclusionExponent: cpp.Float32): Void;
	public function SetOcclusionContrast(InOcclusionContrast: cpp.Float32): Void;
	public function SetMinOcclusion(InMinOcclusion: cpp.Float32): Void;
	public function SetLowerHemisphereColor(InLowerHemisphereColor: cpp.Reference<FLinearColor>): Void;
	public function SetLightColor(NewLightColor: FLinearColor): Void;
	public function SetIntensity(NewIntensity: cpp.Float32): Void;
	public function SetIndirectLightingIntensity(NewIntensity: cpp.Float32): Void;
	public function SetCubemapBlend(SourceCubemap: cpp.Star<TextureCube>, DestinationCubemap: cpp.Star<TextureCube>, InBlendFraction: cpp.Float32): Void;
	public function SetCubemap(NewCubemap: cpp.Star<TextureCube>): Void;
	public function RecaptureSky(): Void;
}

@:forward()
abstract ConstSkyLightCComp(SkyLightCComp) from SkyLightCComp {
}