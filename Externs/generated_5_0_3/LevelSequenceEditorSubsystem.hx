// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULevelSequenceEditorSubsystem")
@:include("LevelSequenceEditorSubsystem.h")
@:structAccess
extern class LevelSequenceEditorSubsystem extends EditorSubsystem {
	public function SyncSectionsUsingSourceTimecode(Sections: cpp.Reference<TArray<cpp.Star<MovieSceneSection>>>): Void;
	public function SnapSectionsToTimelineUsingSourceTimecode(Sections: cpp.Reference<TArray<cpp.Star<MovieSceneSection>>>): Void;
	public function ReplaceBindingWithActors(Actors: cpp.Reference<TArray<cpp.Star<Actor>>>, ObjectBinding: cpp.Reference<SequencerBindingProxy>): Void;
	public function RemoveInvalidBindings(ObjectBinding: cpp.Reference<SequencerBindingProxy>): Void;
	public function RemoveAllBindings(ObjectBinding: cpp.Reference<SequencerBindingProxy>): Void;
	public function RemoveActorsFromBinding(Actors: cpp.Reference<TArray<cpp.Star<Actor>>>, ObjectBinding: cpp.Reference<SequencerBindingProxy>): Void;
	public function RebindComponent(ComponentBindings: cpp.Reference<TArray<SequencerBindingProxy>>, ComponentName: cpp.Reference<FName>): Void;
	public function FixActorReferences(): Void;
	public function BakeTransform(ObjectBindings: cpp.Reference<TArray<SequencerBindingProxy>>, BakeInTime: cpp.Reference<FrameTime>, BakeOutTime: cpp.Reference<FrameTime>, BakeInterval: cpp.Reference<FrameTime>, Params: cpp.Reference<MovieSceneScriptingParams>): Void;
	public function AddActorsToBinding(Actors: cpp.Reference<TArray<cpp.Star<Actor>>>, ObjectBinding: cpp.Reference<SequencerBindingProxy>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstLevelSequenceEditorSubsystem(LevelSequenceEditorSubsystem) from LevelSequenceEditorSubsystem {
}

@:forward
@:nativeGen
@:native("LevelSequenceEditorSubsystem*")
abstract LevelSequenceEditorSubsystemPtr(cpp.Star<LevelSequenceEditorSubsystem>) from cpp.Star<LevelSequenceEditorSubsystem> to cpp.Star<LevelSequenceEditorSubsystem>{
	@:from
	public static extern inline function fromValue(v: LevelSequenceEditorSubsystem): LevelSequenceEditorSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LevelSequenceEditorSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}