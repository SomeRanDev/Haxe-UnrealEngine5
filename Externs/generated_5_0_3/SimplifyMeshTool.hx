// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USimplifyMeshTool")
@:include("SimplifyMeshTool.h")
@:structAccess
extern class SimplifyMeshTool extends SingleSelectionMeshEditingTool {
	public var SimplifyProperties: cpp.Star<SimplifyMeshToolProperties>;
	public var MeshStatisticsProperties: cpp.Star<MeshStatisticsProperties>;
	public var Preview: cpp.Star<MeshOpPreviewWithBackgroundCompute>;
	public var MeshElementsDisplay: cpp.Star<MeshElementsVisualizer>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSimplifyMeshTool(SimplifyMeshTool) from SimplifyMeshTool {
	public extern var SimplifyProperties(get, never): cpp.Star<SimplifyMeshToolProperties.ConstSimplifyMeshToolProperties>;
	public inline extern function get_SimplifyProperties(): cpp.Star<SimplifyMeshToolProperties.ConstSimplifyMeshToolProperties> return this.SimplifyProperties;
	public extern var MeshStatisticsProperties(get, never): cpp.Star<MeshStatisticsProperties.ConstMeshStatisticsProperties>;
	public inline extern function get_MeshStatisticsProperties(): cpp.Star<MeshStatisticsProperties.ConstMeshStatisticsProperties> return this.MeshStatisticsProperties;
	public extern var Preview(get, never): cpp.Star<MeshOpPreviewWithBackgroundCompute.ConstMeshOpPreviewWithBackgroundCompute>;
	public inline extern function get_Preview(): cpp.Star<MeshOpPreviewWithBackgroundCompute.ConstMeshOpPreviewWithBackgroundCompute> return this.Preview;
	public extern var MeshElementsDisplay(get, never): cpp.Star<MeshElementsVisualizer.ConstMeshElementsVisualizer>;
	public inline extern function get_MeshElementsDisplay(): cpp.Star<MeshElementsVisualizer.ConstMeshElementsVisualizer> return this.MeshElementsDisplay;
}

@:forward
@:nativeGen
@:native("SimplifyMeshTool*")
abstract SimplifyMeshToolPtr(cpp.Star<SimplifyMeshTool>) from cpp.Star<SimplifyMeshTool> to cpp.Star<SimplifyMeshTool>{
	@:from
	public static extern inline function fromValue(v: SimplifyMeshTool): SimplifyMeshToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SimplifyMeshTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}