// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UCanvas")
@:include("Engine/Canvas.h")
@:structAccess
extern class Canvas extends Object {
	public var OrgX: cpp.Float32;
	public var OrgY: cpp.Float32;
	public var ClipX: cpp.Float32;
	public var ClipY: cpp.Float32;
	public var DrawColor: Color;
	public var bCenterX: Bool;
	public var bCenterY: Bool;
	public var bNoSmooth: Bool;
	public var SizeX: cpp.Int32;
	public var SizeY: cpp.Int32;
	public var ColorModulate: Plane;
	public var DefaultTexture: cpp.Star<Texture2D>;
	public var GradientTexture0: cpp.Star<Texture2D>;
	public var ReporterGraph: cpp.Star<ReporterGraph>;

	public function K2_TextSize(RenderFont: cpp.Star<Font>, RenderText: FString, Scale: Vector2D): Vector2D;
	public function K2_StrLen(RenderFont: cpp.Star<Font>, RenderText: FString): Vector2D;
	public function K2_Project(WorldLocation: Vector): Vector;
	public function K2_DrawTriangle(RenderTexture: cpp.Star<Texture>, Triangles: TArray<CanvasUVTri>): Void;
	public function K2_DrawTexture(RenderTexture: cpp.Star<Texture>, ScreenPosition: Vector2D, ScreenSize: Vector2D, CoordinatePosition: Vector2D, CoordinateSize: Vector2D, RenderColor: LinearColor, BlendMode: TEnumAsByte<EBlendMode>, Rotation: cpp.Float32, PivotPoint: Vector2D): Void;
	public function K2_DrawText(RenderFont: cpp.Star<Font>, RenderText: FString, ScreenPosition: Vector2D, Scale: Vector2D, RenderColor: LinearColor, Kerning: cpp.Float32, ShadowColor: LinearColor, ShadowOffset: Vector2D, bCentreX: Bool, bCentreY: Bool, bOutlined: Bool, OutlineColor: LinearColor): Void;
	public function K2_DrawPolygon(RenderTexture: cpp.Star<Texture>, ScreenPosition: Vector2D, Radius: Vector2D, NumberOfSides: cpp.Int32, RenderColor: LinearColor): Void;
	public function K2_DrawMaterialTriangle(RenderMaterial: cpp.Star<MaterialInterface>, Triangles: TArray<CanvasUVTri>): Void;
	public function K2_DrawMaterial(RenderMaterial: cpp.Star<MaterialInterface>, ScreenPosition: Vector2D, ScreenSize: Vector2D, CoordinatePosition: Vector2D, CoordinateSize: Vector2D, Rotation: cpp.Float32, PivotPoint: Vector2D): Void;
	public function K2_DrawLine(ScreenPositionA: Vector2D, ScreenPositionB: Vector2D, Thickness: cpp.Float32, RenderColor: LinearColor): Void;
	public function K2_DrawBox(ScreenPosition: Vector2D, ScreenSize: Vector2D, Thickness: cpp.Float32, RenderColor: LinearColor): Void;
	public function K2_DrawBorder(BorderTexture: cpp.Star<Texture>, BackgroundTexture: cpp.Star<Texture>, LeftBorderTexture: cpp.Star<Texture>, RightBorderTexture: cpp.Star<Texture>, TopBorderTexture: cpp.Star<Texture>, BottomBorderTexture: cpp.Star<Texture>, ScreenPosition: Vector2D, ScreenSize: Vector2D, CoordinatePosition: Vector2D, CoordinateSize: Vector2D, RenderColor: LinearColor, BorderScale: Vector2D, BackgroundScale: Vector2D, Rotation: cpp.Float32, PivotPoint: Vector2D, CornerSize: Vector2D): Void;
	public function K2_Deproject(ScreenPosition: Vector2D, WorldOrigin: cpp.Reference<Vector>, WorldDirection: cpp.Reference<Vector>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstCanvas(Canvas) from Canvas {
	public extern var OrgX(get, never): cpp.Float32;
	public inline extern function get_OrgX(): cpp.Float32 return this.OrgX;
	public extern var OrgY(get, never): cpp.Float32;
	public inline extern function get_OrgY(): cpp.Float32 return this.OrgY;
	public extern var ClipX(get, never): cpp.Float32;
	public inline extern function get_ClipX(): cpp.Float32 return this.ClipX;
	public extern var ClipY(get, never): cpp.Float32;
	public inline extern function get_ClipY(): cpp.Float32 return this.ClipY;
	public extern var DrawColor(get, never): Color;
	public inline extern function get_DrawColor(): Color return this.DrawColor;
	public extern var bCenterX(get, never): Bool;
	public inline extern function get_bCenterX(): Bool return this.bCenterX;
	public extern var bCenterY(get, never): Bool;
	public inline extern function get_bCenterY(): Bool return this.bCenterY;
	public extern var bNoSmooth(get, never): Bool;
	public inline extern function get_bNoSmooth(): Bool return this.bNoSmooth;
	public extern var SizeX(get, never): cpp.Int32;
	public inline extern function get_SizeX(): cpp.Int32 return this.SizeX;
	public extern var SizeY(get, never): cpp.Int32;
	public inline extern function get_SizeY(): cpp.Int32 return this.SizeY;
	public extern var ColorModulate(get, never): Plane;
	public inline extern function get_ColorModulate(): Plane return this.ColorModulate;
	public extern var DefaultTexture(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_DefaultTexture(): cpp.Star<Texture2D.ConstTexture2D> return this.DefaultTexture;
	public extern var GradientTexture0(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_GradientTexture0(): cpp.Star<Texture2D.ConstTexture2D> return this.GradientTexture0;
	public extern var ReporterGraph(get, never): cpp.Star<ReporterGraph.ConstReporterGraph>;
	public inline extern function get_ReporterGraph(): cpp.Star<ReporterGraph.ConstReporterGraph> return this.ReporterGraph;
}

@:forward
@:nativeGen
@:native("Canvas*")
abstract CanvasPtr(cpp.Star<Canvas>) from cpp.Star<Canvas> to cpp.Star<Canvas>{
	@:from
	public static extern inline function fromValue(v: Canvas): CanvasPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): Canvas {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}