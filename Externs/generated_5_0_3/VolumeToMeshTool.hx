// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UVolumeToMeshTool")
@:include("VolumeToMeshTool.h")
@:structAccess
extern class VolumeToMeshTool extends InteractiveTool {
	public var Settings: cpp.Star<VolumeToMeshToolProperties>;
	public var OutputTypeProperties: cpp.Star<CreateMeshObjectTypeProperties>;
	public var PreviewMesh: cpp.Star<PreviewMesh>;
	public var TargetVolume: TLazyObjectPtr<Volume>;
	public var VolumeEdgesSet: cpp.Star<LineSetComp>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstVolumeToMeshTool(VolumeToMeshTool) from VolumeToMeshTool {
	public extern var Settings(get, never): cpp.Star<VolumeToMeshToolProperties.ConstVolumeToMeshToolProperties>;
	public inline extern function get_Settings(): cpp.Star<VolumeToMeshToolProperties.ConstVolumeToMeshToolProperties> return this.Settings;
	public extern var OutputTypeProperties(get, never): cpp.Star<CreateMeshObjectTypeProperties.ConstCreateMeshObjectTypeProperties>;
	public inline extern function get_OutputTypeProperties(): cpp.Star<CreateMeshObjectTypeProperties.ConstCreateMeshObjectTypeProperties> return this.OutputTypeProperties;
	public extern var PreviewMesh(get, never): cpp.Star<PreviewMesh.ConstPreviewMesh>;
	public inline extern function get_PreviewMesh(): cpp.Star<PreviewMesh.ConstPreviewMesh> return this.PreviewMesh;
	public extern var TargetVolume(get, never): TLazyObjectPtr<Volume.ConstVolume>;
	public inline extern function get_TargetVolume(): TLazyObjectPtr<Volume.ConstVolume> return this.TargetVolume;
	public extern var VolumeEdgesSet(get, never): cpp.Star<LineSetComp.ConstLineSetComp>;
	public inline extern function get_VolumeEdgesSet(): cpp.Star<LineSetComp.ConstLineSetComp> return this.VolumeEdgesSet;
}

@:forward
@:nativeGen
@:native("VolumeToMeshTool*")
abstract VolumeToMeshToolPtr(cpp.Star<VolumeToMeshTool>) from cpp.Star<VolumeToMeshTool> to cpp.Star<VolumeToMeshTool>{
	@:from
	public static extern inline function fromValue(v: VolumeToMeshTool): VolumeToMeshToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): VolumeToMeshTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}