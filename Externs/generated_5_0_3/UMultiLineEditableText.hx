// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMultiLineEditableText")
@:include("Components/MultiLineEditableText.h")
extern class UMultiLineEditableText extends UTextLayoutWidget {
	public var Text: FText;
	public var HintText: FText;
	public var HintTextDelegate: HaxeDelegateProperty<() -> Void>;
	public var WidgetStyle: FTextBlockStyle;
	public var bIsReadOnly: Bool;
	public var Font_DEPRECATED: FSlateFontInfo;
	public var SelectAllTextWhenFocused: Bool;
	public var ClearTextSelectionOnFocusLoss: Bool;
	public var RevertTextOnEscape: Bool;
	public var ClearKeyboardFocusOnCommit: Bool;
	public var AllowContextMenu: Bool;
	public var VirtualKeyboardOptions: FVirtualKeyboardOptions;
	public var VirtualKeyboardDismissAction: EVirtualKeyboardDismissAction;
	public var OnTextChanged: HaxeMulticastSparseDelegateProperty<(cpp.Reference<FText>) -> Void>;
	public var OnTextCommitted: HaxeMulticastSparseDelegateProperty<(cpp.Reference<FText>, ETextCommit) -> Void>;

	public function SetWidgetStyle(InWidgetStyle: FTextBlockStyle): Void;
	public function SetText(InText: FText): Void;
	public function SetIsReadOnly(bReadOnly: Bool): Void;
	public function SetHintText(InHintText: FText): Void;
	public function OnMultiLineEditableTextCommittedEvent__DelegateSignature(Text: cpp.Reference<FText>, CommitMethod: ETextCommit): Void;
	public function OnMultiLineEditableTextChangedEvent__DelegateSignature(Text: cpp.Reference<FText>): Void;
	public function GetText(): FText;
	public function GetHintText(): FText;
}
