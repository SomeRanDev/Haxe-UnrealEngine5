// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ADecalActor")
@:include("Engine/DecalActor.h")
@:structAccess
extern class DecalActor extends Actor {
	public var Decal: cpp.Star<DecalComp>;
	public var ArrowComponent: cpp.Star<ArrowComp>;
	public var SpriteComponent: cpp.Star<BillboardComp>;
	public var BoxComponent_DEPRECATED: cpp.Star<BoxComp>;

	public function SetDecalMaterial(NewDecalMaterial: cpp.Star<MaterialInterface>): Void;
	public function GetDecalMaterial(): cpp.Reference<cpp.Star<MaterialInterface>>;
	public function CreateDynamicMaterialInstance(): cpp.Reference<cpp.Star<MaterialInstanceDynamic>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetDecalMaterial)
@:nativeGen
abstract ConstDecalActor(DecalActor) from DecalActor {
	public extern var Decal(get, never): cpp.Star<DecalComp.ConstDecalComp>;
	public inline extern function get_Decal(): cpp.Star<DecalComp.ConstDecalComp> return this.Decal;
	public extern var ArrowComponent(get, never): cpp.Star<ArrowComp.ConstArrowComp>;
	public inline extern function get_ArrowComponent(): cpp.Star<ArrowComp.ConstArrowComp> return this.ArrowComponent;
	public extern var SpriteComponent(get, never): cpp.Star<BillboardComp.ConstBillboardComp>;
	public inline extern function get_SpriteComponent(): cpp.Star<BillboardComp.ConstBillboardComp> return this.SpriteComponent;
	public extern var BoxComponent_DEPRECATED(get, never): cpp.Star<BoxComp.ConstBoxComp>;
	public inline extern function get_BoxComponent_DEPRECATED(): cpp.Star<BoxComp.ConstBoxComp> return this.BoxComponent_DEPRECATED;
}

@:forward
@:nativeGen
@:native("DecalActor*")
abstract DecalActorPtr(cpp.Star<DecalActor>) from cpp.Star<DecalActor> to cpp.Star<DecalActor>{
	@:from
	public static extern inline function fromValue(v: DecalActor): DecalActorPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DecalActor {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}