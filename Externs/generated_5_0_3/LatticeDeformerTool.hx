// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULatticeDeformerTool")
@:include("LatticeDeformerTool.h")
@:structAccess
extern class LatticeDeformerTool extends SingleSelectionMeshEditingTool {
	public var ControlPointsMechanic: cpp.Star<LatticeControlPointsMechanic>;
	public var Settings: cpp.Star<LatticeDeformerToolProperties>;
	public var Preview: cpp.Star<MeshOpPreviewWithBackgroundCompute>;
	public var bLatticeDeformed: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstLatticeDeformerTool(LatticeDeformerTool) from LatticeDeformerTool {
	public extern var ControlPointsMechanic(get, never): cpp.Star<LatticeControlPointsMechanic.ConstLatticeControlPointsMechanic>;
	public inline extern function get_ControlPointsMechanic(): cpp.Star<LatticeControlPointsMechanic.ConstLatticeControlPointsMechanic> return this.ControlPointsMechanic;
	public extern var Settings(get, never): cpp.Star<LatticeDeformerToolProperties.ConstLatticeDeformerToolProperties>;
	public inline extern function get_Settings(): cpp.Star<LatticeDeformerToolProperties.ConstLatticeDeformerToolProperties> return this.Settings;
	public extern var Preview(get, never): cpp.Star<MeshOpPreviewWithBackgroundCompute.ConstMeshOpPreviewWithBackgroundCompute>;
	public inline extern function get_Preview(): cpp.Star<MeshOpPreviewWithBackgroundCompute.ConstMeshOpPreviewWithBackgroundCompute> return this.Preview;
	public extern var bLatticeDeformed(get, never): Bool;
	public inline extern function get_bLatticeDeformed(): Bool return this.bLatticeDeformed;
}

@:forward
@:nativeGen
@:native("LatticeDeformerTool*")
abstract LatticeDeformerToolPtr(cpp.Star<LatticeDeformerTool>) from cpp.Star<LatticeDeformerTool> to cpp.Star<LatticeDeformerTool>{
	@:from
	public static extern inline function fromValue(v: LatticeDeformerTool): LatticeDeformerToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LatticeDeformerTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}