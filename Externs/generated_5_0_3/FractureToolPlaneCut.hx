// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFractureToolPlaneCut")
@:include("FractureToolPlaneCut.h")
@:structAccess
extern class FractureToolPlaneCut extends FractureToolCutterBase {
	public var PlaneCutSettings: cpp.Star<FracturePlaneCutSettings>;
	public var GizmoSettings: cpp.Star<FractureTransformGizmoSettings>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstFractureToolPlaneCut(FractureToolPlaneCut) from FractureToolPlaneCut {
	public extern var PlaneCutSettings(get, never): cpp.Star<FracturePlaneCutSettings.ConstFracturePlaneCutSettings>;
	public inline extern function get_PlaneCutSettings(): cpp.Star<FracturePlaneCutSettings.ConstFracturePlaneCutSettings> return this.PlaneCutSettings;
	public extern var GizmoSettings(get, never): cpp.Star<FractureTransformGizmoSettings.ConstFractureTransformGizmoSettings>;
	public inline extern function get_GizmoSettings(): cpp.Star<FractureTransformGizmoSettings.ConstFractureTransformGizmoSettings> return this.GizmoSettings;
}

@:forward
@:nativeGen
@:native("FractureToolPlaneCut*")
abstract FractureToolPlaneCutPtr(cpp.Star<FractureToolPlaneCut>) from cpp.Star<FractureToolPlaneCut> to cpp.Star<FractureToolPlaneCut>{
	@:from
	public static extern inline function fromValue(v: FractureToolPlaneCut): FractureToolPlaneCutPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): FractureToolPlaneCut {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}