// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMediaTexture")
@:include("MediaTexture.h")
@:structAccess
extern class MediaTexture extends Texture {
	public var AddressX: TextureAddress;
	public var AddressY: TextureAddress;
	public var AutoClear: Bool;
	public var ClearColor: LinearColor;
	public var EnableGenMips: Bool;
	public var NumMips: cpp.UInt8;
	public var NewStyleOutput: Bool;
	public var OutputFormat: MediaTextureOutputFormat;
	public var CurrentAspectRatio: cpp.Float32;
	public var CurrentOrientation: MediaTextureOrientation;
	public var MediaPlayer: cpp.Star<MediaPlayer>;

	public function UpdateResource(): Void;
	public function SetMediaPlayer(NewMediaPlayer: cpp.Star<MediaPlayer>): Void;
	public function GetWidth(): cpp.Reference<cpp.Int32>;
	public function GetTextureNumMips(): cpp.Reference<cpp.Int32>;
	public function GetMediaPlayer(): cpp.Reference<cpp.Star<MediaPlayer>>;
	public function GetHeight(): cpp.Reference<cpp.Int32>;
	public function GetAspectRatio(): cpp.Reference<cpp.Float32>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetWidth, GetTextureNumMips, GetMediaPlayer, GetHeight, GetAspectRatio)
@:nativeGen
abstract ConstMediaTexture(MediaTexture) from MediaTexture {
	public extern var AddressX(get, never): TextureAddress;
	public inline extern function get_AddressX(): TextureAddress return this.AddressX;
	public extern var AddressY(get, never): TextureAddress;
	public inline extern function get_AddressY(): TextureAddress return this.AddressY;
	public extern var AutoClear(get, never): Bool;
	public inline extern function get_AutoClear(): Bool return this.AutoClear;
	public extern var ClearColor(get, never): LinearColor;
	public inline extern function get_ClearColor(): LinearColor return this.ClearColor;
	public extern var EnableGenMips(get, never): Bool;
	public inline extern function get_EnableGenMips(): Bool return this.EnableGenMips;
	public extern var NumMips(get, never): cpp.UInt8;
	public inline extern function get_NumMips(): cpp.UInt8 return this.NumMips;
	public extern var NewStyleOutput(get, never): Bool;
	public inline extern function get_NewStyleOutput(): Bool return this.NewStyleOutput;
	public extern var OutputFormat(get, never): MediaTextureOutputFormat;
	public inline extern function get_OutputFormat(): MediaTextureOutputFormat return this.OutputFormat;
	public extern var CurrentAspectRatio(get, never): cpp.Float32;
	public inline extern function get_CurrentAspectRatio(): cpp.Float32 return this.CurrentAspectRatio;
	public extern var CurrentOrientation(get, never): MediaTextureOrientation;
	public inline extern function get_CurrentOrientation(): MediaTextureOrientation return this.CurrentOrientation;
	public extern var MediaPlayer(get, never): cpp.Star<MediaPlayer.ConstMediaPlayer>;
	public inline extern function get_MediaPlayer(): cpp.Star<MediaPlayer.ConstMediaPlayer> return this.MediaPlayer;
}

@:forward
@:nativeGen
@:native("MediaTexture*")
abstract MediaTexturePtr(cpp.Star<MediaTexture>) from cpp.Star<MediaTexture> to cpp.Star<MediaTexture>{
	@:from
	public static extern inline function fromValue(v: MediaTexture): MediaTexturePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MediaTexture {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}