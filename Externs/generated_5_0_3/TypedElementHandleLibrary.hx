// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTypedElementHandleLibrary")
@:include("Elements/Framework/TypedElementHandle.h")
@:structAccess
extern class TypedElementHandleLibrary extends Object {
	public function Release(ElementHandle: cpp.Reference<ScriptTypedElementHandle>): Void;
	public function NotEqual(LHS: cpp.Reference<ScriptTypedElementHandle>, RHS: cpp.Reference<ScriptTypedElementHandle>): cpp.Reference<Bool>;
	public function IsSet(ElementHandle: cpp.Reference<ScriptTypedElementHandle>): cpp.Reference<Bool>;
	public function Equal(LHS: cpp.Reference<ScriptTypedElementHandle>, RHS: cpp.Reference<ScriptTypedElementHandle>): cpp.Reference<Bool>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstTypedElementHandleLibrary(TypedElementHandleLibrary) from TypedElementHandleLibrary {
}

@:forward
@:nativeGen
@:native("TypedElementHandleLibrary*")
abstract TypedElementHandleLibraryPtr(cpp.Star<TypedElementHandleLibrary>) from cpp.Star<TypedElementHandleLibrary> to cpp.Star<TypedElementHandleLibrary>{
	@:from
	public static extern inline function fromValue(v: TypedElementHandleLibrary): TypedElementHandleLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TypedElementHandleLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}