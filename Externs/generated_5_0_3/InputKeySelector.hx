// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInputKeySelector")
@:include("Components/InputKeySelector.h")
extern class InputKeySelector extends Widget {
	public var WidgetStyle: ButtonStyle;
	public var TextStyle: TextBlockStyle;
	public var SelectedKey: InputChord;
	public var Font_DEPRECATED: SlateFontInfo;
	public var Margin: Margin;
	public var ColorAndOpacity_DEPRECATED: LinearColor;
	public var KeySelectionText: FText;
	public var NoKeySpecifiedText: FText;
	public var bAllowModifierKeys: Bool;
	public var bAllowGamepadKeys: Bool;
	public var EscapeKeys: TArray<Key>;
	public var OnKeySelected: HaxeMulticastSparseDelegateProperty<(InputChord) -> Void>;
	public var OnIsSelectingKeyChanged: HaxeMulticastSparseDelegateProperty<() -> Void>;

	public function SetTextBlockVisibility(InVisibility: ESlateVisibility): Void;
	public function SetSelectedKey(InSelectedKey: cpp.Reference<InputChord>): Void;
	public function SetNoKeySpecifiedText(InNoKeySpecifiedText: FText): Void;
	public function SetKeySelectionText(InKeySelectionText: FText): Void;
	public function SetEscapeKeys(InKeys: cpp.Reference<TArray<Key>>): Void;
	public function SetAllowModifierKeys(bInAllowModifierKeys: Bool): Void;
	public function SetAllowGamepadKeys(bInAllowGamepadKeys: Bool): Void;
	public function OnKeySelected__DelegateSignature(SelectedKey: InputChord): Void;
	public function OnIsSelectingKeyChanged__DelegateSignature(): Void;
	public function GetIsSelectingKey(): cpp.Reference<Bool>;
}

@:forward(GetIsSelectingKey)
@:nativeGen
abstract ConstInputKeySelector(InputKeySelector) from InputKeySelector {
	public extern var WidgetStyle(get, never): ButtonStyle;
	public inline extern function get_WidgetStyle(): ButtonStyle return this.WidgetStyle;
	public extern var TextStyle(get, never): TextBlockStyle;
	public inline extern function get_TextStyle(): TextBlockStyle return this.TextStyle;
	public extern var SelectedKey(get, never): InputChord;
	public inline extern function get_SelectedKey(): InputChord return this.SelectedKey;
	public extern var Font_DEPRECATED(get, never): SlateFontInfo;
	public inline extern function get_Font_DEPRECATED(): SlateFontInfo return this.Font_DEPRECATED;
	public extern var Margin(get, never): Margin;
	public inline extern function get_Margin(): Margin return this.Margin;
	public extern var ColorAndOpacity_DEPRECATED(get, never): LinearColor;
	public inline extern function get_ColorAndOpacity_DEPRECATED(): LinearColor return this.ColorAndOpacity_DEPRECATED;
	public extern var KeySelectionText(get, never): FText;
	public inline extern function get_KeySelectionText(): FText return this.KeySelectionText;
	public extern var NoKeySpecifiedText(get, never): FText;
	public inline extern function get_NoKeySpecifiedText(): FText return this.NoKeySpecifiedText;
	public extern var bAllowModifierKeys(get, never): Bool;
	public inline extern function get_bAllowModifierKeys(): Bool return this.bAllowModifierKeys;
	public extern var bAllowGamepadKeys(get, never): Bool;
	public inline extern function get_bAllowGamepadKeys(): Bool return this.bAllowGamepadKeys;
	public extern var EscapeKeys(get, never): TArray<Key>;
	public inline extern function get_EscapeKeys(): TArray<Key> return this.EscapeKeys;
	public extern var OnKeySelected(get, never): HaxeMulticastSparseDelegateProperty<(InputChord) -> Void>;
	public inline extern function get_OnKeySelected(): HaxeMulticastSparseDelegateProperty<(InputChord) -> Void> return this.OnKeySelected;
	public extern var OnIsSelectingKeyChanged(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_OnIsSelectingKeyChanged(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.OnIsSelectingKeyChanged;
}