// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWidget")
@:include("Components/Widget.h")
extern class UWidget extends UVisual {
	public var Slot: TObjectPtr<UPanelSlot>;
	public var bIsEnabledDelegate: HaxeDelegateProperty<() -> Void>;
	public var ToolTipText: FText;
	public var ToolTipTextDelegate: HaxeDelegateProperty<() -> Void>;
	public var ToolTipWidget: TObjectPtr<UWidget>;
	public var ToolTipWidgetDelegate: HaxeDelegateProperty<() -> Void>;
	public var VisibilityDelegate: HaxeDelegateProperty<() -> Void>;
	public var RenderTransform: FWidgetTransform;
	public var RenderTransformPivot: FVector2D;
	public var bIsVariable: Bool;
	public var bCreatedByConstructionScript: Bool;
	public var bIsEnabled: Bool;
	public var bOverride_Cursor: Bool;
	public var FlowDirectionPreference: EFlowDirectionPreference;
	public var bOverrideAccessibleDefaults: Bool;
	public var bCanChildrenBeAccessible: Bool;
	public var AccessibleBehavior: ESlateAccessibleBehavior;
	public var AccessibleSummaryBehavior: ESlateAccessibleBehavior;
	public var AccessibleText: FText;
	public var AccessibleTextDelegate: HaxeDelegateProperty<() -> Void>;
	public var AccessibleSummaryText: FText;
	public var AccessibleSummaryTextDelegate: HaxeDelegateProperty<() -> Void>;
	public var AccessibleWidgetData: TObjectPtr<USlateAccessibleWidgetData>;
	public var bIsVolatile: Bool;
	public var bHiddenInDesigner: Bool;
	public var bExpandedInDesigner: Bool;
	public var bLockedInDesigner: Bool;
	public var Cursor: EMouseCursor;
	public var Clipping: EWidgetClipping;
	public var Visibility: ESlateVisibility;
	public var RenderOpacity: cpp.Float32;
	public var Navigation: TObjectPtr<UWidgetNavigation>;
	public var NativeBindings: TArray<TObjectPtr<UPropertyBinding>>;
	public var DesignerFlags: cpp.UInt8;
	public var DisplayLabel: FString;
	public var CategoryName: FString;

	public function SetVisibility(InVisibility: ESlateVisibility): Void;
	public function SetUserFocus(PlayerController: cpp.Star<APlayerController>): Void;
	public function SetToolTipText(InToolTipText: cpp.Reference<FText>): Void;
	public function SetToolTip(Widget: cpp.Star<UWidget>): Void;
	public function SetRenderTranslation(Translation: FVector2D): Void;
	public function SetRenderTransformPivot(Pivot: FVector2D): Void;
	public function SetRenderTransformAngle(Angle: cpp.Float32): Void;
	public function SetRenderTransform(InTransform: FWidgetTransform): Void;
	public function SetRenderShear(Shear: FVector2D): Void;
	public function SetRenderScale(Scale: FVector2D): Void;
	public function SetRenderOpacity(InOpacity: cpp.Float32): Void;
	public function SetNavigationRuleExplicit(Direction: EUINavigation, InWidget: cpp.Star<UWidget>): Void;
	public function SetNavigationRuleCustomBoundary(Direction: EUINavigation, InCustomDelegate: HaxeDelegateProperty<(EUINavigation) -> Void>): Void;
	public function SetNavigationRuleCustom(Direction: EUINavigation, InCustomDelegate: HaxeDelegateProperty<(EUINavigation) -> Void>): Void;
	public function SetNavigationRuleBase(Direction: EUINavigation, Rule: EUINavigationRule): Void;
	public function SetNavigationRule(Direction: EUINavigation, Rule: EUINavigationRule, WidgetToFocus: FName): Void;
	public function SetKeyboardFocus(): Void;
	public function SetIsEnabled(bInIsEnabled: Bool): Void;
	public function SetFocus(): Void;
	public function SetCursor(InCursor: EMouseCursor): Void;
	public function SetClipping(InClipping: EWidgetClipping): Void;
	public function SetAllNavigationRules(Rule: EUINavigationRule, WidgetToFocus: FName): Void;
	public function ResetCursor(): Void;
	public function RemoveFromParent(): Void;
	public function OnReply__DelegateSignature(): FEventReply;
	public function OnPointerEvent__DelegateSignature(MyGeometry: FGeometry, MouseEvent: FPointerEvent): FEventReply;
	public function IsVisible(): Bool;
	public function IsHovered(): Bool;
	public function InvalidateLayoutAndVolatility(): Void;
	public function HasUserFocusedDescendants(PlayerController: cpp.Star<APlayerController>): Bool;
	public function HasUserFocus(PlayerController: cpp.Star<APlayerController>): Bool;
	public function HasMouseCaptureByUser(UserIndex: cpp.Int32, PointerIndex: cpp.Int32): Bool;
	public function HasMouseCapture(): Bool;
	public function HasKeyboardFocus(): Bool;
	public function HasFocusedDescendants(): Bool;
	public function HasAnyUserFocus(): Bool;
	public function GetWidget__DelegateSignature(): cpp.Star<UWidget>;
	public function GetVisibility(): ESlateVisibility;
	public function GetTickSpaceGeometry(): FGeometry;
	public function GetText__DelegateSignature(): FText;
	public function GetSlateVisibility__DelegateSignature(): ESlateVisibility;
	public function GetSlateColor__DelegateSignature(): FSlateColor;
	public function GetSlateBrush__DelegateSignature(): FSlateBrush;
	public function GetRenderTransformAngle(): cpp.Float32;
	public function GetRenderOpacity(): cpp.Float32;
	public function GetParent(): cpp.Star<UPanelWidget>;
	public function GetPaintSpaceGeometry(): FGeometry;
	public function GetOwningPlayer(): cpp.Star<APlayerController>;
	public function GetOwningLocalPlayer(): cpp.Star<ULocalPlayer>;
	public function GetMouseCursor__DelegateSignature(): EMouseCursor;
	public function GetLinearColor__DelegateSignature(): FLinearColor;
	public function GetIsEnabled(): Bool;
	public function GetInt32__DelegateSignature(): cpp.Int32;
	public function GetGameInstance(): cpp.Star<UGameInstance>;
	public function GetFloat__DelegateSignature(): cpp.Float32;
	public function GetDesiredSize(): FVector2D;
	public function GetClipping(): EWidgetClipping;
	public function GetCheckBoxState__DelegateSignature(): ECheckBoxState;
	public function GetCachedGeometry(): FGeometry;
	public function GetBool__DelegateSignature(): Bool;
	public function GetAccessibleText(): FText;
	public function GetAccessibleSummaryText(): FText;
	public function GenerateWidgetForString__DelegateSignature(Item: FString): cpp.Star<UWidget>;
	public function GenerateWidgetForObject__DelegateSignature(Item: cpp.Star<UObject>): cpp.Star<UWidget>;
	public function ForceVolatile(bForce: Bool): Void;
	public function ForceLayoutPrepass(): Void;
}
