// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UControlRigBlueprintEditorLibrary")
@:include("ControlRigBlueprintEditorLibrary.h")
@:structAccess
extern class ControlRigBlueprintEditorLibrary extends BlueprintFunctionLibrary {
	public function SetPreviewMesh(InRigBlueprint: cpp.Star<ControlRigBlueprint>, PreviewMesh: cpp.Star<SkeletalMesh>, bMarkAsDirty: Bool): Void;
	public function RequestControlRigInit(InRigBlueprint: cpp.Star<ControlRigBlueprint>): Void;
	public function RequestAutoVMRecompilation(InRigBlueprint: cpp.Star<ControlRigBlueprint>): Void;
	public function RecompileVMIfRequired(InRigBlueprint: cpp.Star<ControlRigBlueprint>): Void;
	public function RecompileVM(InRigBlueprint: cpp.Star<ControlRigBlueprint>): Void;
	public function GetPreviewMesh(InRigBlueprint: cpp.Star<ControlRigBlueprint>): cpp.Star<SkeletalMesh>;
	public function GetModel(InRigBlueprint: cpp.Star<ControlRigBlueprint>): cpp.Star<RigVMGraph>;
	public function GetHierarchyController(InRigBlueprint: cpp.Star<ControlRigBlueprint>): cpp.Star<RigHierarchyController>;
	public function GetHierarchy(InRigBlueprint: cpp.Star<ControlRigBlueprint>): cpp.Star<RigHierarchy>;
	public function GetCurrentlyOpenRigBlueprints(): TArray<cpp.Star<ControlRigBlueprint>>;
	public function GetController(InRigBlueprint: cpp.Star<ControlRigBlueprint>): cpp.Star<RigVMController>;
	public function GetAvailableRigUnits(): TArray<cpp.Star<Struct>>;
	public function CastToControlRigBlueprint(Object: cpp.Star<Object>, Branches: cpp.Reference<ECastToControlRigBlueprintCases>, AsControlRigBlueprint: cpp.Reference<cpp.Star<ControlRigBlueprint>>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstControlRigBlueprintEditorLibrary(ControlRigBlueprintEditorLibrary) from ControlRigBlueprintEditorLibrary {
}

@:forward
@:nativeGen
@:native("ControlRigBlueprintEditorLibrary*")
abstract ControlRigBlueprintEditorLibraryPtr(cpp.Star<ControlRigBlueprintEditorLibrary>) from cpp.Star<ControlRigBlueprintEditorLibrary> to cpp.Star<ControlRigBlueprintEditorLibrary>{
	@:from
	public static extern inline function fromValue(v: ControlRigBlueprintEditorLibrary): ControlRigBlueprintEditorLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ControlRigBlueprintEditorLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}