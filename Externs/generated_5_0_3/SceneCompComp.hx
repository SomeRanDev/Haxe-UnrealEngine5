// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USceneComponent")
@:include("Components/SceneComponent.h")
extern class SceneCompComp extends ActorCompComp {
	public var PhysicsVolume: TWeakObjectPtr<PhysicsVolume>;
	public var AttachParent: cpp.Star<SceneCompComp>;
	public var AttachSocketName: FName;
	public var AttachChildren: TArray<cpp.Star<SceneCompComp>>;
	public var ClientAttachedChildren: TArray<cpp.Star<SceneCompComp>>;
	public var RelativeLocation: FVector;
	public var RelativeRotation: FRotator;
	public var RelativeScale3D: FVector;
	public var ComponentVelocity: FVector;
	public var bComponentToWorldUpdated: Bool;
	public var bAbsoluteLocation: Bool;
	public var bAbsoluteRotation: Bool;
	public var bAbsoluteScale: Bool;
	public var bVisible: Bool;
	public var bShouldBeAttached: Bool;
	public var bShouldSnapLocationWhenAttached: Bool;
	public var bShouldSnapRotationWhenAttached: Bool;
	public var bShouldUpdatePhysicsVolume: Bool;
	public var bHiddenInGame: Bool;
	public var bBoundsChangeTriggersStreamingDataRebuild: Bool;
	public var bUseAttachParentBound: Bool;
	public var bComputeFastLocalBounds: Bool;
	public var bComputeBoundsOnceForGame: Bool;
	public var bComputedBoundsOnceForGame: Bool;
	public var bVisualizeComponent: Bool;
	public var Mobility: EComponentMobility;
	public var DetailMode: EDetailMode;
	public var PhysicsVolumeChangedDelegate: HaxeMulticastSparseDelegateProperty<(cpp.Star<PhysicsVolume>) -> Void>;
	public var ReplacementSceneComponent: cpp.Star<SceneCompComp>;

	public function ToggleVisibility(bPropagateToChildren: Bool): Void;
	public function SetWorldScale3D(NewScale: FVector): Void;
	public function SetVisibility(bNewVisibility: Bool, bPropagateToChildren: Bool): Void;
	public function SetShouldUpdatePhysicsVolume(bInShouldUpdatePhysicsVolume: Bool): Void;
	public function SetRelativeScale3D(NewScale3D: FVector): Void;
	public function SetMobility(NewMobility: EComponentMobility): Void;
	public function SetHiddenInGame(NewHidden: Bool, bPropagateToChildren: Bool): Void;
	public function SetAbsolute(bNewAbsoluteLocation: Bool, bNewAbsoluteRotation: Bool, bNewAbsoluteScale: Bool): Void;
	public function ResetRelativeTransform(): Void;
	public function OnRep_Visibility(OldValue: Bool): Void;
	public function OnRep_Transform(): Void;
	public function OnRep_AttachSocketName(): Void;
	public function OnRep_AttachParent(): Void;
	public function OnRep_AttachChildren(): Void;
	public function K2_SetWorldTransform(NewTransform: cpp.Reference<FTransform>, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_SetWorldRotation(NewRotation: FRotator, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_SetWorldLocationAndRotation(NewLocation: FVector, NewRotation: FRotator, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_SetWorldLocation(NewLocation: FVector, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_SetRelativeTransform(NewTransform: cpp.Reference<FTransform>, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_SetRelativeRotation(NewRotation: FRotator, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_SetRelativeLocationAndRotation(NewLocation: FVector, NewRotation: FRotator, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_SetRelativeLocation(NewLocation: FVector, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_GetComponentToWorld(): cpp.Reference<FTransform>;
	public function K2_GetComponentScale(): cpp.Reference<FVector>;
	public function K2_GetComponentRotation(): cpp.Reference<FRotator>;
	public function K2_GetComponentLocation(): cpp.Reference<FVector>;
	public function K2_DetachFromComponent(LocationRule: EDetachmentRule, RotationRule: EDetachmentRule, ScaleRule: EDetachmentRule, bCallModify: Bool): Void;
	public function K2_AttachToComponent(Parent: cpp.Star<SceneCompComp>, SocketName: FName, LocationRule: EAttachmentRule, RotationRule: EAttachmentRule, ScaleRule: EAttachmentRule, bWeldSimulatedBodies: Bool): cpp.Reference<Bool>;
	public function K2_AttachTo(InParent: cpp.Star<SceneCompComp>, InSocketName: FName, AttachType: EAttachLocation, bWeldSimulatedBodies: Bool): cpp.Reference<Bool>;
	public function K2_AddWorldTransformKeepScale(DeltaTransform: cpp.Reference<FTransform>, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_AddWorldTransform(DeltaTransform: cpp.Reference<FTransform>, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_AddWorldRotation(DeltaRotation: FRotator, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_AddWorldOffset(DeltaLocation: FVector, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_AddRelativeRotation(DeltaRotation: FRotator, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_AddRelativeLocation(DeltaLocation: FVector, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_AddLocalTransform(DeltaTransform: cpp.Reference<FTransform>, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_AddLocalRotation(DeltaRotation: FRotator, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function K2_AddLocalOffset(DeltaLocation: FVector, bSweep: Bool, SweepHitResult: cpp.Reference<FHitResult>, bTeleport: Bool): Void;
	public function IsVisible(): cpp.Reference<Bool>;
	public function IsSimulatingPhysics(BoneName: FName): cpp.Reference<Bool>;
	public function IsAnySimulatingPhysics(): cpp.Reference<Bool>;
	public function GetUpVector(): cpp.Reference<FVector>;
	public function GetSocketTransform(InSocketName: FName, TransformSpace: ERelativeTransformSpace): cpp.Reference<FTransform>;
	public function GetSocketRotation(InSocketName: FName): cpp.Reference<FRotator>;
	public function GetSocketQuaternion(InSocketName: FName): cpp.Reference<FQuat>;
	public function GetSocketLocation(InSocketName: FName): cpp.Reference<FVector>;
	public function GetShouldUpdatePhysicsVolume(): cpp.Reference<Bool>;
	public function GetRightVector(): cpp.Reference<FVector>;
	public function GetRelativeTransform(): cpp.Reference<FTransform>;
	public function GetPhysicsVolume(): cpp.Reference<cpp.Star<PhysicsVolume>>;
	public function GetParentComponents(Parents: cpp.Reference<TArray<cpp.Star<SceneCompComp>>>): Void;
	public function GetNumChildrenComponents(): cpp.Reference<cpp.Int32>;
	public function GetForwardVector(): cpp.Reference<FVector>;
	public function GetComponentVelocity(): cpp.Reference<FVector>;
	public function GetChildrenComponents(bIncludeAllDescendants: Bool, Children: cpp.Reference<TArray<cpp.Star<SceneCompComp>>>): Void;
	public function GetChildComponent(ChildIndex: cpp.Int32): cpp.Reference<cpp.Star<SceneCompComp>>;
	public function GetAttachSocketName(): cpp.Reference<FName>;
	public function GetAttachParent(): cpp.Reference<cpp.Star<SceneCompComp>>;
	public function GetAllSocketNames(): cpp.Reference<TArray<FName>>;
	public function DoesSocketExist(InSocketName: FName): cpp.Reference<Bool>;
	public function DetachFromParent(bMaintainWorldPosition: Bool, bCallModify: Bool): Void;
}

@:forward(
	K2_GetComponentToWorld, K2_GetComponentScale, K2_GetComponentRotation, K2_GetComponentLocation, IsVisible,
	IsSimulatingPhysics, IsAnySimulatingPhysics, GetUpVector, GetSocketTransform, GetSocketRotation,
	GetSocketQuaternion, GetSocketLocation, GetShouldUpdatePhysicsVolume, GetRightVector, GetRelativeTransform,
	GetPhysicsVolume, GetParentComponents, GetNumChildrenComponents, GetForwardVector, GetComponentVelocity,
	GetChildrenComponents, GetChildComponent, GetAttachSocketName, GetAttachParent, GetAllSocketNames,
	DoesSocketExist
)
abstract ConstSceneCompComp(SceneCompComp) from SceneCompComp {
}