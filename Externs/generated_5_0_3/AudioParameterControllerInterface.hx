// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAudioParameterControllerInterface")
@:structAccess
extern class AudioParameterControllerInterface extends Interface {
	public function SetTriggerParameter(InName: FName): Void;
	public function SetStringParameter(InName: FName, InValue: FString): Void;
	public function SetStringArrayParameter(InName: FName, InValue: cpp.Reference<TArray<FString>>): Void;
	public function SetParameters_Blueprint(InParameters: cpp.Reference<TArray<AudioParameter>>): Void;
	public function SetObjectParameter(InName: FName, InValue: cpp.Star<Object>): Void;
	public function SetObjectArrayParameter(InName: FName, InValue: cpp.Reference<TArray<cpp.Star<Object>>>): Void;
	public function SetIntParameter(InName: FName, InInt: cpp.Int32): Void;
	public function SetIntArrayParameter(InName: FName, InValue: cpp.Reference<TArray<cpp.Int32>>): Void;
	public function SetFloatParameter(InName: FName, InFloat: cpp.Float32): Void;
	public function SetFloatArrayParameter(InName: FName, InValue: cpp.Reference<TArray<cpp.Float32>>): Void;
	public function SetBoolParameter(InName: FName, InBool: Bool): Void;
	public function SetBoolArrayParameter(InName: FName, InValue: cpp.Reference<TArray<Bool>>): Void;
	public function ResetParameters(): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAudioParameterControllerInterface(AudioParameterControllerInterface) from AudioParameterControllerInterface {
}

@:forward
@:nativeGen
@:native("AudioParameterControllerInterface*")
abstract AudioParameterControllerInterfacePtr(cpp.Star<AudioParameterControllerInterface>) from cpp.Star<AudioParameterControllerInterface> to cpp.Star<AudioParameterControllerInterface>{
	@:from
	public static extern inline function fromValue(v: AudioParameterControllerInterface): AudioParameterControllerInterfacePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AudioParameterControllerInterface {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}