// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGroomComponent")
@:include("GroomComponent.h")
extern class UGroomComponent extends UMeshComponent {
	public var GroomAsset: TObjectPtr<UGroomAsset>;
	public var GroomCache: TObjectPtr<UGroomCache>;
	public var NiagaraComponents: TArray<TObjectPtr<UNiagaraComponent>>;
	public var SourceSkeletalMesh: TObjectPtr<USkeletalMesh>;
	public var BindingAsset: TObjectPtr<UGroomBindingAsset>;
	public var PhysicsAsset: TObjectPtr<UPhysicsAsset>;
	public var SimulationSettings: FHairSimulationSettings;
	public var Strands_DebugMaterial: TObjectPtr<UMaterialInterface>;
	public var Strands_DefaultMaterial: TObjectPtr<UMaterialInterface>;
	public var Cards_DefaultMaterial: TObjectPtr<UMaterialInterface>;
	public var Meshes_DefaultMaterial: TObjectPtr<UMaterialInterface>;
	public var AngularSpringsSystem: TObjectPtr<UNiagaraSystem>;
	public var CosseratRodsSystem: TObjectPtr<UNiagaraSystem>;
	public var AttachmentName: FString;
	public var GroomGroupsDesc: TArray<FHairGroupDesc>;
	public var bUseCards: Bool;
	public var bRunning: Bool;
	public var bLooping: Bool;
	public var bManualTick: Bool;
	public var ElapsedTime: cpp.Float32;
	public var GroomAssetBeingLoaded: TObjectPtr<UGroomAsset>;
	public var BindingAssetBeingLoaded: TObjectPtr<UGroomBindingAsset>;

	public function SetPhysicsAsset(InPhysicsAsset: cpp.Star<UPhysicsAsset>): Void;
	public function SetHairLengthScaleEnable(bEnable: Bool): Void;
	public function SetHairLengthScale(Scale: cpp.Float32): Void;
	public function SetGroomAsset(Asset: cpp.Star<UGroomAsset>): Void;
	public function SetEnableSimulation(bInEnableSimulation: Bool): Void;
	public function SetBindingAsset(InBinding: cpp.Star<UGroomBindingAsset>): Void;
	public function ResetSimulation(): Void;
	public function ResetCollisionComponents(): Void;
	public function GetIsHairLengthScaleEnabled(): Bool;
	public function AddCollisionComponent(SkeletalMeshComponent: cpp.Star<USkeletalMeshComponent>): Void;
}
