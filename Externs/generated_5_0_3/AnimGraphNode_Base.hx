// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimGraphNode_Base")
@:include("AnimGraphNode_Base.h")
@:structAccess
extern class AnimGraphNode_Base extends K2Node {
	public var ShowPinForProperties: TArray<OptionalPinFromProperty>;
	public var PropertyBindings: TMap<FName, AnimGraphNodePropertyBinding>;
	public var AlwaysDynamicProperties: TSet<FName>;
	public var BlueprintUsage: EBlueprintUsage;
	public var InitialUpdateFunction: MemberReference;
	public var BecomeRelevantFunction: MemberReference;
	public var UpdateFunction: MemberReference;
	private var Tag: FName;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimGraphNode_Base(AnimGraphNode_Base) from AnimGraphNode_Base {
	public extern var ShowPinForProperties(get, never): TArray<OptionalPinFromProperty>;
	public inline extern function get_ShowPinForProperties(): TArray<OptionalPinFromProperty> return this.ShowPinForProperties;
	public extern var PropertyBindings(get, never): TMap<FName, AnimGraphNodePropertyBinding>;
	public inline extern function get_PropertyBindings(): TMap<FName, AnimGraphNodePropertyBinding> return this.PropertyBindings;
	public extern var AlwaysDynamicProperties(get, never): TSet<FName>;
	public inline extern function get_AlwaysDynamicProperties(): TSet<FName> return this.AlwaysDynamicProperties;
	public extern var BlueprintUsage(get, never): EBlueprintUsage;
	public inline extern function get_BlueprintUsage(): EBlueprintUsage return this.BlueprintUsage;
	public extern var InitialUpdateFunction(get, never): MemberReference;
	public inline extern function get_InitialUpdateFunction(): MemberReference return this.InitialUpdateFunction;
	public extern var BecomeRelevantFunction(get, never): MemberReference;
	public inline extern function get_BecomeRelevantFunction(): MemberReference return this.BecomeRelevantFunction;
	public extern var UpdateFunction(get, never): MemberReference;
	public inline extern function get_UpdateFunction(): MemberReference return this.UpdateFunction;
}

@:forward
@:nativeGen
@:native("AnimGraphNode_Base*")
abstract AnimGraphNode_BasePtr(cpp.Star<AnimGraphNode_Base>) from cpp.Star<AnimGraphNode_Base> to cpp.Star<AnimGraphNode_Base>{
	@:from
	public static extern inline function fromValue(v: AnimGraphNode_Base): AnimGraphNode_BasePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimGraphNode_Base {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}