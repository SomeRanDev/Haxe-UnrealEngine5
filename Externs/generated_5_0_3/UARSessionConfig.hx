// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UARSessionConfig")
@:include("ARSessionConfig.h")
extern class UARSessionConfig extends UDataAsset {
	public var bGenerateMeshDataFromTrackedGeometry: Bool;
	public var bGenerateCollisionForMeshData: Bool;
	public var bGenerateNavMeshForMeshData: Bool;
	public var bUseMeshDataForOcclusion: Bool;
	public var bRenderMeshDataInWireframe: Bool;
	public var bTrackSceneObjects: Bool;
	public var bUsePersonSegmentationForOcclusion: Bool;
	public var bUseSceneDepthForOcclusion: Bool;
	public var bUseAutomaticImageScaleEstimation: Bool;
	public var bUseStandardOnboardingUX: Bool;
	public var WorldAlignment: EARWorldAlignment;
	public var SessionType: EARSessionType;
	public var PlaneDetectionMode_DEPRECATED: EARPlaneDetectionMode;
	public var bHorizontalPlaneDetection: Bool;
	public var bVerticalPlaneDetection: Bool;
	public var bEnableAutoFocus: Bool;
	public var LightEstimationMode: EARLightEstimationMode;
	public var FrameSyncMode: EARFrameSyncMode;
	public var bEnableAutomaticCameraOverlay: Bool;
	public var bEnableAutomaticCameraTracking: Bool;
	public var bResetCameraTracking: Bool;
	public var bResetTrackedObjects: Bool;
	public var CandidateImages: TArray<TObjectPtr<UARCandidateImage>>;
	public var MaxNumSimultaneousImagesTracked: cpp.Int32;
	public var EnvironmentCaptureProbeType: EAREnvironmentCaptureProbeType;
	public var WorldMapData: TArray<cpp.UInt8>;
	public var CandidateObjects: TArray<TObjectPtr<UARCandidateObject>>;
	public var DesiredVideoFormat: FARVideoFormat;
	public var bUseOptimalVideoFormat: Bool;
	public var FaceTrackingDirection: EARFaceTrackingDirection;
	public var FaceTrackingUpdate: EARFaceTrackingUpdate;
	public var MaxNumberOfTrackedFaces: cpp.Int32;
	public var SerializedARCandidateImageDatabase: TArray<cpp.UInt8>;
	public var EnabledSessionTrackingFeature: EARSessionTrackingFeature;
	public var SceneReconstructionMethod: EARSceneReconstruction;
	public var PlaneComponentClass: TSubclassOf<UARPlaneComponent>;
	public var PointComponentClass: TSubclassOf<UARPointComponent>;
	public var FaceComponentClass: TSubclassOf<UARFaceComponent>;
	public var ImageComponentClass: TSubclassOf<UARImageComponent>;
	public var QRCodeComponentClass: TSubclassOf<UARQRCodeComponent>;
	public var PoseComponentClass: TSubclassOf<UARPoseComponent>;
	public var EnvironmentProbeComponentClass: TSubclassOf<UAREnvironmentProbeComponent>;
	public var ObjectComponentClass: TSubclassOf<UARObjectComponent>;
	public var MeshComponentClass: TSubclassOf<UARMeshComponent>;
	public var GeoAnchorComponentClass: TSubclassOf<UARGeoAnchorComponent>;
	public var DefaultMeshMaterial: TObjectPtr<UMaterialInterface>;
	public var DefaultWireframeMeshMaterial: TObjectPtr<UMaterialInterface>;

	public function ShouldResetTrackedObjects(): Bool;
	public function ShouldResetCameraTracking(): Bool;
	public function ShouldRenderCameraOverlay(): Bool;
	public function ShouldEnableCameraTracking(): Bool;
	public function ShouldEnableAutoFocus(): Bool;
	public function SetWorldMapData(WorldMapData: TArray<cpp.UInt8>): Void;
	public function SetSessionTrackingFeatureToEnable(InSessionTrackingFeature: EARSessionTrackingFeature): Void;
	public function SetSceneReconstructionMethod(InSceneReconstructionMethod: EARSceneReconstruction): Void;
	public function SetResetTrackedObjects(bNewValue: Bool): Void;
	public function SetResetCameraTracking(bNewValue: Bool): Void;
	public function SetFaceTrackingUpdate(InUpdate: EARFaceTrackingUpdate): Void;
	public function SetFaceTrackingDirection(InDirection: EARFaceTrackingDirection): Void;
	public function SetEnableAutoFocus(bNewValue: Bool): Void;
	public function SetDesiredVideoFormat(NewFormat: FARVideoFormat): Void;
	public function SetCandidateObjectList(InCandidateObjects: TArray<cpp.Star<UARCandidateObject>>): Void;
	public function GetWorldMapData(): TArray<cpp.UInt8>;
	public function GetWorldAlignment(): EARWorldAlignment;
	public function GetSessionType(): EARSessionType;
	public function GetSceneReconstructionMethod(): EARSceneReconstruction;
	public function GetPlaneDetectionMode(): EARPlaneDetectionMode;
	public function GetMaxNumSimultaneousImagesTracked(): cpp.Int32;
	public function GetLightEstimationMode(): EARLightEstimationMode;
	public function GetFrameSyncMode(): EARFrameSyncMode;
	public function GetFaceTrackingUpdate(): EARFaceTrackingUpdate;
	public function GetFaceTrackingDirection(): EARFaceTrackingDirection;
	public function GetEnvironmentCaptureProbeType(): EAREnvironmentCaptureProbeType;
	public function GetEnabledSessionTrackingFeature(): EARSessionTrackingFeature;
	public function GetDesiredVideoFormat(): FARVideoFormat;
	public function GetCandidateObjectList(): TArray<cpp.Star<UARCandidateObject>>;
	public function GetCandidateImageList(): TArray<cpp.Star<UARCandidateImage>>;
	public function AddCandidateObject(CandidateObject: cpp.Star<UARCandidateObject>): Void;
	public function AddCandidateImage(NewCandidateImage: cpp.Star<UARCandidateImage>): Void;
}
