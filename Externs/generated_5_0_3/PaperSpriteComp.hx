// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPaperSpriteComponent")
@:include("PaperSpriteComponent.h")
@:structAccess
extern class PaperSpriteComp extends MeshComp {
	public var SourceSprite: cpp.Star<PaperSprite>;
	public var MaterialOverride_DEPRECATED: cpp.Star<MaterialInterface>;
	public var SpriteColor: LinearColor;

	public function SetSpriteColor(NewColor: LinearColor): Void;
	public function SetSprite(NewSprite: cpp.Star<PaperSprite>): cpp.Reference<Bool>;
	public function GetSprite(): cpp.Reference<cpp.Star<PaperSprite>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstPaperSpriteComp(PaperSpriteComp) from PaperSpriteComp {
	public extern var SourceSprite(get, never): cpp.Star<PaperSprite.ConstPaperSprite>;
	public inline extern function get_SourceSprite(): cpp.Star<PaperSprite.ConstPaperSprite> return this.SourceSprite;
	public extern var MaterialOverride_DEPRECATED(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_MaterialOverride_DEPRECATED(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.MaterialOverride_DEPRECATED;
	public extern var SpriteColor(get, never): LinearColor;
	public inline extern function get_SpriteColor(): LinearColor return this.SpriteColor;
}

@:forward
@:nativeGen
@:native("PaperSpriteComp*")
abstract PaperSpriteCompPtr(cpp.Star<PaperSpriteComp>) from cpp.Star<PaperSpriteComp> to cpp.Star<PaperSpriteComp>{
	@:from
	public static extern inline function fromValue(v: PaperSpriteComp): PaperSpriteCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PaperSpriteComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}