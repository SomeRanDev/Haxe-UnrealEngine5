// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimationDataController")
extern class UAnimationDataController extends UInterface {

	public function UpdateCurveNamesFromSkeleton(Skeleton: cpp.Star<USkeleton>, SupportedCurveType: ERawCurveTrackTypes, bShouldTransact: Bool): Void;
	public function SetTransformCurveKeys(CurveId: FAnimationCurveIdentifier, TransformValues: TArray<FTransform>, TimeKeys: TArray<cpp.Float32>, bShouldTransact: Bool): Bool;
	public function SetTransformCurveKey(CurveId: FAnimationCurveIdentifier, Time: cpp.Float32, Value: FTransform, bShouldTransact: Bool): Bool;
	public function SetPlayLength(Length: cpp.Float32, bShouldTransact: Bool): Void;
	public function SetModel(InModel: cpp.Star<UAnimDataModel>): Void;
	public function SetFrameRate(FrameRate: FFrameRate, bShouldTransact: Bool): Void;
	public function SetCurveKeys(CurveId: FAnimationCurveIdentifier, CurveKeys: TArray<FRichCurveKey>, bShouldTransact: Bool): Bool;
	public function SetCurveKey(CurveId: FAnimationCurveIdentifier, Key: FRichCurveKey, bShouldTransact: Bool): Bool;
	public function SetCurveFlags(CurveId: FAnimationCurveIdentifier, Flags: cpp.Int32, bShouldTransact: Bool): Bool;
	public function SetCurveFlag(CurveId: FAnimationCurveIdentifier, Flag: EAnimAssetCurveFlags, bState: Bool, bShouldTransact: Bool): Bool;
	public function SetCurveColor(CurveId: FAnimationCurveIdentifier, Color: FLinearColor, bShouldTransact: Bool): Bool;
	public function SetBoneTrackKeys(BoneName: FName, PositionalKeys: TArray<FVector>, RotationalKeys: TArray<FQuat>, ScalingKeys: TArray<FVector>, bShouldTransact: Bool): Bool;
	public function ScaleCurve(CurveId: FAnimationCurveIdentifier, Origin: cpp.Float32, Factor: cpp.Float32, bShouldTransact: Bool): Bool;
	public function ResizePlayLength(NewLength: cpp.Float32, T0: cpp.Float32, T1: cpp.Float32, bShouldTransact: Bool): Void;
	public function Resize(Length: cpp.Float32, T0: cpp.Float32, T1: cpp.Float32, bShouldTransact: Bool): Void;
	public function RenameCurve(CurveToRenameId: FAnimationCurveIdentifier, NewCurveId: FAnimationCurveIdentifier, bShouldTransact: Bool): Bool;
	public function RemoveTransformCurveKey(CurveId: FAnimationCurveIdentifier, Time: cpp.Float32, bShouldTransact: Bool): Bool;
	public function RemoveCurveKey(CurveId: FAnimationCurveIdentifier, Time: cpp.Float32, bShouldTransact: Bool): Bool;
	public function RemoveCurve(CurveId: FAnimationCurveIdentifier, bShouldTransact: Bool): Bool;
	public function RemoveBoneTrack(BoneName: FName, bShouldTransact: Bool): Bool;
	public function RemoveAttributeKey(AttributeIdentifier: FAnimationAttributeIdentifier, Time: cpp.Float32, bShouldTransact: Bool): Bool;
	public function RemoveAttribute(AttributeIdentifier: FAnimationAttributeIdentifier, bShouldTransact: Bool): Bool;
	public function RemoveAllCurvesOfType(SupportedCurveType: ERawCurveTrackTypes, bShouldTransact: Bool): Void;
	public function RemoveAllBoneTracks(bShouldTransact: Bool): Void;
	public function RemoveAllAttributesForBone(BoneName: cpp.Reference<FName>, bShouldTransact: Bool): cpp.Int32;
	public function RemoveAllAttributes(bShouldTransact: Bool): cpp.Int32;
	public function OpenBracket(InTitle: cpp.Reference<FText>, bShouldTransact: Bool): Void;
	public function InsertBoneTrack(BoneName: FName, DesiredIndex: cpp.Int32, bShouldTransact: Bool): cpp.Int32;
	public function GetModel(): cpp.Star<UAnimDataModel>;
	public function FindOrAddCurveNamesOnSkeleton(Skeleton: cpp.Star<USkeleton>, SupportedCurveType: ERawCurveTrackTypes, bShouldTransact: Bool): Void;
	public function DuplicateCurve(CopyCurveId: FAnimationCurveIdentifier, NewCurveId: FAnimationCurveIdentifier, bShouldTransact: Bool): Bool;
	public function DuplicateAttribute(AttributeIdentifier: FAnimationAttributeIdentifier, NewAttributeIdentifier: FAnimationAttributeIdentifier, bShouldTransact: Bool): Bool;
	public function CloseBracket(bShouldTransact: Bool): Void;
	public function AddCurve(CurveId: FAnimationCurveIdentifier, CurveFlags: cpp.Int32, bShouldTransact: Bool): Bool;
	public function AddBoneTrack(BoneName: FName, bShouldTransact: Bool): cpp.Int32;
	public function AddAttribute(AttributeIdentifier: FAnimationAttributeIdentifier, bShouldTransact: Bool): Bool;
}
