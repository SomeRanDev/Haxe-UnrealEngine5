// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimNotify")
@:include("Animation/AnimNotifies/AnimNotify.h")
@:structAccess
extern class AnimNotify extends Object {
	public var NotifyColor: Color;
	public var bShouldFireInEditor: Bool;

	public function Received_Notify(MeshComp: cpp.Star<SkeletalMeshComp>, Animation: cpp.Star<AnimSequenceBase>, EventReference: cpp.Reference<AnimNotifyEventReference>): cpp.Reference<Bool>;
	public function GetNotifyName(): cpp.Reference<FString>;
	public function GetDefaultTriggerWeightThreshold(): cpp.Reference<cpp.Float32>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(Received_Notify, GetNotifyName, GetDefaultTriggerWeightThreshold)
@:nativeGen
abstract ConstAnimNotify(AnimNotify) from AnimNotify {
	public extern var NotifyColor(get, never): Color;
	public inline extern function get_NotifyColor(): Color return this.NotifyColor;
	public extern var bShouldFireInEditor(get, never): Bool;
	public inline extern function get_bShouldFireInEditor(): Bool return this.bShouldFireInEditor;
}

@:forward
@:nativeGen
@:native("AnimNotify*")
abstract AnimNotifyPtr(cpp.Star<AnimNotify>) from cpp.Star<AnimNotify> to cpp.Star<AnimNotify>{
	@:from
	public static extern inline function fromValue(v: AnimNotify): AnimNotifyPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimNotify {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}