// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USynthComponent")
@:include("Components/SynthComponent.h")
extern class SynthCompComp extends SceneCompComp {
	public var bAutoDestroy: Bool;
	public var bStopWhenOwnerDestroyed: Bool;
	public var bAllowSpatialization: Bool;
	public var bOverrideAttenuation: Bool;
	public var bOutputToBusOnly_DEPRECATED: Bool;
	public var bEnableBusSends: Bool;
	public var bEnableBaseSubmix: Bool;
	public var bEnableSubmixSends: Bool;
	public var AttenuationSettings: cpp.Star<SoundAttenuation>;
	public var AttenuationOverrides: FSoundAttenuationSettings;
	public var ConcurrencySettings_DEPRECATED: cpp.Star<SoundConcurrency>;
	public var ConcurrencySet: TSet<cpp.Star<SoundConcurrency>>;
	public var SoundClass: cpp.Star<SoundClass>;
	public var SourceEffectChain: cpp.Star<SoundEffectSourcePresetChain>;
	public var SoundSubmix: cpp.Star<SoundSubmixBase>;
	public var SoundSubmixSends: TArray<FSoundSubmixSendInfo>;
	public var BusSends: TArray<FSoundSourceBusSendInfo>;
	public var PreEffectBusSends: TArray<FSoundSourceBusSendInfo>;
	public var bIsUISound: Bool;
	public var bIsPreviewSound: Bool;
	public var EnvelopeFollowerAttackTime: cpp.Int32;
	public var EnvelopeFollowerReleaseTime: cpp.Int32;
	public var OnAudioEnvelopeValue: HaxeMulticastSparseDelegateProperty<(cpp.Float32) -> Void>;
	public var Synth: cpp.Star<SynthSound>;
	public var AudioComponent: cpp.Star<AudioCompComp>;

	public function Stop(): Void;
	public function Start(): Void;
	public function SetVolumeMultiplier(VolumeMultiplier: cpp.Float32): Void;
	public function SetSubmixSend(Submix: cpp.Star<SoundSubmixBase>, SendLevel: cpp.Float32): Void;
	public function SetOutputToBusOnly(bInOutputToBusOnly: Bool): Void;
	public function SetLowPassFilterFrequency(InLowPassFilterFrequency: cpp.Float32): Void;
	public function SetLowPassFilterEnabled(InLowPassFilterEnabled: Bool): Void;
	public function IsPlaying(): cpp.Reference<Bool>;
}

@:forward(IsPlaying)
abstract ConstSynthCompComp(SynthCompComp) from SynthCompComp {
}