// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UKismetProceduralMeshLibrary")
@:include("KismetProceduralMeshLibrary.h")
extern class UKismetProceduralMeshLibrary extends UBlueprintFunctionLibrary {

	public function SliceProceduralMesh(InProcMesh: cpp.Star<UProceduralMeshComponent>, PlanePosition: FVector, PlaneNormal: FVector, bCreateOtherHalf: Bool, OutOtherHalfProcMesh: cpp.Reference<cpp.Star<UProceduralMeshComponent>>, CapOption: EProcMeshSliceCapOption, CapMaterial: cpp.Star<UMaterialInterface>): Void;
	public function GetSectionFromStaticMesh(InMesh: cpp.Star<UStaticMesh>, LODIndex: cpp.Int32, SectionIndex: cpp.Int32, Vertices: TArray<FVector>, Triangles: TArray<cpp.Int32>, Normals: TArray<FVector>, UVs: TArray<FVector2D>, Tangents: TArray<FProcMeshTangent>): Void;
	public function GetSectionFromProceduralMesh(InProcMesh: cpp.Star<UProceduralMeshComponent>, SectionIndex: cpp.Int32, Vertices: TArray<FVector>, Triangles: TArray<cpp.Int32>, Normals: TArray<FVector>, UVs: TArray<FVector2D>, Tangents: TArray<FProcMeshTangent>): Void;
	public function GenerateBoxMesh(BoxRadius: FVector, Vertices: TArray<FVector>, Triangles: TArray<cpp.Int32>, Normals: TArray<FVector>, UVs: TArray<FVector2D>, Tangents: TArray<FProcMeshTangent>): Void;
	public function CreateGridMeshWelded(NumX: cpp.Int32, NumY: cpp.Int32, Triangles: TArray<cpp.Int32>, Vertices: TArray<FVector>, UVs: TArray<FVector2D>, GridSpacing: cpp.Float32): Void;
	public function CreateGridMeshTriangles(NumX: cpp.Int32, NumY: cpp.Int32, bWinding: Bool, Triangles: TArray<cpp.Int32>): Void;
	public function CreateGridMeshSplit(NumX: cpp.Int32, NumY: cpp.Int32, Triangles: TArray<cpp.Int32>, Vertices: TArray<FVector>, UVs: TArray<FVector2D>, UV1s: TArray<FVector2D>, GridSpacing: cpp.Float32): Void;
	public function CopyProceduralMeshFromStaticMeshComponent(StaticMeshComponent: cpp.Star<UStaticMeshComponent>, LODIndex: cpp.Int32, ProcMeshComponent: cpp.Star<UProceduralMeshComponent>, bCreateCollision: Bool): Void;
	public function ConvertQuadToTriangles(Triangles: TArray<cpp.Int32>, Vert0: cpp.Int32, Vert1: cpp.Int32, Vert2: cpp.Int32, Vert3: cpp.Int32): Void;
	public function CalculateTangentsForMesh(Vertices: TArray<FVector>, Triangles: TArray<cpp.Int32>, UVs: TArray<FVector2D>, Normals: TArray<FVector>, Tangents: TArray<FProcMeshTangent>): Void;
}
