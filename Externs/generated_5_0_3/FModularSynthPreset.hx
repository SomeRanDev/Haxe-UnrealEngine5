// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("FModularSynthPreset")
@:include("SynthComponents/EpicSynth1Component.h")
extern class FModularSynthPreset extends FTableRowBase {
	public var bEnablePolyphony: Bool;
	public var Osc1Type: ESynth1OscType;
	public var Osc1Gain: cpp.Float32;
	public var Osc1Octave: cpp.Float32;
	public var Osc1Semitones: cpp.Float32;
	public var Osc1Cents: cpp.Float32;
	public var Osc1PulseWidth: cpp.Float32;
	public var Osc2Type: ESynth1OscType;
	public var Osc2Gain: cpp.Float32;
	public var Osc2Octave: cpp.Float32;
	public var Osc2Semitones: cpp.Float32;
	public var Osc2Cents: cpp.Float32;
	public var Osc2PulseWidth: cpp.Float32;
	public var Portamento: cpp.Float32;
	public var bEnableUnison: Bool;
	public var bEnableOscillatorSync: Bool;
	public var Spread: cpp.Float32;
	public var Pan: cpp.Float32;
	public var LFO1Frequency: cpp.Float32;
	public var LFO1Gain: cpp.Float32;
	public var LFO1Type: ESynthLFOType;
	public var LFO1Mode: ESynthLFOMode;
	public var LFO1PatchType: ESynthLFOPatchType;
	public var LFO2Frequency: cpp.Float32;
	public var LFO2Gain: cpp.Float32;
	public var LFO2Type: ESynthLFOType;
	public var LFO2Mode: ESynthLFOMode;
	public var LFO2PatchType: ESynthLFOPatchType;
	public var GainDb: cpp.Float32;
	public var AttackTime: cpp.Float32;
	public var DecayTime: cpp.Float32;
	public var SustainGain: cpp.Float32;
	public var ReleaseTime: cpp.Float32;
	public var ModEnvPatchType: ESynthModEnvPatch;
	public var ModEnvBiasPatchType: ESynthModEnvBiasPatch;
	public var bInvertModulationEnvelope: Bool;
	public var bInvertModulationEnvelopeBias: Bool;
	public var ModulationEnvelopeDepth: cpp.Float32;
	public var ModulationEnvelopeAttackTime: cpp.Float32;
	public var ModulationEnvelopeDecayTime: cpp.Float32;
	public var ModulationEnvelopeSustainGain: cpp.Float32;
	public var ModulationEnvelopeReleaseTime: cpp.Float32;
	public var bLegato: Bool;
	public var bRetrigger: Bool;
	public var FilterFrequency: cpp.Float32;
	public var FilterQ: cpp.Float32;
	public var FilterType: ESynthFilterType;
	public var FilterAlgorithm: ESynthFilterAlgorithm;
	public var bStereoDelayEnabled: Bool;
	public var StereoDelayMode: ESynthStereoDelayMode;
	public var StereoDelayTime: cpp.Float32;
	public var StereoDelayFeedback: cpp.Float32;
	public var StereoDelayWetlevel: cpp.Float32;
	public var StereoDelayRatio: cpp.Float32;
	public var bChorusEnabled: Bool;
	public var ChorusDepth: cpp.Float32;
	public var ChorusFeedback: cpp.Float32;
	public var ChorusFrequency: cpp.Float32;
	public var Patches: TArray<FEpicSynth1Patch>;
}