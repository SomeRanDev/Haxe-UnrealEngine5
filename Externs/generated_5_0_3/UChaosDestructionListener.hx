// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UChaosDestructionListener")
@:include("ChaosBlueprint.h")
extern class UChaosDestructionListener extends USceneComponent {
	public var bIsCollisionEventListeningEnabled: Bool;
	public var bIsBreakingEventListeningEnabled: Bool;
	public var bIsTrailingEventListeningEnabled: Bool;
	public var bIsRemovalEventListeningEnabled: Bool;
	public var CollisionEventRequestSettings: FChaosCollisionEventRequestSettings;
	public var BreakingEventRequestSettings: FChaosBreakingEventRequestSettings;
	public var TrailingEventRequestSettings: FChaosTrailingEventRequestSettings;
	public var RemovalEventRequestSettings: FChaosRemovalEventRequestSettings;
	public var ChaosSolverActors: TSet<TObjectPtr<AChaosSolverActor>>;
	public var GeometryCollectionActors: TSet<TObjectPtr<AGeometryCollectionActor>>;
	public var OnCollisionEvents: HaxeMulticastSparseDelegateProperty<(TArray<FChaosCollisionEventData>) -> Void>;
	public var OnBreakingEvents: HaxeMulticastSparseDelegateProperty<(TArray<FChaosBreakingEventData>) -> Void>;
	public var OnTrailingEvents: HaxeMulticastSparseDelegateProperty<(TArray<FChaosTrailingEventData>) -> Void>;
	public var OnRemovalEvents: HaxeMulticastSparseDelegateProperty<(TArray<FChaosRemovalEventData>) -> Void>;

	public function SortTrailingEvents(TrailingEvents: TArray<FChaosTrailingEventData>, SortMethod: EChaosTrailingSortMethod): Void;
	public function SortRemovalEvents(RemovalEvents: TArray<FChaosRemovalEventData>, SortMethod: EChaosRemovalSortMethod): Void;
	public function SortCollisionEvents(CollisionEvents: TArray<FChaosCollisionEventData>, SortMethod: EChaosCollisionSortMethod): Void;
	public function SortBreakingEvents(BreakingEvents: TArray<FChaosBreakingEventData>, SortMethod: EChaosBreakingSortMethod): Void;
	public function SetTrailingEventRequestSettings(InSettings: FChaosTrailingEventRequestSettings): Void;
	public function SetTrailingEventEnabled(bIsEnabled: Bool): Void;
	public function SetRemovalEventRequestSettings(InSettings: FChaosRemovalEventRequestSettings): Void;
	public function SetRemovalEventEnabled(bIsEnabled: Bool): Void;
	public function SetCollisionEventRequestSettings(InSettings: FChaosCollisionEventRequestSettings): Void;
	public function SetCollisionEventEnabled(bIsEnabled: Bool): Void;
	public function SetBreakingEventRequestSettings(InSettings: FChaosBreakingEventRequestSettings): Void;
	public function SetBreakingEventEnabled(bIsEnabled: Bool): Void;
	public function RemoveGeometryCollectionActor(GeometryCollectionActor: cpp.Star<AGeometryCollectionActor>): Void;
	public function RemoveChaosSolverActor(ChaosSolverActor: cpp.Star<AChaosSolverActor>): Void;
	public function IsEventListening(): Bool;
	public function AddGeometryCollectionActor(GeometryCollectionActor: cpp.Star<AGeometryCollectionActor>): Void;
	public function AddChaosSolverActor(ChaosSolverActor: cpp.Star<AChaosSolverActor>): Void;
}
