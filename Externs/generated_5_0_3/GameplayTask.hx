// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGameplayTask")
@:include("GameplayTask.h")
@:structAccess
extern class GameplayTask extends Object {
	public var InstanceName: FName;
	public var ResourceOverlapPolicy: ETaskResourceOverlapPolicy;
	public var ChildTask: cpp.Star<GameplayTask>;

	public function ReadyForActivation(): Void;
	public function GenericGameplayTaskDelegate__DelegateSignature(): Void;
	public function EndTask(): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGameplayTask(GameplayTask) from GameplayTask {
	public extern var InstanceName(get, never): FName;
	public inline extern function get_InstanceName(): FName return this.InstanceName;
	public extern var ResourceOverlapPolicy(get, never): ETaskResourceOverlapPolicy;
	public inline extern function get_ResourceOverlapPolicy(): ETaskResourceOverlapPolicy return this.ResourceOverlapPolicy;
	public extern var ChildTask(get, never): cpp.Star<GameplayTask.ConstGameplayTask>;
	public inline extern function get_ChildTask(): cpp.Star<GameplayTask.ConstGameplayTask> return this.ChildTask;
}

@:forward
@:nativeGen
@:native("GameplayTask*")
abstract GameplayTaskPtr(cpp.Star<GameplayTask>) from cpp.Star<GameplayTask> to cpp.Star<GameplayTask>{
	@:from
	public static extern inline function fromValue(v: GameplayTask): GameplayTaskPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GameplayTask {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}