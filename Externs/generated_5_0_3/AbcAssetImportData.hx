// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAbcAssetImportData")
@:include("AbcAssetImportData.h")
@:structAccess
extern class AbcAssetImportData extends AssetImportData {
	public var TrackNames: TArray<FString>;
	public var SamplingSettings: AbcSamplingSettings;
	public var NormalGenerationSettings: AbcNormalGenerationSettings;
	public var MaterialSettings: AbcMaterialSettings;
	public var CompressionSettings: AbcCompressionSettings;
	public var StaticMeshSettings: AbcStaticMeshSettings;
	public var GeometryCacheSettings: AbcGeometryCacheSettings;
	public var ConversionSettings: AbcConversionSettings;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAbcAssetImportData(AbcAssetImportData) from AbcAssetImportData {
	public extern var TrackNames(get, never): TArray<FString>;
	public inline extern function get_TrackNames(): TArray<FString> return this.TrackNames;
	public extern var SamplingSettings(get, never): AbcSamplingSettings;
	public inline extern function get_SamplingSettings(): AbcSamplingSettings return this.SamplingSettings;
	public extern var NormalGenerationSettings(get, never): AbcNormalGenerationSettings;
	public inline extern function get_NormalGenerationSettings(): AbcNormalGenerationSettings return this.NormalGenerationSettings;
	public extern var MaterialSettings(get, never): AbcMaterialSettings;
	public inline extern function get_MaterialSettings(): AbcMaterialSettings return this.MaterialSettings;
	public extern var CompressionSettings(get, never): AbcCompressionSettings;
	public inline extern function get_CompressionSettings(): AbcCompressionSettings return this.CompressionSettings;
	public extern var StaticMeshSettings(get, never): AbcStaticMeshSettings;
	public inline extern function get_StaticMeshSettings(): AbcStaticMeshSettings return this.StaticMeshSettings;
	public extern var GeometryCacheSettings(get, never): AbcGeometryCacheSettings;
	public inline extern function get_GeometryCacheSettings(): AbcGeometryCacheSettings return this.GeometryCacheSettings;
	public extern var ConversionSettings(get, never): AbcConversionSettings;
	public inline extern function get_ConversionSettings(): AbcConversionSettings return this.ConversionSettings;
}

@:forward
@:nativeGen
@:native("AbcAssetImportData*")
abstract AbcAssetImportDataPtr(cpp.Star<AbcAssetImportData>) from cpp.Star<AbcAssetImportData> to cpp.Star<AbcAssetImportData>{
	@:from
	public static extern inline function fromValue(v: AbcAssetImportData): AbcAssetImportDataPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AbcAssetImportData {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}