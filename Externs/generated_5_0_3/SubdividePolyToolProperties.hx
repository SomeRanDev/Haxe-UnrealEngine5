// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USubdividePolyToolProperties")
@:include("SubdividePolyTool.h")
@:structAccess
extern class SubdividePolyToolProperties extends InteractiveToolPropertySet {
	public var SubdivisionLevel: cpp.Int32;
	public var bCatmullClarkOK: Bool;
	public var SubdivisionScheme: ESubdivisionScheme;
	public var NormalComputationMethod: ESubdivisionOutputNormals;
	public var UVComputationMethod: ESubdivisionOutputUVs;
	public var bNewPolyGroups: Bool;
	public var bRenderGroups: Bool;
	public var bRenderCage: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSubdividePolyToolProperties(SubdividePolyToolProperties) from SubdividePolyToolProperties {
	public extern var SubdivisionLevel(get, never): cpp.Int32;
	public inline extern function get_SubdivisionLevel(): cpp.Int32 return this.SubdivisionLevel;
	public extern var bCatmullClarkOK(get, never): Bool;
	public inline extern function get_bCatmullClarkOK(): Bool return this.bCatmullClarkOK;
	public extern var SubdivisionScheme(get, never): ESubdivisionScheme;
	public inline extern function get_SubdivisionScheme(): ESubdivisionScheme return this.SubdivisionScheme;
	public extern var NormalComputationMethod(get, never): ESubdivisionOutputNormals;
	public inline extern function get_NormalComputationMethod(): ESubdivisionOutputNormals return this.NormalComputationMethod;
	public extern var UVComputationMethod(get, never): ESubdivisionOutputUVs;
	public inline extern function get_UVComputationMethod(): ESubdivisionOutputUVs return this.UVComputationMethod;
	public extern var bNewPolyGroups(get, never): Bool;
	public inline extern function get_bNewPolyGroups(): Bool return this.bNewPolyGroups;
	public extern var bRenderGroups(get, never): Bool;
	public inline extern function get_bRenderGroups(): Bool return this.bRenderGroups;
	public extern var bRenderCage(get, never): Bool;
	public inline extern function get_bRenderCage(): Bool return this.bRenderCage;
}

@:forward
@:nativeGen
@:native("SubdividePolyToolProperties*")
abstract SubdividePolyToolPropertiesPtr(cpp.Star<SubdividePolyToolProperties>) from cpp.Star<SubdividePolyToolProperties> to cpp.Star<SubdividePolyToolProperties>{
	@:from
	public static extern inline function fromValue(v: SubdividePolyToolProperties): SubdividePolyToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SubdividePolyToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}