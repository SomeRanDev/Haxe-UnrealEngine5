// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UControlRigComponent")
@:include("ControlRigComponent.h")
extern class UControlRigComponent extends UPrimitiveComponent {
	public var ControlRigClass: TSubclassOf<UControlRig>;
	public var OnPreInitializeDelegate: HaxeMulticastSparseDelegateProperty<(cpp.Star<UControlRigComponent>) -> Void>;
	public var OnPostInitializeDelegate: HaxeMulticastSparseDelegateProperty<(cpp.Star<UControlRigComponent>) -> Void>;
	public var OnPreSetupDelegate: HaxeMulticastSparseDelegateProperty<(cpp.Star<UControlRigComponent>) -> Void>;
	public var OnPostSetupDelegate: HaxeMulticastSparseDelegateProperty<(cpp.Star<UControlRigComponent>) -> Void>;
	public var OnPreForwardsSolveDelegate: HaxeMulticastSparseDelegateProperty<(cpp.Star<UControlRigComponent>) -> Void>;
	public var OnPostForwardsSolveDelegate: HaxeMulticastSparseDelegateProperty<(cpp.Star<UControlRigComponent>) -> Void>;
	public var MappedElements: TArray<FControlRigComponentMappedElement>;
	public var bEnableLazyEvaluation: Bool;
	public var LazyEvaluationPositionThreshold: cpp.Float32;
	public var LazyEvaluationRotationThreshold: cpp.Float32;
	public var LazyEvaluationScaleThreshold: cpp.Float32;
	public var bResetTransformBeforeTick: Bool;
	public var bResetInitialsBeforeSetup: Bool;
	public var bUpdateRigOnTick: Bool;
	public var bUpdateInEditor: Bool;
	public var bDrawBones: Bool;
	public var bShowDebugDrawing: Bool;
	public var ControlRig: TObjectPtr<UControlRig>;

	public function Update(DeltaTime: cpp.Float32): Void;
	public function SetMappedElements(NewMappedElements: TArray<FControlRigComponentMappedElement>): Void;
	public function SetInitialSpaceTransform(SpaceName: FName, InitialTransform: FTransform, Space: EControlRigComponentSpace): Void;
	public function SetInitialBoneTransform(BoneName: FName, InitialTransform: FTransform, Space: EControlRigComponentSpace, bPropagateToChildren: Bool): Void;
	public function SetControlVector2D(ControlName: FName, Value: FVector2D): Void;
	public function SetControlTransform(ControlName: FName, Value: FTransform, Space: EControlRigComponentSpace): Void;
	public function SetControlScale(ControlName: FName, Value: FVector, Space: EControlRigComponentSpace): Void;
	public function SetControlRotator(ControlName: FName, Value: FRotator, Space: EControlRigComponentSpace): Void;
	public function SetControlPosition(ControlName: FName, Value: FVector, Space: EControlRigComponentSpace): Void;
	public function SetControlOffset(ControlName: FName, OffsetTransform: FTransform, Space: EControlRigComponentSpace): Void;
	public function SetControlInt(ControlName: FName, Value: cpp.Int32): Void;
	public function SetControlFloat(ControlName: FName, Value: cpp.Float32): Void;
	public function SetControlBool(ControlName: FName, Value: Bool): Void;
	public function SetBoneTransform(BoneName: FName, Transform: FTransform, Space: EControlRigComponentSpace, Weight: cpp.Float32, bPropagateToChildren: Bool): Void;
	public function SetBoneInitialTransformsFromSkeletalMesh(InSkeletalMesh: cpp.Star<USkeletalMesh>): Void;
	public function OnPreSetup(Component: cpp.Star<UControlRigComponent>): Void;
	public function OnPreInitialize(Component: cpp.Star<UControlRigComponent>): Void;
	public function OnPreForwardsSolve(Component: cpp.Star<UControlRigComponent>): Void;
	public function OnPostSetup(Component: cpp.Star<UControlRigComponent>): Void;
	public function OnPostInitialize(Component: cpp.Star<UControlRigComponent>): Void;
	public function OnPostForwardsSolve(Component: cpp.Star<UControlRigComponent>): Void;
	public function Initialize(): Void;
	public function GetSpaceTransform(SpaceName: FName, Space: EControlRigComponentSpace): FTransform;
	public function GetInitialSpaceTransform(SpaceName: FName, Space: EControlRigComponentSpace): FTransform;
	public function GetInitialBoneTransform(BoneName: FName, Space: EControlRigComponentSpace): FTransform;
	public function GetElementNames(ElementType: ERigElementType): TArray<FName>;
	public function GetControlVector2D(ControlName: FName): FVector2D;
	public function GetControlTransform(ControlName: FName, Space: EControlRigComponentSpace): FTransform;
	public function GetControlScale(ControlName: FName, Space: EControlRigComponentSpace): FVector;
	public function GetControlRotator(ControlName: FName, Space: EControlRigComponentSpace): FRotator;
	public function GetControlRig(): cpp.Star<UControlRig>;
	public function GetControlPosition(ControlName: FName, Space: EControlRigComponentSpace): FVector;
	public function GetControlOffset(ControlName: FName, Space: EControlRigComponentSpace): FTransform;
	public function GetControlInt(ControlName: FName): cpp.Int32;
	public function GetControlFloat(ControlName: FName): cpp.Float32;
	public function GetControlBool(ControlName: FName): Bool;
	public function GetBoneTransform(BoneName: FName, Space: EControlRigComponentSpace): FTransform;
	public function GetAbsoluteTime(): cpp.Float32;
	public function DoesElementExist(Name: FName, ElementType: ERigElementType): Bool;
	public function ClearMappedElements(): Void;
	public function CanExecute(): Bool;
	public function AddMappedSkeletalMesh(SkeletalMeshComponent: cpp.Star<USkeletalMeshComponent>, Bones: TArray<FControlRigComponentMappedBone>, Curves: TArray<FControlRigComponentMappedCurve>): Void;
	public function AddMappedElements(NewMappedElements: TArray<FControlRigComponentMappedElement>): Void;
	public function AddMappedComponents(Components: TArray<FControlRigComponentMappedComponent>): Void;
	public function AddMappedCompleteSkeletalMesh(SkeletalMeshComponent: cpp.Star<USkeletalMeshComponent>): Void;
}
