// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAssetTagsSubsystem")
@:include("AssetTagsSubsystem.h")
@:structAccess
extern class AssetTagsSubsystem extends EngineSubsystem {
	public function ReparentCollection(Name: FName, NewParentName: FName): Bool;
	public function RenameCollection(Name: FName, NewName: FName): Bool;
	public function RemoveAssetsFromCollection(Name: FName, AssetPathNames: cpp.Reference<TArray<FName>>): Bool;
	public function RemoveAssetPtrsFromCollection(Name: FName, AssetPtrs: cpp.Reference<TArray<cpp.Star<Object>>>): Bool;
	public function RemoveAssetPtrFromCollection(Name: FName, AssetPtr: cpp.Star<Object.ConstObject>): Bool;
	public function RemoveAssetFromCollection(Name: FName, AssetPathName: FName): Bool;
	public function RemoveAssetDatasFromCollection(Name: FName, AssetDatas: cpp.Reference<TArray<AssetData>>): Bool;
	public function RemoveAssetDataFromCollection(Name: FName, AssetData: cpp.Reference<AssetData>): Bool;
	public function GetCollectionsContainingAssetPtr(AssetPtr: cpp.Star<Object.ConstObject>): TArray<FName>;
	public function GetCollectionsContainingAssetData(AssetData: cpp.Reference<AssetData>): TArray<FName>;
	public function GetCollectionsContainingAsset(AssetPathName: FName): TArray<FName>;
	public function GetCollections(): TArray<FName>;
	public function GetAssetsInCollection(Name: FName): TArray<AssetData>;
	public function EmptyCollection(Name: FName): Bool;
	public function DestroyCollection(Name: FName): Bool;
	public function CreateCollection(Name: FName, ShareType: ECollectionScriptingShareType): Bool;
	public function CollectionExists(Name: FName): Bool;
	public function AddAssetToCollection(Name: FName, AssetPathName: FName): Bool;
	public function AddAssetsToCollection(Name: FName, AssetPathNames: cpp.Reference<TArray<FName>>): Bool;
	public function AddAssetPtrToCollection(Name: FName, AssetPtr: cpp.Star<Object.ConstObject>): Bool;
	public function AddAssetPtrsToCollection(Name: FName, AssetPtrs: cpp.Reference<TArray<cpp.Star<Object>>>): Bool;
	public function AddAssetDataToCollection(Name: FName, AssetData: cpp.Reference<AssetData>): Bool;
	public function AddAssetDatasToCollection(Name: FName, AssetDatas: cpp.Reference<TArray<AssetData>>): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAssetTagsSubsystem(AssetTagsSubsystem) from AssetTagsSubsystem {
}

@:forward
@:nativeGen
@:native("AssetTagsSubsystem*")
abstract AssetTagsSubsystemPtr(cpp.Star<AssetTagsSubsystem>) from cpp.Star<AssetTagsSubsystem> to cpp.Star<AssetTagsSubsystem>{
	@:from
	public static extern inline function fromValue(v: AssetTagsSubsystem): AssetTagsSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AssetTagsSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}