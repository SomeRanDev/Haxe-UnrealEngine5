// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAxisAngleGizmo")
@:include("BaseGizmos/AxisAngleGizmo.h")
extern class AxisAngleGizmo extends InteractiveGizmo {
	public var AxisSource: GizmoAxisSource;
	public var AngleSource: GizmoFloatParameterSource;
	public var HitTarget: GizmoClickTarget;
	public var StateTarget: GizmoStateTarget;
	public var MouseBehavior: cpp.Star<ClickDragInputBehavior>;
	public var bInInteraction: Bool;
	public var RotationOrigin: Vector;
	public var RotationAxis: Vector;
	public var RotationPlaneX: Vector;
	public var RotationPlaneY: Vector;
	public var InteractionStartPoint: Vector;
	public var InteractionCurPoint: Vector;
	public var InteractionStartAngle: cpp.Float32;
	public var InteractionCurAngle: cpp.Float32;
}

@:forward()
@:nativeGen
abstract ConstAxisAngleGizmo(AxisAngleGizmo) from AxisAngleGizmo {
	public extern var AxisSource(get, never): GizmoAxisSource.ConstGizmoAxisSource;
	public inline extern function get_AxisSource(): GizmoAxisSource.ConstGizmoAxisSource return this.AxisSource;
	public extern var AngleSource(get, never): GizmoFloatParameterSource.ConstGizmoFloatParameterSource;
	public inline extern function get_AngleSource(): GizmoFloatParameterSource.ConstGizmoFloatParameterSource return this.AngleSource;
	public extern var HitTarget(get, never): GizmoClickTarget.ConstGizmoClickTarget;
	public inline extern function get_HitTarget(): GizmoClickTarget.ConstGizmoClickTarget return this.HitTarget;
	public extern var StateTarget(get, never): GizmoStateTarget.ConstGizmoStateTarget;
	public inline extern function get_StateTarget(): GizmoStateTarget.ConstGizmoStateTarget return this.StateTarget;
	public extern var MouseBehavior(get, never): cpp.Star<ClickDragInputBehavior.ConstClickDragInputBehavior>;
	public inline extern function get_MouseBehavior(): cpp.Star<ClickDragInputBehavior.ConstClickDragInputBehavior> return this.MouseBehavior;
	public extern var bInInteraction(get, never): Bool;
	public inline extern function get_bInInteraction(): Bool return this.bInInteraction;
	public extern var RotationOrigin(get, never): Vector;
	public inline extern function get_RotationOrigin(): Vector return this.RotationOrigin;
	public extern var RotationAxis(get, never): Vector;
	public inline extern function get_RotationAxis(): Vector return this.RotationAxis;
	public extern var RotationPlaneX(get, never): Vector;
	public inline extern function get_RotationPlaneX(): Vector return this.RotationPlaneX;
	public extern var RotationPlaneY(get, never): Vector;
	public inline extern function get_RotationPlaneY(): Vector return this.RotationPlaneY;
	public extern var InteractionStartPoint(get, never): Vector;
	public inline extern function get_InteractionStartPoint(): Vector return this.InteractionStartPoint;
	public extern var InteractionCurPoint(get, never): Vector;
	public inline extern function get_InteractionCurPoint(): Vector return this.InteractionCurPoint;
	public extern var InteractionStartAngle(get, never): cpp.Float32;
	public inline extern function get_InteractionStartAngle(): cpp.Float32 return this.InteractionStartAngle;
	public extern var InteractionCurAngle(get, never): cpp.Float32;
	public inline extern function get_InteractionCurAngle(): cpp.Float32 return this.InteractionCurAngle;
}