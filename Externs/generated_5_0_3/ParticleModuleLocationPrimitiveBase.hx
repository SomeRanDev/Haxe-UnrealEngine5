// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UParticleModuleLocationPrimitiveBase")
@:include("Particles/Location/ParticleModuleLocationPrimitiveBase.h")
@:structAccess
extern class ParticleModuleLocationPrimitiveBase extends ParticleModuleLocationBase {
	public var Positive_X: Bool;
	public var Positive_Y: Bool;
	public var Positive_Z: Bool;
	public var Negative_X: Bool;
	public var Negative_Y: Bool;
	public var Negative_Z: Bool;
	public var SurfaceOnly: Bool;
	public var Velocity: Bool;
	public var VelocityScale: RawDistributionFloat;
	public var StartLocation: RawDistributionVector;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstParticleModuleLocationPrimitiveBase(ParticleModuleLocationPrimitiveBase) from ParticleModuleLocationPrimitiveBase {
	public extern var Positive_X(get, never): Bool;
	public inline extern function get_Positive_X(): Bool return this.Positive_X;
	public extern var Positive_Y(get, never): Bool;
	public inline extern function get_Positive_Y(): Bool return this.Positive_Y;
	public extern var Positive_Z(get, never): Bool;
	public inline extern function get_Positive_Z(): Bool return this.Positive_Z;
	public extern var Negative_X(get, never): Bool;
	public inline extern function get_Negative_X(): Bool return this.Negative_X;
	public extern var Negative_Y(get, never): Bool;
	public inline extern function get_Negative_Y(): Bool return this.Negative_Y;
	public extern var Negative_Z(get, never): Bool;
	public inline extern function get_Negative_Z(): Bool return this.Negative_Z;
	public extern var SurfaceOnly(get, never): Bool;
	public inline extern function get_SurfaceOnly(): Bool return this.SurfaceOnly;
	public extern var Velocity(get, never): Bool;
	public inline extern function get_Velocity(): Bool return this.Velocity;
	public extern var VelocityScale(get, never): RawDistributionFloat;
	public inline extern function get_VelocityScale(): RawDistributionFloat return this.VelocityScale;
	public extern var StartLocation(get, never): RawDistributionVector;
	public inline extern function get_StartLocation(): RawDistributionVector return this.StartLocation;
}

@:forward
@:nativeGen
@:native("ParticleModuleLocationPrimitiveBase*")
abstract ParticleModuleLocationPrimitiveBasePtr(cpp.Star<ParticleModuleLocationPrimitiveBase>) from cpp.Star<ParticleModuleLocationPrimitiveBase> to cpp.Star<ParticleModuleLocationPrimitiveBase>{
	@:from
	public static extern inline function fromValue(v: ParticleModuleLocationPrimitiveBase): ParticleModuleLocationPrimitiveBasePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ParticleModuleLocationPrimitiveBase {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}