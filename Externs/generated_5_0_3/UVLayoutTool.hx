// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UUVLayoutTool")
@:include("UVLayoutTool.h")
@:structAccess
extern class UVLayoutTool extends MultiSelectionMeshEditingTool {
	public var UVChannelProperties: cpp.Star<MeshUVChannelProperties>;
	public var BasicProperties: cpp.Star<UVLayoutProperties>;
	public var MaterialSettings: cpp.Star<ExistingMeshMaterialProperties>;
	public var Previews: TArray<cpp.Star<MeshOpPreviewWithBackgroundCompute>>;
	public var Factories: TArray<cpp.Star<UVLayoutOperatorFactory>>;
	public var UVLayoutView: cpp.Star<UVLayoutPreview>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstUVLayoutTool(UVLayoutTool) from UVLayoutTool {
	public extern var UVChannelProperties(get, never): cpp.Star<MeshUVChannelProperties.ConstMeshUVChannelProperties>;
	public inline extern function get_UVChannelProperties(): cpp.Star<MeshUVChannelProperties.ConstMeshUVChannelProperties> return this.UVChannelProperties;
	public extern var BasicProperties(get, never): cpp.Star<UVLayoutProperties.ConstUVLayoutProperties>;
	public inline extern function get_BasicProperties(): cpp.Star<UVLayoutProperties.ConstUVLayoutProperties> return this.BasicProperties;
	public extern var MaterialSettings(get, never): cpp.Star<ExistingMeshMaterialProperties.ConstExistingMeshMaterialProperties>;
	public inline extern function get_MaterialSettings(): cpp.Star<ExistingMeshMaterialProperties.ConstExistingMeshMaterialProperties> return this.MaterialSettings;
	public extern var Previews(get, never): TArray<cpp.Star<MeshOpPreviewWithBackgroundCompute.ConstMeshOpPreviewWithBackgroundCompute>>;
	public inline extern function get_Previews(): TArray<cpp.Star<MeshOpPreviewWithBackgroundCompute.ConstMeshOpPreviewWithBackgroundCompute>> return this.Previews;
	public extern var Factories(get, never): TArray<cpp.Star<UVLayoutOperatorFactory.ConstUVLayoutOperatorFactory>>;
	public inline extern function get_Factories(): TArray<cpp.Star<UVLayoutOperatorFactory.ConstUVLayoutOperatorFactory>> return this.Factories;
	public extern var UVLayoutView(get, never): cpp.Star<UVLayoutPreview.ConstUVLayoutPreview>;
	public inline extern function get_UVLayoutView(): cpp.Star<UVLayoutPreview.ConstUVLayoutPreview> return this.UVLayoutView;
}

@:forward
@:nativeGen
@:native("UVLayoutTool*")
abstract UVLayoutToolPtr(cpp.Star<UVLayoutTool>) from cpp.Star<UVLayoutTool> to cpp.Star<UVLayoutTool>{
	@:from
	public static extern inline function fromValue(v: UVLayoutTool): UVLayoutToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): UVLayoutTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}