// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UViewportWorldInteraction")
@:include("ViewportWorldInteraction.h")
extern class UViewportWorldInteraction extends UEditorWorldExtension {
	public var Interactors: TArray<TObjectPtr<UViewportInteractor>>;
	public var ViewportTransformer: TObjectPtr<UViewportTransformer>;
	public var TransformGizmoActor: TObjectPtr<ABaseTransformGizmo>;
	public var SnapGridActor: TObjectPtr<AActor>;
	public var SnapGridMeshComponent: TObjectPtr<UStaticMeshComponent>;
	public var SnapGridMID: TObjectPtr<UMaterialInstanceDynamic>;
	public var DefaultMouseCursorInteractor: TObjectPtr<UMouseCursorInteractor>;
	public var ActorsToExcludeFromHitTest: TArray<TWeakObjectPtr<AActor>>;
	public var AssetContainer: TObjectPtr<UViewportInteractionAssetContainer>;

	public function SetWorldToMetersScale(NewWorldToMetersScale: cpp.Float32, bCompensateRoomWorldScale: Bool): Void;
	public function SetRoomTransformForNextFrame(NewRoomTransform: FTransform): Void;
	public function SetHeadTransform(NewHeadTransform: FTransform): Void;
	public function RemoveInteractor(Interactor: cpp.Star<UViewportInteractor>): Void;
	public function GetWorldScaleFactor(): cpp.Float32;
	public function GetTransformGizmoActor(): cpp.Star<ABaseTransformGizmo>;
	public function GetRoomTransform(): FTransform;
	public function GetRoomSpaceHeadTransform(): FTransform;
	public function GetInteractors(): TArray<cpp.Star<UViewportInteractor>>;
	public function GetHeadTransform(): FTransform;
	public function AddInteractor(Interactor: cpp.Star<UViewportInteractor>): Void;
	public function AddActorToExcludeFromHitTests(ActorToExcludeFromHitTests: cpp.Star<AActor>): Void;
}
