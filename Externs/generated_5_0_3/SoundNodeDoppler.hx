// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USoundNodeDoppler")
@:include("Sound/SoundNodeDoppler.h")
@:structAccess
extern class SoundNodeDoppler extends SoundNode {
	public var DopplerIntensity: cpp.Float32;
	public var bUseSmoothing: Bool;
	public var SmoothingInterpSpeed: cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSoundNodeDoppler(SoundNodeDoppler) from SoundNodeDoppler {
	public extern var DopplerIntensity(get, never): cpp.Float32;
	public inline extern function get_DopplerIntensity(): cpp.Float32 return this.DopplerIntensity;
	public extern var bUseSmoothing(get, never): Bool;
	public inline extern function get_bUseSmoothing(): Bool return this.bUseSmoothing;
	public extern var SmoothingInterpSpeed(get, never): cpp.Float32;
	public inline extern function get_SmoothingInterpSpeed(): cpp.Float32 return this.SmoothingInterpSpeed;
}

@:forward
@:nativeGen
@:native("SoundNodeDoppler*")
abstract SoundNodeDopplerPtr(cpp.Star<SoundNodeDoppler>) from cpp.Star<SoundNodeDoppler> to cpp.Star<SoundNodeDoppler>{
	@:from
	public static extern inline function fromValue(v: SoundNodeDoppler): SoundNodeDopplerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SoundNodeDoppler {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}