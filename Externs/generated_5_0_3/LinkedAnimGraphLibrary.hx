// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULinkedAnimGraphLibrary")
@:include("LinkedAnimGraphLibrary.h")
@:structAccess
extern class LinkedAnimGraphLibrary extends BlueprintFunctionLibrary {
	public function HasLinkedAnimInstance(Node: cpp.Reference<LinkedAnimGraphReference>): Bool;
	public function GetLinkedAnimInstance(Node: cpp.Reference<LinkedAnimGraphReference>): cpp.Star<AnimInstance>;
	public function ConvertToLinkedAnimGraphPure(Node: cpp.Reference<AnimNodeReference>, LinkedAnimGraph: cpp.Reference<LinkedAnimGraphReference>, Result: cpp.Reference<Bool>): Void;
	public function ConvertToLinkedAnimGraph(Node: cpp.Reference<AnimNodeReference>, Result: cpp.Reference<EAnimNodeReferenceConversionResult>): LinkedAnimGraphReference;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstLinkedAnimGraphLibrary(LinkedAnimGraphLibrary) from LinkedAnimGraphLibrary {
}

@:forward
@:nativeGen
@:native("LinkedAnimGraphLibrary*")
abstract LinkedAnimGraphLibraryPtr(cpp.Star<LinkedAnimGraphLibrary>) from cpp.Star<LinkedAnimGraphLibrary> to cpp.Star<LinkedAnimGraphLibrary>{
	@:from
	public static extern inline function fromValue(v: LinkedAnimGraphLibrary): LinkedAnimGraphLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LinkedAnimGraphLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}