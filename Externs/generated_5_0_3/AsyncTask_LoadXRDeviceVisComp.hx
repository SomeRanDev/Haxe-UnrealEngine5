// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAsyncTask_LoadXRDeviceVisComponent")
@:include("XRAssetFunctionLibrary.h")
@:structAccess
extern class AsyncTask_LoadXRDeviceVisComp extends BlueprintAsyncActionBase {
	public var OnModelLoaded: HaxeMulticastSparseDelegateProperty<(cpp.Star<PrimitiveComp.ConstPrimitiveComp>) -> Void>;
	public var OnLoadFailure: HaxeMulticastSparseDelegateProperty<(cpp.Star<PrimitiveComp.ConstPrimitiveComp>) -> Void>;
	private var SpawnedComponent: cpp.Star<PrimitiveComp>;

	public function AddNamedDeviceVisualizationComponentAsync(Target: cpp.Star<Actor>, SystemName: FName, DeviceName: FName, bManualAttachment: Bool, RelativeTransform: cpp.Reference<Transform>, XRDeviceId: cpp.Reference<XRDeviceId>, NewComponent: cpp.Reference<cpp.Star<PrimitiveComp>>): cpp.Star<AsyncTask_LoadXRDeviceVisComp>;
	public function AddDeviceVisualizationComponentAsync(Target: cpp.Star<Actor>, XRDeviceId: cpp.Reference<XRDeviceId>, bManualAttachment: Bool, RelativeTransform: cpp.Reference<Transform>, NewComponent: cpp.Reference<cpp.Star<PrimitiveComp>>): cpp.Star<AsyncTask_LoadXRDeviceVisComp>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAsyncTask_LoadXRDeviceVisComp(AsyncTask_LoadXRDeviceVisComp) from AsyncTask_LoadXRDeviceVisComp {
	public extern var OnModelLoaded(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<PrimitiveComp.ConstPrimitiveComp>) -> Void>;
	public inline extern function get_OnModelLoaded(): HaxeMulticastSparseDelegateProperty<(cpp.Star<PrimitiveComp.ConstPrimitiveComp>) -> Void> return this.OnModelLoaded;
	public extern var OnLoadFailure(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<PrimitiveComp.ConstPrimitiveComp>) -> Void>;
	public inline extern function get_OnLoadFailure(): HaxeMulticastSparseDelegateProperty<(cpp.Star<PrimitiveComp.ConstPrimitiveComp>) -> Void> return this.OnLoadFailure;
}

@:forward
@:nativeGen
@:native("AsyncTask_LoadXRDeviceVisComp*")
abstract AsyncTask_LoadXRDeviceVisCompPtr(cpp.Star<AsyncTask_LoadXRDeviceVisComp>) from cpp.Star<AsyncTask_LoadXRDeviceVisComp> to cpp.Star<AsyncTask_LoadXRDeviceVisComp>{
	@:from
	public static extern inline function fromValue(v: AsyncTask_LoadXRDeviceVisComp): AsyncTask_LoadXRDeviceVisCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AsyncTask_LoadXRDeviceVisComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}