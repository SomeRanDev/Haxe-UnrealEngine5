// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UKismetMaterialLibrary")
@:include("Kismet/KismetMaterialLibrary.h")
@:structAccess
extern class KismetMaterialLibrary extends BlueprintFunctionLibrary {
	public function SetVectorParameterValue(WorldContextObject: cpp.Star<Object>, Collection: cpp.Star<MaterialParameterCollection>, ParameterName: FName, ParameterValue: cpp.Reference<LinearColor>): Void;
	public function SetScalarParameterValue(WorldContextObject: cpp.Star<Object>, Collection: cpp.Star<MaterialParameterCollection>, ParameterName: FName, ParameterValue: cpp.Float32): Void;
	public function GetVectorParameterValue(WorldContextObject: cpp.Star<Object>, Collection: cpp.Star<MaterialParameterCollection>, ParameterName: FName): LinearColor;
	public function GetScalarParameterValue(WorldContextObject: cpp.Star<Object>, Collection: cpp.Star<MaterialParameterCollection>, ParameterName: FName): cpp.Float32;
	public function CreateDynamicMaterialInstance(WorldContextObject: cpp.Star<Object>, Parent: cpp.Star<MaterialInterface>, OptionalName: FName, CreationFlags: EMIDCreationFlags): cpp.Star<MaterialInstanceDynamic>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstKismetMaterialLibrary(KismetMaterialLibrary) from KismetMaterialLibrary {
}

@:forward
@:nativeGen
@:native("KismetMaterialLibrary*")
abstract KismetMaterialLibraryPtr(cpp.Star<KismetMaterialLibrary>) from cpp.Star<KismetMaterialLibrary> to cpp.Star<KismetMaterialLibrary>{
	@:from
	public static extern inline function fromValue(v: KismetMaterialLibrary): KismetMaterialLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): KismetMaterialLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}