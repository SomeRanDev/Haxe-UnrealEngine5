// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UImgMediaSource")
@:include("ImgMediaSource.h")
extern class ImgMediaSource extends BaseMediaSource {
	public var IsPathRelativeToProjectRoot: Bool;
	public var FrameRateOverride: FrameRate;
	public var ProxyOverride: FString;
	public var bFillGapsInSequence: Bool;
	public var SequenceProxy: ImgMediaSourceCustomizationSequenceProxy;
	public var SequencePath: DirectoryPath;

	public function SetSequencePath(Path: FString): Void;
	public function SetMipLevelDistance(Distance: cpp.Float32): Void;
	public function RemoveTargetObject(InActor: cpp.Star<Actor>): Void;
	public function RemoveGlobalCamera(InActor: cpp.Star<Actor>): Void;
	public function GetSequencePath(): cpp.Reference<FString>;
	public function GetProxies(OutProxies: cpp.Reference<TArray<FString>>): Void;
	public function AddTargetObject(InActor: cpp.Star<Actor>, Width: cpp.Float32): Void;
	public function AddGlobalCamera(InActor: cpp.Star<Actor>): Void;
}

@:forward(GetSequencePath, GetProxies)
@:nativeGen
abstract ConstImgMediaSource(ImgMediaSource) from ImgMediaSource {
	public extern var IsPathRelativeToProjectRoot(get, never): Bool;
	public inline extern function get_IsPathRelativeToProjectRoot(): Bool return this.IsPathRelativeToProjectRoot;
	public extern var FrameRateOverride(get, never): FrameRate;
	public inline extern function get_FrameRateOverride(): FrameRate return this.FrameRateOverride;
	public extern var ProxyOverride(get, never): FString;
	public inline extern function get_ProxyOverride(): FString return this.ProxyOverride;
	public extern var bFillGapsInSequence(get, never): Bool;
	public inline extern function get_bFillGapsInSequence(): Bool return this.bFillGapsInSequence;
	public extern var SequenceProxy(get, never): ImgMediaSourceCustomizationSequenceProxy;
	public inline extern function get_SequenceProxy(): ImgMediaSourceCustomizationSequenceProxy return this.SequenceProxy;
	public extern var SequencePath(get, never): DirectoryPath;
	public inline extern function get_SequencePath(): DirectoryPath return this.SequencePath;
}