// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBlueprintSetLibrary")
@:include("Kismet/BlueprintSetLibrary.h")
extern class UBlueprintSetLibrary extends UBlueprintFunctionLibrary {

	public function SetSetPropertyByName(Object: cpp.Star<UObject>, PropertyName: FName, Value: TSet<cpp.Int32>): Void;
	public function Set_Union(A: TSet<cpp.Int32>, B: TSet<cpp.Int32>, Result: TSet<cpp.Int32>): Void;
	public function Set_ToArray(A: TSet<cpp.Int32>, Result: TArray<cpp.Int32>): Void;
	public function Set_RemoveItems(TargetSet: TSet<cpp.Int32>, Items: TArray<cpp.Int32>): Void;
	public function Set_Remove(TargetSet: TSet<cpp.Int32>, Item: cpp.Reference<cpp.Int32>): Bool;
	public function Set_Length(TargetSet: TSet<cpp.Int32>): cpp.Int32;
	public function Set_IsNotEmpty(TargetSet: TSet<cpp.Int32>): Bool;
	public function Set_IsEmpty(TargetSet: TSet<cpp.Int32>): Bool;
	public function Set_Intersection(A: TSet<cpp.Int32>, B: TSet<cpp.Int32>, Result: TSet<cpp.Int32>): Void;
	public function Set_Difference(A: TSet<cpp.Int32>, B: TSet<cpp.Int32>, Result: TSet<cpp.Int32>): Void;
	public function Set_Contains(TargetSet: TSet<cpp.Int32>, ItemToFind: cpp.Reference<cpp.Int32>): Bool;
	public function Set_Clear(TargetSet: TSet<cpp.Int32>): Void;
	public function Set_AddItems(TargetSet: TSet<cpp.Int32>, NewItems: TArray<cpp.Int32>): Void;
	public function Set_Add(TargetSet: TSet<cpp.Int32>, NewItem: cpp.Reference<cpp.Int32>): Void;
}
