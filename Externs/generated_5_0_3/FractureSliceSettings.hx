// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFractureSliceSettings")
@:include("FractureToolSlice.h")
@:structAccess
extern class FractureSliceSettings extends FractureToolSettings {
	public var SlicesX: cpp.Int32;
	public var SlicesY: cpp.Int32;
	public var SlicesZ: cpp.Int32;
	public var SliceAngleVariation: cpp.Float32;
	public var SliceOffsetVariation: cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstFractureSliceSettings(FractureSliceSettings) from FractureSliceSettings {
	public extern var SlicesX(get, never): cpp.Int32;
	public inline extern function get_SlicesX(): cpp.Int32 return this.SlicesX;
	public extern var SlicesY(get, never): cpp.Int32;
	public inline extern function get_SlicesY(): cpp.Int32 return this.SlicesY;
	public extern var SlicesZ(get, never): cpp.Int32;
	public inline extern function get_SlicesZ(): cpp.Int32 return this.SlicesZ;
	public extern var SliceAngleVariation(get, never): cpp.Float32;
	public inline extern function get_SliceAngleVariation(): cpp.Float32 return this.SliceAngleVariation;
	public extern var SliceOffsetVariation(get, never): cpp.Float32;
	public inline extern function get_SliceOffsetVariation(): cpp.Float32 return this.SliceOffsetVariation;
}

@:forward
@:nativeGen
@:native("FractureSliceSettings*")
abstract FractureSliceSettingsPtr(cpp.Star<FractureSliceSettings>) from cpp.Star<FractureSliceSettings> to cpp.Star<FractureSliceSettings>{
	@:from
	public static extern inline function fromValue(v: FractureSliceSettings): FractureSliceSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): FractureSliceSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}