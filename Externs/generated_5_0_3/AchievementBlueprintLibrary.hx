// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAchievementBlueprintLibrary")
@:include("AchievementBlueprintLibrary.h")
@:structAccess
extern class AchievementBlueprintLibrary extends BlueprintFunctionLibrary {
	public function GetCachedAchievementProgress(WorldContextObject: cpp.Star<Object>, PlayerController: cpp.Star<PlayerController>, AchievementID: FName, bFoundID: cpp.Reference<Bool>, Progress: cpp.Reference<cpp.Float32>): Void;
	public function GetCachedAchievementDescription(WorldContextObject: cpp.Star<Object>, PlayerController: cpp.Star<PlayerController>, AchievementID: FName, bFoundID: cpp.Reference<Bool>, Title: cpp.Reference<FText>, LockedDescription: cpp.Reference<FText>, UnlockedDescription: cpp.Reference<FText>, bHidden: cpp.Reference<Bool>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAchievementBlueprintLibrary(AchievementBlueprintLibrary) from AchievementBlueprintLibrary {
}

@:forward
@:nativeGen
@:native("AchievementBlueprintLibrary*")
abstract AchievementBlueprintLibraryPtr(cpp.Star<AchievementBlueprintLibrary>) from cpp.Star<AchievementBlueprintLibrary> to cpp.Star<AchievementBlueprintLibrary>{
	@:from
	public static extern inline function fromValue(v: AchievementBlueprintLibrary): AchievementBlueprintLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AchievementBlueprintLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}