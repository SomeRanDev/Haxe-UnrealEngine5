// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDirectionalLightComponent")
@:include("Components/DirectionalLightComponent.h")
extern class UDirectionalLightComponent extends ULightComponent {
	public var ShadowCascadeBiasDistribution: cpp.Float32;
	public var bEnableLightShaftOcclusion: Bool;
	public var OcclusionMaskDarkness: cpp.Float32;
	public var OcclusionDepthRange: cpp.Float32;
	public var LightShaftOverrideDirection: FVector;
	public var WholeSceneDynamicShadowRadius_DEPRECATED: cpp.Float32;
	public var DynamicShadowDistanceMovableLight: cpp.Float32;
	public var DynamicShadowDistanceStationaryLight: cpp.Float32;
	public var DynamicShadowCascades: cpp.Int32;
	public var CascadeDistributionExponent: cpp.Float32;
	public var CascadeTransitionFraction: cpp.Float32;
	public var ShadowDistanceFadeoutFraction: cpp.Float32;
	public var bUseInsetShadowsForMovableObjects: Bool;
	public var FarShadowCascadeCount: cpp.Int32;
	public var FarShadowDistance: cpp.Float32;
	public var DistanceFieldShadowDistance: cpp.Float32;
	public var LightSourceAngle: cpp.Float32;
	public var LightSourceSoftAngle: cpp.Float32;
	public var ShadowSourceAngleFactor: cpp.Float32;
	public var TraceDistance: cpp.Float32;
	public var bUsedAsAtmosphereSunLight_DEPRECATED: Bool;
	public var bAtmosphereSunLight: Bool;
	public var AtmosphereSunLightIndex: cpp.Int32;
	public var AtmosphereSunDiskColorScale: FLinearColor;
	public var bPerPixelAtmosphereTransmittance: Bool;
	public var bCastShadowsOnClouds: Bool;
	public var bCastShadowsOnAtmosphere: Bool;
	public var bCastCloudShadows: Bool;
	public var CloudShadowStrength: cpp.Float32;
	public var CloudShadowOnAtmosphereStrength: cpp.Float32;
	public var CloudShadowOnSurfaceStrength: cpp.Float32;
	public var CloudShadowDepthBias: cpp.Float32;
	public var CloudShadowExtent: cpp.Float32;
	public var CloudShadowMapResolutionScale: cpp.Float32;
	public var CloudShadowRaySampleCountScale: cpp.Float32;
	public var CloudScatteredLuminanceScale: FLinearColor;
	public var LightmassSettings: FLightmassDirectionalLightSettings;
	public var bCastModulatedShadows: Bool;
	public var ModulatedShadowColor: FColor;
	public var ShadowAmount: cpp.Float32;

	public function SetShadowSourceAngleFactor(NewValue: cpp.Float32): Void;
	public function SetShadowDistanceFadeoutFraction(NewValue: cpp.Float32): Void;
	public function SetShadowCascadeBiasDistribution(NewValue: cpp.Float32): Void;
	public function SetShadowAmount(NewValue: cpp.Float32): Void;
	public function SetOcclusionMaskDarkness(NewValue: cpp.Float32): Void;
	public function SetOcclusionDepthRange(NewValue: cpp.Float32): Void;
	public function SetLightSourceSoftAngle(NewValue: cpp.Float32): Void;
	public function SetLightSourceAngle(NewValue: cpp.Float32): Void;
	public function SetLightShaftOverrideDirection(NewValue: FVector): Void;
	public function SetEnableLightShaftOcclusion(bNewValue: Bool): Void;
	public function SetDynamicShadowDistanceStationaryLight(NewValue: cpp.Float32): Void;
	public function SetDynamicShadowDistanceMovableLight(NewValue: cpp.Float32): Void;
	public function SetDynamicShadowCascades(NewValue: cpp.Int32): Void;
	public function SetCascadeTransitionFraction(NewValue: cpp.Float32): Void;
	public function SetCascadeDistributionExponent(NewValue: cpp.Float32): Void;
	public function SetAtmosphereSunLightIndex(NewValue: cpp.Int32): Void;
	public function SetAtmosphereSunLight(bNewValue: Bool): Void;
}
