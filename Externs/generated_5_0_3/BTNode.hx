// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBTNode")
@:include("BehaviorTree/BTNode.h")
@:structAccess
extern class BTNode extends Object {
	public var NodeName: FString;
	public var TreeAsset: cpp.Star<BehaviorTree>;
	public var ParentNode: cpp.Star<BTCompositeNode>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstBTNode(BTNode) from BTNode {
	public extern var NodeName(get, never): FString;
	public inline extern function get_NodeName(): FString return this.NodeName;
	public extern var TreeAsset(get, never): cpp.Star<BehaviorTree.ConstBehaviorTree>;
	public inline extern function get_TreeAsset(): cpp.Star<BehaviorTree.ConstBehaviorTree> return this.TreeAsset;
	public extern var ParentNode(get, never): cpp.Star<BTCompositeNode.ConstBTCompositeNode>;
	public inline extern function get_ParentNode(): cpp.Star<BTCompositeNode.ConstBTCompositeNode> return this.ParentNode;
}

@:forward
@:nativeGen
@:native("BTNode*")
abstract BTNodePtr(cpp.Star<BTNode>) from cpp.Star<BTNode> to cpp.Star<BTNode>{
	@:from
	public static extern inline function fromValue(v: BTNode): BTNodePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BTNode {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}