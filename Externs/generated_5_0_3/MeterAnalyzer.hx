// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMeterAnalyzer")
@:include("Meter.h")
extern class MeterAnalyzer extends AudioAnalyzer {
	public var Settings: cpp.Star<MeterSettings>;
	public var OnOverallMeterResults: HaxeMulticastSparseDelegateProperty<(cpp.Reference<TArray<MeterResults>>) -> Void>;
	public var OnPerChannelMeterResults: HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<TArray<MeterResults>>) -> Void>;
	public var OnLatestOverallMeterResults: HaxeMulticastSparseDelegateProperty<(cpp.Reference<MeterResults>) -> Void>;
	public var OnLatestPerChannelMeterResults: HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<MeterResults>) -> Void>;
}

@:forward()
@:nativeGen
abstract ConstMeterAnalyzer(MeterAnalyzer) from MeterAnalyzer {
	public extern var Settings(get, never): cpp.Star<MeterSettings.ConstMeterSettings>;
	public inline extern function get_Settings(): cpp.Star<MeterSettings.ConstMeterSettings> return this.Settings;
	public extern var OnOverallMeterResults(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Reference<TArray<MeterResults>>) -> Void>;
	public inline extern function get_OnOverallMeterResults(): HaxeMulticastSparseDelegateProperty<(cpp.Reference<TArray<MeterResults>>) -> Void> return this.OnOverallMeterResults;
	public extern var OnPerChannelMeterResults(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<TArray<MeterResults>>) -> Void>;
	public inline extern function get_OnPerChannelMeterResults(): HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<TArray<MeterResults>>) -> Void> return this.OnPerChannelMeterResults;
	public extern var OnLatestOverallMeterResults(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Reference<MeterResults>) -> Void>;
	public inline extern function get_OnLatestOverallMeterResults(): HaxeMulticastSparseDelegateProperty<(cpp.Reference<MeterResults>) -> Void> return this.OnLatestOverallMeterResults;
	public extern var OnLatestPerChannelMeterResults(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<MeterResults>) -> Void>;
	public inline extern function get_OnLatestPerChannelMeterResults(): HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<MeterResults>) -> Void> return this.OnLatestPerChannelMeterResults;
}