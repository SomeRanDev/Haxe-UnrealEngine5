// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPaperFlipbookComponent")
@:include("PaperFlipbookComponent.h")
extern class PaperFlipComp extends MeshCompoComp {
	public var SourceFlipbook: cpp.Star<PaperFlipbook>;
	public var Material_DEPRECATED: cpp.Star<MaterialInterface>;
	public var PlayRate: cpp.Float32;
	public var bLooping: Bool;
	public var bReversePlayback: Bool;
	public var bPlaying: Bool;
	public var AccumulatedTime: cpp.Float32;
	public var CachedFrameIndex: cpp.Int32;
	public var SpriteColor: FLinearColor;
	public var CachedBodySetup: cpp.Star<BodySetup>;
	public var OnFinishedPlaying: HaxeMulticastSparseDelegateProperty<() -> Void>;

	public function Stop(): Void;
	public function SetSpriteColor(NewColor: FLinearColor): Void;
	public function SetPlayRate(NewRate: cpp.Float32): Void;
	public function SetPlaybackPositionInFrames(NewFramePosition: cpp.Int32, bFireEvents: Bool): Void;
	public function SetPlaybackPosition(NewPosition: cpp.Float32, bFireEvents: Bool): Void;
	public function SetNewTime(NewTime: cpp.Float32): Void;
	public function SetLooping(bNewLooping: Bool): Void;
	public function SetFlipbook(NewFlipbook: cpp.Star<PaperFlipbook>): cpp.Reference<Bool>;
	public function ReverseFromEnd(): Void;
	public function Reverse(): Void;
	public function PlayFromStart(): Void;
	public function Play(): Void;
	public function OnRep_SourceFlipbook(OldFlipbook: cpp.Star<PaperFlipbook>): Void;
	public function IsReversing(): cpp.Reference<Bool>;
	public function IsPlaying(): cpp.Reference<Bool>;
	public function IsLooping(): cpp.Reference<Bool>;
	public function GetSpriteColor(): cpp.Reference<FLinearColor>;
	public function GetPlayRate(): cpp.Reference<cpp.Float32>;
	public function GetPlaybackPositionInFrames(): cpp.Reference<cpp.Int32>;
	public function GetPlaybackPosition(): cpp.Reference<cpp.Float32>;
	public function GetFlipbookLengthInFrames(): cpp.Reference<cpp.Int32>;
	public function GetFlipbookLength(): cpp.Reference<cpp.Float32>;
	public function GetFlipbookFramerate(): cpp.Reference<cpp.Float32>;
	public function GetFlipbook(): cpp.Reference<cpp.Star<PaperFlipbook>>;
}

@:forward(
	IsReversing, IsPlaying, IsLooping, GetSpriteColor, GetPlayRate,
	GetPlaybackPositionInFrames, GetPlaybackPosition, GetFlipbookLengthInFrames, GetFlipbookLength, GetFlipbookFramerate
)
abstract ConstPaperFlipComp(PaperFlipComp) from PaperFlipComp {
}