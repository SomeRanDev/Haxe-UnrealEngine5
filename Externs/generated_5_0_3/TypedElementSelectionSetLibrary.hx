// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTypedElementSelectionSetLibrary")
@:include("Elements/Framework/TypedElementSelectionSetLibrary.h")
@:structAccess
extern class TypedElementSelectionSetLibrary extends Object {
	public function SetSelectionFromList(SelectionSet: cpp.Star<TypedElementSelectionSet>, ElementList: ScriptTypedElementListProxy, SelectionOptions: TypedElementSelectionOptions): Bool;
	public function SelectElementsFromList(SelectionSet: cpp.Star<TypedElementSelectionSet>, ElementList: ScriptTypedElementListProxy, SelectionOptions: TypedElementSelectionOptions): Bool;
	public function GetNormalizedSelection(SelectionSet: cpp.Star<TypedElementSelectionSet>, NormalizationOptions: TypedElementSelectionNormalizationOptions): ScriptTypedElementListProxy;
	public function GetNormalizedElementList(SelectionSet: cpp.Star<TypedElementSelectionSet>, ElementList: ScriptTypedElementListProxy, NormalizationOptions: TypedElementSelectionNormalizationOptions): ScriptTypedElementListProxy;
	public function DeselectElementsFromList(SelectionSet: cpp.Star<TypedElementSelectionSet>, ElementList: ScriptTypedElementListProxy, SelectionOptions: TypedElementSelectionOptions): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstTypedElementSelectionSetLibrary(TypedElementSelectionSetLibrary) from TypedElementSelectionSetLibrary {
}

@:forward
@:nativeGen
@:native("TypedElementSelectionSetLibrary*")
abstract TypedElementSelectionSetLibraryPtr(cpp.Star<TypedElementSelectionSetLibrary>) from cpp.Star<TypedElementSelectionSetLibrary> to cpp.Star<TypedElementSelectionSetLibrary>{
	@:from
	public static extern inline function fromValue(v: TypedElementSelectionSetLibrary): TypedElementSelectionSetLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TypedElementSelectionSetLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}