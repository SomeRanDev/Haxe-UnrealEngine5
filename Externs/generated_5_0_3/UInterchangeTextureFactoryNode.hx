// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeTextureFactoryNode")
@:include("InterchangeTextureFactoryNode.h")
extern class UInterchangeTextureFactoryNode extends UInterchangeBaseNode {

	public function SetCustomVirtualTextureStreaming(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustomTranslatedTextureNodeUid(AttributeValue: FString): Bool;
	public function SetCustomSRGB(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustomPowerOfTwoMode(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomPaddingColor(AttributeValue: FColor, bAddApplyDelegate: Bool): Bool;
	public function SetCustomMipLoadOptions(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomMipGenSettings(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomMaxTextureSize(AttributeValue: cpp.Reference<cpp.Int32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomLossyCompressionAmount(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomLODGroup(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomLODBias(AttributeValue: cpp.Reference<cpp.Int32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomFilter(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomDownscaleOptions(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomDownscale(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomDeferCompression(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustomCompressionSettings(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomCompressionQuality(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomCompressionNoAlpha(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustomCompositeTextureMode(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomCompositePower(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomChromaKeyThreshold(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomChromaKeyColor(AttributeValue: FColor, bAddApplyDelegate: Bool): Bool;
	public function SetCustombUseLegacyGamma(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustombPreserveBorder(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustombFlipGreenChannel(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustombDoScaleMipsForAlphaCoverage(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustombDitherMipMapAlpha(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustombChromaKeyTexture(AttributeValue: Bool, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAlphaCoverageThresholds(AttributeValue: FVector4, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAdjustVibrance(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAdjustSaturation(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAdjustRGBCurve(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAdjustMinAlpha(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAdjustMaxAlpha(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAdjustHue(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAdjustBrightnessCurve(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAdjustBrightness(AttributeValue: cpp.Reference<cpp.Float32>, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAddressY(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function SetCustomAddressX(AttributeValue: cpp.UInt8, bAddApplyDelegate: Bool): Bool;
	public function InitializeTextureNode(UniqueID: FString, DisplayLabel: FString, InAssetClass: FString, InAssetName: FString): Void;
	public function GetObjectClass(): cpp.Star<UClass>;
	public function GetCustomVirtualTextureStreaming(AttributeValue: Bool): Bool;
	public function GetCustomTranslatedTextureNodeUid(AttributeValue: cpp.Reference<FString>): Bool;
	public function GetCustomSRGB(AttributeValue: Bool): Bool;
	public function GetCustomPowerOfTwoMode(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomPaddingColor(AttributeValue: FColor): Bool;
	public function GetCustomMipLoadOptions(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomMipGenSettings(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomMaxTextureSize(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomLossyCompressionAmount(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomLODGroup(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomLODBias(AttributeValue: cpp.Reference<cpp.Int32>): Bool;
	public function GetCustomFilter(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomDownscaleOptions(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomDownscale(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomDeferCompression(AttributeValue: Bool): Bool;
	public function GetCustomCompressionSettings(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomCompressionQuality(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomCompressionNoAlpha(AttributeValue: Bool): Bool;
	public function GetCustomCompositeTextureMode(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomCompositePower(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomChromaKeyThreshold(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomChromaKeyColor(AttributeValue: FColor): Bool;
	public function GetCustombUseLegacyGamma(AttributeValue: Bool): Bool;
	public function GetCustombPreserveBorder(AttributeValue: Bool): Bool;
	public function GetCustombFlipGreenChannel(AttributeValue: Bool): Bool;
	public function GetCustombDoScaleMipsForAlphaCoverage(AttributeValue: Bool): Bool;
	public function GetCustombDitherMipMapAlpha(AttributeValue: Bool): Bool;
	public function GetCustombChromaKeyTexture(AttributeValue: Bool): Bool;
	public function GetCustomAlphaCoverageThresholds(AttributeValue: FVector4): Bool;
	public function GetCustomAdjustVibrance(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomAdjustSaturation(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomAdjustRGBCurve(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomAdjustMinAlpha(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomAdjustMaxAlpha(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomAdjustHue(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomAdjustBrightnessCurve(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomAdjustBrightness(AttributeValue: cpp.Reference<cpp.Float32>): Bool;
	public function GetCustomAddressY(AttributeValue: cpp.UInt8): Bool;
	public function GetCustomAddressX(AttributeValue: cpp.UInt8): Bool;
}
