// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGizmoBaseObject")
@:include("EditorGizmos/GizmoBaseObject.h")
@:structAccess
extern class GizmoBaseObject extends Object {
	public var LocalToWorldTransform: Transform;
	public var Material: cpp.Star<MaterialInterface>;
	public var CurrentMaterial: cpp.Star<MaterialInterface>;
	public var GizmoScale: cpp.Float32;
	public var PixelHitDistanceThreshold: cpp.Float32;

	public function SetWorldLocalState(bWorldIn: Bool): Void;
	public function SetVisibility(bVisibleIn: Bool): Void;
	public function SetMaterial(InMaterial: cpp.Star<MaterialInterface>): Void;
	public function SetLocalToWorldTransform(LocalToWorldTransformIn: Transform): Void;
	public function SetInteractingState(bInteractingIn: Bool): Void;
	public function SetHoverState(bHoveringIn: Bool): Void;
	public function SetGizmoScale(InGizmoScale: cpp.Float32): Void;
	public function SetCurrentMaterial(InCurrentMaterial: cpp.Star<MaterialInterface>): Void;
	public function GetWorldLocalState(): Bool;
	public function GetVisibility(): Bool;
	public function GetMaterial(): cpp.Star<MaterialInterface>;
	public function GetLocalToWorldTransform(): Transform;
	public function GetInteractingState(): Bool;
	public function GetHoverState(): Bool;
	public function GetGizmoScale(): cpp.Float32;
	public function GetCurrentMaterial(): cpp.Star<MaterialInterface>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGizmoBaseObject(GizmoBaseObject) from GizmoBaseObject {
	public extern var LocalToWorldTransform(get, never): Transform;
	public inline extern function get_LocalToWorldTransform(): Transform return this.LocalToWorldTransform;
	public extern var Material(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_Material(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.Material;
	public extern var CurrentMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_CurrentMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.CurrentMaterial;
	public extern var GizmoScale(get, never): cpp.Float32;
	public inline extern function get_GizmoScale(): cpp.Float32 return this.GizmoScale;
	public extern var PixelHitDistanceThreshold(get, never): cpp.Float32;
	public inline extern function get_PixelHitDistanceThreshold(): cpp.Float32 return this.PixelHitDistanceThreshold;
}

@:forward
@:nativeGen
@:native("GizmoBaseObject*")
abstract GizmoBaseObjectPtr(cpp.Star<GizmoBaseObject>) from cpp.Star<GizmoBaseObject> to cpp.Star<GizmoBaseObject>{
	@:from
	public static extern inline function fromValue(v: GizmoBaseObject): GizmoBaseObjectPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GizmoBaseObject {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}