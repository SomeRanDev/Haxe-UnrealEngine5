// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeProjectSettings")
@:include("InterchangeProjectSettings.h")
@:structAccess
extern class InterchangeProjectSettings extends DeveloperSettings {
	public var PipelineStacks: TMap<FName, InterchangePipelineStack>;
	public var DefaultPipelineStack: FName;
	public var PipelineConfigurationDialogClass: TSoftClassPtr<Class>;
	public var bShowPipelineStacksConfigurationDialog: Bool;
	public var bUseInterchangeWhenImportingIntoLevel: Bool;
	public var DefaultScenePipelineStack: FName;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstInterchangeProjectSettings(InterchangeProjectSettings) from InterchangeProjectSettings {
	public extern var PipelineStacks(get, never): TMap<FName, InterchangePipelineStack>;
	public inline extern function get_PipelineStacks(): TMap<FName, InterchangePipelineStack> return this.PipelineStacks;
	public extern var DefaultPipelineStack(get, never): FName;
	public inline extern function get_DefaultPipelineStack(): FName return this.DefaultPipelineStack;
	public extern var PipelineConfigurationDialogClass(get, never): TSoftClassPtr<Class.ConstClass>;
	public inline extern function get_PipelineConfigurationDialogClass(): TSoftClassPtr<Class.ConstClass> return this.PipelineConfigurationDialogClass;
	public extern var bShowPipelineStacksConfigurationDialog(get, never): Bool;
	public inline extern function get_bShowPipelineStacksConfigurationDialog(): Bool return this.bShowPipelineStacksConfigurationDialog;
	public extern var bUseInterchangeWhenImportingIntoLevel(get, never): Bool;
	public inline extern function get_bUseInterchangeWhenImportingIntoLevel(): Bool return this.bUseInterchangeWhenImportingIntoLevel;
	public extern var DefaultScenePipelineStack(get, never): FName;
	public inline extern function get_DefaultScenePipelineStack(): FName return this.DefaultScenePipelineStack;
}