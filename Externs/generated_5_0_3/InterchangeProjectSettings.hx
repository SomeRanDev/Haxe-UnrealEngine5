// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeProjectSettings")
@:include("InterchangeProjectSettings.h")
@:structAccess
extern class InterchangeProjectSettings extends DeveloperSettings {
	public var PipelineStacks: TMap<FName, InterchangePipelineStack>;
	public var DefaultPipelineStack: FName;
	public var bUseInterchangeWhenImportingIntoLevel: Bool;
	public var DefaultScenePipelineStack: FName;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstInterchangeProjectSettings(InterchangeProjectSettings) from InterchangeProjectSettings {
	public extern var PipelineStacks(get, never): TMap<FName, InterchangePipelineStack>;
	public inline extern function get_PipelineStacks(): TMap<FName, InterchangePipelineStack> return this.PipelineStacks;
	public extern var DefaultPipelineStack(get, never): FName;
	public inline extern function get_DefaultPipelineStack(): FName return this.DefaultPipelineStack;
	public extern var bUseInterchangeWhenImportingIntoLevel(get, never): Bool;
	public inline extern function get_bUseInterchangeWhenImportingIntoLevel(): Bool return this.bUseInterchangeWhenImportingIntoLevel;
	public extern var DefaultScenePipelineStack(get, never): FName;
	public inline extern function get_DefaultScenePipelineStack(): FName return this.DefaultScenePipelineStack;
}

@:forward
@:nativeGen
@:native("InterchangeProjectSettings*")
abstract InterchangeProjectSettingsPtr(cpp.Star<InterchangeProjectSettings>) from cpp.Star<InterchangeProjectSettings> to cpp.Star<InterchangeProjectSettings>{
	@:from
	public static extern inline function fromValue(v: InterchangeProjectSettings): InterchangeProjectSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeProjectSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}