// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ABaseTransformGizmo")
@:include("VIBaseTransformGizmo.h")
@:structAccess
extern class BaseTransformGizmo extends Actor {
	public var SceneComponent: cpp.Star<SceneComp>;
	public var AllHandleGroups: TArray<cpp.Star<GizmoHandleGroup>>;
	public var WorldInteraction: cpp.Star<ViewportWorldInteraction>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstBaseTransformGizmo(BaseTransformGizmo) from BaseTransformGizmo {
	public extern var SceneComponent(get, never): cpp.Star<SceneComp.ConstSceneComp>;
	public inline extern function get_SceneComponent(): cpp.Star<SceneComp.ConstSceneComp> return this.SceneComponent;
	public extern var AllHandleGroups(get, never): TArray<cpp.Star<GizmoHandleGroup.ConstGizmoHandleGroup>>;
	public inline extern function get_AllHandleGroups(): TArray<cpp.Star<GizmoHandleGroup.ConstGizmoHandleGroup>> return this.AllHandleGroups;
	public extern var WorldInteraction(get, never): cpp.Star<ViewportWorldInteraction.ConstViewportWorldInteraction>;
	public inline extern function get_WorldInteraction(): cpp.Star<ViewportWorldInteraction.ConstViewportWorldInteraction> return this.WorldInteraction;
}

@:forward
@:nativeGen
@:native("BaseTransformGizmo*")
abstract BaseTransformGizmoPtr(cpp.Star<BaseTransformGizmo>) from cpp.Star<BaseTransformGizmo> to cpp.Star<BaseTransformGizmo>{
	@:from
	public static extern inline function fromValue(v: BaseTransformGizmo): BaseTransformGizmoPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BaseTransformGizmo {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}