// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("FAnimNode_AnimDynamics")
@:include("BoneControllers/AnimNode_AnimDynamics.h")
extern class FAnimNode_AnimDynamics extends FAnimNode_SkeletalControlBase {
	public var LinearDampingOverride: cpp.Float32;
	public var AngularDampingOverride: cpp.Float32;
	public var RelativeSpaceBone: FBoneReference;
	public var BoundBone: FBoneReference;
	public var ChainEnd: FBoneReference;
	public var BoxExtents: FVector;
	public var LocalJointOffset: FVector;
	public var GravityScale: cpp.Float32;
	public var GravityOverride: FVector;
	public var LinearSpringConstant: cpp.Float32;
	public var AngularSpringConstant: cpp.Float32;
	public var WindScale: cpp.Float32;
	public var ComponentLinearAccScale: FVector;
	public var ComponentLinearVelScale: FVector;
	public var ComponentAppliedLinearAccClamp: FVector;
	public var AngularBiasOverride: cpp.Float32;
	public var NumSolverIterationsPreUpdate: cpp.Int32;
	public var NumSolverIterationsPostUpdate: cpp.Int32;
	public var ConstraintSetup: FAnimPhysConstraintSetup;
	public var SphericalLimits: TArray<FAnimPhysSphericalLimit>;
	public var SphereCollisionRadius: cpp.Float32;
	public var ExternalForce: FVector;
	public var PlanarLimits: TArray<FAnimPhysPlanarLimit>;
	public var CollisionType: AnimPhysCollisionType;
	public var SimulationSpace: AnimPhysSimSpaceType;
	public var bUseSphericalLimits: Bool;
	public var bUsePlanarLimit: Bool;
	public var bDoUpdate: Bool;
	public var bDoEval: Bool;
	public var bOverrideLinearDamping: Bool;
	public var bOverrideAngularBias: Bool;
	public var bOverrideAngularDamping: Bool;
	public var bEnableWind: Bool;
	public var bUseGravityOverride: Bool;
	public var bGravityOverrideInSimSpace: Bool;
	public var bLinearSpring: Bool;
	public var bAngularSpring: Bool;
	public var bChain: Bool;
	public var RetargetingSettings: FRotationRetargetingInfo;
}