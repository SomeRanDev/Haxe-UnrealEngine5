// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UParticleLODLevel")
@:include("Particles/ParticleLODLevel.h")
extern class ParticleLODLevel extends Object {
	public var Level: cpp.Int32;
	public var bEnabled: Bool;
	public var RequiredModule: cpp.Star<ParticleModuleRequired>;
	public var Modules: TArray<cpp.Star<ParticleModule>>;
	public var TypeDataModule: cpp.Star<ParticleModuleTypeDataBase>;
	public var SpawnModule: cpp.Star<ParticleModuleSpawn>;
	public var EventGenerator: cpp.Star<ParticleModuleEventGenerator>;
	public var SpawningModules: TArray<cpp.Star<ParticleModuleSpawnBase>>;
	public var SpawnModules: TArray<cpp.Star<ParticleModule>>;
	public var UpdateModules: TArray<cpp.Star<ParticleModule>>;
	public var OrbitModules: TArray<cpp.Star<ParticleModuleOrbit>>;
	public var EventReceiverModules: TArray<cpp.Star<ParticleModuleEventReceiverBase>>;
	public var ConvertedModules: Bool;
	public var PeakActiveParticles: cpp.Int32;
}

@:forward()
@:nativeGen
abstract ConstParticleLODLevel(ParticleLODLevel) from ParticleLODLevel {
	public extern var Level(get, never): cpp.Int32;
	public inline extern function get_Level(): cpp.Int32 return this.Level;
	public extern var bEnabled(get, never): Bool;
	public inline extern function get_bEnabled(): Bool return this.bEnabled;
	public extern var RequiredModule(get, never): cpp.Star<ParticleModuleRequired.ConstParticleModuleRequired>;
	public inline extern function get_RequiredModule(): cpp.Star<ParticleModuleRequired.ConstParticleModuleRequired> return this.RequiredModule;
	public extern var Modules(get, never): TArray<cpp.Star<ParticleModule.ConstParticleModule>>;
	public inline extern function get_Modules(): TArray<cpp.Star<ParticleModule.ConstParticleModule>> return this.Modules;
	public extern var TypeDataModule(get, never): cpp.Star<ParticleModuleTypeDataBase.ConstParticleModuleTypeDataBase>;
	public inline extern function get_TypeDataModule(): cpp.Star<ParticleModuleTypeDataBase.ConstParticleModuleTypeDataBase> return this.TypeDataModule;
	public extern var SpawnModule(get, never): cpp.Star<ParticleModuleSpawn.ConstParticleModuleSpawn>;
	public inline extern function get_SpawnModule(): cpp.Star<ParticleModuleSpawn.ConstParticleModuleSpawn> return this.SpawnModule;
	public extern var EventGenerator(get, never): cpp.Star<ParticleModuleEventGenerator.ConstParticleModuleEventGenerator>;
	public inline extern function get_EventGenerator(): cpp.Star<ParticleModuleEventGenerator.ConstParticleModuleEventGenerator> return this.EventGenerator;
	public extern var SpawningModules(get, never): TArray<cpp.Star<ParticleModuleSpawnBase.ConstParticleModuleSpawnBase>>;
	public inline extern function get_SpawningModules(): TArray<cpp.Star<ParticleModuleSpawnBase.ConstParticleModuleSpawnBase>> return this.SpawningModules;
	public extern var SpawnModules(get, never): TArray<cpp.Star<ParticleModule.ConstParticleModule>>;
	public inline extern function get_SpawnModules(): TArray<cpp.Star<ParticleModule.ConstParticleModule>> return this.SpawnModules;
	public extern var UpdateModules(get, never): TArray<cpp.Star<ParticleModule.ConstParticleModule>>;
	public inline extern function get_UpdateModules(): TArray<cpp.Star<ParticleModule.ConstParticleModule>> return this.UpdateModules;
	public extern var OrbitModules(get, never): TArray<cpp.Star<ParticleModuleOrbit.ConstParticleModuleOrbit>>;
	public inline extern function get_OrbitModules(): TArray<cpp.Star<ParticleModuleOrbit.ConstParticleModuleOrbit>> return this.OrbitModules;
	public extern var EventReceiverModules(get, never): TArray<cpp.Star<ParticleModuleEventReceiverBase.ConstParticleModuleEventReceiverBase>>;
	public inline extern function get_EventReceiverModules(): TArray<cpp.Star<ParticleModuleEventReceiverBase.ConstParticleModuleEventReceiverBase>> return this.EventReceiverModules;
	public extern var ConvertedModules(get, never): Bool;
	public inline extern function get_ConvertedModules(): Bool return this.ConvertedModules;
	public extern var PeakActiveParticles(get, never): cpp.Int32;
	public inline extern function get_PeakActiveParticles(): cpp.Int32 return this.PeakActiveParticles;
}