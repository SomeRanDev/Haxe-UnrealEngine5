// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWidgetLayoutLibrary")
@:include("Blueprint/WidgetLayoutLibrary.h")
extern class UWidgetLayoutLibrary extends UBlueprintFunctionLibrary {

	public function SlotAsWrapBoxSlot(Widget: cpp.Star<UWidget>): cpp.Star<UWrapBoxSlot>;
	public function SlotAsWidgetSwitcherSlot(Widget: cpp.Star<UWidget>): cpp.Star<UWidgetSwitcherSlot>;
	public function SlotAsVerticalBoxSlot(Widget: cpp.Star<UWidget>): cpp.Star<UVerticalBoxSlot>;
	public function SlotAsUniformGridSlot(Widget: cpp.Star<UWidget>): cpp.Star<UUniformGridSlot>;
	public function SlotAsSizeBoxSlot(Widget: cpp.Star<UWidget>): cpp.Star<USizeBoxSlot>;
	public function SlotAsScrollBoxSlot(Widget: cpp.Star<UWidget>): cpp.Star<UScrollBoxSlot>;
	public function SlotAsScaleBoxSlot(Widget: cpp.Star<UWidget>): cpp.Star<UScaleBoxSlot>;
	public function SlotAsSafeBoxSlot(Widget: cpp.Star<UWidget>): cpp.Star<USafeZoneSlot>;
	public function SlotAsOverlaySlot(Widget: cpp.Star<UWidget>): cpp.Star<UOverlaySlot>;
	public function SlotAsHorizontalBoxSlot(Widget: cpp.Star<UWidget>): cpp.Star<UHorizontalBoxSlot>;
	public function SlotAsGridSlot(Widget: cpp.Star<UWidget>): cpp.Star<UGridSlot>;
	public function SlotAsCanvasSlot(Widget: cpp.Star<UWidget>): cpp.Star<UCanvasPanelSlot>;
	public function SlotAsBorderSlot(Widget: cpp.Star<UWidget>): cpp.Star<UBorderSlot>;
	public function RemoveAllWidgets(WorldContextObject: cpp.Star<UObject>): Void;
	public function ProjectWorldLocationToWidgetPosition(PlayerController: cpp.Star<APlayerController>, WorldLocation: FVector, ScreenPosition: FVector2D, bPlayerViewportRelative: Bool): Bool;
	public function GetViewportWidgetGeometry(WorldContextObject: cpp.Star<UObject>): FGeometry;
	public function GetViewportSize(WorldContextObject: cpp.Star<UObject>): FVector2D;
	public function GetViewportScale(WorldContextObject: cpp.Star<UObject>): cpp.Float32;
	public function GetPlayerScreenWidgetGeometry(PlayerController: cpp.Star<APlayerController>): FGeometry;
	public function GetMousePositionScaledByDPI(Player: cpp.Star<APlayerController>, LocationX: cpp.Reference<cpp.Float32>, LocationY: cpp.Reference<cpp.Float32>): Bool;
	public function GetMousePositionOnViewport(WorldContextObject: cpp.Star<UObject>): FVector2D;
	public function GetMousePositionOnPlatform(): FVector2D;
}
