// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTypedElementSelectionSet")
@:include("Elements/Framework/TypedElementSelectionSet.h")
@:structAccess
extern class TypedElementSelectionSet extends Object {
	public var OnPreSelectionChange: HaxeMulticastSparseDelegateProperty<(cpp.Star<TypedElementSelectionSet.ConstTypedElementSelectionSet>) -> Void>;
	public var OnSelectionChange: HaxeMulticastSparseDelegateProperty<(cpp.Star<TypedElementSelectionSet.ConstTypedElementSelectionSet>) -> Void>;

	public function SetSelection(InElementHandles: cpp.Reference<TArray<ScriptTypedElementHandle>>, InSelectionOptions: TypedElementSelectionOptions): cpp.Reference<Bool>;
	public function SelectElements(InElementHandles: cpp.Reference<TArray<ScriptTypedElementHandle>>, InSelectionOptions: TypedElementSelectionOptions): cpp.Reference<Bool>;
	public function SelectElement(InElementHandle: cpp.Reference<ScriptTypedElementHandle>, InSelectionOptions: TypedElementSelectionOptions): cpp.Reference<Bool>;
	public function RestoreSelectionState(InSelectionState: cpp.Reference<TypedElementSelectionSetState>): Void;
	public function OnPreChangeDynamic__DelegateSignature(SelectionSet: cpp.Star<TypedElementSelectionSet.ConstTypedElementSelectionSet>): Void;
	public function OnChangeDynamic__DelegateSignature(SelectionSet: cpp.Star<TypedElementSelectionSet.ConstTypedElementSelectionSet>): Void;
	public function K2_GetSelectedElementHandles(InBaseInterfaceType: TSubclassOf<Interface.ConstInterface>): cpp.Reference<TArray<ScriptTypedElementHandle>>;
	public function IsElementSelected(InElementHandle: cpp.Reference<ScriptTypedElementHandle>, InSelectionOptions: TypedElementIsSelectedOptions): cpp.Reference<Bool>;
	public function HasSelectedObjects(InRequiredClass: cpp.Star<Class>): cpp.Reference<Bool>;
	public function HasSelectedElements(InBaseInterfaceType: TSubclassOf<Interface.ConstInterface>): cpp.Reference<Bool>;
	public function GetTopSelectedObject(InRequiredClass: cpp.Star<Class>): cpp.Reference<cpp.Star<Object>>;
	public function GetSelectionElement(InElementHandle: cpp.Reference<ScriptTypedElementHandle>, InSelectionMethod: ETypedElementSelectionMethod): cpp.Reference<ScriptTypedElementHandle>;
	public function GetSelectedObjects(InRequiredClass: cpp.Star<Class>): cpp.Reference<TArray<cpp.Star<Object>>>;
	public function GetNumSelectedElements(): cpp.Reference<cpp.Int32>;
	public function GetCurrentSelectionState(): cpp.Reference<TypedElementSelectionSetState>;
	public function GetBottomSelectedObject(InRequiredClass: cpp.Star<Class>): cpp.Reference<cpp.Star<Object>>;
	public function DeselectElements(InElementHandles: cpp.Reference<TArray<ScriptTypedElementHandle>>, InSelectionOptions: TypedElementSelectionOptions): cpp.Reference<Bool>;
	public function DeselectElement(InElementHandle: cpp.Reference<ScriptTypedElementHandle>, InSelectionOptions: TypedElementSelectionOptions): cpp.Reference<Bool>;
	public function CountSelectedObjects(InRequiredClass: cpp.Star<Class>): cpp.Reference<cpp.Int32>;
	public function CountSelectedElements(InBaseInterfaceType: TSubclassOf<Interface.ConstInterface>): cpp.Reference<cpp.Int32>;
	public function ClearSelection(InSelectionOptions: TypedElementSelectionOptions): cpp.Reference<Bool>;
	public function CanSelectElement(InElementHandle: cpp.Reference<ScriptTypedElementHandle>, InSelectionOptions: TypedElementSelectionOptions): cpp.Reference<Bool>;
	public function CanDeselectElement(InElementHandle: cpp.Reference<ScriptTypedElementHandle>, InSelectionOptions: TypedElementSelectionOptions): cpp.Reference<Bool>;
	public function AllowSelectionModifiers(InElementHandle: cpp.Reference<ScriptTypedElementHandle>): cpp.Reference<Bool>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	K2_GetSelectedElementHandles, IsElementSelected, HasSelectedObjects, HasSelectedElements, GetTopSelectedObject,
	GetSelectionElement, GetSelectedObjects, GetNumSelectedElements, GetCurrentSelectionState, GetBottomSelectedObject,
	CountSelectedObjects, CountSelectedElements, CanSelectElement, CanDeselectElement, AllowSelectionModifiers
)
@:nativeGen
abstract ConstTypedElementSelectionSet(TypedElementSelectionSet) from TypedElementSelectionSet {
	public extern var OnPreSelectionChange(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<TypedElementSelectionSet.ConstTypedElementSelectionSet>) -> Void>;
	public inline extern function get_OnPreSelectionChange(): HaxeMulticastSparseDelegateProperty<(cpp.Star<TypedElementSelectionSet.ConstTypedElementSelectionSet>) -> Void> return this.OnPreSelectionChange;
	public extern var OnSelectionChange(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<TypedElementSelectionSet.ConstTypedElementSelectionSet>) -> Void>;
	public inline extern function get_OnSelectionChange(): HaxeMulticastSparseDelegateProperty<(cpp.Star<TypedElementSelectionSet.ConstTypedElementSelectionSet>) -> Void> return this.OnSelectionChange;
}

@:forward
@:nativeGen
@:native("TypedElementSelectionSet*")
abstract TypedElementSelectionSetPtr(cpp.Star<TypedElementSelectionSet>) from cpp.Star<TypedElementSelectionSet> to cpp.Star<TypedElementSelectionSet>{
	@:from
	public static extern inline function fromValue(v: TypedElementSelectionSet): TypedElementSelectionSetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TypedElementSelectionSet {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}