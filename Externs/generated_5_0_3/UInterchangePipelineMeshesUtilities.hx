// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangePipelineMeshesUtilities")
@:include("InterchangePipelineMeshesUtilities.h")
extern class UInterchangePipelineMeshesUtilities extends UObject {

	public function IsValidMeshInstanceUid(MeshInstanceUid: FString): Bool;
	public function IsValidMeshGeometryUid(MeshGeometryUid: FString): Bool;
	public function GetMeshInstanceSkeletonRootUid(MeshInstanceUid: FString): FString;
	public function GetMeshInstanceByUid(MeshInstanceUid: FString): FInterchangeMeshInstance;
	public function GetMeshGeometrySkeletonRootUid(MeshGeometryUid: FString): FString;
	public function GetMeshGeometryByUid(MeshGeometryUid: FString): FInterchangeMeshGeometry;
	public function GetAllStaticMeshInstance(MeshInstanceUids: TArray<FString>): Void;
	public function GetAllStaticMeshGeometry(MeshGeometryUids: TArray<FString>): Void;
	public function GetAllSkinnedMeshInstance(MeshInstanceUids: TArray<FString>): Void;
	public function GetAllSkinnedMeshGeometry(MeshGeometryUids: TArray<FString>): Void;
	public function GetAllMeshInstanceUidsUsingMeshGeometryUid(MeshGeometryUid: FString, MeshInstanceUids: TArray<FString>): Void;
	public function GetAllMeshInstanceUids(MeshInstanceUids: TArray<FString>): Void;
	public function GetAllMeshGeometryNotInstanced(MeshGeometryUids: TArray<FString>): Void;
	public function GetAllMeshGeometry(MeshGeometryUids: TArray<FString>): Void;
	public function CreateInterchangePipelineMeshesUtilities(BaseNodeContainer: cpp.Star<UInterchangeBaseNodeContainer>): cpp.Star<UInterchangePipelineMeshesUtilities>;
}
