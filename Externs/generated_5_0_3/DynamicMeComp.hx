// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDynamicMeshComponent")
@:include("Components/DynamicMeshComponent.h")
extern class DynamicMeComp extends BaseDynamComp {
	public var MeshObject: cpp.Star<DynamicMesh>;
	public var TangentsType: EDynamicMeshComponentTangentsMode;
	public var CollisionType: ECollisionTraceFlag;
	public var bEnableComplexCollision: Bool;
	public var bDeferCollisionUpdates: Bool;
	public var MeshBodySetup: cpp.Star<BodySetup>;

	public function ValidateMaterialSlots(bCreateIfMissing: Bool, bDeleteExtraSlots: Bool): cpp.Reference<Bool>;
	public function UpdateCollision(bOnlyIfPending: Bool): Void;
	public function SetTangentsType(NewTangentsType: EDynamicMeshComponentTangentsMode): Void;
	public function SetDynamicMesh(NewMesh: cpp.Star<DynamicMesh>): Void;
	public function SetDeferredCollisionUpdatesEnabled(bEnabled: Bool, bImmediateUpdate: Bool): Void;
	public function SetComplexAsSimpleCollisionEnabled(bEnabled: Bool, bImmediateUpdate: Bool): Void;
	public function GetTangentsType(): cpp.Reference<EDynamicMeshComponentTangentsMode>;
	public function EnableComplexAsSimpleCollision(): Void;
	public function ConfigureMaterialSet(NewMaterialSet: cpp.Reference<TArray<cpp.Star<MaterialInterface>>>): Void;
}

@:forward(GetTangentsType)
abstract ConstDynamicMeComp(DynamicMeComp) from DynamicMeComp {
}