// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEditorFilterLibrary")
@:include("EditorFilterLibrary.h")
@:structAccess
extern class EditorFilterLibrary extends BlueprintFunctionLibrary {
	public function BySelection(TargetArray: cpp.Reference<TArray<cpp.Star<Actor>>>, FilterType: EEditorScriptingFilterType): TArray<cpp.Star<Actor>>;
	public function ByLevelName(TargetArray: cpp.Reference<TArray<cpp.Star<Actor>>>, LevelName: FName, FilterType: EEditorScriptingFilterType): TArray<cpp.Star<Actor>>;
	public function ByLayer(TargetArray: cpp.Reference<TArray<cpp.Star<Actor>>>, LayerName: FName, FilterType: EEditorScriptingFilterType): TArray<cpp.Star<Actor>>;
	public function ByIDName(TargetArray: cpp.Reference<TArray<cpp.Star<Object>>>, NameSubString: FString, StringMatch: EEditorScriptingStringMatchType, FilterType: EEditorScriptingFilterType): TArray<cpp.Star<Object>>;
	public function ByClass(TargetArray: cpp.Reference<TArray<cpp.Star<Object>>>, ObjectClass: TSubclassOf<Object>, FilterType: EEditorScriptingFilterType): TArray<cpp.Star<Object>>;
	public function ByActorTag(TargetArray: cpp.Reference<TArray<cpp.Star<Actor>>>, Tag: FName, FilterType: EEditorScriptingFilterType): TArray<cpp.Star<Actor>>;
	public function ByActorLabel(TargetArray: cpp.Reference<TArray<cpp.Star<Actor>>>, NameSubString: FString, StringMatch: EEditorScriptingStringMatchType, FilterType: EEditorScriptingFilterType, bIgnoreCase: Bool): TArray<cpp.Star<Actor>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstEditorFilterLibrary(EditorFilterLibrary) from EditorFilterLibrary {
}

@:forward
@:nativeGen
@:native("EditorFilterLibrary*")
abstract EditorFilterLibraryPtr(cpp.Star<EditorFilterLibrary>) from cpp.Star<EditorFilterLibrary> to cpp.Star<EditorFilterLibrary>{
	@:from
	public static extern inline function fromValue(v: EditorFilterLibrary): EditorFilterLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EditorFilterLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}