// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AEmitter")
@:include("Particles/Emitter.h")
extern class AEmitter extends AActor {
	public var ParticleSystemComponent: TObjectPtr<UParticleSystemComponent>;
	public var bDestroyOnSystemFinish: Bool;
	public var bPostUpdateTickGroup: Bool;
	public var bCurrentlyActive: Bool;
	public var OnParticleSpawn: HaxeMulticastSparseDelegateProperty<(FName, cpp.Float32, FVector, FVector) -> Void>;
	public var OnParticleBurst: HaxeMulticastSparseDelegateProperty<(FName, cpp.Float32, cpp.Int32) -> Void>;
	public var OnParticleDeath: HaxeMulticastSparseDelegateProperty<(FName, cpp.Float32, cpp.Int32, FVector, FVector, FVector) -> Void>;
	public var OnParticleCollide: HaxeMulticastSparseDelegateProperty<(FName, cpp.Float32, cpp.Int32, FVector, FVector, FVector, FVector, FName, cpp.Star<UPhysicalMaterial>) -> Void>;
	public var SpriteComponent: TObjectPtr<UBillboardComponent>;
	public var ArrowComponent: TObjectPtr<UArrowComponent>;

	public function ToggleActive(): Void;
	public function SetVectorParameter(ParameterName: FName, Param: FVector): Void;
	public function SetTemplate(NewTemplate: cpp.Star<UParticleSystem>): Void;
	public function SetMaterialParameter(ParameterName: FName, Param: cpp.Star<UMaterialInterface>): Void;
	public function SetFloatParameter(ParameterName: FName, Param: cpp.Float32): Void;
	public function SetColorParameter(ParameterName: FName, Param: FLinearColor): Void;
	public function SetActorParameter(ParameterName: FName, Param: cpp.Star<AActor>): Void;
	public function OnRep_bCurrentlyActive(): Void;
	public function OnParticleSystemFinished(FinishedComponent: cpp.Star<UParticleSystemComponent>): Void;
	public function IsActive(): Bool;
	public function Deactivate(): Void;
	public function Activate(): Void;
}
