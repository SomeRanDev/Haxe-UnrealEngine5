// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AWorldDataLayers")
@:include("WorldPartition/DataLayer/WorldDataLayers.h")
extern class WorldDataLayers extends Info {
	public var bAllowRuntimeDataLayerEditing: Bool;
	public var WorldDataLayers: TSet<cpp.Star<DataLayer>>;
	public var RepActiveDataLayerNames: TArray<FName>;
	public var RepLoadedDataLayerNames: TArray<FName>;
	public var RepEffectiveActiveDataLayerNames: TArray<FName>;
	public var RepEffectiveLoadedDataLayerNames: TArray<FName>;

	public function OnRep_LoadedDataLayerNames(): Void;
	public function OnRep_EffectiveLoadedDataLayerNames(): Void;
	public function OnRep_EffectiveActiveDataLayerNames(): Void;
	public function OnRep_ActiveDataLayerNames(): Void;
	public function OnDataLayerRuntimeStateChanged(InDataLayer: cpp.Star<DataLayer.ConstDataLayer>, InState: EDataLayerRuntimeState): Void;
}

@:forward()
@:nativeGen
abstract ConstWorldDataLayers(WorldDataLayers) from WorldDataLayers {
	public extern var bAllowRuntimeDataLayerEditing(get, never): Bool;
	public inline extern function get_bAllowRuntimeDataLayerEditing(): Bool return this.bAllowRuntimeDataLayerEditing;
	public extern var WorldDataLayers(get, never): TSet<cpp.Star<DataLayer.ConstDataLayer>>;
	public inline extern function get_WorldDataLayers(): TSet<cpp.Star<DataLayer.ConstDataLayer>> return this.WorldDataLayers;
	public extern var RepActiveDataLayerNames(get, never): TArray<FName>;
	public inline extern function get_RepActiveDataLayerNames(): TArray<FName> return this.RepActiveDataLayerNames;
	public extern var RepLoadedDataLayerNames(get, never): TArray<FName>;
	public inline extern function get_RepLoadedDataLayerNames(): TArray<FName> return this.RepLoadedDataLayerNames;
	public extern var RepEffectiveActiveDataLayerNames(get, never): TArray<FName>;
	public inline extern function get_RepEffectiveActiveDataLayerNames(): TArray<FName> return this.RepEffectiveActiveDataLayerNames;
	public extern var RepEffectiveLoadedDataLayerNames(get, never): TArray<FName>;
	public inline extern function get_RepEffectiveLoadedDataLayerNames(): TArray<FName> return this.RepEffectiveLoadedDataLayerNames;
}