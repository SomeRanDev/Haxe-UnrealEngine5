// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEnvQueryOption")
@:include("EnvironmentQuery/EnvQueryOption.h")
@:structAccess
extern class EnvQueryOption extends Object {
	public var Generator: cpp.Star<EnvQueryGenerator>;
	public var Tests: TArray<cpp.Star<EnvQueryTest>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstEnvQueryOption(EnvQueryOption) from EnvQueryOption {
	public extern var Generator(get, never): cpp.Star<EnvQueryGenerator.ConstEnvQueryGenerator>;
	public inline extern function get_Generator(): cpp.Star<EnvQueryGenerator.ConstEnvQueryGenerator> return this.Generator;
	public extern var Tests(get, never): TArray<cpp.Star<EnvQueryTest.ConstEnvQueryTest>>;
	public inline extern function get_Tests(): TArray<cpp.Star<EnvQueryTest.ConstEnvQueryTest>> return this.Tests;
}

@:forward
@:nativeGen
@:native("EnvQueryOption*")
abstract EnvQueryOptionPtr(cpp.Star<EnvQueryOption>) from cpp.Star<EnvQueryOption> to cpp.Star<EnvQueryOption>{
	@:from
	public static extern inline function fromValue(v: EnvQueryOption): EnvQueryOptionPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EnvQueryOption {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}