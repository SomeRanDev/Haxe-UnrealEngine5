// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UIKRig_LimbSolver")
@:include("Solvers/IKRig_LimbSolver.h")
@:structAccess
extern class IKRig_LimbSolver extends IKRigSolver {
	public var RootName: FName;
	public var ReachPrecision: cpp.Float32;
	public var HingeRotationAxis: EAxis;
	public var MaxIterations: cpp.Int32;
	public var bEnableLimit: Bool;
	public var MinRotationAngle: cpp.Float32;
	public var bAveragePull: Bool;
	public var PullDistribution: cpp.Float32;
	public var ReachStepAlpha: cpp.Float32;
	public var bEnableTwistCorrection: Bool;
	public var EndBoneForwardAxis: EAxis;
	public var Effector: cpp.Star<IKRig_LimbEffector>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstIKRig_LimbSolver(IKRig_LimbSolver) from IKRig_LimbSolver {
	public extern var RootName(get, never): FName;
	public inline extern function get_RootName(): FName return this.RootName;
	public extern var ReachPrecision(get, never): cpp.Float32;
	public inline extern function get_ReachPrecision(): cpp.Float32 return this.ReachPrecision;
	public extern var HingeRotationAxis(get, never): EAxis;
	public inline extern function get_HingeRotationAxis(): EAxis return this.HingeRotationAxis;
	public extern var MaxIterations(get, never): cpp.Int32;
	public inline extern function get_MaxIterations(): cpp.Int32 return this.MaxIterations;
	public extern var bEnableLimit(get, never): Bool;
	public inline extern function get_bEnableLimit(): Bool return this.bEnableLimit;
	public extern var MinRotationAngle(get, never): cpp.Float32;
	public inline extern function get_MinRotationAngle(): cpp.Float32 return this.MinRotationAngle;
	public extern var bAveragePull(get, never): Bool;
	public inline extern function get_bAveragePull(): Bool return this.bAveragePull;
	public extern var PullDistribution(get, never): cpp.Float32;
	public inline extern function get_PullDistribution(): cpp.Float32 return this.PullDistribution;
	public extern var ReachStepAlpha(get, never): cpp.Float32;
	public inline extern function get_ReachStepAlpha(): cpp.Float32 return this.ReachStepAlpha;
	public extern var bEnableTwistCorrection(get, never): Bool;
	public inline extern function get_bEnableTwistCorrection(): Bool return this.bEnableTwistCorrection;
	public extern var EndBoneForwardAxis(get, never): EAxis;
	public inline extern function get_EndBoneForwardAxis(): EAxis return this.EndBoneForwardAxis;
	public extern var Effector(get, never): cpp.Star<IKRig_LimbEffector.ConstIKRig_LimbEffector>;
	public inline extern function get_Effector(): cpp.Star<IKRig_LimbEffector.ConstIKRig_LimbEffector> return this.Effector;
}