// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPostProcessComponent")
@:include("Components/PostProcessComponent.h")
@:structAccess
extern class PostProcessComp extends SceneComp {
	public var Settings: PostProcessSettings;
	public var Priority: cpp.Float32;
	public var BlendRadius: cpp.Float32;
	public var BlendWeight: cpp.Float32;
	public var bEnabled: Bool;
	public var bUnbound: Bool;

	public function AddOrUpdateBlendable(InBlendableObject: BlendableInterface, InWeight: cpp.Float32): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstPostProcessComp(PostProcessComp) from PostProcessComp {
	public extern var Settings(get, never): PostProcessSettings;
	public inline extern function get_Settings(): PostProcessSettings return this.Settings;
	public extern var Priority(get, never): cpp.Float32;
	public inline extern function get_Priority(): cpp.Float32 return this.Priority;
	public extern var BlendRadius(get, never): cpp.Float32;
	public inline extern function get_BlendRadius(): cpp.Float32 return this.BlendRadius;
	public extern var BlendWeight(get, never): cpp.Float32;
	public inline extern function get_BlendWeight(): cpp.Float32 return this.BlendWeight;
	public extern var bEnabled(get, never): Bool;
	public inline extern function get_bEnabled(): Bool return this.bEnabled;
	public extern var bUnbound(get, never): Bool;
	public inline extern function get_bUnbound(): Bool return this.bUnbound;
}

@:forward
@:nativeGen
@:native("PostProcessComp*")
abstract PostProcessCompPtr(cpp.Star<PostProcessComp>) from cpp.Star<PostProcessComp> to cpp.Star<PostProcessComp>{
	@:from
	public static extern inline function fromValue(v: PostProcessComp): PostProcessCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PostProcessComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}