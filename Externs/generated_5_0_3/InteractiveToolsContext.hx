// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInteractiveToolsContext")
@:include("InteractiveToolsContext.h")
@:structAccess
extern class InteractiveToolsContext extends Object {
	public var InputRouter: cpp.Star<InputRouter>;
	public var TargetManager: cpp.Star<ToolTargetManager>;
	public var ToolManager: cpp.Star<InteractiveToolManager>;
	public var GizmoManager: cpp.Star<InteractiveGizmoManager>;
	public var ContextObjectStore: cpp.Star<ContextObjectStore>;
	@:protected public var ToolManagerClass: TSoftClassPtr<Class>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstInteractiveToolsContext(InteractiveToolsContext) from InteractiveToolsContext {
	public extern var InputRouter(get, never): cpp.Star<InputRouter.ConstInputRouter>;
	public inline extern function get_InputRouter(): cpp.Star<InputRouter.ConstInputRouter> return this.InputRouter;
	public extern var TargetManager(get, never): cpp.Star<ToolTargetManager.ConstToolTargetManager>;
	public inline extern function get_TargetManager(): cpp.Star<ToolTargetManager.ConstToolTargetManager> return this.TargetManager;
	public extern var ToolManager(get, never): cpp.Star<InteractiveToolManager.ConstInteractiveToolManager>;
	public inline extern function get_ToolManager(): cpp.Star<InteractiveToolManager.ConstInteractiveToolManager> return this.ToolManager;
	public extern var GizmoManager(get, never): cpp.Star<InteractiveGizmoManager.ConstInteractiveGizmoManager>;
	public inline extern function get_GizmoManager(): cpp.Star<InteractiveGizmoManager.ConstInteractiveGizmoManager> return this.GizmoManager;
	public extern var ContextObjectStore(get, never): cpp.Star<ContextObjectStore.ConstContextObjectStore>;
	public inline extern function get_ContextObjectStore(): cpp.Star<ContextObjectStore.ConstContextObjectStore> return this.ContextObjectStore;
}

@:forward
@:nativeGen
@:native("InteractiveToolsContext*")
abstract InteractiveToolsContextPtr(cpp.Star<InteractiveToolsContext>) from cpp.Star<InteractiveToolsContext> to cpp.Star<InteractiveToolsContext>{
	@:from
	public static extern inline function fromValue(v: InteractiveToolsContext): InteractiveToolsContextPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InteractiveToolsContext {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}