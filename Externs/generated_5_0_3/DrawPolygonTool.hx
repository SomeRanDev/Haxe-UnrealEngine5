// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDrawPolygonTool")
@:include("DrawPolygonTool.h")
@:structAccess
extern class DrawPolygonTool extends InteractiveTool {
	public var OutputTypeProperties: cpp.Star<CreateMeshObjectTypeProperties>;
	public var PolygonProperties: cpp.Star<DrawPolygonToolStandardProperties>;
	public var SnapProperties: cpp.Star<DrawPolygonToolSnapProperties>;
	public var MaterialProperties: cpp.Star<NewMeshMaterialProperties>;
	public var PreviewMesh: cpp.Star<PreviewMesh>;
	public var PlaneTransformGizmo: cpp.Star<CombinedTransformGizmo>;
	public var PlaneTransformProxy: cpp.Star<TransformProxy>;
	public var HeightMechanic: cpp.Star<PlaneDistanceFromHitMechanic>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstDrawPolygonTool(DrawPolygonTool) from DrawPolygonTool {
	public extern var OutputTypeProperties(get, never): cpp.Star<CreateMeshObjectTypeProperties.ConstCreateMeshObjectTypeProperties>;
	public inline extern function get_OutputTypeProperties(): cpp.Star<CreateMeshObjectTypeProperties.ConstCreateMeshObjectTypeProperties> return this.OutputTypeProperties;
	public extern var PolygonProperties(get, never): cpp.Star<DrawPolygonToolStandardProperties.ConstDrawPolygonToolStandardProperties>;
	public inline extern function get_PolygonProperties(): cpp.Star<DrawPolygonToolStandardProperties.ConstDrawPolygonToolStandardProperties> return this.PolygonProperties;
	public extern var SnapProperties(get, never): cpp.Star<DrawPolygonToolSnapProperties.ConstDrawPolygonToolSnapProperties>;
	public inline extern function get_SnapProperties(): cpp.Star<DrawPolygonToolSnapProperties.ConstDrawPolygonToolSnapProperties> return this.SnapProperties;
	public extern var MaterialProperties(get, never): cpp.Star<NewMeshMaterialProperties.ConstNewMeshMaterialProperties>;
	public inline extern function get_MaterialProperties(): cpp.Star<NewMeshMaterialProperties.ConstNewMeshMaterialProperties> return this.MaterialProperties;
	public extern var PreviewMesh(get, never): cpp.Star<PreviewMesh.ConstPreviewMesh>;
	public inline extern function get_PreviewMesh(): cpp.Star<PreviewMesh.ConstPreviewMesh> return this.PreviewMesh;
	public extern var PlaneTransformGizmo(get, never): cpp.Star<CombinedTransformGizmo.ConstCombinedTransformGizmo>;
	public inline extern function get_PlaneTransformGizmo(): cpp.Star<CombinedTransformGizmo.ConstCombinedTransformGizmo> return this.PlaneTransformGizmo;
	public extern var PlaneTransformProxy(get, never): cpp.Star<TransformProxy.ConstTransformProxy>;
	public inline extern function get_PlaneTransformProxy(): cpp.Star<TransformProxy.ConstTransformProxy> return this.PlaneTransformProxy;
	public extern var HeightMechanic(get, never): cpp.Star<PlaneDistanceFromHitMechanic.ConstPlaneDistanceFromHitMechanic>;
	public inline extern function get_HeightMechanic(): cpp.Star<PlaneDistanceFromHitMechanic.ConstPlaneDistanceFromHitMechanic> return this.HeightMechanic;
}

@:forward
@:nativeGen
@:native("DrawPolygonTool*")
abstract DrawPolygonToolPtr(cpp.Star<DrawPolygonTool>) from cpp.Star<DrawPolygonTool> to cpp.Star<DrawPolygonTool>{
	@:from
	public static extern inline function fromValue(v: DrawPolygonTool): DrawPolygonToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DrawPolygonTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}