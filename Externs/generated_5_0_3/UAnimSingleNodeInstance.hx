// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimSingleNodeInstance")
@:include("Animation/AnimSingleNodeInstance.h")
extern class UAnimSingleNodeInstance extends UAnimInstance {
	public var CurrentAsset: TObjectPtr<UAnimationAsset>;
	public var PostEvaluateAnimEvent: HaxeDelegateProperty<() -> Void>;

	public function StopAnim(): Void;
	public function SetReverse(bInReverse: Bool): Void;
	public function SetPreviewCurveOverride(PoseName: cpp.Reference<FName>, Value: cpp.Float32, bRemoveIfZero: Bool): Void;
	public function SetPositionWithPreviousTime(InPosition: cpp.Float32, InPreviousTime: cpp.Float32, bFireNotifies: Bool): Void;
	public function SetPosition(InPosition: cpp.Float32, bFireNotifies: Bool): Void;
	public function SetPlayRate(InPlayRate: cpp.Float32): Void;
	public function SetPlaying(bIsPlaying: Bool): Void;
	public function SetMirrorDataTable(MirrorDataTable: cpp.Star<UMirrorDataTable>): Void;
	public function SetLooping(bIsLooping: Bool): Void;
	public function SetBlendSpacePosition(InPosition: FVector): Void;
	public function SetAnimationAsset(NewAsset: cpp.Star<UAnimationAsset>, bIsLooping: Bool, InPlayRate: cpp.Float32): Void;
	public function PlayAnim(bIsLooping: Bool, InPlayRate: cpp.Float32, InStartPosition: cpp.Float32): Void;
	public function GetMirrorDataTable(): cpp.Star<UMirrorDataTable>;
	public function GetLength(): cpp.Float32;
	public function GetAnimationAsset(): cpp.Star<UAnimationAsset>;
}
