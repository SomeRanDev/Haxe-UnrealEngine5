// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USequencePlayerLibrary")
@:include("SequencePlayerLibrary.h")
extern class USequencePlayerLibrary extends UBlueprintFunctionLibrary {

	public function SetStartPosition(SequencePlayer: FSequencePlayerReference, StartPosition: cpp.Float32): FSequencePlayerReference;
	public function SetSequenceWithInertialBlending(UpdateContext: FAnimUpdateContext, SequencePlayer: FSequencePlayerReference, Sequence: cpp.Star<UAnimSequenceBase>, BlendTime: cpp.Float32): FSequencePlayerReference;
	public function SetSequence(SequencePlayer: FSequencePlayerReference, Sequence: cpp.Star<UAnimSequenceBase>): FSequencePlayerReference;
	public function SetPlayRate(SequencePlayer: FSequencePlayerReference, PlayRate: cpp.Float32): FSequencePlayerReference;
	public function SetAccumulatedTime(SequencePlayer: FSequencePlayerReference, Time: cpp.Float32): FSequencePlayerReference;
	public function GetStartPosition(SequencePlayer: FSequencePlayerReference): cpp.Float32;
	public function GetSequencePure(SequencePlayer: FSequencePlayerReference): cpp.Star<UAnimSequenceBase>;
	public function GetSequence(SequencePlayer: FSequencePlayerReference, SequenceBase: cpp.Reference<cpp.Star<UAnimSequenceBase>>): FSequencePlayerReference;
	public function GetPlayRate(SequencePlayer: FSequencePlayerReference): cpp.Float32;
	public function GetLoopAnimation(SequencePlayer: FSequencePlayerReference): Bool;
	public function GetAccumulatedTime(SequencePlayer: FSequencePlayerReference): cpp.Float32;
	public function ConvertToSequencePlayerPure(Node: FAnimNodeReference, SequencePlayer: FSequencePlayerReference, Result: Bool): Void;
	public function ConvertToSequencePlayer(Node: FAnimNodeReference, Result: EAnimNodeReferenceConversionResult): FSequencePlayerReference;
}
