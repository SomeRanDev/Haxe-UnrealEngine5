// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UK2Node_Variable")
@:include("K2Node_Variable.h")
@:structAccess
extern class K2Node_Variable extends K2Node {
	public var VariableReference: MemberReference;
	public var SelfContextInfo: ESelfContextInfo;
	public var VariableSourceClass_DEPRECATED: TSubclassOf<Object>;
	public var VariableName_DEPRECATED: FName;
	public var bSelfContext_DEPRECATED: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstK2Node_Variable(K2Node_Variable) from K2Node_Variable {
	public extern var VariableReference(get, never): MemberReference;
	public inline extern function get_VariableReference(): MemberReference return this.VariableReference;
	public extern var SelfContextInfo(get, never): ESelfContextInfo;
	public inline extern function get_SelfContextInfo(): ESelfContextInfo return this.SelfContextInfo;
	public extern var VariableSourceClass_DEPRECATED(get, never): TSubclassOf<Object.ConstObject>;
	public inline extern function get_VariableSourceClass_DEPRECATED(): TSubclassOf<Object.ConstObject> return this.VariableSourceClass_DEPRECATED;
	public extern var VariableName_DEPRECATED(get, never): FName;
	public inline extern function get_VariableName_DEPRECATED(): FName return this.VariableName_DEPRECATED;
	public extern var bSelfContext_DEPRECATED(get, never): Bool;
	public inline extern function get_bSelfContext_DEPRECATED(): Bool return this.bSelfContext_DEPRECATED;
}

@:forward
@:nativeGen
@:native("K2Node_Variable*")
abstract K2Node_VariablePtr(cpp.Star<K2Node_Variable>) from cpp.Star<K2Node_Variable> to cpp.Star<K2Node_Variable>{
	@:from
	public static extern inline function fromValue(v: K2Node_Variable): K2Node_VariablePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): K2Node_Variable {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}