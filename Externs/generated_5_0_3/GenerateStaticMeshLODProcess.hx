// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGenerateStaticMeshLODProcess")
@:include("Graphs/GenerateStaticMeshLODProcess.h")
@:structAccess
extern class GenerateStaticMeshLODProcess extends Object {
	public var SourceStaticMesh: cpp.Star<StaticMesh>;
	public var AllDerivedTextures: TSet<cpp.Star<Texture2D>>;
	public var DerivedNormalMapTex: cpp.Star<Texture2D>;
	public var DerivedMultiTextureBakeResult: cpp.Star<Texture2D>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGenerateStaticMeshLODProcess(GenerateStaticMeshLODProcess) from GenerateStaticMeshLODProcess {
	public extern var SourceStaticMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_SourceStaticMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.SourceStaticMesh;
	public extern var AllDerivedTextures(get, never): TSet<cpp.Star<Texture2D.ConstTexture2D>>;
	public inline extern function get_AllDerivedTextures(): TSet<cpp.Star<Texture2D.ConstTexture2D>> return this.AllDerivedTextures;
	public extern var DerivedNormalMapTex(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_DerivedNormalMapTex(): cpp.Star<Texture2D.ConstTexture2D> return this.DerivedNormalMapTex;
	public extern var DerivedMultiTextureBakeResult(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_DerivedMultiTextureBakeResult(): cpp.Star<Texture2D.ConstTexture2D> return this.DerivedMultiTextureBakeResult;
}

@:forward
@:nativeGen
@:native("GenerateStaticMeshLODProcess*")
abstract GenerateStaticMeshLODProcessPtr(cpp.Star<GenerateStaticMeshLODProcess>) from cpp.Star<GenerateStaticMeshLODProcess> to cpp.Star<GenerateStaticMeshLODProcess>{
	@:from
	public static extern inline function fromValue(v: GenerateStaticMeshLODProcess): GenerateStaticMeshLODProcessPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GenerateStaticMeshLODProcess {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}