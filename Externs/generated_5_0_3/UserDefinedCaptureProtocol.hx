// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UUserDefinedCaptureProtocol")
@:include("Protocols/UserDefinedCaptureProtocol.h")
@:structAccess
extern class UserDefinedCaptureProtocol extends MovieSceneImageCaptureProtocolBase {
	public var World: cpp.Star<World>;

	public function StopCapturingFinalPixels(): Void;
	public function StartCapturingFinalPixels(StreamID: cpp.Reference<CapturedPixelsID>): Void;
	public function ResolveBuffer(Buffer: cpp.Star<Texture>, BufferID: cpp.Reference<CapturedPixelsID>): Void;
	public function OnWarmUp(): Void;
	public function OnTick(): Void;
	public function OnStartCapture(): Void;
	public function OnSetup(): cpp.Reference<Bool>;
	public function OnPreTick(): Void;
	public function OnPixelsReceived(Pixels: cpp.Reference<CapturedPixels>, ID: cpp.Reference<CapturedPixelsID>, FrameMetrics: FrameMetrics): Void;
	public function OnPauseCapture(): Void;
	public function OnFinalize(): Void;
	public function OnCaptureFrame(): Void;
	public function OnCanFinalize(): cpp.Reference<Bool>;
	public function OnBeginFinalize(): Void;
	public function GetCurrentFrameMetrics(): cpp.Reference<FrameMetrics>;
	public function GenerateFilename(InFrameMetrics: cpp.Reference<FrameMetrics>): cpp.Reference<FString>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(OnCanFinalize, GetCurrentFrameMetrics, GenerateFilename)
@:nativeGen
abstract ConstUserDefinedCaptureProtocol(UserDefinedCaptureProtocol) from UserDefinedCaptureProtocol {
	public extern var World(get, never): cpp.Star<World.ConstWorld>;
	public inline extern function get_World(): cpp.Star<World.ConstWorld> return this.World;
}