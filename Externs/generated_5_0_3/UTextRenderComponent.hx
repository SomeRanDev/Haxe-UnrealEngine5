// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTextRenderComponent")
@:include("Components/TextRenderComponent.h")
extern class UTextRenderComponent extends UPrimitiveComponent {
	public var Text: FText;
	public var TextMaterial: TObjectPtr<UMaterialInterface>;
	public var Font: TObjectPtr<UFont>;
	public var HorizontalAlignment: EHorizTextAligment;
	public var VerticalAlignment: EVerticalTextAligment;
	public var TextRenderColor: FColor;
	public var XScale: cpp.Float32;
	public var YScale: cpp.Float32;
	public var WorldSize: cpp.Float32;
	public var InvDefaultSize: cpp.Float32;
	public var HorizSpacingAdjust: cpp.Float32;
	public var VertSpacingAdjust: cpp.Float32;
	public var bAlwaysRenderAsText: Bool;

	public function SetYScale(Value: cpp.Float32): Void;
	public function SetXScale(Value: cpp.Float32): Void;
	public function SetWorldSize(Value: cpp.Float32): Void;
	public function SetVertSpacingAdjust(Value: cpp.Float32): Void;
	public function SetVerticalAlignment(Value: EVerticalTextAligment): Void;
	public function SetTextRenderColor(Value: FColor): Void;
	public function SetTextMaterial(Material: cpp.Star<UMaterialInterface>): Void;
	public function SetHorizSpacingAdjust(Value: cpp.Float32): Void;
	public function SetHorizontalAlignment(Value: EHorizTextAligment): Void;
	public function SetFont(Value: cpp.Star<UFont>): Void;
	public function K2_SetText(Value: cpp.Reference<FText>): Void;
	public function GetTextWorldSize(): FVector;
	public function GetTextLocalSize(): FVector;
}
