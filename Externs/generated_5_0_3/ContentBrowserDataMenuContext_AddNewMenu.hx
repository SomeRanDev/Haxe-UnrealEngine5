// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UContentBrowserDataMenuContext_AddNewMenu")
@:include("ContentBrowserDataMenuContexts.h")
@:structAccess
extern class ContentBrowserDataMenuContext_AddNewMenu extends Object {
	public var SelectedPaths: TArray<FName>;
	public var bContainsValidPackagePath: Bool;
	public var bCanBeModified: Bool;
	public var OwnerDomain: EContentBrowserDataMenuContext_AddNewMenuDomain;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstContentBrowserDataMenuContext_AddNewMenu(ContentBrowserDataMenuContext_AddNewMenu) from ContentBrowserDataMenuContext_AddNewMenu {
	public extern var SelectedPaths(get, never): TArray<FName>;
	public inline extern function get_SelectedPaths(): TArray<FName> return this.SelectedPaths;
	public extern var bContainsValidPackagePath(get, never): Bool;
	public inline extern function get_bContainsValidPackagePath(): Bool return this.bContainsValidPackagePath;
	public extern var bCanBeModified(get, never): Bool;
	public inline extern function get_bCanBeModified(): Bool return this.bCanBeModified;
	public extern var OwnerDomain(get, never): EContentBrowserDataMenuContext_AddNewMenuDomain;
	public inline extern function get_OwnerDomain(): EContentBrowserDataMenuContext_AddNewMenuDomain return this.OwnerDomain;
}

@:forward
@:nativeGen
@:native("ContentBrowserDataMenuContext_AddNewMenu*")
abstract ContentBrowserDataMenuContext_AddNewMenuPtr(cpp.Star<ContentBrowserDataMenuContext_AddNewMenu>) from cpp.Star<ContentBrowserDataMenuContext_AddNewMenu> to cpp.Star<ContentBrowserDataMenuContext_AddNewMenu>{
	@:from
	public static extern inline function fromValue(v: ContentBrowserDataMenuContext_AddNewMenu): ContentBrowserDataMenuContext_AddNewMenuPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ContentBrowserDataMenuContext_AddNewMenu {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}