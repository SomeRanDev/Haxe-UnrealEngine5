// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMockDataMeshTrackerComponent")
@:include("MockDataMeshTrackerComponent.h")
extern class MockDataMComp extends SceneCompComp {
	public var OnMeshTrackerUpdated: HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<TArray<FVector>>, cpp.Reference<TArray<cpp.Int32>>, cpp.Reference<TArray<FVector>>, cpp.Reference<TArray<cpp.Float32>>) -> Void>;
	public var ScanWorld: Bool;
	public var RequestNormals: Bool;
	public var RequestVertexConfidence: Bool;
	public var VertexColorMode: EMeshTrackerVertexColorMode;
	public var BlockVertexColors: TArray<FColor>;
	public var VertexColorFromConfidenceZero: FLinearColor;
	public var VertexColorFromConfidenceOne: FLinearColor;
	public var UpdateInterval: cpp.Float32;
	public var MRMesh: cpp.Star<MRMeshComComp>;

	public function OnMockDataMeshTrackerUpdated__DelegateSignature(Index: cpp.Int32, Vertices: cpp.Reference<TArray<FVector>>, Triangles: cpp.Reference<TArray<cpp.Int32>>, Normals: cpp.Reference<TArray<FVector>>, Confidence: cpp.Reference<TArray<cpp.Float32>>): Void;
	public function DisconnectMRMesh(InMRMeshPtr: cpp.Star<MRMeshComComp>): Void;
	public function ConnectMRMesh(InMRMeshPtr: cpp.Star<MRMeshComComp>): Void;
}

@:forward()
abstract ConstMockDataMComp(MockDataMComp) from MockDataMComp {
}