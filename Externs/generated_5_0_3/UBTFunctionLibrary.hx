// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBTFunctionLibrary")
@:include("BehaviorTree/BTFunctionLibrary.h")
extern class UBTFunctionLibrary extends UBlueprintFunctionLibrary {

	public function StopUsingExternalEvent(NodeOwner: cpp.Star<UBTNode>): Void;
	public function StartUsingExternalEvent(NodeOwner: cpp.Star<UBTNode>, OwningActor: cpp.Star<AActor>): Void;
	public function SetBlackboardValueAsVector(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: FVector): Void;
	public function SetBlackboardValueAsString(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: FString): Void;
	public function SetBlackboardValueAsRotator(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: FRotator): Void;
	public function SetBlackboardValueAsObject(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: cpp.Star<UObject>): Void;
	public function SetBlackboardValueAsName(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: FName): Void;
	public function SetBlackboardValueAsInt(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: cpp.Int32): Void;
	public function SetBlackboardValueAsFloat(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: cpp.Float32): Void;
	public function SetBlackboardValueAsEnum(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: cpp.UInt8): Void;
	public function SetBlackboardValueAsClass(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: cpp.Star<UClass>): Void;
	public function SetBlackboardValueAsBool(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector, Value: Bool): Void;
	public function GetOwnersBlackboard(NodeOwner: cpp.Star<UBTNode>): cpp.Star<UBlackboardComponent>;
	public function GetOwnerComponent(NodeOwner: cpp.Star<UBTNode>): cpp.Star<UBehaviorTreeComponent>;
	public function GetBlackboardValueAsVector(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): FVector;
	public function GetBlackboardValueAsString(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): FString;
	public function GetBlackboardValueAsRotator(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): FRotator;
	public function GetBlackboardValueAsObject(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): cpp.Star<UObject>;
	public function GetBlackboardValueAsName(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): FName;
	public function GetBlackboardValueAsInt(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): cpp.Int32;
	public function GetBlackboardValueAsFloat(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): cpp.Float32;
	public function GetBlackboardValueAsEnum(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): cpp.UInt8;
	public function GetBlackboardValueAsClass(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): cpp.Star<UClass>;
	public function GetBlackboardValueAsBool(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): Bool;
	public function GetBlackboardValueAsActor(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): cpp.Star<AActor>;
	public function ClearBlackboardValueAsVector(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): Void;
	public function ClearBlackboardValue(NodeOwner: cpp.Star<UBTNode>, Key: FBlackboardKeySelector): Void;
}
