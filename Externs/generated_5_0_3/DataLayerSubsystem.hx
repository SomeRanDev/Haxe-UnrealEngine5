// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDataLayerSubsystem")
@:include("WorldPartition/DataLayer/DataLayerSubsystem.h")
extern class DataLayerSubsystem extends WorldSubsystem {
	public var OnDataLayerRuntimeStateChanged: HaxeMulticastSparseDelegateProperty<(cpp.Star<DataLayer.ConstDataLayer>, EDataLayerRuntimeState) -> Void>;

	public function SetDataLayerStateByLabel(InDataLayerLabel: cpp.Reference<FName>, InState: EDataLayerState): Void;
	public function SetDataLayerState(InDataLayer: cpp.Reference<ActorDataLayer>, InState: EDataLayerState): Void;
	public function SetDataLayerRuntimeStateByLabel(InDataLayerLabel: cpp.Reference<FName>, InState: EDataLayerRuntimeState, bInIsRecursive: Bool): Void;
	public function SetDataLayerRuntimeState(InDataLayer: cpp.Reference<ActorDataLayer>, InState: EDataLayerRuntimeState, bInIsRecursive: Bool): Void;
	public function GetLoadedDataLayerNames(): cpp.Reference<TSet<FName>>;
	public function GetDataLayerStateByLabel(InDataLayerLabel: cpp.Reference<FName>): cpp.Reference<EDataLayerState>;
	public function GetDataLayerState(InDataLayer: cpp.Reference<ActorDataLayer>): cpp.Reference<EDataLayerState>;
	public function GetDataLayerRuntimeStateByLabel(InDataLayerLabel: cpp.Reference<FName>): cpp.Reference<EDataLayerRuntimeState>;
	public function GetDataLayerRuntimeState(InDataLayer: cpp.Reference<ActorDataLayer>): cpp.Reference<EDataLayerRuntimeState>;
	public function GetDataLayerFromName(InDataLayerName: FName): cpp.Reference<cpp.Star<DataLayer>>;
	public function GetDataLayerFromLabel(InDataLayerLabel: FName): cpp.Reference<cpp.Star<DataLayer>>;
	public function GetDataLayerEffectiveRuntimeStateByLabel(InDataLayerLabel: cpp.Reference<FName>): cpp.Reference<EDataLayerRuntimeState>;
	public function GetDataLayerEffectiveRuntimeState(InDataLayer: cpp.Reference<ActorDataLayer>): cpp.Reference<EDataLayerRuntimeState>;
	public function GetDataLayer(InDataLayer: cpp.Reference<ActorDataLayer>): cpp.Reference<cpp.Star<DataLayer>>;
	public function GetActiveDataLayerNames(): cpp.Reference<TSet<FName>>;
}

@:forward(
	GetLoadedDataLayerNames, GetDataLayerStateByLabel, GetDataLayerState, GetDataLayerRuntimeStateByLabel, GetDataLayerRuntimeState,
	GetDataLayerFromName, GetDataLayerFromLabel, GetDataLayerEffectiveRuntimeStateByLabel, GetDataLayerEffectiveRuntimeState, GetDataLayer,
	GetActiveDataLayerNames
)
@:nativeGen
abstract ConstDataLayerSubsystem(DataLayerSubsystem) from DataLayerSubsystem {
	public extern var OnDataLayerRuntimeStateChanged(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<DataLayer.ConstDataLayer>, EDataLayerRuntimeState) -> Void>;
	public inline extern function get_OnDataLayerRuntimeStateChanged(): HaxeMulticastSparseDelegateProperty<(cpp.Star<DataLayer.ConstDataLayer>, EDataLayerRuntimeState) -> Void> return this.OnDataLayerRuntimeStateChanged;
}