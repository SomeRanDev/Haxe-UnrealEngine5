// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimSharingStateInstance")
@:include("AnimationSharingInstances.h")
@:structAccess
extern class AnimSharingStateInstance extends AnimInstance {
	@:protected public var AnimationToPlay: cpp.Star<AnimSequence>;
	@:protected public var PermutationTimeOffset: cpp.Float32;
	@:protected public var PlayRate: cpp.Float32;
	@:protected public var bStateBool: Bool;
	private var Instance: cpp.Star<AnimSharingInstance>;

	@:protected public function GetInstancedActors(Actors: cpp.Reference<TArray<cpp.Star<Actor>>>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimSharingStateInstance(AnimSharingStateInstance) from AnimSharingStateInstance {
}

@:forward
@:nativeGen
@:native("AnimSharingStateInstance*")
abstract AnimSharingStateInstancePtr(cpp.Star<AnimSharingStateInstance>) from cpp.Star<AnimSharingStateInstance> to cpp.Star<AnimSharingStateInstance>{
	@:from
	public static extern inline function fromValue(v: AnimSharingStateInstance): AnimSharingStateInstancePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimSharingStateInstance {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}