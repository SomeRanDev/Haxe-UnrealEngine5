// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBakeMeshAttributeTool")
@:include("BakeMeshAttributeTool.h")
@:structAccess
extern class BakeMeshAttributeTool extends MultiSelectionMeshEditingTool {
	public var OcclusionSettings: cpp.Star<BakeOcclusionMapToolProperties>;
	public var CurvatureSettings: cpp.Star<BakeCurvatureMapToolProperties>;
	public var TextureSettings: cpp.Star<BakeTexture2DProperties>;
	public var MultiTextureSettings: cpp.Star<BakeMultiTexture2DProperties>;
	public var WorkingPreviewMaterial: cpp.Star<MaterialInstanceDynamic>;
	public var ErrorPreviewMaterial: cpp.Star<MaterialInstanceDynamic>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstBakeMeshAttributeTool(BakeMeshAttributeTool) from BakeMeshAttributeTool {
	public extern var OcclusionSettings(get, never): cpp.Star<BakeOcclusionMapToolProperties.ConstBakeOcclusionMapToolProperties>;
	public inline extern function get_OcclusionSettings(): cpp.Star<BakeOcclusionMapToolProperties.ConstBakeOcclusionMapToolProperties> return this.OcclusionSettings;
	public extern var CurvatureSettings(get, never): cpp.Star<BakeCurvatureMapToolProperties.ConstBakeCurvatureMapToolProperties>;
	public inline extern function get_CurvatureSettings(): cpp.Star<BakeCurvatureMapToolProperties.ConstBakeCurvatureMapToolProperties> return this.CurvatureSettings;
	public extern var TextureSettings(get, never): cpp.Star<BakeTexture2DProperties.ConstBakeTexture2DProperties>;
	public inline extern function get_TextureSettings(): cpp.Star<BakeTexture2DProperties.ConstBakeTexture2DProperties> return this.TextureSettings;
	public extern var MultiTextureSettings(get, never): cpp.Star<BakeMultiTexture2DProperties.ConstBakeMultiTexture2DProperties>;
	public inline extern function get_MultiTextureSettings(): cpp.Star<BakeMultiTexture2DProperties.ConstBakeMultiTexture2DProperties> return this.MultiTextureSettings;
	public extern var WorkingPreviewMaterial(get, never): cpp.Star<MaterialInstanceDynamic.ConstMaterialInstanceDynamic>;
	public inline extern function get_WorkingPreviewMaterial(): cpp.Star<MaterialInstanceDynamic.ConstMaterialInstanceDynamic> return this.WorkingPreviewMaterial;
	public extern var ErrorPreviewMaterial(get, never): cpp.Star<MaterialInstanceDynamic.ConstMaterialInstanceDynamic>;
	public inline extern function get_ErrorPreviewMaterial(): cpp.Star<MaterialInstanceDynamic.ConstMaterialInstanceDynamic> return this.ErrorPreviewMaterial;
}

@:forward
@:nativeGen
@:native("BakeMeshAttributeTool*")
abstract BakeMeshAttributeToolPtr(cpp.Star<BakeMeshAttributeTool>) from cpp.Star<BakeMeshAttributeTool> to cpp.Star<BakeMeshAttributeTool>{
	@:from
	public static extern inline function fromValue(v: BakeMeshAttributeTool): BakeMeshAttributeToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BakeMeshAttributeTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}