// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USpectatorBeaconState")
@:include("SpectatorBeaconState.h")
@:structAccess
extern class SpectatorBeaconState extends Object {
	public var SessionName: FName;
	public var NumConsumedReservations: cpp.Int32;
	public var MaxReservations: cpp.Int32;
	public var bRestrictCrossConsole: Bool;
	public var Reservations: TArray<SpectatorReservation>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSpectatorBeaconState(SpectatorBeaconState) from SpectatorBeaconState {
	public extern var SessionName(get, never): FName;
	public inline extern function get_SessionName(): FName return this.SessionName;
	public extern var NumConsumedReservations(get, never): cpp.Int32;
	public inline extern function get_NumConsumedReservations(): cpp.Int32 return this.NumConsumedReservations;
	public extern var MaxReservations(get, never): cpp.Int32;
	public inline extern function get_MaxReservations(): cpp.Int32 return this.MaxReservations;
	public extern var bRestrictCrossConsole(get, never): Bool;
	public inline extern function get_bRestrictCrossConsole(): Bool return this.bRestrictCrossConsole;
	public extern var Reservations(get, never): TArray<SpectatorReservation>;
	public inline extern function get_Reservations(): TArray<SpectatorReservation> return this.Reservations;
}

@:forward
@:nativeGen
@:native("SpectatorBeaconState*")
abstract SpectatorBeaconStatePtr(cpp.Star<SpectatorBeaconState>) from cpp.Star<SpectatorBeaconState> to cpp.Star<SpectatorBeaconState>{
	@:from
	public static extern inline function fromValue(v: SpectatorBeaconState): SpectatorBeaconStatePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SpectatorBeaconState {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}