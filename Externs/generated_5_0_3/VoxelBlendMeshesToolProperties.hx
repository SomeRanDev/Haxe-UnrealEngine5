// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UVoxelBlendMeshesToolProperties")
@:include("VoxelBlendMeshesTool.h")
@:structAccess
extern class VoxelBlendMeshesToolProperties extends InteractiveToolPropertySet {
	public var BlendPower: cpp.Float64;
	public var BlendFalloff: cpp.Float64;
	public var Operation: EVoxelBlendOperation;
	public var bVoxWrap: Bool;
	public var bRemoveInternalsAfterVoxWrap: Bool;
	public var ThickenShells: cpp.Float64;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstVoxelBlendMeshesToolProperties(VoxelBlendMeshesToolProperties) from VoxelBlendMeshesToolProperties {
	public extern var BlendPower(get, never): cpp.Float64;
	public inline extern function get_BlendPower(): cpp.Float64 return this.BlendPower;
	public extern var BlendFalloff(get, never): cpp.Float64;
	public inline extern function get_BlendFalloff(): cpp.Float64 return this.BlendFalloff;
	public extern var Operation(get, never): EVoxelBlendOperation;
	public inline extern function get_Operation(): EVoxelBlendOperation return this.Operation;
	public extern var bVoxWrap(get, never): Bool;
	public inline extern function get_bVoxWrap(): Bool return this.bVoxWrap;
	public extern var bRemoveInternalsAfterVoxWrap(get, never): Bool;
	public inline extern function get_bRemoveInternalsAfterVoxWrap(): Bool return this.bRemoveInternalsAfterVoxWrap;
	public extern var ThickenShells(get, never): cpp.Float64;
	public inline extern function get_ThickenShells(): cpp.Float64 return this.ThickenShells;
}

@:forward
@:nativeGen
@:native("VoxelBlendMeshesToolProperties*")
abstract VoxelBlendMeshesToolPropertiesPtr(cpp.Star<VoxelBlendMeshesToolProperties>) from cpp.Star<VoxelBlendMeshesToolProperties> to cpp.Star<VoxelBlendMeshesToolProperties>{
	@:from
	public static extern inline function fromValue(v: VoxelBlendMeshesToolProperties): VoxelBlendMeshesToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): VoxelBlendMeshesToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}