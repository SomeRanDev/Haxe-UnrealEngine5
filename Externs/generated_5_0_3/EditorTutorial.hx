// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEditorTutorial")
@:include("EditorTutorial.h")
@:structAccess
extern class EditorTutorial extends Object {
	public var Title: FText;
	public var SortOrder: cpp.Int32;
	public var Icon: FString;
	public var Texture: cpp.Star<Texture2D>;
	public var Category: FString;
	public var SummaryContent: TutorialContent;
	public var Stages: TArray<TutorialStage>;
	public var PreviousTutorial: SoftClassPath;
	public var NextTutorial: SoftClassPath;
	public var bIsStandalone: Bool;
	public var AssetToUse: SoftObjectPath;
	public var ImportPath: FString;
	public var bHideInBrowser: Bool;
	public var SearchTags: FText;

	@:protected public function SetEngineFolderVisibilty(bNewVisibility: Bool): Void;
	@:protected public function OpenAsset(Asset: cpp.Star<Object>): Void;
	@:protected public function OnTutorialStageStarted(StageName: FName): Void;
	@:protected public function OnTutorialStageEnded(StageName: FName): Void;
	@:protected public function OnTutorialLaunched(): Void;
	@:protected public function OnTutorialClosed(): Void;
	@:protected public function GoToPreviousTutorialStage(): Void;
	@:protected public function GoToNextTutorialStage(): Void;
	@:protected public function GetEngineFolderVisibilty(): Bool;
	public function GetActorReference(PathToActor: FString): cpp.Star<Actor>;
	@:protected public function BeginTutorial(TutorialToStart: cpp.Star<EditorTutorial>, bRestart: Bool): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstEditorTutorial(EditorTutorial) from EditorTutorial {
	public extern var Title(get, never): FText;
	public inline extern function get_Title(): FText return this.Title;
	public extern var SortOrder(get, never): cpp.Int32;
	public inline extern function get_SortOrder(): cpp.Int32 return this.SortOrder;
	public extern var Icon(get, never): FString;
	public inline extern function get_Icon(): FString return this.Icon;
	public extern var Texture(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_Texture(): cpp.Star<Texture2D.ConstTexture2D> return this.Texture;
	public extern var Category(get, never): FString;
	public inline extern function get_Category(): FString return this.Category;
	public extern var SummaryContent(get, never): TutorialContent;
	public inline extern function get_SummaryContent(): TutorialContent return this.SummaryContent;
	public extern var Stages(get, never): TArray<TutorialStage>;
	public inline extern function get_Stages(): TArray<TutorialStage> return this.Stages;
	public extern var PreviousTutorial(get, never): SoftClassPath;
	public inline extern function get_PreviousTutorial(): SoftClassPath return this.PreviousTutorial;
	public extern var NextTutorial(get, never): SoftClassPath;
	public inline extern function get_NextTutorial(): SoftClassPath return this.NextTutorial;
	public extern var bIsStandalone(get, never): Bool;
	public inline extern function get_bIsStandalone(): Bool return this.bIsStandalone;
	public extern var AssetToUse(get, never): SoftObjectPath;
	public inline extern function get_AssetToUse(): SoftObjectPath return this.AssetToUse;
	public extern var ImportPath(get, never): FString;
	public inline extern function get_ImportPath(): FString return this.ImportPath;
	public extern var bHideInBrowser(get, never): Bool;
	public inline extern function get_bHideInBrowser(): Bool return this.bHideInBrowser;
	public extern var SearchTags(get, never): FText;
	public inline extern function get_SearchTags(): FText return this.SearchTags;
}

@:forward
@:nativeGen
@:native("EditorTutorial*")
abstract EditorTutorialPtr(cpp.Star<EditorTutorial>) from cpp.Star<EditorTutorial> to cpp.Star<EditorTutorial>{
	@:from
	public static extern inline function fromValue(v: EditorTutorial): EditorTutorialPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EditorTutorial {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}