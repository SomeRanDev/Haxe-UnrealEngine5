// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPanelWidget")
@:include("Components/PanelWidget.h")
@:structAccess
extern class PanelWidget extends Widget {
	public var Slots: TArray<cpp.Star<PanelSlot>>;

	public function RemoveChildAt(Index: cpp.Int32): cpp.Reference<Bool>;
	public function RemoveChild(Content: cpp.Star<Widget>): cpp.Reference<Bool>;
	public function HasChild(Content: cpp.Star<Widget>): cpp.Reference<Bool>;
	public function HasAnyChildren(): cpp.Reference<Bool>;
	public function GetChildrenCount(): cpp.Reference<cpp.Int32>;
	public function GetChildIndex(Content: cpp.Star<Widget.ConstWidget>): cpp.Reference<cpp.Int32>;
	public function GetChildAt(Index: cpp.Int32): cpp.Reference<cpp.Star<Widget>>;
	public function GetAllChildren(): cpp.Reference<TArray<cpp.Star<Widget>>>;
	public function ClearChildren(): Void;
	public function AddChild(Content: cpp.Star<Widget>): cpp.Reference<cpp.Star<PanelSlot>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(HasChild, HasAnyChildren, GetChildrenCount, GetChildIndex, GetChildAt, GetAllChildren)
@:nativeGen
abstract ConstPanelWidget(PanelWidget) from PanelWidget {
	public extern var Slots(get, never): TArray<cpp.Star<PanelSlot.ConstPanelSlot>>;
	public inline extern function get_Slots(): TArray<cpp.Star<PanelSlot.ConstPanelSlot>> return this.Slots;
}

@:forward
@:nativeGen
@:native("PanelWidget*")
abstract PanelWidgetPtr(cpp.Star<PanelWidget>) from cpp.Star<PanelWidget> to cpp.Star<PanelWidget>{
	@:from
	public static extern inline function fromValue(v: PanelWidget): PanelWidgetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PanelWidget {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}