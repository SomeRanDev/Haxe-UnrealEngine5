// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URigHierarchy")
@:include("Rigs/RigHierarchy.h")
@:structAccess
extern class RigHierarchy extends Object {
	private var TopologyVersion: cpp.UInt16;
	private var bEnableDirtyPropagation: Bool;
	private var TransformStackIndex: cpp.Int32;
	private var HierarchyController: cpp.Star<RigHierarchyController>;
	private var PreviousNameMap: TMap<RigElementKey, RigElementKey>;
	@:protected public var HierarchyForCacheValidation: cpp.Star<RigHierarchy>;

	public function SwitchToWorldSpace(InChild: RigElementKey, bInitial: Bool, bAffectChildren: Bool): Bool;
	public function SwitchToParent(InChild: RigElementKey, InParent: RigElementKey, bInitial: Bool, bAffectChildren: Bool): Bool;
	public function SwitchToDefaultParent(InChild: RigElementKey, bInitial: Bool, bAffectChildren: Bool): Bool;
	public function SortKeys(InKeys: cpp.Reference<TArray<RigElementKey>>): TArray<RigElementKey>;
	public function SetPose_ForBlueprint(InPose: RigPose): Void;
	public function SetParentWeightArray(InChild: RigElementKey, InWeights: TArray<RigElementWeight>, bInitial: Bool, bAffectChildren: Bool): Bool;
	public function SetParentWeight(InChild: RigElementKey, InParent: RigElementKey, InWeight: RigElementWeight, bInitial: Bool, bAffectChildren: Bool): Bool;
	public function SetLocalTransformByIndex(InElementIndex: cpp.Int32, InTransform: Transform, bInitial: Bool, bAffectChildren: Bool, bSetupUndo: Bool, bPrintPythonCommands: Bool): Void;
	public function SetLocalTransform(InKey: RigElementKey, InTransform: Transform, bInitial: Bool, bAffectChildren: Bool, bSetupUndo: Bool, bPrintPythonCommands: Bool): Void;
	public function SetGlobalTransformByIndex(InElementIndex: cpp.Int32, InTransform: Transform, bInitial: Bool, bAffectChildren: Bool, bSetupUndo: Bool): Void;
	public function SetGlobalTransform(InKey: RigElementKey, InTransform: Transform, bInitial: Bool, bAffectChildren: Bool, bSetupUndo: Bool): Void;
	public function SetCurveValueByIndex(InElementIndex: cpp.Int32, InValue: cpp.Float32, bSetupUndo: Bool): Void;
	public function SetCurveValue(InKey: RigElementKey, InValue: cpp.Float32, bSetupUndo: Bool): Void;
	public function SetControlVisibilityByIndex(InElementIndex: cpp.Int32, bVisibility: Bool): Void;
	public function SetControlVisibility(InKey: RigElementKey, bVisibility: Bool): Void;
	public function SetControlValueByIndex(InElementIndex: cpp.Int32, InValue: RigControlValue, InValueType: ERigControlValueType, bSetupUndo: Bool, bPrintPythonCommands: Bool): Void;
	public function SetControlValue(InKey: RigElementKey, InValue: RigControlValue, InValueType: ERigControlValueType, bSetupUndo: Bool, bPrintPythonCommands: Bool): Void;
	public function SetControlShapeTransformByIndex(InElementIndex: cpp.Int32, InTransform: Transform, bInitial: Bool, bSetupUndo: Bool): Void;
	public function SetControlShapeTransform(InKey: RigElementKey, InTransform: Transform, bInitial: Bool, bSetupUndo: Bool): Void;
	public function SetControlSettingsByIndex(InElementIndex: cpp.Int32, InSettings: RigControlSettings, bSetupUndo: Bool, bForce: Bool, bPrintPythonCommands: Bool): Void;
	public function SetControlSettings(InKey: RigElementKey, InSettings: RigControlSettings, bSetupUndo: Bool, bForce: Bool, bPrintPythonCommands: Bool): Void;
	public function SetControlOffsetTransformByIndex(InElementIndex: cpp.Int32, InTransform: Transform, bInitial: Bool, bAffectChildren: Bool, bSetupUndo: Bool, bPrintPythonCommands: Bool): Void;
	public function SetControlOffsetTransform(InKey: RigElementKey, InTransform: Transform, bInitial: Bool, bAffectChildren: Bool, bSetupUndo: Bool, bPrintPythonCommands: Bool): Void;
	public function SendAutoKeyEvent(InElement: RigElementKey, InOffsetInSeconds: cpp.Float32, bAsynchronous: Bool): Void;
	public function ResetPoseToInitial(InTypeFilter: ERigElementType): Void;
	public function ResetCurveValues(): Void;
	public function Reset(): Void;
	public function Num(): cpp.Int32;
	public function MakeControlValueFromVector2D(InValue: Vector2D): RigControlValue;
	public function MakeControlValueFromVector(InValue: Vector): RigControlValue;
	public function MakeControlValueFromTransformNoScale(InValue: TransformNoScale): RigControlValue;
	public function MakeControlValueFromTransform(InValue: Transform): RigControlValue;
	public function MakeControlValueFromRotator(InValue: Rotator): RigControlValue;
	public function MakeControlValueFromInt(InValue: cpp.Int32): RigControlValue;
	public function MakeControlValueFromFloat(InValue: cpp.Float32): RigControlValue;
	public function MakeControlValueFromEulerTransform(InValue: EulerTransform): RigControlValue;
	public function MakeControlValueFromBool(InValue: Bool): RigControlValue;
	public function IsValidIndex(InElementIndex: cpp.Int32): Bool;
	public function IsSelectedByIndex(InIndex: cpp.Int32): Bool;
	public function IsSelected(InKey: RigElementKey): Bool;
	public function IsParentedTo(InChild: RigElementKey, InParent: RigElementKey): Bool;
	public function GetVectorFromControlValue(InValue: RigControlValue): Vector;
	public function GetVector2DFromControlValue(InValue: RigControlValue): Vector2D;
	public function GetTransformNoScaleFromControlValue(InValue: RigControlValue): TransformNoScale;
	public function GetTransformFromControlValue(InValue: RigControlValue): Transform;
	public function GetSelectedKeys(InTypeFilter: ERigElementType): TArray<RigElementKey>;
	public function GetRotatorFromControlValue(InValue: RigControlValue): Rotator;
	public function GetRigidBodyKeys(bTraverse: Bool): TArray<RigElementKey>;
	public function GetReferenceKeys(bTraverse: Bool): TArray<RigElementKey>;
	public function GetPreviousParent(InKey: cpp.Reference<RigElementKey>): RigElementKey;
	public function GetPreviousName(InKey: cpp.Reference<RigElementKey>): FName;
	public function GetPose(bInitial: Bool): RigPose;
	public function GetParentWeightArray(InChild: RigElementKey, bInitial: Bool): TArray<RigElementWeight>;
	public function GetParentWeight(InChild: RigElementKey, InParent: RigElementKey, bInitial: Bool): RigElementWeight;
	public function GetParentTransformByIndex(InElementIndex: cpp.Int32, bInitial: Bool): Transform;
	public function GetParentTransform(InKey: RigElementKey, bInitial: Bool): Transform;
	public function GetParents(InKey: RigElementKey, bRecursive: Bool): TArray<RigElementKey>;
	public function GetNumberOfParents(InKey: RigElementKey): cpp.Int32;
	public function GetNullKeys(bTraverse: Bool): TArray<RigElementKey>;
	public function GetLocalTransformByIndex(InElementIndex: cpp.Int32, bInitial: Bool): Transform;
	public function GetLocalTransform(InKey: RigElementKey, bInitial: Bool): Transform;
	public function GetKey(InElementIndex: cpp.Int32): RigElementKey;
	public function GetIntFromControlValue(InValue: RigControlValue): cpp.Int32;
	public function GetIndex_ForBlueprint(InKey: RigElementKey): cpp.Int32;
	public function GetGlobalTransformByIndex(InElementIndex: cpp.Int32, bInitial: Bool): Transform;
	public function GetGlobalTransform(InKey: RigElementKey, bInitial: Bool): Transform;
	public function GetGlobalControlShapeTransformByIndex(InElementIndex: cpp.Int32, bInitial: Bool): Transform;
	public function GetGlobalControlShapeTransform(InKey: RigElementKey, bInitial: Bool): Transform;
	public function GetGlobalControlOffsetTransformByIndex(InElementIndex: cpp.Int32, bInitial: Bool): Transform;
	public function GetGlobalControlOffsetTransform(InKey: RigElementKey, bInitial: Bool): Transform;
	public function GetFloatFromControlValue(InValue: RigControlValue): cpp.Float32;
	public function GetFirstParent(InKey: RigElementKey): RigElementKey;
	public function GetEulerTransformFromControlValue(InValue: RigControlValue): EulerTransform;
	public function GetCurveValueByIndex(InElementIndex: cpp.Int32): cpp.Float32;
	public function GetCurveValue(InKey: RigElementKey): cpp.Float32;
	public function GetCurveKeys(): TArray<RigElementKey>;
	public function GetControlValueByIndex(InElementIndex: cpp.Int32, InValueType: ERigControlValueType): RigControlValue;
	public function GetControlValue(InKey: RigElementKey, InValueType: ERigControlValueType): RigControlValue;
	public function GetController(bCreateIfNeeded: Bool): cpp.Star<RigHierarchyController>;
	public function GetControlKeys(bTraverse: Bool): TArray<RigElementKey>;
	public function GetChildren(InKey: RigElementKey, bRecursive: Bool): TArray<RigElementKey>;
	public function GetBoneKeys(bTraverse: Bool): TArray<RigElementKey>;
	public function GetAllKeys_ForBlueprint(bTraverse: Bool): TArray<RigElementKey>;
	private function FindNull_ForBlueprintOnly(InKey: cpp.Reference<RigElementKey>): RigNullElement;
	private function FindControl_ForBlueprintOnly(InKey: cpp.Reference<RigElementKey>): RigControlElement;
	private function FindBone_ForBlueprintOnly(InKey: cpp.Reference<RigElementKey>): RigBoneElement;
	public function CopyPose(InHierarchy: cpp.Star<RigHierarchy>, bCurrent: Bool, bInitial: Bool): Void;
	public function CopyHierarchy(InHierarchy: cpp.Star<RigHierarchy>): Void;
	public function Contains_ForBlueprint(InKey: RigElementKey): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	SortKeys, Num, IsValidIndex, IsSelectedByIndex, IsSelected,
	IsParentedTo, GetSelectedKeys, GetRigidBodyKeys, GetReferenceKeys, GetPreviousParent,
	GetPreviousName, GetPose, GetParentWeightArray, GetParentWeight, GetParentTransformByIndex,
	GetParentTransform, GetParents, GetNumberOfParents, GetNullKeys, GetLocalTransformByIndex,
	GetLocalTransform, GetKey, GetIndex_ForBlueprint, GetGlobalTransformByIndex, GetGlobalTransform,
	GetGlobalControlShapeTransformByIndex, GetGlobalControlShapeTransform, GetGlobalControlOffsetTransformByIndex, GetGlobalControlOffsetTransform, GetFirstParent,
	GetCurveValueByIndex, GetCurveValue, GetCurveKeys, GetControlValueByIndex, GetControlValue,
	GetControlKeys, GetChildren, GetBoneKeys, GetAllKeys_ForBlueprint, FindNull_ForBlueprintOnly,
	FindControl_ForBlueprintOnly, FindBone_ForBlueprintOnly, Contains_ForBlueprint
)
@:nativeGen
abstract ConstRigHierarchy(RigHierarchy) from RigHierarchy {
}

@:forward
@:nativeGen
@:native("RigHierarchy*")
abstract RigHierarchyPtr(cpp.Star<RigHierarchy>) from cpp.Star<RigHierarchy> to cpp.Star<RigHierarchy>{
	@:from
	public static extern inline function fromValue(v: RigHierarchy): RigHierarchyPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RigHierarchy {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}