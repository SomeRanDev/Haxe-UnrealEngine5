// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UClothingSimulationInteractor")
@:include("ClothingSimulationInteractor.h")
@:structAccess
extern class ClothingSimulationInteractor extends Object {
	public var ClothingInteractors: TMap<FName, cpp.Star<ClothingInteractor>>;

	public function SetNumSubsteps(NumSubsteps: cpp.Int32): Void;
	public function SetNumIterations(NumIterations: cpp.Int32): Void;
	public function SetMaxNumIterations(MaxNumIterations: cpp.Int32): Void;
	public function SetAnimDriveSpringStiffness(InStiffness: cpp.Float32): Void;
	public function PhysicsAssetUpdated(): Void;
	public function GetSimulationTime(): cpp.Reference<cpp.Float32>;
	public function GetNumSubsteps(): cpp.Reference<cpp.Int32>;
	public function GetNumKinematicParticles(): cpp.Reference<cpp.Int32>;
	public function GetNumIterations(): cpp.Reference<cpp.Int32>;
	public function GetNumDynamicParticles(): cpp.Reference<cpp.Int32>;
	public function GetNumCloths(): cpp.Reference<cpp.Int32>;
	public function GetClothingInteractor(ClothingAssetName: FString): cpp.Reference<cpp.Star<ClothingInteractor>>;
	public function EnableGravityOverride(InVector: cpp.Reference<Vector>): Void;
	public function DisableGravityOverride(): Void;
	public function ClothConfigUpdated(): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetSimulationTime, GetNumSubsteps, GetNumKinematicParticles, GetNumIterations, GetNumDynamicParticles, GetNumCloths, GetClothingInteractor)
@:nativeGen
abstract ConstClothingSimulationInteractor(ClothingSimulationInteractor) from ClothingSimulationInteractor {
	public extern var ClothingInteractors(get, never): TMap<FName, cpp.Star<ClothingInteractor.ConstClothingInteractor>>;
	public inline extern function get_ClothingInteractors(): TMap<FName, cpp.Star<ClothingInteractor.ConstClothingInteractor>> return this.ClothingInteractors;
}

@:forward
@:nativeGen
@:native("ClothingSimulationInteractor*")
abstract ClothingSimulationInteractorPtr(cpp.Star<ClothingSimulationInteractor>) from cpp.Star<ClothingSimulationInteractor> to cpp.Star<ClothingSimulationInteractor>{
	@:from
	public static extern inline function fromValue(v: ClothingSimulationInteractor): ClothingSimulationInteractorPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ClothingSimulationInteractor {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}