// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULevelEditorSubsystem")
@:include("LevelEditorSubsystem.h")
@:structAccess
extern class LevelEditorSubsystem extends EditorSubsystem {
	public function SetCurrentLevelByName(LevelName: FName): Bool;
	public function SetAllowsCinematicControl(bAllow: Bool, ViewportConfigKey: FName): Void;
	public function SaveCurrentLevel(): Bool;
	public function SaveAllDirtyLevels(): Bool;
	public function PilotLevelActor(ActorToPilot: cpp.Star<Actor>, ViewportConfigKey: FName): Void;
	public function NewLevelFromTemplate(AssetPath: FString, TemplateAssetPath: FString): Bool;
	public function NewLevel(AssetPath: FString): Bool;
	public function LoadLevel(AssetPath: FString): Bool;
	public function IsInPlayInEditor(): Bool;
	public function GetViewportConfigKeys(): TArray<FName>;
	public function GetSelectionSet(): cpp.Star<TypedElementSelectionSet>;
	public function GetCurrentLevel(): cpp.Star<Level>;
	public function GetAllowsCinematicControl(ViewportConfigKey: FName): Bool;
	public function GetActiveViewportConfigKey(): FName;
	public function EjectPilotLevelActor(ViewportConfigKey: FName): Void;
	public function EditorSetGameView(bGameView: Bool, ViewportConfigKey: FName): Void;
	public function EditorRequestEndPlay(): Void;
	public function EditorPlaySimulate(): Void;
	public function EditorInvalidateViewports(): Void;
	public function EditorGetGameView(ViewportConfigKey: FName): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(IsInPlayInEditor)
@:nativeGen
abstract ConstLevelEditorSubsystem(LevelEditorSubsystem) from LevelEditorSubsystem {
}

@:forward
@:nativeGen
@:native("LevelEditorSubsystem*")
abstract LevelEditorSubsystemPtr(cpp.Star<LevelEditorSubsystem>) from cpp.Star<LevelEditorSubsystem> to cpp.Star<LevelEditorSubsystem>{
	@:from
	public static extern inline function fromValue(v: LevelEditorSubsystem): LevelEditorSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LevelEditorSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}