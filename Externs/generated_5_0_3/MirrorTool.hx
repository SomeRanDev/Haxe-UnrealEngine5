// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMirrorTool")
@:include("MirrorTool.h")
@:structAccess
extern class MirrorTool extends MultiSelectionMeshEditingTool {
	public var Settings: cpp.Star<MirrorToolProperties>;
	public var ToolActions: cpp.Star<MirrorToolActionPropertySet>;
	public var MeshesToMirror: TArray<cpp.Star<DynamicMeshReplacementChangeTarget>>;
	public var Previews: TArray<cpp.Star<MeshOpPreviewWithBackgroundCompute>>;
	public var PlaneMechanic: cpp.Star<ConstructionPlaneMechanic>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMirrorTool(MirrorTool) from MirrorTool {
	public extern var Settings(get, never): cpp.Star<MirrorToolProperties.ConstMirrorToolProperties>;
	public inline extern function get_Settings(): cpp.Star<MirrorToolProperties.ConstMirrorToolProperties> return this.Settings;
	public extern var ToolActions(get, never): cpp.Star<MirrorToolActionPropertySet.ConstMirrorToolActionPropertySet>;
	public inline extern function get_ToolActions(): cpp.Star<MirrorToolActionPropertySet.ConstMirrorToolActionPropertySet> return this.ToolActions;
	public extern var MeshesToMirror(get, never): TArray<cpp.Star<DynamicMeshReplacementChangeTarget.ConstDynamicMeshReplacementChangeTarget>>;
	public inline extern function get_MeshesToMirror(): TArray<cpp.Star<DynamicMeshReplacementChangeTarget.ConstDynamicMeshReplacementChangeTarget>> return this.MeshesToMirror;
	public extern var Previews(get, never): TArray<cpp.Star<MeshOpPreviewWithBackgroundCompute.ConstMeshOpPreviewWithBackgroundCompute>>;
	public inline extern function get_Previews(): TArray<cpp.Star<MeshOpPreviewWithBackgroundCompute.ConstMeshOpPreviewWithBackgroundCompute>> return this.Previews;
	public extern var PlaneMechanic(get, never): cpp.Star<ConstructionPlaneMechanic.ConstConstructionPlaneMechanic>;
	public inline extern function get_PlaneMechanic(): cpp.Star<ConstructionPlaneMechanic.ConstConstructionPlaneMechanic> return this.PlaneMechanic;
}

@:forward
@:nativeGen
@:native("MirrorTool*")
abstract MirrorToolPtr(cpp.Star<MirrorTool>) from cpp.Star<MirrorTool> to cpp.Star<MirrorTool>{
	@:from
	public static extern inline function fromValue(v: MirrorTool): MirrorToolPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MirrorTool {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}