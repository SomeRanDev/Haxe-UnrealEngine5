// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UVRNotificationsComponent")
@:include("VRNotificationsComponent.h")
extern class VRNotificationsComp extends ActorComp {
	public var HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var HMDTrackingInitializedDelegate: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var HMDRecenteredDelegate: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var HMDLostDelegate: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var HMDReconnectedDelegate: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var HMDConnectCanceledDelegate: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var HMDPutOnHeadDelegate: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var HMDRemovedFromHeadDelegate: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var VRControllerRecenteredDelegate: HaxeMulticastSparseDelegateProperty<() -> Void>;

	public function VRNotificationsDelegate__DelegateSignature(): Void;
}

@:forward()
@:nativeGen
abstract ConstVRNotificationsComp(VRNotificationsComp) from VRNotificationsComp {
	public extern var HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate;
	public extern var HMDTrackingInitializedDelegate(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_HMDTrackingInitializedDelegate(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.HMDTrackingInitializedDelegate;
	public extern var HMDRecenteredDelegate(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_HMDRecenteredDelegate(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.HMDRecenteredDelegate;
	public extern var HMDLostDelegate(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_HMDLostDelegate(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.HMDLostDelegate;
	public extern var HMDReconnectedDelegate(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_HMDReconnectedDelegate(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.HMDReconnectedDelegate;
	public extern var HMDConnectCanceledDelegate(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_HMDConnectCanceledDelegate(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.HMDConnectCanceledDelegate;
	public extern var HMDPutOnHeadDelegate(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_HMDPutOnHeadDelegate(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.HMDPutOnHeadDelegate;
	public extern var HMDRemovedFromHeadDelegate(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_HMDRemovedFromHeadDelegate(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.HMDRemovedFromHeadDelegate;
	public extern var VRControllerRecenteredDelegate(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_VRControllerRecenteredDelegate(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.VRControllerRecenteredDelegate;
}