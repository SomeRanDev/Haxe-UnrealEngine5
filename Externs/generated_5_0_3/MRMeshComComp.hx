// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMRMeshComponent")
@:include("MRMeshComponent.h")
extern class MRMeshComComp extends PrimitiveComp {
	public var Material: cpp.Star<MaterialInterface>;
	public var WireframeMaterial: cpp.Star<MaterialInterface>;
	public var bCreateMeshProxySections: Bool;
	public var bUpdateNavMeshOnMeshUpdate: Bool;
	public var bNeverCreateCollisionMesh: Bool;
	public var BodyHolders: TArray<cpp.Star<MRMeshBodyHolder>>;

	public function SetWireframeMaterial(InMaterial: cpp.Star<MaterialInterface>): Void;
	public function SetWireframeColor(InColor: cpp.Reference<FLinearColor>): Void;
	public function SetUseWireframe(bUseWireframe: Bool): Void;
	public function SetEnableMeshOcclusion(bEnable: Bool): Void;
	public function RequestNavMeshUpdate(): Void;
	public function IsConnected(): cpp.Reference<Bool>;
	public function GetWireframeColor(): cpp.Reference<FLinearColor>;
	public function GetUseWireframe(): cpp.Reference<Bool>;
	public function GetEnableMeshOcclusion(): cpp.Reference<Bool>;
	public function ForceNavMeshUpdate(): Void;
	public function Clear(): Void;
}

@:forward(IsConnected, GetWireframeColor, GetUseWireframe, GetEnableMeshOcclusion)
abstract ConstMRMeshComComp(MRMeshComComp) from MRMeshComComp {
}