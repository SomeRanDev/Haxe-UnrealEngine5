// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTemplateProjectDefs")
@:include("TemplateProjectDefs.h")
extern class TemplateProjectDefs extends Object {
	public var LocalizedDisplayNames: TArray<LocalizedTemplateString>;
	public var LocalizedDescriptions: TArray<LocalizedTemplateString>;
	public var FoldersToIgnore: TArray<FString>;
	public var FilesToIgnore: TArray<FString>;
	public var FolderRenames: TArray<TemplateFolderRename>;
	public var FilenameReplacements: TArray<TemplateReplacement>;
	public var ReplacementsInFiles: TArray<TemplateReplacement>;
	public var SortKey: FString;
	public var Categories: TArray<FName>;
	public var ClassTypes: FString;
	public var AssetTypes: FString;
	public var bAllowProjectCreation: Bool;
	public var bIsEnterprise: Bool;
	public var bIsBlank: Bool;
	public var bThumbnailAsIcon: Bool;
	public var HiddenSettings: TArray<ETemplateSetting>;
	public var PacksToInclude: TArray<FString>;
	public var EditDetailLevelPreference: EFeaturePackDetailLevel;
	public var SharedContentPacks: TArray<FeaturePackLevelSet>;
	public var StarterContent: FString;
}

@:forward()
@:nativeGen
abstract ConstTemplateProjectDefs(TemplateProjectDefs) from TemplateProjectDefs {
	public extern var LocalizedDisplayNames(get, never): TArray<LocalizedTemplateString>;
	public inline extern function get_LocalizedDisplayNames(): TArray<LocalizedTemplateString> return this.LocalizedDisplayNames;
	public extern var LocalizedDescriptions(get, never): TArray<LocalizedTemplateString>;
	public inline extern function get_LocalizedDescriptions(): TArray<LocalizedTemplateString> return this.LocalizedDescriptions;
	public extern var FoldersToIgnore(get, never): TArray<FString>;
	public inline extern function get_FoldersToIgnore(): TArray<FString> return this.FoldersToIgnore;
	public extern var FilesToIgnore(get, never): TArray<FString>;
	public inline extern function get_FilesToIgnore(): TArray<FString> return this.FilesToIgnore;
	public extern var FolderRenames(get, never): TArray<TemplateFolderRename>;
	public inline extern function get_FolderRenames(): TArray<TemplateFolderRename> return this.FolderRenames;
	public extern var FilenameReplacements(get, never): TArray<TemplateReplacement>;
	public inline extern function get_FilenameReplacements(): TArray<TemplateReplacement> return this.FilenameReplacements;
	public extern var ReplacementsInFiles(get, never): TArray<TemplateReplacement>;
	public inline extern function get_ReplacementsInFiles(): TArray<TemplateReplacement> return this.ReplacementsInFiles;
	public extern var SortKey(get, never): FString;
	public inline extern function get_SortKey(): FString return this.SortKey;
	public extern var Categories(get, never): TArray<FName>;
	public inline extern function get_Categories(): TArray<FName> return this.Categories;
	public extern var ClassTypes(get, never): FString;
	public inline extern function get_ClassTypes(): FString return this.ClassTypes;
	public extern var AssetTypes(get, never): FString;
	public inline extern function get_AssetTypes(): FString return this.AssetTypes;
	public extern var bAllowProjectCreation(get, never): Bool;
	public inline extern function get_bAllowProjectCreation(): Bool return this.bAllowProjectCreation;
	public extern var bIsEnterprise(get, never): Bool;
	public inline extern function get_bIsEnterprise(): Bool return this.bIsEnterprise;
	public extern var bIsBlank(get, never): Bool;
	public inline extern function get_bIsBlank(): Bool return this.bIsBlank;
	public extern var bThumbnailAsIcon(get, never): Bool;
	public inline extern function get_bThumbnailAsIcon(): Bool return this.bThumbnailAsIcon;
	public extern var HiddenSettings(get, never): TArray<ETemplateSetting>;
	public inline extern function get_HiddenSettings(): TArray<ETemplateSetting> return this.HiddenSettings;
	public extern var PacksToInclude(get, never): TArray<FString>;
	public inline extern function get_PacksToInclude(): TArray<FString> return this.PacksToInclude;
	public extern var EditDetailLevelPreference(get, never): EFeaturePackDetailLevel;
	public inline extern function get_EditDetailLevelPreference(): EFeaturePackDetailLevel return this.EditDetailLevelPreference;
	public extern var SharedContentPacks(get, never): TArray<FeaturePackLevelSet>;
	public inline extern function get_SharedContentPacks(): TArray<FeaturePackLevelSet> return this.SharedContentPacks;
	public extern var StarterContent(get, never): FString;
	public inline extern function get_StarterContent(): FString return this.StarterContent;
}