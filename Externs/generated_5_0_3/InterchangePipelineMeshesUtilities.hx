// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangePipelineMeshesUtilities")
@:include("InterchangePipelineMeshesUtilities.h")
@:structAccess
extern class InterchangePipelineMeshesUtilities extends Object {
	public function IsValidMeshInstanceUid(MeshInstanceUid: FString): cpp.Reference<Bool>;
	public function IsValidMeshGeometryUid(MeshGeometryUid: FString): cpp.Reference<Bool>;
	public function GetMeshInstanceSkeletonRootUid(MeshInstanceUid: FString): cpp.Reference<FString>;
	public function GetMeshInstanceByUid(MeshInstanceUid: FString): cpp.Reference<InterchangeMeshInstance>;
	public function GetMeshGeometrySkeletonRootUid(MeshGeometryUid: FString): cpp.Reference<FString>;
	public function GetMeshGeometryByUid(MeshGeometryUid: FString): cpp.Reference<InterchangeMeshGeometry>;
	public function GetAllStaticMeshInstance(MeshInstanceUids: cpp.Reference<TArray<FString>>): Void;
	public function GetAllStaticMeshGeometry(MeshGeometryUids: cpp.Reference<TArray<FString>>): Void;
	public function GetAllSkinnedMeshInstance(MeshInstanceUids: cpp.Reference<TArray<FString>>): Void;
	public function GetAllSkinnedMeshGeometry(MeshGeometryUids: cpp.Reference<TArray<FString>>): Void;
	public function GetAllMeshInstanceUidsUsingMeshGeometryUid(MeshGeometryUid: FString, MeshInstanceUids: cpp.Reference<TArray<FString>>): Void;
	public function GetAllMeshInstanceUids(MeshInstanceUids: cpp.Reference<TArray<FString>>): Void;
	public function GetAllMeshGeometryNotInstanced(MeshGeometryUids: cpp.Reference<TArray<FString>>): Void;
	public function GetAllMeshGeometry(MeshGeometryUids: cpp.Reference<TArray<FString>>): Void;
	public function CreateInterchangePipelineMeshesUtilities(BaseNodeContainer: cpp.Star<InterchangeBaseNodeContainer>): cpp.Reference<cpp.Star<InterchangePipelineMeshesUtilities>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	IsValidMeshInstanceUid, IsValidMeshGeometryUid, GetMeshInstanceSkeletonRootUid, GetMeshInstanceByUid, GetMeshGeometrySkeletonRootUid,
	GetMeshGeometryByUid, GetAllStaticMeshInstance, GetAllStaticMeshGeometry, GetAllSkinnedMeshInstance, GetAllSkinnedMeshGeometry,
	GetAllMeshInstanceUidsUsingMeshGeometryUid, GetAllMeshInstanceUids, GetAllMeshGeometryNotInstanced, GetAllMeshGeometry
)
@:nativeGen
abstract ConstInterchangePipelineMeshesUtilities(InterchangePipelineMeshesUtilities) from InterchangePipelineMeshesUtilities {
}

@:forward
@:nativeGen
@:native("InterchangePipelineMeshesUtilities*")
abstract InterchangePipelineMeshesUtilitiesPtr(cpp.Star<InterchangePipelineMeshesUtilities>) from cpp.Star<InterchangePipelineMeshesUtilities> to cpp.Star<InterchangePipelineMeshesUtilities>{
	@:from
	public static extern inline function fromValue(v: InterchangePipelineMeshesUtilities): InterchangePipelineMeshesUtilitiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangePipelineMeshesUtilities {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}