// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDatasmithGLTFSceneImportData")
@:include("DatasmithAssetImportData.h")
@:structAccess
extern class DatasmithGLTFSceneImportData extends DatasmithSceneImportData {
	public var Generator: FString;
	public var Version: cpp.Float32;
	public var Author: FString;
	public var License: FString;
	public var Source: FString;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstDatasmithGLTFSceneImportData(DatasmithGLTFSceneImportData) from DatasmithGLTFSceneImportData {
	public extern var Generator(get, never): FString;
	public inline extern function get_Generator(): FString return this.Generator;
	public extern var Version(get, never): cpp.Float32;
	public inline extern function get_Version(): cpp.Float32 return this.Version;
	public extern var Author(get, never): FString;
	public inline extern function get_Author(): FString return this.Author;
	public extern var License(get, never): FString;
	public inline extern function get_License(): FString return this.License;
	public extern var Source(get, never): FString;
	public inline extern function get_Source(): FString return this.Source;
}

@:forward
@:nativeGen
@:native("DatasmithGLTFSceneImportData*")
abstract DatasmithGLTFSceneImportDataPtr(cpp.Star<DatasmithGLTFSceneImportData>) from cpp.Star<DatasmithGLTFSceneImportData> to cpp.Star<DatasmithGLTFSceneImportData>{
	@:from
	public static extern inline function fromValue(v: DatasmithGLTFSceneImportData): DatasmithGLTFSceneImportDataPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DatasmithGLTFSceneImportData {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}