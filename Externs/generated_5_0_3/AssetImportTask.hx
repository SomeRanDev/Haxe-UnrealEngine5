// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAssetImportTask")
@:include("AssetImportTask.h")
@:structAccess
extern class AssetImportTask extends Object {
	public var Filename: FString;
	public var DestinationPath: FString;
	public var DestinationName: FString;
	public var bReplaceExisting: Bool;
	public var bReplaceExistingSettings: Bool;
	public var bAutomated: Bool;
	public var bSave: Bool;
	public var Factory: cpp.Star<Factory>;
	public var Options: cpp.Star<Object>;
	public var ImportedObjectPaths: TArray<FString>;
	public var Result: TArray<cpp.Star<Object>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAssetImportTask(AssetImportTask) from AssetImportTask {
	public extern var Filename(get, never): FString;
	public inline extern function get_Filename(): FString return this.Filename;
	public extern var DestinationPath(get, never): FString;
	public inline extern function get_DestinationPath(): FString return this.DestinationPath;
	public extern var DestinationName(get, never): FString;
	public inline extern function get_DestinationName(): FString return this.DestinationName;
	public extern var bReplaceExisting(get, never): Bool;
	public inline extern function get_bReplaceExisting(): Bool return this.bReplaceExisting;
	public extern var bReplaceExistingSettings(get, never): Bool;
	public inline extern function get_bReplaceExistingSettings(): Bool return this.bReplaceExistingSettings;
	public extern var bAutomated(get, never): Bool;
	public inline extern function get_bAutomated(): Bool return this.bAutomated;
	public extern var bSave(get, never): Bool;
	public inline extern function get_bSave(): Bool return this.bSave;
	public extern var Factory(get, never): cpp.Star<Factory.ConstFactory>;
	public inline extern function get_Factory(): cpp.Star<Factory.ConstFactory> return this.Factory;
	public extern var Options(get, never): cpp.Star<Object.ConstObject>;
	public inline extern function get_Options(): cpp.Star<Object.ConstObject> return this.Options;
	public extern var ImportedObjectPaths(get, never): TArray<FString>;
	public inline extern function get_ImportedObjectPaths(): TArray<FString> return this.ImportedObjectPaths;
	public extern var Result(get, never): TArray<cpp.Star<Object.ConstObject>>;
	public inline extern function get_Result(): TArray<cpp.Star<Object.ConstObject>> return this.Result;
}