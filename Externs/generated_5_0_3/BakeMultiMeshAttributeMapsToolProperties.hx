// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBakeMultiMeshAttributeMapsToolProperties")
@:include("BakeMultiMeshAttributeMapsTool.h")
@:structAccess
extern class BakeMultiMeshAttributeMapsToolProperties extends InteractiveToolPropertySet {
	public var MapTypes: cpp.Int32;
	public var MapPreview: FString;
	public var Resolution: EBakeTextureResolution;
	public var BitDepth: EBakeTextureBitDepth;
	public var SamplesPerPixel: EBakeTextureSamplesPerPixel;
	public var MapPreviewNamesList: TArray<FString>;

	public function GetMapPreviewNamesFunc(): cpp.Reference<TArray<FString>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstBakeMultiMeshAttributeMapsToolProperties(BakeMultiMeshAttributeMapsToolProperties) from BakeMultiMeshAttributeMapsToolProperties {
	public extern var MapTypes(get, never): cpp.Int32;
	public inline extern function get_MapTypes(): cpp.Int32 return this.MapTypes;
	public extern var MapPreview(get, never): FString;
	public inline extern function get_MapPreview(): FString return this.MapPreview;
	public extern var Resolution(get, never): EBakeTextureResolution;
	public inline extern function get_Resolution(): EBakeTextureResolution return this.Resolution;
	public extern var BitDepth(get, never): EBakeTextureBitDepth;
	public inline extern function get_BitDepth(): EBakeTextureBitDepth return this.BitDepth;
	public extern var SamplesPerPixel(get, never): EBakeTextureSamplesPerPixel;
	public inline extern function get_SamplesPerPixel(): EBakeTextureSamplesPerPixel return this.SamplesPerPixel;
	public extern var MapPreviewNamesList(get, never): TArray<FString>;
	public inline extern function get_MapPreviewNamesList(): TArray<FString> return this.MapPreviewNamesList;
}

@:forward
@:nativeGen
@:native("BakeMultiMeshAttributeMapsToolProperties*")
abstract BakeMultiMeshAttributeMapsToolPropertiesPtr(cpp.Star<BakeMultiMeshAttributeMapsToolProperties>) from cpp.Star<BakeMultiMeshAttributeMapsToolProperties> to cpp.Star<BakeMultiMeshAttributeMapsToolProperties>{
	@:from
	public static extern inline function fromValue(v: BakeMultiMeshAttributeMapsToolProperties): BakeMultiMeshAttributeMapsToolPropertiesPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BakeMultiMeshAttributeMapsToolProperties {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}