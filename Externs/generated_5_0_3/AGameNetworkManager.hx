// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AGameNetworkManager")
@:include("GameFramework/GameNetworkManager.h")
extern class AGameNetworkManager extends AInfo {
	public var BadPacketLossThreshold: cpp.Float32;
	public var SeverePacketLossThreshold: cpp.Float32;
	public var BadPingThreshold: cpp.Int32;
	public var SeverePingThreshold: cpp.Int32;
	public var AdjustedNetSpeed: cpp.Int32;
	public var LastNetSpeedUpdateTime: cpp.Float32;
	public var TotalNetBandwidth: cpp.Int32;
	public var MinDynamicBandwidth: cpp.Int32;
	public var MaxDynamicBandwidth: cpp.Int32;
	public var bIsStandbyCheckingEnabled: Bool;
	public var bHasStandbyCheatTriggered: Bool;
	public var StandbyRxCheatTime: cpp.Float32;
	public var StandbyTxCheatTime: cpp.Float32;
	public var PercentMissingForRxStandby: cpp.Float32;
	public var PercentMissingForTxStandby: cpp.Float32;
	public var PercentForBadPing: cpp.Float32;
	public var JoinInProgressStandbyWaitTime: cpp.Float32;
	public var MoveRepSize: cpp.Float32;
	public var MAXPOSITIONERRORSQUARED: cpp.Float32;
	public var MAXNEARZEROVELOCITYSQUARED: cpp.Float32;
	public var CLIENTADJUSTUPDATECOST: cpp.Float32;
	public var MAXCLIENTUPDATEINTERVAL: cpp.Float32;
	public var MaxClientForcedUpdateDuration: cpp.Float32;
	public var ServerForcedUpdateHitchThreshold: cpp.Float32;
	public var ServerForcedUpdateHitchCooldown: cpp.Float32;
	public var MaxMoveDeltaTime: cpp.Float32;
	public var MaxClientSmoothingDeltaTime: cpp.Float32;
	public var ClientNetSendMoveDeltaTime: cpp.Float32;
	public var ClientNetSendMoveDeltaTimeThrottled: cpp.Float32;
	public var ClientNetSendMoveDeltaTimeStationary: cpp.Float32;
	public var ClientNetSendMoveThrottleAtNetSpeed: cpp.Int32;
	public var ClientNetSendMoveThrottleOverPlayerCount: cpp.Int32;
	public var ClientAuthorativePosition: Bool;
	public var ClientErrorUpdateRateLimit: cpp.Float32;
	public var ClientNetCamUpdateDeltaTime: cpp.Float32;
	public var ClientNetCamUpdatePositionLimit: cpp.Float32;
	public var bMovementTimeDiscrepancyDetection: Bool;
	public var bMovementTimeDiscrepancyResolution: Bool;
	public var MovementTimeDiscrepancyMaxTimeMargin: cpp.Float32;
	public var MovementTimeDiscrepancyMinTimeMargin: cpp.Float32;
	public var MovementTimeDiscrepancyResolutionRate: cpp.Float32;
	public var MovementTimeDiscrepancyDriftAllowance: cpp.Float32;
	public var bMovementTimeDiscrepancyForceCorrectionsDuringResolution: Bool;
	public var bUseDistanceBasedRelevancy: Bool;
}
