// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovieSceneTrackExtensions")
@:include("ExtensionLibraries/MovieSceneTrackExtensions.h")
@:structAccess
extern class MovieSceneTrackExtensions extends BlueprintFunctionLibrary {
	public function SetTrackRowDisplayName(Track: cpp.Star<MovieSceneTrack>, InName: cpp.Reference<FText>, RowIndex: cpp.Int32): Void;
	public function SetSortingOrder(Track: cpp.Star<MovieSceneTrack>, SortingOrder: cpp.Int32): Void;
	public function SetSectionToKey(Track: cpp.Star<MovieSceneTrack>, Section: cpp.Star<MovieSceneSection>): Void;
	public function SetDisplayName(Track: cpp.Star<MovieSceneTrack>, InName: cpp.Reference<FText>): Void;
	public function SetColorTint(Track: cpp.Star<MovieSceneTrack>, ColorTint: cpp.Reference<Color>): Void;
	public function RemoveSection(Track: cpp.Star<MovieSceneTrack>, Section: cpp.Star<MovieSceneSection>): Void;
	public function GetTrackRowDisplayName(Track: cpp.Star<MovieSceneTrack>, RowIndex: cpp.Int32): cpp.Reference<FText>;
	public function GetSortingOrder(Track: cpp.Star<MovieSceneTrack>): cpp.Reference<cpp.Int32>;
	public function GetSectionToKey(Track: cpp.Star<MovieSceneTrack>): cpp.Reference<cpp.Star<MovieSceneSection>>;
	public function GetSections(Track: cpp.Star<MovieSceneTrack>): cpp.Reference<TArray<cpp.Star<MovieSceneSection>>>;
	public function GetDisplayName(Track: cpp.Star<MovieSceneTrack>): cpp.Reference<FText>;
	public function GetColorTint(Track: cpp.Star<MovieSceneTrack>): cpp.Reference<Color>;
	public function AddSection(Track: cpp.Star<MovieSceneTrack>): cpp.Reference<cpp.Star<MovieSceneSection>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMovieSceneTrackExtensions(MovieSceneTrackExtensions) from MovieSceneTrackExtensions {
}

@:forward
@:nativeGen
@:native("MovieSceneTrackExtensions*")
abstract MovieSceneTrackExtensionsPtr(cpp.Star<MovieSceneTrackExtensions>) from cpp.Star<MovieSceneTrackExtensions> to cpp.Star<MovieSceneTrackExtensions>{
	@:from
	public static extern inline function fromValue(v: MovieSceneTrackExtensions): MovieSceneTrackExtensionsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MovieSceneTrackExtensions {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}