// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("FGPUSpriteEmitterInfo")
@:include("Particles/TypeData/ParticleModuleTypeDataGpu.h")
extern class FGPUSpriteEmitterInfo {
	public var RequiredModule: TObjectPtr<UParticleModuleRequired>;
	public var SpawnModule: TObjectPtr<UParticleModuleSpawn>;
	public var SpawnPerUnitModule: TObjectPtr<UParticleModuleSpawnPerUnit>;
	public var SpawnModules: TArray<TObjectPtr<UParticleModule>>;
	public var LocalVectorField: FGPUSpriteLocalVectorFieldInfo;
	public var VectorFieldScale: FFloatDistribution;
	public var DragCoefficient: FFloatDistribution;
	public var PointAttractorStrength: FFloatDistribution;
	public var Resilience: FFloatDistribution;
	public var ConstantAcceleration: FVector;
	public var PointAttractorPosition: FVector;
	public var PointAttractorRadiusSq: cpp.Float32;
	public var OrbitOffsetBase: FVector;
	public var OrbitOffsetRange: FVector;
	public var InvMaxSize: FVector2D;
	public var InvRotationRateScale: cpp.Float32;
	public var MaxLifetime: cpp.Float32;
	public var MaxParticleCount: cpp.Int32;
	public var ScreenAlignment: EParticleScreenAlignment;
	public var LockAxisFlag: EParticleAxisLock;
	public var bEnableCollision: Bool;
	public var CollisionMode: EParticleCollisionMode;
	public var bRemoveHMDRoll: Bool;
	public var MinFacingCameraBlendDistance: cpp.Float32;
	public var MaxFacingCameraBlendDistance: cpp.Float32;
	public var DynamicColor: FRawDistributionVector;
	public var DynamicAlpha: FRawDistributionFloat;
	public var DynamicColorScale: FRawDistributionVector;
	public var DynamicAlphaScale: FRawDistributionFloat;
}