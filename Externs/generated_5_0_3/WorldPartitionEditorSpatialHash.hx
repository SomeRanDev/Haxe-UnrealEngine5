// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWorldPartitionEditorSpatialHash")
@:include("WorldPartition/WorldPartitionEditorSpatialHash.h")
@:structAccess
extern class WorldPartitionEditorSpatialHash extends WorldPartitionEditorHash {
	public var CellSize: cpp.Int32;
	public var WantedCellSize: cpp.Int32;
	public var Cells: TSet<cpp.Star<WorldPartitionEditorCell>>;
	public var AlwaysLoadedCell: cpp.Star<WorldPartitionEditorCell>;
	public var WorldImage: SoftObjectPath;
	public var WorldImageTopLeftW: Vector2D;
	public var WorldImageBottomRightW: Vector2D;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstWorldPartitionEditorSpatialHash(WorldPartitionEditorSpatialHash) from WorldPartitionEditorSpatialHash {
	public extern var CellSize(get, never): cpp.Int32;
	public inline extern function get_CellSize(): cpp.Int32 return this.CellSize;
	public extern var WantedCellSize(get, never): cpp.Int32;
	public inline extern function get_WantedCellSize(): cpp.Int32 return this.WantedCellSize;
	public extern var Cells(get, never): TSet<cpp.Star<WorldPartitionEditorCell.ConstWorldPartitionEditorCell>>;
	public inline extern function get_Cells(): TSet<cpp.Star<WorldPartitionEditorCell.ConstWorldPartitionEditorCell>> return this.Cells;
	public extern var AlwaysLoadedCell(get, never): cpp.Star<WorldPartitionEditorCell.ConstWorldPartitionEditorCell>;
	public inline extern function get_AlwaysLoadedCell(): cpp.Star<WorldPartitionEditorCell.ConstWorldPartitionEditorCell> return this.AlwaysLoadedCell;
	public extern var WorldImage(get, never): SoftObjectPath;
	public inline extern function get_WorldImage(): SoftObjectPath return this.WorldImage;
	public extern var WorldImageTopLeftW(get, never): Vector2D;
	public inline extern function get_WorldImageTopLeftW(): Vector2D return this.WorldImageTopLeftW;
	public extern var WorldImageBottomRightW(get, never): Vector2D;
	public inline extern function get_WorldImageBottomRightW(): Vector2D return this.WorldImageBottomRightW;
}

@:forward
@:nativeGen
@:native("WorldPartitionEditorSpatialHash*")
abstract WorldPartitionEditorSpatialHashPtr(cpp.Star<WorldPartitionEditorSpatialHash>) from cpp.Star<WorldPartitionEditorSpatialHash> to cpp.Star<WorldPartitionEditorSpatialHash>{
	@:from
	public static extern inline function fromValue(v: WorldPartitionEditorSpatialHash): WorldPartitionEditorSpatialHashPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): WorldPartitionEditorSpatialHash {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}