// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UOculusHMDRuntimeSettings")
@:include("OculusHMDRuntimeSettings.h")
extern class OculusHMDRuntimeSettings extends Object {
	public var bAutoEnabled: Bool;
	public var SplashDescs: TArray<OculusSplashDesc>;
	public var bEnableSpecificColorGamut: Bool;
	public var ColorSpace: EColorSpace;
	public var bSupportsDash: Bool;
	public var bCompositesDepth: Bool;
	public var bHQDistortion: Bool;
	public var PixelDensityMin: cpp.Float32;
	public var PixelDensityMax: cpp.Float32;
	public var CPULevel: cpp.Int32;
	public var GPULevel: cpp.Int32;
	public var FFRLevel: EFixedFoveatedRenderingLevel;
	public var FFRDynamic: Bool;
	public var bChromaCorrection: Bool;
	public var bRecenterHMDWithController: Bool;
	public var bFocusAware: Bool;
	public var bLateLatching: Bool;
	public var bRequiresSystemKeyboard: Bool;
	public var HandTrackingSupport: EHandTrackingSupport;
	public var bPhaseSync: Bool;
}

@:forward()
@:nativeGen
abstract ConstOculusHMDRuntimeSettings(OculusHMDRuntimeSettings) from OculusHMDRuntimeSettings {
	public extern var bAutoEnabled(get, never): Bool;
	public inline extern function get_bAutoEnabled(): Bool return this.bAutoEnabled;
	public extern var SplashDescs(get, never): TArray<OculusSplashDesc>;
	public inline extern function get_SplashDescs(): TArray<OculusSplashDesc> return this.SplashDescs;
	public extern var bEnableSpecificColorGamut(get, never): Bool;
	public inline extern function get_bEnableSpecificColorGamut(): Bool return this.bEnableSpecificColorGamut;
	public extern var ColorSpace(get, never): EColorSpace;
	public inline extern function get_ColorSpace(): EColorSpace return this.ColorSpace;
	public extern var bSupportsDash(get, never): Bool;
	public inline extern function get_bSupportsDash(): Bool return this.bSupportsDash;
	public extern var bCompositesDepth(get, never): Bool;
	public inline extern function get_bCompositesDepth(): Bool return this.bCompositesDepth;
	public extern var bHQDistortion(get, never): Bool;
	public inline extern function get_bHQDistortion(): Bool return this.bHQDistortion;
	public extern var PixelDensityMin(get, never): cpp.Float32;
	public inline extern function get_PixelDensityMin(): cpp.Float32 return this.PixelDensityMin;
	public extern var PixelDensityMax(get, never): cpp.Float32;
	public inline extern function get_PixelDensityMax(): cpp.Float32 return this.PixelDensityMax;
	public extern var CPULevel(get, never): cpp.Int32;
	public inline extern function get_CPULevel(): cpp.Int32 return this.CPULevel;
	public extern var GPULevel(get, never): cpp.Int32;
	public inline extern function get_GPULevel(): cpp.Int32 return this.GPULevel;
	public extern var FFRLevel(get, never): EFixedFoveatedRenderingLevel;
	public inline extern function get_FFRLevel(): EFixedFoveatedRenderingLevel return this.FFRLevel;
	public extern var FFRDynamic(get, never): Bool;
	public inline extern function get_FFRDynamic(): Bool return this.FFRDynamic;
	public extern var bChromaCorrection(get, never): Bool;
	public inline extern function get_bChromaCorrection(): Bool return this.bChromaCorrection;
	public extern var bRecenterHMDWithController(get, never): Bool;
	public inline extern function get_bRecenterHMDWithController(): Bool return this.bRecenterHMDWithController;
	public extern var bFocusAware(get, never): Bool;
	public inline extern function get_bFocusAware(): Bool return this.bFocusAware;
	public extern var bLateLatching(get, never): Bool;
	public inline extern function get_bLateLatching(): Bool return this.bLateLatching;
	public extern var bRequiresSystemKeyboard(get, never): Bool;
	public inline extern function get_bRequiresSystemKeyboard(): Bool return this.bRequiresSystemKeyboard;
	public extern var HandTrackingSupport(get, never): EHandTrackingSupport;
	public inline extern function get_HandTrackingSupport(): EHandTrackingSupport return this.HandTrackingSupport;
	public extern var bPhaseSync(get, never): Bool;
	public inline extern function get_bPhaseSync(): Bool return this.bPhaseSync;
}