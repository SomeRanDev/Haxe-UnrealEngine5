// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTakeMetaData")
@:include("TakeMetaData.h")
extern class TakeMetaData extends Object {
	public var bIsLocked: Bool;
	public var Slate: FString;
	public var TakeNumber: cpp.Int32;
	public var Timestamp: DateTime;
	public var TimecodeIn: Timecode;
	public var TimecodeOut: Timecode;
	public var Duration: FrameTime;
	public var FrameRate: FrameRate;
	public var Description: FString;
	public var PresetOrigin: TSoftObjectPtr<TakePreset>;
	public var LevelOrigin: TSoftObjectPtr<Level>;
	public var bFrameRateFromTimecode: Bool;

	public function Unlock(): Void;
	public function SetTimestamp(InTimestamp: DateTime): Void;
	public function SetTimecodeOut(InTimecodeOut: Timecode): Void;
	public function SetTimecodeIn(InTimecodeIn: Timecode): Void;
	public function SetTakeNumber(InTakeNumber: cpp.Int32, bEmitChanged: Bool): Void;
	public function SetSlate(InSlate: FString, bEmitChanged: Bool): Void;
	public function SetPresetOrigin(InPresetOrigin: cpp.Star<TakePreset>): Void;
	public function SetLevelOrigin(InLevelOrigin: cpp.Star<Level>): Void;
	public function SetFrameRateFromTimecode(InFromTimecode: Bool): Void;
	public function SetFrameRate(InFrameRate: FrameRate): Void;
	public function SetDuration(InDuration: FrameTime): Void;
	public function SetDescription(InDescription: FString): Void;
	public function Recorded(): cpp.Reference<Bool>;
	public function Lock(): Void;
	public function IsLocked(): cpp.Reference<Bool>;
	public function GetTimestamp(): cpp.Reference<DateTime>;
	public function GetTimecodeOut(): cpp.Reference<Timecode>;
	public function GetTimecodeIn(): cpp.Reference<Timecode>;
	public function GetTakeNumber(): cpp.Reference<cpp.Int32>;
	public function GetSlate(): cpp.Reference<FString>;
	public function GetPresetOrigin(): cpp.Reference<cpp.Star<TakePreset>>;
	public function GetLevelPath(): cpp.Reference<FString>;
	public function GetLevelOrigin(): cpp.Reference<cpp.Star<Level>>;
	public function GetFrameRateFromTimecode(): cpp.Reference<Bool>;
	public function GetFrameRate(): cpp.Reference<FrameRate>;
	public function GetDuration(): cpp.Reference<FrameTime>;
	public function GetDescription(): cpp.Reference<FString>;
	public function GenerateAssetPath(PathFormatString: FString): cpp.Reference<FString>;
}

@:forward(
	Recorded, IsLocked, GetTimestamp, GetTimecodeOut, GetTimecodeIn,
	GetTakeNumber, GetSlate, GetPresetOrigin, GetLevelPath, GetLevelOrigin,
	GetFrameRateFromTimecode, GetDuration, GetDescription, GenerateAssetPath
)
@:nativeGen
abstract ConstTakeMetaData(TakeMetaData) from TakeMetaData {
	public extern var bIsLocked(get, never): Bool;
	public inline extern function get_bIsLocked(): Bool return this.bIsLocked;
	public extern var Slate(get, never): FString;
	public inline extern function get_Slate(): FString return this.Slate;
	public extern var TakeNumber(get, never): cpp.Int32;
	public inline extern function get_TakeNumber(): cpp.Int32 return this.TakeNumber;
	public extern var Timestamp(get, never): DateTime;
	public inline extern function get_Timestamp(): DateTime return this.Timestamp;
	public extern var TimecodeIn(get, never): Timecode;
	public inline extern function get_TimecodeIn(): Timecode return this.TimecodeIn;
	public extern var TimecodeOut(get, never): Timecode;
	public inline extern function get_TimecodeOut(): Timecode return this.TimecodeOut;
	public extern var Duration(get, never): FrameTime;
	public inline extern function get_Duration(): FrameTime return this.Duration;
	public extern var FrameRate(get, never): FrameRate;
	public inline extern function get_FrameRate(): FrameRate return this.FrameRate;
	public extern var Description(get, never): FString;
	public inline extern function get_Description(): FString return this.Description;
	public extern var PresetOrigin(get, never): TSoftObjectPtr<TakePreset.ConstTakePreset>;
	public inline extern function get_PresetOrigin(): TSoftObjectPtr<TakePreset.ConstTakePreset> return this.PresetOrigin;
	public extern var LevelOrigin(get, never): TSoftObjectPtr<Level.ConstLevel>;
	public inline extern function get_LevelOrigin(): TSoftObjectPtr<Level.ConstLevel> return this.LevelOrigin;
	public extern var bFrameRateFromTimecode(get, never): Bool;
	public inline extern function get_bFrameRateFromTimecode(): Bool return this.bFrameRateFromTimecode;
}