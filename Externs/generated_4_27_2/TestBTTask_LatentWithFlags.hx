// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTestBTTask_LatentWithFlags")
@:include("BehaviorTree/TestBTTask_LatentWithFlags.h")
extern class TestBTTask_LatentWithFlags extends BTTaskNode {
	public var LogIndexExecuteStart: cpp.Int32;
	public var LogIndexExecuteFinish: cpp.Int32;
	public var LogIndexAbortStart: cpp.Int32;
	public var LogIndexAbortFinish: cpp.Int32;
	public var ExecuteTicks: cpp.Int32;
	public var AbortTicks: cpp.Int32;
	public var KeyNameExecute: FName;
	public var KeyNameAbort: FName;
	public var LogResult: EBTNodeResult;
}

@:forward()
@:nativeGen
abstract ConstTestBTTask_LatentWithFlags(TestBTTask_LatentWithFlags) from TestBTTask_LatentWithFlags {
	public extern var LogIndexExecuteStart(get, never): cpp.Int32;
	public inline extern function get_LogIndexExecuteStart(): cpp.Int32 return this.LogIndexExecuteStart;
	public extern var LogIndexExecuteFinish(get, never): cpp.Int32;
	public inline extern function get_LogIndexExecuteFinish(): cpp.Int32 return this.LogIndexExecuteFinish;
	public extern var LogIndexAbortStart(get, never): cpp.Int32;
	public inline extern function get_LogIndexAbortStart(): cpp.Int32 return this.LogIndexAbortStart;
	public extern var LogIndexAbortFinish(get, never): cpp.Int32;
	public inline extern function get_LogIndexAbortFinish(): cpp.Int32 return this.LogIndexAbortFinish;
	public extern var ExecuteTicks(get, never): cpp.Int32;
	public inline extern function get_ExecuteTicks(): cpp.Int32 return this.ExecuteTicks;
	public extern var AbortTicks(get, never): cpp.Int32;
	public inline extern function get_AbortTicks(): cpp.Int32 return this.AbortTicks;
	public extern var KeyNameExecute(get, never): FName;
	public inline extern function get_KeyNameExecute(): FName return this.KeyNameExecute;
	public extern var KeyNameAbort(get, never): FName;
	public inline extern function get_KeyNameAbort(): FName return this.KeyNameAbort;
	public extern var LogResult(get, never): EBTNodeResult;
	public inline extern function get_LogResult(): EBTNodeResult return this.LogResult;
}