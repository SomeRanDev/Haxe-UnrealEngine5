// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UOculusPlatformToolSettings")
@:include("OculusPlatformToolSettings.h")
extern class OculusPlatformToolSettings extends Object {
	public var OculusRiftBuildDirectory: FString;
	public var OculusRiftBuildVersion: FString;
	public var OculusRiftLaunchParams: FString;
	public var OculusRiftFireWallException: Bool;
	public var OculusRift2DLaunchPath: FString;
	public var OculusRift2DLaunchParams: FString;
	public var OculusRedistPackages: TArray<RedistPackage>;
	public var UploadDebugSymbols: Bool;
	public var DebugSymbolsOnly: Bool;
	public var BuildID: FString;
	public var OculusTargetPlatform: EOculusPlatformTarget;
	public var OculusApplicationID: TArray<FString>;
	public var OculusApplicationToken: TArray<FString>;
	public var OculusReleaseChannel: TArray<FString>;
	public var OculusReleaseNote: TArray<FString>;
	public var OculusLaunchFilePath: TArray<FString>;
	public var OculusRiftGamepadEmulation: EOculusGamepadEmulation;
	public var OculusLanguagePacksPath: TArray<FString>;
	public var OculusExpansionFilesPath: TArray<FString>;
	public var OculusSymbolDirPath: TArray<FString>;
	public var OculusAssetConfigs: TArray<AssetConfigArray>;
}

@:forward()
@:nativeGen
abstract ConstOculusPlatformToolSettings(OculusPlatformToolSettings) from OculusPlatformToolSettings {
	public extern var OculusRiftBuildDirectory(get, never): FString;
	public inline extern function get_OculusRiftBuildDirectory(): FString return this.OculusRiftBuildDirectory;
	public extern var OculusRiftBuildVersion(get, never): FString;
	public inline extern function get_OculusRiftBuildVersion(): FString return this.OculusRiftBuildVersion;
	public extern var OculusRiftLaunchParams(get, never): FString;
	public inline extern function get_OculusRiftLaunchParams(): FString return this.OculusRiftLaunchParams;
	public extern var OculusRiftFireWallException(get, never): Bool;
	public inline extern function get_OculusRiftFireWallException(): Bool return this.OculusRiftFireWallException;
	public extern var OculusRift2DLaunchPath(get, never): FString;
	public inline extern function get_OculusRift2DLaunchPath(): FString return this.OculusRift2DLaunchPath;
	public extern var OculusRift2DLaunchParams(get, never): FString;
	public inline extern function get_OculusRift2DLaunchParams(): FString return this.OculusRift2DLaunchParams;
	public extern var OculusRedistPackages(get, never): TArray<RedistPackage>;
	public inline extern function get_OculusRedistPackages(): TArray<RedistPackage> return this.OculusRedistPackages;
	public extern var UploadDebugSymbols(get, never): Bool;
	public inline extern function get_UploadDebugSymbols(): Bool return this.UploadDebugSymbols;
	public extern var DebugSymbolsOnly(get, never): Bool;
	public inline extern function get_DebugSymbolsOnly(): Bool return this.DebugSymbolsOnly;
	public extern var BuildID(get, never): FString;
	public inline extern function get_BuildID(): FString return this.BuildID;
	public extern var OculusTargetPlatform(get, never): EOculusPlatformTarget;
	public inline extern function get_OculusTargetPlatform(): EOculusPlatformTarget return this.OculusTargetPlatform;
	public extern var OculusApplicationID(get, never): TArray<FString>;
	public inline extern function get_OculusApplicationID(): TArray<FString> return this.OculusApplicationID;
	public extern var OculusApplicationToken(get, never): TArray<FString>;
	public inline extern function get_OculusApplicationToken(): TArray<FString> return this.OculusApplicationToken;
	public extern var OculusReleaseChannel(get, never): TArray<FString>;
	public inline extern function get_OculusReleaseChannel(): TArray<FString> return this.OculusReleaseChannel;
	public extern var OculusReleaseNote(get, never): TArray<FString>;
	public inline extern function get_OculusReleaseNote(): TArray<FString> return this.OculusReleaseNote;
	public extern var OculusLaunchFilePath(get, never): TArray<FString>;
	public inline extern function get_OculusLaunchFilePath(): TArray<FString> return this.OculusLaunchFilePath;
	public extern var OculusRiftGamepadEmulation(get, never): EOculusGamepadEmulation;
	public inline extern function get_OculusRiftGamepadEmulation(): EOculusGamepadEmulation return this.OculusRiftGamepadEmulation;
	public extern var OculusLanguagePacksPath(get, never): TArray<FString>;
	public inline extern function get_OculusLanguagePacksPath(): TArray<FString> return this.OculusLanguagePacksPath;
	public extern var OculusExpansionFilesPath(get, never): TArray<FString>;
	public inline extern function get_OculusExpansionFilesPath(): TArray<FString> return this.OculusExpansionFilesPath;
	public extern var OculusSymbolDirPath(get, never): TArray<FString>;
	public inline extern function get_OculusSymbolDirPath(): TArray<FString> return this.OculusSymbolDirPath;
	public extern var OculusAssetConfigs(get, never): TArray<AssetConfigArray>;
	public inline extern function get_OculusAssetConfigs(): TArray<AssetConfigArray> return this.OculusAssetConfigs;
}