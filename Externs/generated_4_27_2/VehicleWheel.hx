// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UVehicleWheel")
@:include("VehicleWheel.h")
extern class VehicleWheel extends Object {
	public var CollisionMesh: cpp.Star<StaticMesh>;
	public var bDontCreateShape: Bool;
	public var bAutoAdjustCollisionSize: Bool;
	public var Offset: Vector;
	public var ShapeRadius: cpp.Float32;
	public var ShapeWidth: cpp.Float32;
	public var Mass: cpp.Float32;
	public var DampingRate: cpp.Float32;
	public var SteerAngle: cpp.Float32;
	public var bAffectedByHandbrake: Bool;
	public var TireType: cpp.Star<TireType>;
	public var TireConfig: cpp.Star<TireConfig>;
	public var LatStiffMaxLoad: cpp.Float32;
	public var LatStiffValue: cpp.Float32;
	public var LongStiffValue: cpp.Float32;
	public var SuspensionForceOffset: cpp.Float32;
	public var SuspensionMaxRaise: cpp.Float32;
	public var SuspensionMaxDrop: cpp.Float32;
	public var SuspensionNaturalFrequency: cpp.Float32;
	public var SuspensionDampingRatio: cpp.Float32;
	public var SweepType: EWheelSweepType;
	public var MaxBrakeTorque: cpp.Float32;
	public var MaxHandBrakeTorque: cpp.Float32;
	public var VehicleSim: cpp.Star<WheeledVehicleMovementComp>;
	public var WheelIndex: cpp.Int32;
	public var DebugLongSlip: cpp.Float32;
	public var DebugLatSlip: cpp.Float32;
	public var DebugNormalizedTireLoad: cpp.Float32;
	public var DebugWheelTorque: cpp.Float32;
	public var DebugLongForce: cpp.Float32;
	public var DebugLatForce: cpp.Float32;
	public var Location: Vector;
	public var OldLocation: Vector;
	public var Velocity: Vector;

	public function IsInAir(): cpp.Reference<Bool>;
	public function GetSuspensionOffset(): cpp.Reference<cpp.Float32>;
	public function GetSteerAngle(): cpp.Reference<cpp.Float32>;
	public function GetRotationAngle(): cpp.Reference<cpp.Float32>;
}

@:forward(IsInAir, GetSuspensionOffset, GetSteerAngle, GetRotationAngle)
@:nativeGen
abstract ConstVehicleWheel(VehicleWheel) from VehicleWheel {
	public extern var CollisionMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_CollisionMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.CollisionMesh;
	public extern var bDontCreateShape(get, never): Bool;
	public inline extern function get_bDontCreateShape(): Bool return this.bDontCreateShape;
	public extern var bAutoAdjustCollisionSize(get, never): Bool;
	public inline extern function get_bAutoAdjustCollisionSize(): Bool return this.bAutoAdjustCollisionSize;
	public extern var Offset(get, never): Vector;
	public inline extern function get_Offset(): Vector return this.Offset;
	public extern var ShapeRadius(get, never): cpp.Float32;
	public inline extern function get_ShapeRadius(): cpp.Float32 return this.ShapeRadius;
	public extern var ShapeWidth(get, never): cpp.Float32;
	public inline extern function get_ShapeWidth(): cpp.Float32 return this.ShapeWidth;
	public extern var Mass(get, never): cpp.Float32;
	public inline extern function get_Mass(): cpp.Float32 return this.Mass;
	public extern var DampingRate(get, never): cpp.Float32;
	public inline extern function get_DampingRate(): cpp.Float32 return this.DampingRate;
	public extern var SteerAngle(get, never): cpp.Float32;
	public inline extern function get_SteerAngle(): cpp.Float32 return this.SteerAngle;
	public extern var bAffectedByHandbrake(get, never): Bool;
	public inline extern function get_bAffectedByHandbrake(): Bool return this.bAffectedByHandbrake;
	public extern var TireType(get, never): cpp.Star<TireType.ConstTireType>;
	public inline extern function get_TireType(): cpp.Star<TireType.ConstTireType> return this.TireType;
	public extern var TireConfig(get, never): cpp.Star<TireConfig.ConstTireConfig>;
	public inline extern function get_TireConfig(): cpp.Star<TireConfig.ConstTireConfig> return this.TireConfig;
	public extern var LatStiffMaxLoad(get, never): cpp.Float32;
	public inline extern function get_LatStiffMaxLoad(): cpp.Float32 return this.LatStiffMaxLoad;
	public extern var LatStiffValue(get, never): cpp.Float32;
	public inline extern function get_LatStiffValue(): cpp.Float32 return this.LatStiffValue;
	public extern var LongStiffValue(get, never): cpp.Float32;
	public inline extern function get_LongStiffValue(): cpp.Float32 return this.LongStiffValue;
	public extern var SuspensionForceOffset(get, never): cpp.Float32;
	public inline extern function get_SuspensionForceOffset(): cpp.Float32 return this.SuspensionForceOffset;
	public extern var SuspensionMaxRaise(get, never): cpp.Float32;
	public inline extern function get_SuspensionMaxRaise(): cpp.Float32 return this.SuspensionMaxRaise;
	public extern var SuspensionMaxDrop(get, never): cpp.Float32;
	public inline extern function get_SuspensionMaxDrop(): cpp.Float32 return this.SuspensionMaxDrop;
	public extern var SuspensionNaturalFrequency(get, never): cpp.Float32;
	public inline extern function get_SuspensionNaturalFrequency(): cpp.Float32 return this.SuspensionNaturalFrequency;
	public extern var SuspensionDampingRatio(get, never): cpp.Float32;
	public inline extern function get_SuspensionDampingRatio(): cpp.Float32 return this.SuspensionDampingRatio;
	public extern var SweepType(get, never): EWheelSweepType;
	public inline extern function get_SweepType(): EWheelSweepType return this.SweepType;
	public extern var MaxBrakeTorque(get, never): cpp.Float32;
	public inline extern function get_MaxBrakeTorque(): cpp.Float32 return this.MaxBrakeTorque;
	public extern var MaxHandBrakeTorque(get, never): cpp.Float32;
	public inline extern function get_MaxHandBrakeTorque(): cpp.Float32 return this.MaxHandBrakeTorque;
	public extern var VehicleSim(get, never): cpp.Star<WheeledVehicleMovementComp.ConstWheeledVehicleMovementComp>;
	public inline extern function get_VehicleSim(): cpp.Star<WheeledVehicleMovementComp.ConstWheeledVehicleMovementComp> return this.VehicleSim;
	public extern var WheelIndex(get, never): cpp.Int32;
	public inline extern function get_WheelIndex(): cpp.Int32 return this.WheelIndex;
	public extern var DebugLongSlip(get, never): cpp.Float32;
	public inline extern function get_DebugLongSlip(): cpp.Float32 return this.DebugLongSlip;
	public extern var DebugLatSlip(get, never): cpp.Float32;
	public inline extern function get_DebugLatSlip(): cpp.Float32 return this.DebugLatSlip;
	public extern var DebugNormalizedTireLoad(get, never): cpp.Float32;
	public inline extern function get_DebugNormalizedTireLoad(): cpp.Float32 return this.DebugNormalizedTireLoad;
	public extern var DebugWheelTorque(get, never): cpp.Float32;
	public inline extern function get_DebugWheelTorque(): cpp.Float32 return this.DebugWheelTorque;
	public extern var DebugLongForce(get, never): cpp.Float32;
	public inline extern function get_DebugLongForce(): cpp.Float32 return this.DebugLongForce;
	public extern var DebugLatForce(get, never): cpp.Float32;
	public inline extern function get_DebugLatForce(): cpp.Float32 return this.DebugLatForce;
	public extern var Location(get, never): Vector;
	public inline extern function get_Location(): Vector return this.Location;
	public extern var OldLocation(get, never): Vector;
	public inline extern function get_OldLocation(): Vector return this.OldLocation;
	public extern var Velocity(get, never): Vector;
	public inline extern function get_Velocity(): Vector return this.Velocity;
}