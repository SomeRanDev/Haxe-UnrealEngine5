// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTakeRecorder")
@:include("Recorder/TakeRecorder.h")
extern class TakeRecorder extends Object {
	public var SequenceAsset: cpp.Star<LevelSequence>;
	public var OverlayWidget: cpp.Star<TakeRecorderOverlayWidget>;
	public var WeakWorld: TWeakObjectPtr<World>;
	public var Parameters: TakeRecorderParameters;

	public function GetState(): cpp.Reference<ETakeRecorderState>;
	public function GetSequence(): cpp.Reference<cpp.Star<LevelSequence>>;
	public function GetCountdownSeconds(): cpp.Reference<cpp.Float32>;
}

@:forward(GetState, GetSequence, GetCountdownSeconds)
@:nativeGen
abstract ConstTakeRecorder(TakeRecorder) from TakeRecorder {
	public extern var SequenceAsset(get, never): cpp.Star<LevelSequence.ConstLevelSequence>;
	public inline extern function get_SequenceAsset(): cpp.Star<LevelSequence.ConstLevelSequence> return this.SequenceAsset;
	public extern var OverlayWidget(get, never): cpp.Star<TakeRecorderOverlayWidget.ConstTakeRecorderOverlayWidget>;
	public inline extern function get_OverlayWidget(): cpp.Star<TakeRecorderOverlayWidget.ConstTakeRecorderOverlayWidget> return this.OverlayWidget;
	public extern var WeakWorld(get, never): TWeakObjectPtr<World.ConstWorld>;
	public inline extern function get_WeakWorld(): TWeakObjectPtr<World.ConstWorld> return this.WeakWorld;
	public extern var Parameters(get, never): TakeRecorderParameters;
	public inline extern function get_Parameters(): TakeRecorderParameters return this.Parameters;
}