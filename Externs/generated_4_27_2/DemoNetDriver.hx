// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDemoNetDriver")
@:include("Engine/DemoNetDriver.h")
extern class DemoNetDriver extends NetDriver {
	public var RollbackNetStartupActors: TMap<FString, RollbackNetStartupActorInfo>;
	public var CheckpointSaveMaxMSPerFrame: cpp.Float32;
	public var MulticastRecordOptions: TArray<MulticastRecordOptions>;
	public var bIsLocalReplay: Bool;
	public var SpectatorControllers: TArray<cpp.Star<PlayerController>>;
}

@:forward()
@:nativeGen
abstract ConstDemoNetDriver(DemoNetDriver) from DemoNetDriver {
	public extern var RollbackNetStartupActors(get, never): TMap<FString, RollbackNetStartupActorInfo>;
	public inline extern function get_RollbackNetStartupActors(): TMap<FString, RollbackNetStartupActorInfo> return this.RollbackNetStartupActors;
	public extern var CheckpointSaveMaxMSPerFrame(get, never): cpp.Float32;
	public inline extern function get_CheckpointSaveMaxMSPerFrame(): cpp.Float32 return this.CheckpointSaveMaxMSPerFrame;
	public extern var MulticastRecordOptions(get, never): TArray<MulticastRecordOptions>;
	public inline extern function get_MulticastRecordOptions(): TArray<MulticastRecordOptions> return this.MulticastRecordOptions;
	public extern var bIsLocalReplay(get, never): Bool;
	public inline extern function get_bIsLocalReplay(): Bool return this.bIsLocalReplay;
	public extern var SpectatorControllers(get, never): TArray<cpp.Star<PlayerController.ConstPlayerController>>;
	public inline extern function get_SpectatorControllers(): TArray<cpp.Star<PlayerController.ConstPlayerController>> return this.SpectatorControllers;
}