// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPlanePositionGizmo")
@:include("BaseGizmos/PlanePositionGizmo.h")
extern class PlanePositionGizmo extends InteractiveGizmo {
	public var AxisSource: GizmoAxisSource;
	public var ParameterSource: GizmoVec2ParameterSource;
	public var HitTarget: GizmoClickTarget;
	public var StateTarget: GizmoStateTarget;
	public var bEnableSignedAxis: Bool;
	public var bFlipX: Bool;
	public var bFlipY: Bool;
	public var bInInteraction: Bool;
	public var InteractionOrigin: Vector;
	public var InteractionNormal: Vector;
	public var InteractionAxisX: Vector;
	public var InteractionAxisY: Vector;
	public var InteractionStartPoint: Vector;
	public var InteractionCurPoint: Vector;
	public var InteractionStartParameter: Vector2D;
	public var InteractionCurParameter: Vector2D;
	public var ParameterSigns: Vector2D;
}

@:forward()
@:nativeGen
abstract ConstPlanePositionGizmo(PlanePositionGizmo) from PlanePositionGizmo {
	public extern var AxisSource(get, never): GizmoAxisSource.ConstGizmoAxisSource;
	public inline extern function get_AxisSource(): GizmoAxisSource.ConstGizmoAxisSource return this.AxisSource;
	public extern var ParameterSource(get, never): GizmoVec2ParameterSource.ConstGizmoVec2ParameterSource;
	public inline extern function get_ParameterSource(): GizmoVec2ParameterSource.ConstGizmoVec2ParameterSource return this.ParameterSource;
	public extern var HitTarget(get, never): GizmoClickTarget.ConstGizmoClickTarget;
	public inline extern function get_HitTarget(): GizmoClickTarget.ConstGizmoClickTarget return this.HitTarget;
	public extern var StateTarget(get, never): GizmoStateTarget.ConstGizmoStateTarget;
	public inline extern function get_StateTarget(): GizmoStateTarget.ConstGizmoStateTarget return this.StateTarget;
	public extern var bEnableSignedAxis(get, never): Bool;
	public inline extern function get_bEnableSignedAxis(): Bool return this.bEnableSignedAxis;
	public extern var bFlipX(get, never): Bool;
	public inline extern function get_bFlipX(): Bool return this.bFlipX;
	public extern var bFlipY(get, never): Bool;
	public inline extern function get_bFlipY(): Bool return this.bFlipY;
	public extern var bInInteraction(get, never): Bool;
	public inline extern function get_bInInteraction(): Bool return this.bInInteraction;
	public extern var InteractionOrigin(get, never): Vector;
	public inline extern function get_InteractionOrigin(): Vector return this.InteractionOrigin;
	public extern var InteractionNormal(get, never): Vector;
	public inline extern function get_InteractionNormal(): Vector return this.InteractionNormal;
	public extern var InteractionAxisX(get, never): Vector;
	public inline extern function get_InteractionAxisX(): Vector return this.InteractionAxisX;
	public extern var InteractionAxisY(get, never): Vector;
	public inline extern function get_InteractionAxisY(): Vector return this.InteractionAxisY;
	public extern var InteractionStartPoint(get, never): Vector;
	public inline extern function get_InteractionStartPoint(): Vector return this.InteractionStartPoint;
	public extern var InteractionCurPoint(get, never): Vector;
	public inline extern function get_InteractionCurPoint(): Vector return this.InteractionCurPoint;
	public extern var InteractionStartParameter(get, never): Vector2D;
	public inline extern function get_InteractionStartParameter(): Vector2D return this.InteractionStartParameter;
	public extern var InteractionCurParameter(get, never): Vector2D;
	public inline extern function get_InteractionCurParameter(): Vector2D return this.InteractionCurParameter;
	public extern var ParameterSigns(get, never): Vector2D;
	public inline extern function get_ParameterSigns(): Vector2D return this.ParameterSigns;
}