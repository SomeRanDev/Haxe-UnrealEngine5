// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULuminARSessionConfig")
@:include("LuminARSessionConfig.h")
extern class LuminARSessionConfig extends ARSessionConfig {
	public var PlanesQuery: MagicLeapPlanesQuery;
	public var MaxPlaneQueryResults_DEPRECATED: cpp.Int32;
	public var MinPlaneArea_DEPRECATED: cpp.Int32;
	public var bArbitraryOrientationPlaneDetection: Bool;
	public var PlaneSearchExtents_DEPRECATED: Vector;
	public var PlaneQueryFlags_DEPRECATED: TArray<EMagicLeapPlaneQueryFlags>;
	public var bDiscardZeroExtentPlanes: Bool;
	public var bDefaultUseUnreliablePose: Bool;
}

@:forward()
@:nativeGen
abstract ConstLuminARSessionConfig(LuminARSessionConfig) from LuminARSessionConfig {
	public extern var PlanesQuery(get, never): MagicLeapPlanesQuery;
	public inline extern function get_PlanesQuery(): MagicLeapPlanesQuery return this.PlanesQuery;
	public extern var MaxPlaneQueryResults_DEPRECATED(get, never): cpp.Int32;
	public inline extern function get_MaxPlaneQueryResults_DEPRECATED(): cpp.Int32 return this.MaxPlaneQueryResults_DEPRECATED;
	public extern var MinPlaneArea_DEPRECATED(get, never): cpp.Int32;
	public inline extern function get_MinPlaneArea_DEPRECATED(): cpp.Int32 return this.MinPlaneArea_DEPRECATED;
	public extern var bArbitraryOrientationPlaneDetection(get, never): Bool;
	public inline extern function get_bArbitraryOrientationPlaneDetection(): Bool return this.bArbitraryOrientationPlaneDetection;
	public extern var PlaneSearchExtents_DEPRECATED(get, never): Vector;
	public inline extern function get_PlaneSearchExtents_DEPRECATED(): Vector return this.PlaneSearchExtents_DEPRECATED;
	public extern var PlaneQueryFlags_DEPRECATED(get, never): TArray<EMagicLeapPlaneQueryFlags>;
	public inline extern function get_PlaneQueryFlags_DEPRECATED(): TArray<EMagicLeapPlaneQueryFlags> return this.PlaneQueryFlags_DEPRECATED;
	public extern var bDiscardZeroExtentPlanes(get, never): Bool;
	public inline extern function get_bDiscardZeroExtentPlanes(): Bool return this.bDiscardZeroExtentPlanes;
	public extern var bDefaultUseUnreliablePose(get, never): Bool;
	public inline extern function get_bDefaultUseUnreliablePose(): Bool return this.bDefaultUseUnreliablePose;
}