// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMagicLeapHeadTrackingNotificationsComponent")
@:include("MagicLeapHeadTrackingNotificationsComponent.h")
extern class MagicLeapHeadTrackingNotificationsComp extends VRNotificationsComp {
	public var OnHeadTrackingLost: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var OnHeadTrackingRecovered: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var OnHeadTrackingRecoveryFailed: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var OnHeadTrackingNewSessionStarted: HaxeMulticastSparseDelegateProperty<() -> Void>;
}

@:forward()
@:nativeGen
abstract ConstMagicLeapHeadTrackingNotificationsComp(MagicLeapHeadTrackingNotificationsComp) from MagicLeapHeadTrackingNotificationsComp {
	public extern var OnHeadTrackingLost(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_OnHeadTrackingLost(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.OnHeadTrackingLost;
	public extern var OnHeadTrackingRecovered(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_OnHeadTrackingRecovered(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.OnHeadTrackingRecovered;
	public extern var OnHeadTrackingRecoveryFailed(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_OnHeadTrackingRecoveryFailed(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.OnHeadTrackingRecoveryFailed;
	public extern var OnHeadTrackingNewSessionStarted(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_OnHeadTrackingNewSessionStarted(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.OnHeadTrackingNewSessionStarted;
}