// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ASKEL_BP_Sky_Sphere_C")
extern class SKEL_BP_Sky_Sphere_C extends Actor {
	public var UberGraphFrame: PointerToUberGraphFrame;
	public var SkySphereMesh: cpp.Star<StaticMeshComp>;
	public var Base: cpp.Star<SceneComp>;
	public var Sky material: cpp.Star<MaterialInstanceDynamic>;
	public var Refresh material: Bool;
	public var Directional light actor: cpp.Star<DirectionalLight>;
	public var Colors determined by sun position: Bool;
	public var Sun height: cpp.Float32;
	public var Sun brightness: cpp.Float32;
	public var Horizon Falloff: cpp.Float32;
	public var Zenith Color: LinearColor;
	public var Horizon color: LinearColor;
	public var Cloud color: LinearColor;
	public var Overall Color: LinearColor;
	public var Cloud speed: cpp.Float32;
	public var Cloud opacity: cpp.Float32;
	public var Stars brightness: cpp.Float32;
	public var Horizon color curve: cpp.Star<CurveLinearColor>;
	public var Zenith color curve: cpp.Star<CurveLinearColor>;
	public var Cloud color curve: cpp.Star<CurveLinearColor>;

	public function UserConstructionScript(): Void;
	public function UpdateSunDirection(): Void;
	public function RefreshMaterial(): Void;
}

@:forward()
@:nativeGen
abstract ConstSKEL_BP_Sky_Sphere_C(SKEL_BP_Sky_Sphere_C) from SKEL_BP_Sky_Sphere_C {
	public extern var UberGraphFrame(get, never): PointerToUberGraphFrame;
	public inline extern function get_UberGraphFrame(): PointerToUberGraphFrame return this.UberGraphFrame;
	public extern var SkySphereMesh(get, never): cpp.Star<StaticMeshComp.ConstStaticMeshComp>;
	public inline extern function get_SkySphereMesh(): cpp.Star<StaticMeshComp.ConstStaticMeshComp> return this.SkySphereMesh;
	public extern var Base(get, never): cpp.Star<SceneComp.ConstSceneComp>;
	public inline extern function get_Base(): cpp.Star<SceneComp.ConstSceneComp> return this.Base;
	public extern var Sky material(get, never): cpp.Star<MaterialInstanceDynamic.ConstMaterialInstanceDynamic>;
	public inline extern function get_Sky material(): cpp.Star<MaterialInstanceDynamic.ConstMaterialInstanceDynamic> return this.Sky material;
	public extern var Refresh material(get, never): Bool;
	public inline extern function get_Refresh material(): Bool return this.Refresh material;
	public extern var Directional light actor(get, never): cpp.Star<DirectionalLight.ConstDirectionalLight>;
	public inline extern function get_Directional light actor(): cpp.Star<DirectionalLight.ConstDirectionalLight> return this.Directional light actor;
	public extern var Colors determined by sun position(get, never): Bool;
	public inline extern function get_Colors determined by sun position(): Bool return this.Colors determined by sun position;
	public extern var Sun height(get, never): cpp.Float32;
	public inline extern function get_Sun height(): cpp.Float32 return this.Sun height;
	public extern var Sun brightness(get, never): cpp.Float32;
	public inline extern function get_Sun brightness(): cpp.Float32 return this.Sun brightness;
	public extern var Horizon Falloff(get, never): cpp.Float32;
	public inline extern function get_Horizon Falloff(): cpp.Float32 return this.Horizon Falloff;
	public extern var Zenith Color(get, never): LinearColor;
	public inline extern function get_Zenith Color(): LinearColor return this.Zenith Color;
	public extern var Horizon color(get, never): LinearColor;
	public inline extern function get_Horizon color(): LinearColor return this.Horizon color;
	public extern var Cloud color(get, never): LinearColor;
	public inline extern function get_Cloud color(): LinearColor return this.Cloud color;
	public extern var Overall Color(get, never): LinearColor;
	public inline extern function get_Overall Color(): LinearColor return this.Overall Color;
	public extern var Cloud speed(get, never): cpp.Float32;
	public inline extern function get_Cloud speed(): cpp.Float32 return this.Cloud speed;
	public extern var Cloud opacity(get, never): cpp.Float32;
	public inline extern function get_Cloud opacity(): cpp.Float32 return this.Cloud opacity;
	public extern var Stars brightness(get, never): cpp.Float32;
	public inline extern function get_Stars brightness(): cpp.Float32 return this.Stars brightness;
	public extern var Horizon color curve(get, never): cpp.Star<CurveLinearColor.ConstCurveLinearColor>;
	public inline extern function get_Horizon color curve(): cpp.Star<CurveLinearColor.ConstCurveLinearColor> return this.Horizon color curve;
	public extern var Zenith color curve(get, never): cpp.Star<CurveLinearColor.ConstCurveLinearColor>;
	public inline extern function get_Zenith color curve(): cpp.Star<CurveLinearColor.ConstCurveLinearColor> return this.Zenith color curve;
	public extern var Cloud color curve(get, never): cpp.Star<CurveLinearColor.ConstCurveLinearColor>;
	public inline extern function get_Cloud color curve(): cpp.Star<CurveLinearColor.ConstCurveLinearColor> return this.Cloud color curve;
}