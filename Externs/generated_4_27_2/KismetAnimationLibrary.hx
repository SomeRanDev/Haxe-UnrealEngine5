// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UKismetAnimationLibrary")
@:include("KismetAnimationLibrary.h")
extern class KismetAnimationLibrary extends BlueprintFunctionLibrary {
	public function K2_TwoBoneIK(RootPos: cpp.Reference<Vector>, JointPos: cpp.Reference<Vector>, EndPos: cpp.Reference<Vector>, JointTarget: cpp.Reference<Vector>, Effector: cpp.Reference<Vector>, OutJointPos: cpp.Reference<Vector>, OutEndPos: cpp.Reference<Vector>, bAllowStretching: Bool, StartStretchRatio: cpp.Float32, MaxStretchScale: cpp.Float32): Void;
	public function K2_StartProfilingTimer(): Void;
	public function K2_MakePerlinNoiseVectorAndRemap(X: cpp.Float32, Y: cpp.Float32, Z: cpp.Float32, RangeOutMinX: cpp.Float32, RangeOutMaxX: cpp.Float32, RangeOutMinY: cpp.Float32, RangeOutMaxY: cpp.Float32, RangeOutMinZ: cpp.Float32, RangeOutMaxZ: cpp.Float32): cpp.Reference<Vector>;
	public function K2_MakePerlinNoiseAndRemap(Value: cpp.Float32, RangeOutMin: cpp.Float32, RangeOutMax: cpp.Float32): cpp.Reference<cpp.Float32>;
	public function K2_LookAt(CurrentTransform: cpp.Reference<Transform>, TargetPosition: cpp.Reference<Vector>, LookAtVector: Vector, bUseUpVector: Bool, UpVector: Vector, ClampConeInDegree: cpp.Float32): cpp.Reference<Transform>;
	public function K2_EndProfilingTimer(bLog: Bool, LogPrefix: FString): cpp.Reference<cpp.Float32>;
	public function K2_DistanceBetweenTwoSocketsAndMapRange(Component: cpp.Star<SkeletalMeshComp.ConstSkeletalMeshComp>, SocketOrBoneNameA: FName, SocketSpaceA: ERelativeTransformSpace, SocketOrBoneNameB: FName, SocketSpaceB: ERelativeTransformSpace, bRemapRange: Bool, InRangeMin: cpp.Float32, InRangeMax: cpp.Float32, OutRangeMin: cpp.Float32, OutRangeMax: cpp.Float32): cpp.Reference<cpp.Float32>;
	public function K2_DirectionBetweenSockets(Component: cpp.Star<SkeletalMeshComp.ConstSkeletalMeshComp>, SocketOrBoneNameFrom: FName, SocketOrBoneNameTo: FName): cpp.Reference<Vector>;
	public function K2_CalculateVelocityFromSockets(DeltaSeconds: cpp.Float32, Component: cpp.Star<SkeletalMeshComp>, SocketOrBoneName: FName, ReferenceSocketOrBone: FName, SocketSpace: ERelativeTransformSpace, OffsetInBoneSpace: Vector, History: cpp.Reference<PositionHistory>, NumberOfSamples: cpp.Int32, VelocityMin: cpp.Float32, VelocityMax: cpp.Float32, EasingType: EEasingFuncType, CustomCurve: cpp.Reference<RuntimeFloatCurve>): cpp.Reference<cpp.Float32>;
	public function K2_CalculateVelocityFromPositionHistory(DeltaSeconds: cpp.Float32, Position: Vector, History: cpp.Reference<PositionHistory>, NumberOfSamples: cpp.Int32, VelocityMin: cpp.Float32, VelocityMax: cpp.Float32): cpp.Reference<cpp.Float32>;
}

@:forward()
@:nativeGen
abstract ConstKismetAnimationLibrary(KismetAnimationLibrary) from KismetAnimationLibrary {
}