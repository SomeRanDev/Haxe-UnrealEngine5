// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWindDirectionalSourceComponent")
@:include("Components/WindDirectionalSourceComponent.h")
extern class WindDirectionalSourceComp extends SceneComp {
	public var Strength: cpp.Float32;
	public var Speed: cpp.Float32;
	public var MinGustAmount: cpp.Float32;
	public var MaxGustAmount: cpp.Float32;
	public var Radius: cpp.Float32;
	public var bPointWind: Bool;

	public function SetWindType(InNewType: EWindSourceType): Void;
	public function SetStrength(InNewStrength: cpp.Float32): Void;
	public function SetSpeed(InNewSpeed: cpp.Float32): Void;
	public function SetRadius(InNewRadius: cpp.Float32): Void;
	public function SetMinimumGustAmount(InNewMinGust: cpp.Float32): Void;
	public function SetMaximumGustAmount(InNewMaxGust: cpp.Float32): Void;
}

@:forward()
@:nativeGen
abstract ConstWindDirectionalSourceComp(WindDirectionalSourceComp) from WindDirectionalSourceComp {
	public extern var Strength(get, never): cpp.Float32;
	public inline extern function get_Strength(): cpp.Float32 return this.Strength;
	public extern var Speed(get, never): cpp.Float32;
	public inline extern function get_Speed(): cpp.Float32 return this.Speed;
	public extern var MinGustAmount(get, never): cpp.Float32;
	public inline extern function get_MinGustAmount(): cpp.Float32 return this.MinGustAmount;
	public extern var MaxGustAmount(get, never): cpp.Float32;
	public inline extern function get_MaxGustAmount(): cpp.Float32 return this.MaxGustAmount;
	public extern var Radius(get, never): cpp.Float32;
	public inline extern function get_Radius(): cpp.Float32 return this.Radius;
	public extern var bPointWind(get, never): Bool;
	public inline extern function get_bPointWind(): Bool return this.bPointWind;
}