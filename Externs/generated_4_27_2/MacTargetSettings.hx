// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMacTargetSettings")
@:include("MacTargetSettings.h")
extern class MacTargetSettings extends Object {
	public var TargetedRHIs: TArray<FString>;
	public var TargetArchitecture: EMacTargetArchitecture;
	public var MaxShaderLanguageVersion: cpp.UInt8;
	public var UseFastIntrinsics: Bool;
	public var ForceFloats: Bool;
	public var EnableMathOptimisations: Bool;
	public var IndirectArgumentTier: cpp.Int32;
	public var AudioSampleRate: cpp.Int32;
	public var AudioCallbackBufferFrameSize: cpp.Int32;
	public var AudioNumBuffersToEnqueue: cpp.Int32;
	public var AudioMaxChannels: cpp.Int32;
	public var AudioNumSourceWorkers: cpp.Int32;
	public var SpatializationPlugin: FString;
	public var ReverbPlugin: FString;
	public var OcclusionPlugin: FString;
	public var SoundCueCookQualityIndex: cpp.Int32;
}

@:forward()
@:nativeGen
abstract ConstMacTargetSettings(MacTargetSettings) from MacTargetSettings {
	public extern var TargetedRHIs(get, never): TArray<FString>;
	public inline extern function get_TargetedRHIs(): TArray<FString> return this.TargetedRHIs;
	public extern var TargetArchitecture(get, never): EMacTargetArchitecture;
	public inline extern function get_TargetArchitecture(): EMacTargetArchitecture return this.TargetArchitecture;
	public extern var MaxShaderLanguageVersion(get, never): cpp.UInt8;
	public inline extern function get_MaxShaderLanguageVersion(): cpp.UInt8 return this.MaxShaderLanguageVersion;
	public extern var UseFastIntrinsics(get, never): Bool;
	public inline extern function get_UseFastIntrinsics(): Bool return this.UseFastIntrinsics;
	public extern var ForceFloats(get, never): Bool;
	public inline extern function get_ForceFloats(): Bool return this.ForceFloats;
	public extern var EnableMathOptimisations(get, never): Bool;
	public inline extern function get_EnableMathOptimisations(): Bool return this.EnableMathOptimisations;
	public extern var IndirectArgumentTier(get, never): cpp.Int32;
	public inline extern function get_IndirectArgumentTier(): cpp.Int32 return this.IndirectArgumentTier;
	public extern var AudioSampleRate(get, never): cpp.Int32;
	public inline extern function get_AudioSampleRate(): cpp.Int32 return this.AudioSampleRate;
	public extern var AudioCallbackBufferFrameSize(get, never): cpp.Int32;
	public inline extern function get_AudioCallbackBufferFrameSize(): cpp.Int32 return this.AudioCallbackBufferFrameSize;
	public extern var AudioNumBuffersToEnqueue(get, never): cpp.Int32;
	public inline extern function get_AudioNumBuffersToEnqueue(): cpp.Int32 return this.AudioNumBuffersToEnqueue;
	public extern var AudioMaxChannels(get, never): cpp.Int32;
	public inline extern function get_AudioMaxChannels(): cpp.Int32 return this.AudioMaxChannels;
	public extern var AudioNumSourceWorkers(get, never): cpp.Int32;
	public inline extern function get_AudioNumSourceWorkers(): cpp.Int32 return this.AudioNumSourceWorkers;
	public extern var SpatializationPlugin(get, never): FString;
	public inline extern function get_SpatializationPlugin(): FString return this.SpatializationPlugin;
	public extern var ReverbPlugin(get, never): FString;
	public inline extern function get_ReverbPlugin(): FString return this.ReverbPlugin;
	public extern var OcclusionPlugin(get, never): FString;
	public inline extern function get_OcclusionPlugin(): FString return this.OcclusionPlugin;
	public extern var SoundCueCookQualityIndex(get, never): cpp.Int32;
	public inline extern function get_SoundCueCookQualityIndex(): cpp.Int32 return this.SoundCueCookQualityIndex;
}