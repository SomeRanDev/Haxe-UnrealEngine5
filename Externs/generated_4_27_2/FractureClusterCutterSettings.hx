// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFractureClusterCutterSettings")
@:include("FractureToolClusterCutter.h")
extern class FractureClusterCutterSettings extends FractureToolSettings {
	public var NumberClustersMin: cpp.Int32;
	public var NumberClustersMax: cpp.Int32;
	public var SitesPerClusterMin: cpp.Int32;
	public var SitesPerClusterMax: cpp.Int32;
	public var ClusterRadiusPercentageMin: cpp.Float32;
	public var ClusterRadiusPercentageMax: cpp.Float32;
	public var ClusterRadius: cpp.Float32;
}

@:forward()
@:nativeGen
abstract ConstFractureClusterCutterSettings(FractureClusterCutterSettings) from FractureClusterCutterSettings {
	public extern var NumberClustersMin(get, never): cpp.Int32;
	public inline extern function get_NumberClustersMin(): cpp.Int32 return this.NumberClustersMin;
	public extern var NumberClustersMax(get, never): cpp.Int32;
	public inline extern function get_NumberClustersMax(): cpp.Int32 return this.NumberClustersMax;
	public extern var SitesPerClusterMin(get, never): cpp.Int32;
	public inline extern function get_SitesPerClusterMin(): cpp.Int32 return this.SitesPerClusterMin;
	public extern var SitesPerClusterMax(get, never): cpp.Int32;
	public inline extern function get_SitesPerClusterMax(): cpp.Int32 return this.SitesPerClusterMax;
	public extern var ClusterRadiusPercentageMin(get, never): cpp.Float32;
	public inline extern function get_ClusterRadiusPercentageMin(): cpp.Float32 return this.ClusterRadiusPercentageMin;
	public extern var ClusterRadiusPercentageMax(get, never): cpp.Float32;
	public inline extern function get_ClusterRadiusPercentageMax(): cpp.Float32 return this.ClusterRadiusPercentageMax;
	public extern var ClusterRadius(get, never): cpp.Float32;
	public inline extern function get_ClusterRadius(): cpp.Float32 return this.ClusterRadius;
}