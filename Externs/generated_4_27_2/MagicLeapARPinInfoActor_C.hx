// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AMagicLeapARPinInfoActor_C")
extern class MagicLeapARPinInfoActor_C extends MagicLeapARPinInfoActorBase {
	public var UberGraphFrame: PointerToUberGraphFrame;
	public var Right: cpp.Star<StaticMeshComp>;
	public var Forward: cpp.Star<StaticMeshComp>;
	public var Up: cpp.Star<StaticMeshComp>;
	public var ValidRadiusVisualizer: cpp.Star<SphereComp>;
	public var AxisRoot: cpp.Star<SceneComp>;
	public var VisualizerRoot: cpp.Star<SceneComp>;
	public var TypeValue: cpp.Star<TextRenderComp>;
	public var TransErrValue: cpp.Star<TextRenderComp>;
	public var RotErrValue: cpp.Star<TextRenderComp>;
	public var ConfidenceValue: cpp.Star<TextRenderComp>;
	public var TransErrLabel: cpp.Star<TextRenderComp>;
	public var RotErrLabel: cpp.Star<TextRenderComp>;
	public var ConfidenceLabel: cpp.Star<TextRenderComp>;
	public var PinIDValue: cpp.Star<TextRenderComp>;
	public var InfoRoot: cpp.Star<SceneComp>;
	public var Root: cpp.Star<SceneComp>;
	public var RotationSmoothSpeed: cpp.Float32;

	public function UpdatePinState(): Void;
	public function UserConstructionScript(): Void;
	public function OnUpdateARPinState(): Void;
	public function ReceiveTick(DeltaSeconds: cpp.Float32): Void;
	public function ExecuteUbergraph_MagicLeapARPinInfoActor(EntryPoint: cpp.Int32): Void;
}

@:forward()
@:nativeGen
abstract ConstMagicLeapARPinInfoActor_C(MagicLeapARPinInfoActor_C) from MagicLeapARPinInfoActor_C {
	public extern var UberGraphFrame(get, never): PointerToUberGraphFrame;
	public inline extern function get_UberGraphFrame(): PointerToUberGraphFrame return this.UberGraphFrame;
	public extern var Right(get, never): cpp.Star<StaticMeshComp.ConstStaticMeshComp>;
	public inline extern function get_Right(): cpp.Star<StaticMeshComp.ConstStaticMeshComp> return this.Right;
	public extern var Forward(get, never): cpp.Star<StaticMeshComp.ConstStaticMeshComp>;
	public inline extern function get_Forward(): cpp.Star<StaticMeshComp.ConstStaticMeshComp> return this.Forward;
	public extern var Up(get, never): cpp.Star<StaticMeshComp.ConstStaticMeshComp>;
	public inline extern function get_Up(): cpp.Star<StaticMeshComp.ConstStaticMeshComp> return this.Up;
	public extern var ValidRadiusVisualizer(get, never): cpp.Star<SphereComp.ConstSphereComp>;
	public inline extern function get_ValidRadiusVisualizer(): cpp.Star<SphereComp.ConstSphereComp> return this.ValidRadiusVisualizer;
	public extern var AxisRoot(get, never): cpp.Star<SceneComp.ConstSceneComp>;
	public inline extern function get_AxisRoot(): cpp.Star<SceneComp.ConstSceneComp> return this.AxisRoot;
	public extern var VisualizerRoot(get, never): cpp.Star<SceneComp.ConstSceneComp>;
	public inline extern function get_VisualizerRoot(): cpp.Star<SceneComp.ConstSceneComp> return this.VisualizerRoot;
	public extern var TypeValue(get, never): cpp.Star<TextRenderComp.ConstTextRenderComp>;
	public inline extern function get_TypeValue(): cpp.Star<TextRenderComp.ConstTextRenderComp> return this.TypeValue;
	public extern var TransErrValue(get, never): cpp.Star<TextRenderComp.ConstTextRenderComp>;
	public inline extern function get_TransErrValue(): cpp.Star<TextRenderComp.ConstTextRenderComp> return this.TransErrValue;
	public extern var RotErrValue(get, never): cpp.Star<TextRenderComp.ConstTextRenderComp>;
	public inline extern function get_RotErrValue(): cpp.Star<TextRenderComp.ConstTextRenderComp> return this.RotErrValue;
	public extern var ConfidenceValue(get, never): cpp.Star<TextRenderComp.ConstTextRenderComp>;
	public inline extern function get_ConfidenceValue(): cpp.Star<TextRenderComp.ConstTextRenderComp> return this.ConfidenceValue;
	public extern var TransErrLabel(get, never): cpp.Star<TextRenderComp.ConstTextRenderComp>;
	public inline extern function get_TransErrLabel(): cpp.Star<TextRenderComp.ConstTextRenderComp> return this.TransErrLabel;
	public extern var RotErrLabel(get, never): cpp.Star<TextRenderComp.ConstTextRenderComp>;
	public inline extern function get_RotErrLabel(): cpp.Star<TextRenderComp.ConstTextRenderComp> return this.RotErrLabel;
	public extern var ConfidenceLabel(get, never): cpp.Star<TextRenderComp.ConstTextRenderComp>;
	public inline extern function get_ConfidenceLabel(): cpp.Star<TextRenderComp.ConstTextRenderComp> return this.ConfidenceLabel;
	public extern var PinIDValue(get, never): cpp.Star<TextRenderComp.ConstTextRenderComp>;
	public inline extern function get_PinIDValue(): cpp.Star<TextRenderComp.ConstTextRenderComp> return this.PinIDValue;
	public extern var InfoRoot(get, never): cpp.Star<SceneComp.ConstSceneComp>;
	public inline extern function get_InfoRoot(): cpp.Star<SceneComp.ConstSceneComp> return this.InfoRoot;
	public extern var Root(get, never): cpp.Star<SceneComp.ConstSceneComp>;
	public inline extern function get_Root(): cpp.Star<SceneComp.ConstSceneComp> return this.Root;
	public extern var RotationSmoothSpeed(get, never): cpp.Float32;
	public inline extern function get_RotationSmoothSpeed(): cpp.Float32 return this.RotationSmoothSpeed;
}