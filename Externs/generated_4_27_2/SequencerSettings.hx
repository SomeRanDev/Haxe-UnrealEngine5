// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USequencerSettings")
@:include("SequencerSettings.h")
extern class SequencerSettings extends Object {
	public var AutoChangeMode: EAutoChangeMode;
	public var AllowEditsMode: EAllowEditsMode;
	public var KeyGroupMode: EKeyGroupMode;
	public var KeyInterpolation: EMovieSceneKeyInterpolation;
	public var bAutoSetTrackDefaults: Bool;
	public var SpawnPosition: ESequencerSpawnPosition;
	public var bCreateSpawnableCameras: Bool;
	public var bShowRangeSlider: Bool;
	public var bIsSnapEnabled: Bool;
	public var bSnapKeyTimesToInterval: Bool;
	public var bSnapKeyTimesToKeys: Bool;
	public var bSnapSectionTimesToInterval: Bool;
	public var bSnapSectionTimesToSections: Bool;
	public var bSnapKeysAndSectionsToPlayRange: Bool;
	public var bSnapPlayTimeToKeys: Bool;
	public var bSnapPlayTimeToInterval: Bool;
	public var bSnapPlayTimeToPressedKey: Bool;
	public var bSnapPlayTimeToDraggedKey: Bool;
	public var bSnapCurveValueToInterval: Bool;
	public var bShowSelectedNodesOnly: Bool;
	public var bRewindOnRecord: Bool;
	public var ZoomPosition: ESequencerZoomPosition;
	public var bAutoScrollEnabled: Bool;
	public var bLinkCurveEditorTimeRange: Bool;
	public var bSynchronizeCurveEditorSelection: Bool;
	public var bIsolateCurveEditorToSelection: Bool;
	public var LoopMode: ESequencerLoopMode;
	public var bKeepCursorInPlayRangeWhileScrubbing: Bool;
	public var bKeepPlayRangeInSectionBounds: Bool;
	public var ZeroPadFrames: cpp.UInt8;
	public var JumpFrameIncrement: FrameNumber;
	public var bShowCombinedKeyframes: Bool;
	public var bInfiniteKeyAreas: Bool;
	public var bShowChannelColors: Bool;
	public var ReduceKeysTolerance: cpp.Float32;
	public var bDeleteKeysWhenTrimming: Bool;
	public var bDisableSectionsAfterBaking: Bool;
	public var bCleanPlaybackMode: Bool;
	public var bActivateRealtimeViewports: Bool;
	public var bEvaluateSubSequencesInIsolation: Bool;
	public var bRerunConstructionScripts: Bool;
	public var bShowDebugVisualization: Bool;
	public var bVisualizePreAndPostRoll: Bool;
	public var bCompileDirectorOnEvaluate: Bool;
	public var TrajectoryPathCap: cpp.UInt32;
	public var bShowOutlinerInfoColumn: Bool;
	public var FrameNumberDisplayFormat: EFrameNumberDisplayFormats;
	public var MovieRendererName: FString;
}

@:forward()
@:nativeGen
abstract ConstSequencerSettings(SequencerSettings) from SequencerSettings {
	public extern var AutoChangeMode(get, never): EAutoChangeMode;
	public inline extern function get_AutoChangeMode(): EAutoChangeMode return this.AutoChangeMode;
	public extern var AllowEditsMode(get, never): EAllowEditsMode;
	public inline extern function get_AllowEditsMode(): EAllowEditsMode return this.AllowEditsMode;
	public extern var KeyGroupMode(get, never): EKeyGroupMode;
	public inline extern function get_KeyGroupMode(): EKeyGroupMode return this.KeyGroupMode;
	public extern var KeyInterpolation(get, never): EMovieSceneKeyInterpolation;
	public inline extern function get_KeyInterpolation(): EMovieSceneKeyInterpolation return this.KeyInterpolation;
	public extern var bAutoSetTrackDefaults(get, never): Bool;
	public inline extern function get_bAutoSetTrackDefaults(): Bool return this.bAutoSetTrackDefaults;
	public extern var SpawnPosition(get, never): ESequencerSpawnPosition;
	public inline extern function get_SpawnPosition(): ESequencerSpawnPosition return this.SpawnPosition;
	public extern var bCreateSpawnableCameras(get, never): Bool;
	public inline extern function get_bCreateSpawnableCameras(): Bool return this.bCreateSpawnableCameras;
	public extern var bShowRangeSlider(get, never): Bool;
	public inline extern function get_bShowRangeSlider(): Bool return this.bShowRangeSlider;
	public extern var bIsSnapEnabled(get, never): Bool;
	public inline extern function get_bIsSnapEnabled(): Bool return this.bIsSnapEnabled;
	public extern var bSnapKeyTimesToInterval(get, never): Bool;
	public inline extern function get_bSnapKeyTimesToInterval(): Bool return this.bSnapKeyTimesToInterval;
	public extern var bSnapKeyTimesToKeys(get, never): Bool;
	public inline extern function get_bSnapKeyTimesToKeys(): Bool return this.bSnapKeyTimesToKeys;
	public extern var bSnapSectionTimesToInterval(get, never): Bool;
	public inline extern function get_bSnapSectionTimesToInterval(): Bool return this.bSnapSectionTimesToInterval;
	public extern var bSnapSectionTimesToSections(get, never): Bool;
	public inline extern function get_bSnapSectionTimesToSections(): Bool return this.bSnapSectionTimesToSections;
	public extern var bSnapKeysAndSectionsToPlayRange(get, never): Bool;
	public inline extern function get_bSnapKeysAndSectionsToPlayRange(): Bool return this.bSnapKeysAndSectionsToPlayRange;
	public extern var bSnapPlayTimeToKeys(get, never): Bool;
	public inline extern function get_bSnapPlayTimeToKeys(): Bool return this.bSnapPlayTimeToKeys;
	public extern var bSnapPlayTimeToInterval(get, never): Bool;
	public inline extern function get_bSnapPlayTimeToInterval(): Bool return this.bSnapPlayTimeToInterval;
	public extern var bSnapPlayTimeToPressedKey(get, never): Bool;
	public inline extern function get_bSnapPlayTimeToPressedKey(): Bool return this.bSnapPlayTimeToPressedKey;
	public extern var bSnapPlayTimeToDraggedKey(get, never): Bool;
	public inline extern function get_bSnapPlayTimeToDraggedKey(): Bool return this.bSnapPlayTimeToDraggedKey;
	public extern var bSnapCurveValueToInterval(get, never): Bool;
	public inline extern function get_bSnapCurveValueToInterval(): Bool return this.bSnapCurveValueToInterval;
	public extern var bShowSelectedNodesOnly(get, never): Bool;
	public inline extern function get_bShowSelectedNodesOnly(): Bool return this.bShowSelectedNodesOnly;
	public extern var bRewindOnRecord(get, never): Bool;
	public inline extern function get_bRewindOnRecord(): Bool return this.bRewindOnRecord;
	public extern var ZoomPosition(get, never): ESequencerZoomPosition;
	public inline extern function get_ZoomPosition(): ESequencerZoomPosition return this.ZoomPosition;
	public extern var bAutoScrollEnabled(get, never): Bool;
	public inline extern function get_bAutoScrollEnabled(): Bool return this.bAutoScrollEnabled;
	public extern var bLinkCurveEditorTimeRange(get, never): Bool;
	public inline extern function get_bLinkCurveEditorTimeRange(): Bool return this.bLinkCurveEditorTimeRange;
	public extern var bSynchronizeCurveEditorSelection(get, never): Bool;
	public inline extern function get_bSynchronizeCurveEditorSelection(): Bool return this.bSynchronizeCurveEditorSelection;
	public extern var bIsolateCurveEditorToSelection(get, never): Bool;
	public inline extern function get_bIsolateCurveEditorToSelection(): Bool return this.bIsolateCurveEditorToSelection;
	public extern var LoopMode(get, never): ESequencerLoopMode;
	public inline extern function get_LoopMode(): ESequencerLoopMode return this.LoopMode;
	public extern var bKeepCursorInPlayRangeWhileScrubbing(get, never): Bool;
	public inline extern function get_bKeepCursorInPlayRangeWhileScrubbing(): Bool return this.bKeepCursorInPlayRangeWhileScrubbing;
	public extern var bKeepPlayRangeInSectionBounds(get, never): Bool;
	public inline extern function get_bKeepPlayRangeInSectionBounds(): Bool return this.bKeepPlayRangeInSectionBounds;
	public extern var ZeroPadFrames(get, never): cpp.UInt8;
	public inline extern function get_ZeroPadFrames(): cpp.UInt8 return this.ZeroPadFrames;
	public extern var JumpFrameIncrement(get, never): FrameNumber;
	public inline extern function get_JumpFrameIncrement(): FrameNumber return this.JumpFrameIncrement;
	public extern var bShowCombinedKeyframes(get, never): Bool;
	public inline extern function get_bShowCombinedKeyframes(): Bool return this.bShowCombinedKeyframes;
	public extern var bInfiniteKeyAreas(get, never): Bool;
	public inline extern function get_bInfiniteKeyAreas(): Bool return this.bInfiniteKeyAreas;
	public extern var bShowChannelColors(get, never): Bool;
	public inline extern function get_bShowChannelColors(): Bool return this.bShowChannelColors;
	public extern var ReduceKeysTolerance(get, never): cpp.Float32;
	public inline extern function get_ReduceKeysTolerance(): cpp.Float32 return this.ReduceKeysTolerance;
	public extern var bDeleteKeysWhenTrimming(get, never): Bool;
	public inline extern function get_bDeleteKeysWhenTrimming(): Bool return this.bDeleteKeysWhenTrimming;
	public extern var bDisableSectionsAfterBaking(get, never): Bool;
	public inline extern function get_bDisableSectionsAfterBaking(): Bool return this.bDisableSectionsAfterBaking;
	public extern var bCleanPlaybackMode(get, never): Bool;
	public inline extern function get_bCleanPlaybackMode(): Bool return this.bCleanPlaybackMode;
	public extern var bActivateRealtimeViewports(get, never): Bool;
	public inline extern function get_bActivateRealtimeViewports(): Bool return this.bActivateRealtimeViewports;
	public extern var bEvaluateSubSequencesInIsolation(get, never): Bool;
	public inline extern function get_bEvaluateSubSequencesInIsolation(): Bool return this.bEvaluateSubSequencesInIsolation;
	public extern var bRerunConstructionScripts(get, never): Bool;
	public inline extern function get_bRerunConstructionScripts(): Bool return this.bRerunConstructionScripts;
	public extern var bShowDebugVisualization(get, never): Bool;
	public inline extern function get_bShowDebugVisualization(): Bool return this.bShowDebugVisualization;
	public extern var bVisualizePreAndPostRoll(get, never): Bool;
	public inline extern function get_bVisualizePreAndPostRoll(): Bool return this.bVisualizePreAndPostRoll;
	public extern var bCompileDirectorOnEvaluate(get, never): Bool;
	public inline extern function get_bCompileDirectorOnEvaluate(): Bool return this.bCompileDirectorOnEvaluate;
	public extern var TrajectoryPathCap(get, never): cpp.UInt32;
	public inline extern function get_TrajectoryPathCap(): cpp.UInt32 return this.TrajectoryPathCap;
	public extern var bShowOutlinerInfoColumn(get, never): Bool;
	public inline extern function get_bShowOutlinerInfoColumn(): Bool return this.bShowOutlinerInfoColumn;
	public extern var FrameNumberDisplayFormat(get, never): EFrameNumberDisplayFormats;
	public inline extern function get_FrameNumberDisplayFormat(): EFrameNumberDisplayFormats return this.FrameNumberDisplayFormat;
	public extern var MovieRendererName(get, never): FString;
	public inline extern function get_MovieRendererName(): FString return this.MovieRendererName;
}