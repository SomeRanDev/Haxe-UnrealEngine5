// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPointLightComponent")
@:include("Components/PointLightComponent.h")
extern class PointLightComp extends LocalLightComp {
	public var bUseInverseSquaredFalloff: Bool;
	public var LightFalloffExponent: cpp.Float32;
	public var SourceRadius: cpp.Float32;
	public var SoftSourceRadius: cpp.Float32;
	public var SourceLength: cpp.Float32;

	public function SetSourceRadius(bNewValue: cpp.Float32): Void;
	public function SetSourceLength(NewValue: cpp.Float32): Void;
	public function SetSoftSourceRadius(bNewValue: cpp.Float32): Void;
	public function SetLightFalloffExponent(NewLightFalloffExponent: cpp.Float32): Void;
}

@:forward()
@:nativeGen
abstract ConstPointLightComp(PointLightComp) from PointLightComp {
	public extern var bUseInverseSquaredFalloff(get, never): Bool;
	public inline extern function get_bUseInverseSquaredFalloff(): Bool return this.bUseInverseSquaredFalloff;
	public extern var LightFalloffExponent(get, never): cpp.Float32;
	public inline extern function get_LightFalloffExponent(): cpp.Float32 return this.LightFalloffExponent;
	public extern var SourceRadius(get, never): cpp.Float32;
	public inline extern function get_SourceRadius(): cpp.Float32 return this.SourceRadius;
	public extern var SoftSourceRadius(get, never): cpp.Float32;
	public inline extern function get_SoftSourceRadius(): cpp.Float32 return this.SoftSourceRadius;
	public extern var SourceLength(get, never): cpp.Float32;
	public inline extern function get_SourceLength(): cpp.Float32 return this.SourceLength;
}