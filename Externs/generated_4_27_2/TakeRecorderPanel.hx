// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTakeRecorderPanel")
@:include("Recorder/TakeRecorderPanel.h")
extern class TakeRecorderPanel extends Object {
	public function StopRecording(): Void;
	public function StartRecording(): Void;
	public function SetupForViewing(LevelSequenceAsset: cpp.Star<LevelSequence>): Void;
	public function SetupForRecordingInto_LevelSequence(LevelSequenceAsset: cpp.Star<LevelSequence>): Void;
	public function SetupForRecording_TakePreset(TakePresetAsset: cpp.Star<TakePreset>): Void;
	public function SetupForRecording_LevelSequence(LevelSequenceAsset: cpp.Star<LevelSequence>): Void;
	public function SetupForEditing(TakePreset: cpp.Star<TakePreset>): Void;
	public function SetFrameRateFromTimecode(bInFromTimecode: Bool): Void;
	public function SetFrameRate(InFrameRate: FrameRate): Void;
	public function NewTake(): Void;
	public function GetTakeMetaData(): cpp.Reference<cpp.Star<TakeMetaData>>;
	public function GetSources(): cpp.Reference<cpp.Star<TakeRecorderSources>>;
	public function GetMode(): cpp.Reference<ETakeRecorderPanelMode>;
	public function GetLevelSequence(): cpp.Reference<cpp.Star<LevelSequence>>;
	public function GetLastRecordedLevelSequence(): cpp.Reference<cpp.Star<LevelSequence>>;
	public function GetFrameRate(): cpp.Reference<FrameRate>;
	public function ClearPendingTake(): Void;
	public function CanStartRecording(OutErrorText: cpp.Reference<FText>): cpp.Reference<Bool>;
}

@:forward(StopRecording, StartRecording, GetTakeMetaData, GetSources, GetMode, GetLevelSequence, GetLastRecordedLevelSequence, GetFrameRate, CanStartRecording)
@:nativeGen
abstract ConstTakeRecorderPanel(TakeRecorderPanel) from TakeRecorderPanel {
}