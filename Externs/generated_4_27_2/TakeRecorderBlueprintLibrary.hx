// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTakeRecorderBlueprintLibrary")
@:include("Recorder/TakeRecorderBlueprintLibrary.h")
extern class TakeRecorderBlueprintLibrary extends BlueprintFunctionLibrary {
	public function StopRecording(): Void;
	public function StartRecording(LevelSequence: cpp.Star<LevelSequence>, Sources: cpp.Star<TakeRecorderSources>, MetaData: cpp.Star<TakeMetaData>, Parameters: cpp.Reference<TakeRecorderParameters>): cpp.Reference<cpp.Star<TakeRecorder>>;
	public function SetOnTakeRecorderStopped(OnTakeRecorderStopped: HaxeDelegateProperty<() -> Void>): Void;
	public function SetOnTakeRecorderStarted(OnTakeRecorderStarted: HaxeDelegateProperty<() -> Void>): Void;
	public function SetOnTakeRecorderPreInitialize(OnTakeRecorderPreInitialize: HaxeDelegateProperty<() -> Void>): Void;
	public function SetOnTakeRecorderPanelChanged(OnTakeRecorderPanelChanged: HaxeDelegateProperty<() -> Void>): Void;
	public function SetOnTakeRecorderMarkedFrameAdded(OnTakeRecorderMarkedFrameAdded: HaxeDelegateProperty<(cpp.Reference<MovieSceneMarkedFrame>) -> Void>): Void;
	public function SetOnTakeRecorderFinished(OnTakeRecorderFinished: HaxeDelegateProperty<(cpp.Star<LevelSequence>) -> Void>): Void;
	public function SetOnTakeRecorderCancelled(OnTakeRecorderCancelled: HaxeDelegateProperty<() -> Void>): Void;
	public function OpenTakeRecorderPanel(): cpp.Reference<cpp.Star<TakeRecorderPanel>>;
	public function OnTakeRecorderStopped__DelegateSignature(): Void;
	public function OnTakeRecorderStarted__DelegateSignature(): Void;
	public function OnTakeRecorderPreInitialize__DelegateSignature(): Void;
	public function OnTakeRecorderPanelChanged__DelegateSignature(): Void;
	public function OnTakeRecorderMarkedFrameAdded__DelegateSignature(MarkedFrame: cpp.Reference<MovieSceneMarkedFrame>): Void;
	public function OnTakeRecorderFinished__DelegateSignature(SequenceAsset: cpp.Star<LevelSequence>): Void;
	public function OnTakeRecorderCancelled__DelegateSignature(): Void;
	public function IsTakeRecorderEnabled(): cpp.Reference<Bool>;
	public function IsRecording(): cpp.Reference<Bool>;
	public function GetTakeRecorderPanel(): cpp.Reference<cpp.Star<TakeRecorderPanel>>;
	public function GetDefaultParameters(): cpp.Reference<TakeRecorderParameters>;
	public function GetActiveRecorder(): cpp.Reference<cpp.Star<TakeRecorder>>;
}

@:forward()
@:nativeGen
abstract ConstTakeRecorderBlueprintLibrary(TakeRecorderBlueprintLibrary) from TakeRecorderBlueprintLibrary {
}