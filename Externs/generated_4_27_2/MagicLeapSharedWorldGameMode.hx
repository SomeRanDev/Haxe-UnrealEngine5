// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AMagicLeapSharedWorldGameMode")
@:include("MagicLeapSharedWorldGameMode.h")
extern class MagicLeapSharedWorldGameMode extends GameMode {
	public var SharedWorldData: MagicLeapSharedWorldSharedData;
	public var OnNewLocalDataFromClients: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var PinSelectionConfidenceThreshold: cpp.Float32;
	public var ChosenOne: cpp.Star<MagicLeapSharedWorldPlayerController>;

	public function SendSharedWorldDataToClients(): cpp.Reference<Bool>;
	public function SelectChosenOne(): Void;
	public function MagicLeapOnNewLocalDataFromClients__DelegateSignature(): Void;
	public function DetermineSharedWorldData(NewSharedWorldData: cpp.Reference<MagicLeapSharedWorldSharedData>): Void;
}

@:forward()
@:nativeGen
abstract ConstMagicLeapSharedWorldGameMode(MagicLeapSharedWorldGameMode) from MagicLeapSharedWorldGameMode {
	public extern var SharedWorldData(get, never): MagicLeapSharedWorldSharedData;
	public inline extern function get_SharedWorldData(): MagicLeapSharedWorldSharedData return this.SharedWorldData;
	public extern var OnNewLocalDataFromClients(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_OnNewLocalDataFromClients(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.OnNewLocalDataFromClients;
	public extern var PinSelectionConfidenceThreshold(get, never): cpp.Float32;
	public inline extern function get_PinSelectionConfidenceThreshold(): cpp.Float32 return this.PinSelectionConfidenceThreshold;
	public extern var ChosenOne(get, never): cpp.Star<MagicLeapSharedWorldPlayerController.ConstMagicLeapSharedWorldPlayerController>;
	public inline extern function get_ChosenOne(): cpp.Star<MagicLeapSharedWorldPlayerController.ConstMagicLeapSharedWorldPlayerController> return this.ChosenOne;
}