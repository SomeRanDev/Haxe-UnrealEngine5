// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UStaticMeshSimulationComponent")
@:include("GeometryCollection/StaticMeshSimulationComponent.h")
extern class StaticMeshSimulationComp extends ActorComp {
	public var Simulating: Bool;
	public var bNotifyCollisions: Bool;
	public var ObjectType: EObjectStateTypeEnum;
	public var Mass: cpp.Float32;
	public var CollisionType: ECollisionTypeEnum;
	public var ImplicitType: EImplicitTypeEnum;
	public var MinLevelSetResolution: cpp.Int32;
	public var MaxLevelSetResolution: cpp.Int32;
	public var InitialVelocityType: EInitialVelocityTypeEnum;
	public var InitialLinearVelocity: Vector;
	public var InitialAngularVelocity: Vector;
	public var DamageThreshold: cpp.Float32;
	public var PhysicalMaterial: cpp.Star<ChaosPhysicalMaterial>;
	public var ChaosSolverActor: cpp.Star<ChaosSolverActor>;
	public var OnChaosPhysicsCollision: HaxeMulticastSparseDelegateProperty<(cpp.Reference<ChaosPhysicsCollisionInfo>) -> Void>;
	public var SimulatedComponents: TArray<cpp.Star<PrimitiveComp>>;

	public function ReceivePhysicsCollision(CollisionInfo: cpp.Reference<ChaosPhysicsCollisionInfo>): Void;
	public function ForceRecreatePhysicsState(): Void;
}

@:forward()
@:nativeGen
abstract ConstStaticMeshSimulationComp(StaticMeshSimulationComp) from StaticMeshSimulationComp {
	public extern var Simulating(get, never): Bool;
	public inline extern function get_Simulating(): Bool return this.Simulating;
	public extern var bNotifyCollisions(get, never): Bool;
	public inline extern function get_bNotifyCollisions(): Bool return this.bNotifyCollisions;
	public extern var ObjectType(get, never): EObjectStateTypeEnum;
	public inline extern function get_ObjectType(): EObjectStateTypeEnum return this.ObjectType;
	public extern var Mass(get, never): cpp.Float32;
	public inline extern function get_Mass(): cpp.Float32 return this.Mass;
	public extern var CollisionType(get, never): ECollisionTypeEnum;
	public inline extern function get_CollisionType(): ECollisionTypeEnum return this.CollisionType;
	public extern var ImplicitType(get, never): EImplicitTypeEnum;
	public inline extern function get_ImplicitType(): EImplicitTypeEnum return this.ImplicitType;
	public extern var MinLevelSetResolution(get, never): cpp.Int32;
	public inline extern function get_MinLevelSetResolution(): cpp.Int32 return this.MinLevelSetResolution;
	public extern var MaxLevelSetResolution(get, never): cpp.Int32;
	public inline extern function get_MaxLevelSetResolution(): cpp.Int32 return this.MaxLevelSetResolution;
	public extern var InitialVelocityType(get, never): EInitialVelocityTypeEnum;
	public inline extern function get_InitialVelocityType(): EInitialVelocityTypeEnum return this.InitialVelocityType;
	public extern var InitialLinearVelocity(get, never): Vector;
	public inline extern function get_InitialLinearVelocity(): Vector return this.InitialLinearVelocity;
	public extern var InitialAngularVelocity(get, never): Vector;
	public inline extern function get_InitialAngularVelocity(): Vector return this.InitialAngularVelocity;
	public extern var DamageThreshold(get, never): cpp.Float32;
	public inline extern function get_DamageThreshold(): cpp.Float32 return this.DamageThreshold;
	public extern var PhysicalMaterial(get, never): cpp.Star<ChaosPhysicalMaterial.ConstChaosPhysicalMaterial>;
	public inline extern function get_PhysicalMaterial(): cpp.Star<ChaosPhysicalMaterial.ConstChaosPhysicalMaterial> return this.PhysicalMaterial;
	public extern var ChaosSolverActor(get, never): cpp.Star<ChaosSolverActor.ConstChaosSolverActor>;
	public inline extern function get_ChaosSolverActor(): cpp.Star<ChaosSolverActor.ConstChaosSolverActor> return this.ChaosSolverActor;
	public extern var OnChaosPhysicsCollision(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Reference<ChaosPhysicsCollisionInfo>) -> Void>;
	public inline extern function get_OnChaosPhysicsCollision(): HaxeMulticastSparseDelegateProperty<(cpp.Reference<ChaosPhysicsCollisionInfo>) -> Void> return this.OnChaosPhysicsCollision;
	public extern var SimulatedComponents(get, never): TArray<cpp.Star<PrimitiveComp.ConstPrimitiveComp>>;
	public inline extern function get_SimulatedComponents(): TArray<cpp.Star<PrimitiveComp.ConstPrimitiveComp>> return this.SimulatedComponents;
}