// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFindTurnBasedMatchCallbackProxy")
@:include("FindTurnBasedMatchCallbackProxy.h")
extern class FindTurnBasedMatchCallbackProxy extends OnlineBlueprintCallProxyBase {
	public var OnSuccess: HaxeMulticastSparseDelegateProperty<(FString) -> Void>;
	public var OnFailure: HaxeMulticastSparseDelegateProperty<(FString) -> Void>;

	public function FindTurnBasedMatch(WorldContextObject: cpp.Star<Object>, PlayerController: cpp.Star<PlayerController>, MatchActor: TurnBasedMatchInterface, MinPlayers: cpp.Int32, MaxPlayers: cpp.Int32, PlayerGroup: cpp.Int32, ShowExistingMatches: Bool): cpp.Reference<cpp.Star<FindTurnBasedMatchCallbackProxy>>;
}

@:forward()
@:nativeGen
abstract ConstFindTurnBasedMatchCallbackProxy(FindTurnBasedMatchCallbackProxy) from FindTurnBasedMatchCallbackProxy {
	public extern var OnSuccess(get, never): HaxeMulticastSparseDelegateProperty<(FString) -> Void>;
	public inline extern function get_OnSuccess(): HaxeMulticastSparseDelegateProperty<(FString) -> Void> return this.OnSuccess;
	public extern var OnFailure(get, never): HaxeMulticastSparseDelegateProperty<(FString) -> Void>;
	public inline extern function get_OnFailure(): HaxeMulticastSparseDelegateProperty<(FString) -> Void> return this.OnFailure;
}