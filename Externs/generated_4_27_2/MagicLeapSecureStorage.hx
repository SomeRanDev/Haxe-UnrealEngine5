// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMagicLeapSecureStorage")
@:include("MagicLeapSecureStorage.h")
extern class MagicLeapSecureStorage extends BlueprintFunctionLibrary {
	public function PutSecureVector(Key: FString, DataToStore: cpp.Reference<Vector>): cpp.Reference<Bool>;
	public function PutSecureTransform(Key: FString, DataToStore: cpp.Reference<Transform>): cpp.Reference<Bool>;
	public function PutSecureString(Key: FString, DataToStore: FString): cpp.Reference<Bool>;
	public function PutSecureSaveGame(Key: FString, ObjectToStore: cpp.Star<SaveGame>): cpp.Reference<Bool>;
	public function PutSecureRotator(Key: FString, DataToStore: cpp.Reference<Rotator>): cpp.Reference<Bool>;
	public function PutSecureInt64(Key: FString, DataToStore: cpp.Int64): cpp.Reference<Bool>;
	public function PutSecureInt(Key: FString, DataToStore: cpp.Int32): cpp.Reference<Bool>;
	public function PutSecureFloat(Key: FString, DataToStore: cpp.Float32): cpp.Reference<Bool>;
	public function PutSecureByte(Key: FString, DataToStore: cpp.UInt8): cpp.Reference<Bool>;
	public function PutSecureBool(Key: FString, DataToStore: Bool): cpp.Reference<Bool>;
	public function PutSecureArray(Key: FString, DataToStore: cpp.Reference<TArray<cpp.Int32>>): cpp.Reference<Bool>;
	public function GetSecureVector(Key: FString, DataToRetrieve: cpp.Reference<Vector>): cpp.Reference<Bool>;
	public function GetSecureTransform(Key: FString, DataToRetrieve: cpp.Reference<Transform>): cpp.Reference<Bool>;
	public function GetSecureString(Key: FString, DataToRetrieve: cpp.Reference<FString>): cpp.Reference<Bool>;
	public function GetSecureSaveGame(Key: FString, ObjectToRetrieve: cpp.Reference<cpp.Star<SaveGame>>): cpp.Reference<Bool>;
	public function GetSecureRotator(Key: FString, DataToRetrieve: cpp.Reference<Rotator>): cpp.Reference<Bool>;
	public function GetSecureInt64(Key: FString, DataToRetrieve: cpp.Reference<cpp.Int64>): cpp.Reference<Bool>;
	public function GetSecureInt(Key: FString, DataToRetrieve: cpp.Reference<cpp.Int32>): cpp.Reference<Bool>;
	public function GetSecureFloat(Key: FString, DataToRetrieve: cpp.Reference<cpp.Float32>): cpp.Reference<Bool>;
	public function GetSecureByte(Key: FString, DataToRetrieve: cpp.Reference<cpp.UInt8>): cpp.Reference<Bool>;
	public function GetSecureBool(Key: FString, DataToRetrieve: cpp.Reference<Bool>): cpp.Reference<Bool>;
	public function GetSecureArray(Key: FString, DataToRetrieve: cpp.Reference<TArray<cpp.Int32>>): cpp.Reference<Bool>;
	public function DeleteSecureData(Key: FString): cpp.Reference<Bool>;
}

@:forward()
@:nativeGen
abstract ConstMagicLeapSecureStorage(MagicLeapSecureStorage) from MagicLeapSecureStorage {
}