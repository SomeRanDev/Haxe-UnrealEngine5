// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMagicLeapPlanesComponent")
@:include("MagicLeapPlanesComponent.h")
extern class MagicLeapPlanesComp extends SceneComp {
	public var QueryFlags: TArray<EMagicLeapPlaneQueryFlags>;
	public var SearchVolume: cpp.Star<BoxComp>;
	public var MaxResults: cpp.Int32;
	public var MinHolePerimeter: cpp.Float32;
	public var MinPlaneArea: cpp.Float32;
	public var QueryType: EMagicLeapPlaneQueryType;
	public var SimilarityThreshold: cpp.Float32;
	public var OnPlanesQueryResult: HaxeMulticastSparseDelegateProperty<(Bool, cpp.Reference<TArray<MagicLeapPlaneResult>>, cpp.Reference<TArray<MagicLeapPlaneBoundaries>>) -> Void>;
	public var OnPersistentPlanesQueryResult: HaxeMulticastSparseDelegateProperty<(Bool, cpp.Reference<Guid>, EMagicLeapPlaneQueryType, cpp.Reference<TArray<MagicLeapPlaneResult>>, cpp.Reference<TArray<Guid>>, cpp.Reference<TArray<MagicLeapPlaneBoundaries>>, cpp.Reference<TArray<Guid>>) -> Void>;

	public function RequestPlanesAsync(): cpp.Reference<Bool>;
}

@:forward()
@:nativeGen
abstract ConstMagicLeapPlanesComp(MagicLeapPlanesComp) from MagicLeapPlanesComp {
	public extern var QueryFlags(get, never): TArray<EMagicLeapPlaneQueryFlags>;
	public inline extern function get_QueryFlags(): TArray<EMagicLeapPlaneQueryFlags> return this.QueryFlags;
	public extern var SearchVolume(get, never): cpp.Star<BoxComp.ConstBoxComp>;
	public inline extern function get_SearchVolume(): cpp.Star<BoxComp.ConstBoxComp> return this.SearchVolume;
	public extern var MaxResults(get, never): cpp.Int32;
	public inline extern function get_MaxResults(): cpp.Int32 return this.MaxResults;
	public extern var MinHolePerimeter(get, never): cpp.Float32;
	public inline extern function get_MinHolePerimeter(): cpp.Float32 return this.MinHolePerimeter;
	public extern var MinPlaneArea(get, never): cpp.Float32;
	public inline extern function get_MinPlaneArea(): cpp.Float32 return this.MinPlaneArea;
	public extern var QueryType(get, never): EMagicLeapPlaneQueryType;
	public inline extern function get_QueryType(): EMagicLeapPlaneQueryType return this.QueryType;
	public extern var SimilarityThreshold(get, never): cpp.Float32;
	public inline extern function get_SimilarityThreshold(): cpp.Float32 return this.SimilarityThreshold;
	public extern var OnPlanesQueryResult(get, never): HaxeMulticastSparseDelegateProperty<(Bool, cpp.Reference<TArray<MagicLeapPlaneResult>>, cpp.Reference<TArray<MagicLeapPlaneBoundaries>>) -> Void>;
	public inline extern function get_OnPlanesQueryResult(): HaxeMulticastSparseDelegateProperty<(Bool, cpp.Reference<TArray<MagicLeapPlaneResult>>, cpp.Reference<TArray<MagicLeapPlaneBoundaries>>) -> Void> return this.OnPlanesQueryResult;
	public extern var OnPersistentPlanesQueryResult(get, never): HaxeMulticastSparseDelegateProperty<(Bool, cpp.Reference<Guid>, EMagicLeapPlaneQueryType, cpp.Reference<TArray<MagicLeapPlaneResult>>, cpp.Reference<TArray<Guid>>, cpp.Reference<TArray<MagicLeapPlaneBoundaries>>, cpp.Reference<TArray<Guid>>) -> Void>;
	public inline extern function get_OnPersistentPlanesQueryResult(): HaxeMulticastSparseDelegateProperty<(Bool, cpp.Reference<Guid>, EMagicLeapPlaneQueryType, cpp.Reference<TArray<MagicLeapPlaneResult>>, cpp.Reference<TArray<Guid>>, cpp.Reference<TArray<MagicLeapPlaneBoundaries>>, cpp.Reference<TArray<Guid>>) -> Void> return this.OnPersistentPlanesQueryResult;
}