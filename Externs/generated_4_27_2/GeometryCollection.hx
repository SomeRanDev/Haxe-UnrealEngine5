// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGeometryCollection")
@:include("GeometryCollection/GeometryCollectionObject.h")
extern class GeometryCollection extends Object {
	public var EnableClustering: Bool;
	public var ClusterGroupIndex: cpp.Int32;
	public var MaxClusterLevel: cpp.Int32;
	public var DamageThreshold: TArray<cpp.Float32>;
	public var ClusterConnectionType: EClusterConnectionTypeEnum;
	public var GeometrySource: TArray<GeometryCollectionSource>;
	public var Materials: TArray<cpp.Star<MaterialInterface>>;
	public var CollisionType: ECollisionTypeEnum;
	public var ImplicitType: EImplicitTypeEnum;
	public var MinLevelSetResolution: cpp.Int32;
	public var MaxLevelSetResolution: cpp.Int32;
	public var MinClusterLevelSetResolution: cpp.Int32;
	public var MaxClusterLevelSetResolution: cpp.Int32;
	public var CollisionObjectReductionPercentage: cpp.Float32;
	public var bMassAsDensity: Bool;
	public var Mass: cpp.Float32;
	public var MinimumMassClamp: cpp.Float32;
	public var CollisionParticlesFraction: cpp.Float32;
	public var MaximumCollisionParticles: cpp.Int32;
	public var SizeSpecificData: TArray<GeometryCollectionSizeSpecificData>;
	public var EnableRemovePiecesOnFracture: Bool;
	public var RemoveOnFractureMaterials: TArray<cpp.Star<MaterialInterface>>;
	public var ThumbnailInfo: cpp.Star<ThumbnailInfo>;
	public var PersistentGuid: Guid;
	public var StateGuid: Guid;
	public var BoneSelectedMaterialIndex: cpp.Int32;
}

@:forward()
@:nativeGen
abstract ConstGeometryCollection(GeometryCollection) from GeometryCollection {
	public extern var EnableClustering(get, never): Bool;
	public inline extern function get_EnableClustering(): Bool return this.EnableClustering;
	public extern var ClusterGroupIndex(get, never): cpp.Int32;
	public inline extern function get_ClusterGroupIndex(): cpp.Int32 return this.ClusterGroupIndex;
	public extern var MaxClusterLevel(get, never): cpp.Int32;
	public inline extern function get_MaxClusterLevel(): cpp.Int32 return this.MaxClusterLevel;
	public extern var DamageThreshold(get, never): TArray<cpp.Float32>;
	public inline extern function get_DamageThreshold(): TArray<cpp.Float32> return this.DamageThreshold;
	public extern var ClusterConnectionType(get, never): EClusterConnectionTypeEnum;
	public inline extern function get_ClusterConnectionType(): EClusterConnectionTypeEnum return this.ClusterConnectionType;
	public extern var GeometrySource(get, never): TArray<GeometryCollectionSource>;
	public inline extern function get_GeometrySource(): TArray<GeometryCollectionSource> return this.GeometrySource;
	public extern var Materials(get, never): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>>;
	public inline extern function get_Materials(): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>> return this.Materials;
	public extern var CollisionType(get, never): ECollisionTypeEnum;
	public inline extern function get_CollisionType(): ECollisionTypeEnum return this.CollisionType;
	public extern var ImplicitType(get, never): EImplicitTypeEnum;
	public inline extern function get_ImplicitType(): EImplicitTypeEnum return this.ImplicitType;
	public extern var MinLevelSetResolution(get, never): cpp.Int32;
	public inline extern function get_MinLevelSetResolution(): cpp.Int32 return this.MinLevelSetResolution;
	public extern var MaxLevelSetResolution(get, never): cpp.Int32;
	public inline extern function get_MaxLevelSetResolution(): cpp.Int32 return this.MaxLevelSetResolution;
	public extern var MinClusterLevelSetResolution(get, never): cpp.Int32;
	public inline extern function get_MinClusterLevelSetResolution(): cpp.Int32 return this.MinClusterLevelSetResolution;
	public extern var MaxClusterLevelSetResolution(get, never): cpp.Int32;
	public inline extern function get_MaxClusterLevelSetResolution(): cpp.Int32 return this.MaxClusterLevelSetResolution;
	public extern var CollisionObjectReductionPercentage(get, never): cpp.Float32;
	public inline extern function get_CollisionObjectReductionPercentage(): cpp.Float32 return this.CollisionObjectReductionPercentage;
	public extern var bMassAsDensity(get, never): Bool;
	public inline extern function get_bMassAsDensity(): Bool return this.bMassAsDensity;
	public extern var Mass(get, never): cpp.Float32;
	public inline extern function get_Mass(): cpp.Float32 return this.Mass;
	public extern var MinimumMassClamp(get, never): cpp.Float32;
	public inline extern function get_MinimumMassClamp(): cpp.Float32 return this.MinimumMassClamp;
	public extern var CollisionParticlesFraction(get, never): cpp.Float32;
	public inline extern function get_CollisionParticlesFraction(): cpp.Float32 return this.CollisionParticlesFraction;
	public extern var MaximumCollisionParticles(get, never): cpp.Int32;
	public inline extern function get_MaximumCollisionParticles(): cpp.Int32 return this.MaximumCollisionParticles;
	public extern var SizeSpecificData(get, never): TArray<GeometryCollectionSizeSpecificData>;
	public inline extern function get_SizeSpecificData(): TArray<GeometryCollectionSizeSpecificData> return this.SizeSpecificData;
	public extern var EnableRemovePiecesOnFracture(get, never): Bool;
	public inline extern function get_EnableRemovePiecesOnFracture(): Bool return this.EnableRemovePiecesOnFracture;
	public extern var RemoveOnFractureMaterials(get, never): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>>;
	public inline extern function get_RemoveOnFractureMaterials(): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>> return this.RemoveOnFractureMaterials;
	public extern var ThumbnailInfo(get, never): cpp.Star<ThumbnailInfo.ConstThumbnailInfo>;
	public inline extern function get_ThumbnailInfo(): cpp.Star<ThumbnailInfo.ConstThumbnailInfo> return this.ThumbnailInfo;
	public extern var PersistentGuid(get, never): Guid;
	public inline extern function get_PersistentGuid(): Guid return this.PersistentGuid;
	public extern var StateGuid(get, never): Guid;
	public inline extern function get_StateGuid(): Guid return this.StateGuid;
	public extern var BoneSelectedMaterialIndex(get, never): cpp.Int32;
	public inline extern function get_BoneSelectedMaterialIndex(): cpp.Int32 return this.BoneSelectedMaterialIndex;
}