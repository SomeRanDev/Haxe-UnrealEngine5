// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULandscapeSplineSegment")
@:include("LandscapeSplineSegment.h")
extern class LandscapeSplineSegment extends Object {
	public var Connections: LandscapeSplineSegmentConnection;
	public var LayerName: FName;
	public var bRaiseTerrain: Bool;
	public var bLowerTerrain: Bool;
	public var SplineMeshes: TArray<LandscapeSplineMeshEntry>;
	public var bEnableCollision_DEPRECATED: Bool;
	public var CollisionProfileName: FName;
	public var bCastShadow: Bool;
	public var bHiddenInGame: Bool;
	public var bPlaceSplineMeshesInStreamingLevels: Bool;
	public var RandomSeed: cpp.Int32;
	public var LDMaxDrawDistance: cpp.Float32;
	public var TranslucencySortPriority: cpp.Int32;
	public var bRenderCustomDepth: Bool;
	public var CustomDepthStencilWriteMask: ERendererStencilMask;
	public var CustomDepthStencilValue: cpp.Int32;
	public var RuntimeVirtualTextures: TArray<cpp.Star<RuntimeVirtualTexture>>;
	public var VirtualTextureLodBias: cpp.Int32;
	public var VirtualTextureCullMips: cpp.Int32;
	public var VirtualTextureMainPassMaxDrawDistance: cpp.Float32;
	public var VirtualTextureRenderPassType: ERuntimeVirtualTextureMainPassType;
	public var BodyInstance: BodyInstance;
	public var bSelected: Bool;
	public var bNavDirty: Bool;
	public var SplineInfo: InterpCurveVector;
	public var Points: TArray<LandscapeSplineInterpPoint>;
	public var Bounds: Box;
	public var LocalMeshComponents: TArray<cpp.Star<SplineMeshComp>>;
	public var ForeignWorlds: TArray<TSoftObjectPtr<World>>;
	public var ModificationKey: Guid;
}

@:forward()
@:nativeGen
abstract ConstLandscapeSplineSegment(LandscapeSplineSegment) from LandscapeSplineSegment {
	public extern var Connections(get, never): LandscapeSplineSegmentConnection;
	public inline extern function get_Connections(): LandscapeSplineSegmentConnection return this.Connections;
	public extern var LayerName(get, never): FName;
	public inline extern function get_LayerName(): FName return this.LayerName;
	public extern var bRaiseTerrain(get, never): Bool;
	public inline extern function get_bRaiseTerrain(): Bool return this.bRaiseTerrain;
	public extern var bLowerTerrain(get, never): Bool;
	public inline extern function get_bLowerTerrain(): Bool return this.bLowerTerrain;
	public extern var SplineMeshes(get, never): TArray<LandscapeSplineMeshEntry>;
	public inline extern function get_SplineMeshes(): TArray<LandscapeSplineMeshEntry> return this.SplineMeshes;
	public extern var bEnableCollision_DEPRECATED(get, never): Bool;
	public inline extern function get_bEnableCollision_DEPRECATED(): Bool return this.bEnableCollision_DEPRECATED;
	public extern var CollisionProfileName(get, never): FName;
	public inline extern function get_CollisionProfileName(): FName return this.CollisionProfileName;
	public extern var bCastShadow(get, never): Bool;
	public inline extern function get_bCastShadow(): Bool return this.bCastShadow;
	public extern var bHiddenInGame(get, never): Bool;
	public inline extern function get_bHiddenInGame(): Bool return this.bHiddenInGame;
	public extern var bPlaceSplineMeshesInStreamingLevels(get, never): Bool;
	public inline extern function get_bPlaceSplineMeshesInStreamingLevels(): Bool return this.bPlaceSplineMeshesInStreamingLevels;
	public extern var RandomSeed(get, never): cpp.Int32;
	public inline extern function get_RandomSeed(): cpp.Int32 return this.RandomSeed;
	public extern var LDMaxDrawDistance(get, never): cpp.Float32;
	public inline extern function get_LDMaxDrawDistance(): cpp.Float32 return this.LDMaxDrawDistance;
	public extern var TranslucencySortPriority(get, never): cpp.Int32;
	public inline extern function get_TranslucencySortPriority(): cpp.Int32 return this.TranslucencySortPriority;
	public extern var bRenderCustomDepth(get, never): Bool;
	public inline extern function get_bRenderCustomDepth(): Bool return this.bRenderCustomDepth;
	public extern var CustomDepthStencilWriteMask(get, never): ERendererStencilMask;
	public inline extern function get_CustomDepthStencilWriteMask(): ERendererStencilMask return this.CustomDepthStencilWriteMask;
	public extern var CustomDepthStencilValue(get, never): cpp.Int32;
	public inline extern function get_CustomDepthStencilValue(): cpp.Int32 return this.CustomDepthStencilValue;
	public extern var RuntimeVirtualTextures(get, never): TArray<cpp.Star<RuntimeVirtualTexture.ConstRuntimeVirtualTexture>>;
	public inline extern function get_RuntimeVirtualTextures(): TArray<cpp.Star<RuntimeVirtualTexture.ConstRuntimeVirtualTexture>> return this.RuntimeVirtualTextures;
	public extern var VirtualTextureLodBias(get, never): cpp.Int32;
	public inline extern function get_VirtualTextureLodBias(): cpp.Int32 return this.VirtualTextureLodBias;
	public extern var VirtualTextureCullMips(get, never): cpp.Int32;
	public inline extern function get_VirtualTextureCullMips(): cpp.Int32 return this.VirtualTextureCullMips;
	public extern var VirtualTextureMainPassMaxDrawDistance(get, never): cpp.Float32;
	public inline extern function get_VirtualTextureMainPassMaxDrawDistance(): cpp.Float32 return this.VirtualTextureMainPassMaxDrawDistance;
	public extern var VirtualTextureRenderPassType(get, never): ERuntimeVirtualTextureMainPassType;
	public inline extern function get_VirtualTextureRenderPassType(): ERuntimeVirtualTextureMainPassType return this.VirtualTextureRenderPassType;
	public extern var BodyInstance(get, never): BodyInstance;
	public inline extern function get_BodyInstance(): BodyInstance return this.BodyInstance;
	public extern var bSelected(get, never): Bool;
	public inline extern function get_bSelected(): Bool return this.bSelected;
	public extern var bNavDirty(get, never): Bool;
	public inline extern function get_bNavDirty(): Bool return this.bNavDirty;
	public extern var SplineInfo(get, never): InterpCurveVector;
	public inline extern function get_SplineInfo(): InterpCurveVector return this.SplineInfo;
	public extern var Points(get, never): TArray<LandscapeSplineInterpPoint>;
	public inline extern function get_Points(): TArray<LandscapeSplineInterpPoint> return this.Points;
	public extern var Bounds(get, never): Box;
	public inline extern function get_Bounds(): Box return this.Bounds;
	public extern var LocalMeshComponents(get, never): TArray<cpp.Star<SplineMeshComp.ConstSplineMeshComp>>;
	public inline extern function get_LocalMeshComponents(): TArray<cpp.Star<SplineMeshComp.ConstSplineMeshComp>> return this.LocalMeshComponents;
	public extern var ForeignWorlds(get, never): TArray<TSoftObjectPtr<World.ConstWorld>>;
	public inline extern function get_ForeignWorlds(): TArray<TSoftObjectPtr<World.ConstWorld>> return this.ForeignWorlds;
	public extern var ModificationKey(get, never): Guid;
	public inline extern function get_ModificationKey(): Guid return this.ModificationKey;
}