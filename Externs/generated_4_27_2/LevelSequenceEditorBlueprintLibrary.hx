// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULevelSequenceEditorBlueprintLibrary")
@:include("LevelSequenceEditorBlueprintLibrary.h")
extern class LevelSequenceEditorBlueprintLibrary extends BlueprintFunctionLibrary {
	public function SetLockLevelSequence(bLock: Bool): Void;
	public function SetCurrentTime(NewFrame: cpp.Int32): Void;
	public function SetCurrentLocalTime(NewFrame: cpp.Int32): Void;
	public function SelectTracks(Tracks: cpp.Reference<TArray<cpp.Star<MovieSceneTrack>>>): Void;
	public function SelectSections(Sections: cpp.Reference<TArray<cpp.Star<MovieSceneSection>>>): Void;
	public function SelectObjects(ObjectBinding: TArray<Guid>): Void;
	public function SelectFolders(Folders: cpp.Reference<TArray<cpp.Star<MovieSceneFolder>>>): Void;
	public function SelectChannels(Channels: cpp.Reference<TArray<SequencerChannelProxy>>): Void;
	public function RefreshCurrentLevelSequence(): Void;
	public function PlayTo(PlaybackParams: MovieSceneSequencePlaybackParams): Void;
	public function Play(): Void;
	public function Pause(): Void;
	public function OpenLevelSequence(LevelSequence: cpp.Star<LevelSequence>): cpp.Reference<Bool>;
	public function IsPlaying(): cpp.Reference<Bool>;
	public function IsLevelSequenceLocked(): cpp.Reference<Bool>;
	public function GetSelectedTracks(): cpp.Reference<TArray<cpp.Star<MovieSceneTrack>>>;
	public function GetSelectedSections(): cpp.Reference<TArray<cpp.Star<MovieSceneSection>>>;
	public function GetSelectedObjects(): cpp.Reference<TArray<Guid>>;
	public function GetSelectedFolders(): cpp.Reference<TArray<cpp.Star<MovieSceneFolder>>>;
	public function GetSelectedChannels(): cpp.Reference<TArray<SequencerChannelProxy>>;
	public function GetFocusedLevelSequence(): cpp.Reference<cpp.Star<LevelSequence>>;
	public function GetCurrentTime(): cpp.Reference<cpp.Int32>;
	public function GetCurrentLocalTime(): cpp.Reference<cpp.Int32>;
	public function GetCurrentLevelSequence(): cpp.Reference<cpp.Star<LevelSequence>>;
	public function GetBoundObjects(ObjectBinding: MovieSceneObjectBindingID): cpp.Reference<TArray<cpp.Star<Object>>>;
	public function EmptySelection(): Void;
	public function CloseLevelSequence(): Void;
}

@:forward()
@:nativeGen
abstract ConstLevelSequenceEditorBlueprintLibrary(LevelSequenceEditorBlueprintLibrary) from LevelSequenceEditorBlueprintLibrary {
}