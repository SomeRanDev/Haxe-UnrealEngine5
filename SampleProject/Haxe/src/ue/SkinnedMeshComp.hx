// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USkinnedMeshComponent")
@:include("Components/SkinnedMeshComponent.h")
@:valueType
extern class SkinnedMeshComp extends MeshComp {
	public function GetSkeletalMesh_DEPRECATED(): ucpp.Ptr<SkeletalMesh>;
	public function GetSkinnedAsset(): ucpp.Ptr<SkinnedAsset>;
	public var LeaderPoseComponent: TWeakObjectPtr<SkinnedMeshComp>;
	public var SkinCacheUsage: TArray<ESkinCacheUsage>;
	@:protected public var bSetMeshDeformer: Bool;
	@:protected public var MeshDeformer: ucpp.Ptr<MeshDeformer>;
	@:protected public var MeshDeformerInstanceSettings: ucpp.Ptr<MeshDeformerInstanceSettings>;
	public function GetMeshDeformerInstance(): ucpp.Ptr<MeshDeformerInstance>;
	public var PhysicsAssetOverride: ucpp.Ptr<PhysicsAsset>;
	public var ForcedLodModel: ucpp.num.Int32;
	public var MinLodModel: ucpp.num.Int32;
	public var StreamingDistanceMultiplier: ucpp.num.Float32;
	public var LODInfo: TArray<SkelMeshComponentLODInfo>;
	public var VisibilityBasedAnimTickOption: EVisibilityBasedAnimTickOption;
	public var bOverrideMinLod: Bool;
	public var bUseBoundsFromLeaderPoseComponent: Bool;
	public var bForceWireframe: Bool;
	public var bDisableMorphTarget: Bool;
	public var bHideSkin: Bool;
	public var bPerBoneMotionBlur: Bool;
	public var bComponentUseFixedSkelBounds: Bool;
	public var bConsiderAllBodiesForBounds: Bool;
	public var bSyncAttachParentLOD: Bool;
	public var bCanHighlightSelectedSections: Bool;
	public var bRecentlyRendered: Bool;
	public var bCastCapsuleDirectShadow: Bool;
	public var bCastCapsuleIndirectShadow: Bool;
	public var bCPUSkinning: Bool;
	public var bEnableUpdateRateOptimizations: Bool;
	public var bDisplayDebugUpdateRateOptimizations: Bool;
	public var bRenderStatic: Bool;
	public var bIgnoreLeaderPoseComponentLOD: Bool;
	@:protected public var bCachedLocalBoundsUpToDate: Bool;
	@:protected public var bCachedWorldSpaceBoundsUpToDate: Bool;
	private var bForceMeshObjectUpdate: Bool;
	private var bForceUpdateDynamicDataImmediately: Bool;
	@:protected public var bFollowerShouldTickPose: Bool;
	public var CapsuleIndirectShadowMinVisibility: ucpp.num.Float32;
	@:protected public var CachedWorldOrLocalSpaceBounds: BoxSphereBounds;
	@:protected public var CachedWorldToLocalTransform: Matrix;

	public function UnsetMeshDeformer(): Void;
	public function UnloadSkinWeightProfile(InProfileName: FName): Void;
	public function UnHideBoneByName(BoneName: FName): Void;
	public function TransformToBoneSpace(BoneName: FName, InPosition: Vector, InRotation: Rotator, OutPosition: ucpp.Ref<Vector>, OutRotation: ucpp.Ref<Rotator>): Void;
	public function TransformFromBoneSpace(BoneName: FName, InPosition: Vector, InRotation: Rotator, OutPosition: ucpp.Ref<Vector>, OutRotation: ucpp.Ref<Rotator>): Void;
	public function ShowMaterialSection(MaterialID: ucpp.num.Int32, SectionIndex: ucpp.num.Int32, bShow: Bool, LODIndex: ucpp.num.Int32): Void;
	public function ShowAllMaterialSections(LODIndex: ucpp.num.Int32): Void;
	public function SetVertexOffsetUsage(LODIndex: ucpp.num.Int32, Usage: ucpp.num.Int32): Void;
	public function SetVertexColorOverride_LinearColor(LODIndex: ucpp.num.Int32, VertexColors: ucpp.Ref<TArray<LinearColor>>): Void;
	public function SetSkinWeightProfile(InProfileName: FName): Bool;
	public function SetSkinWeightOverride(LODIndex: ucpp.num.Int32, SkinWeights: ucpp.Ref<TArray<SkelMeshSkinWeightInfo>>): Void;
	public function SetSkinnedAssetAndUpdate(NewMesh: ucpp.Ptr<SkinnedAsset>, bReinitPose: Bool): Void;
	public function SetRenderStatic(bNewValue: Bool): Void;
	public function SetPreSkinningOffsets(LODIndex: ucpp.num.Int32, Offsets: TArray<Vector>): Void;
	public function SetPostSkinningOffsets(LODIndex: ucpp.num.Int32, Offsets: TArray<Vector>): Void;
	public function SetPhysicsAsset(NewPhysicsAsset: ucpp.Ptr<PhysicsAsset>, bForceReInit: Bool): Void;
	public function SetMinLOD(InNewMinLOD: ucpp.num.Int32): Void;
	public function SetMeshDeformer(InMeshDeformer: ucpp.Ptr<MeshDeformer>): Void;
	public function SetLeaderPoseComponent(NewLeaderBoneComponent: ucpp.Ptr<SkinnedMeshComp>, bForceUpdate: Bool, bInFollowerShouldTickPose: Bool): Void;
	public function SetForcedLOD(InNewForcedLOD: ucpp.num.Int32): Void;
	public function SetCastCapsuleIndirectShadow(bNewValue: Bool): Void;
	public function SetCastCapsuleDirectShadow(bNewValue: Bool): Void;
	public function SetCapsuleIndirectShadowMinVisibility(NewValue: ucpp.num.Float32): Void;
	public function IsUsingSkinWeightProfile(): Bool;
	public function IsMaterialSectionShown(MaterialID: ucpp.num.Int32, LODIndex: ucpp.num.Int32): Bool;
	public function IsBoneHiddenByName(BoneName: FName): Bool;
	public function HideBoneByName(BoneName: FName, PhysBodyOption: TEnumAsByte<EPhysBodyOp>): Void;
	public function GetVertexOffsetUsage(LODIndex: ucpp.num.Int32): ucpp.num.Int32;
	public function GetTwistAndSwingAngleOfDeltaRotationFromRefPose(BoneName: FName, OutTwistAngle: ucpp.Ref<ucpp.num.Float32>, OutSwingAngle: ucpp.Ref<ucpp.num.Float32>): Bool;
	public function GetSocketBoneName(InSocketName: FName): FName;
	public function GetRefPoseTransform(BoneIndex: ucpp.num.Int32): Transform;
	public function GetRefPosePosition(BoneIndex: ucpp.num.Int32): Vector;
	public function GetPredictedLODLevel(): ucpp.num.Int32;
	public function GetParentBone(BoneName: FName): FName;
	public function GetNumLODs(): ucpp.num.Int32;
	public function GetNumBones(): ucpp.num.Int32;
	public function GetForcedLOD(): ucpp.num.Int32;
	public function GetDeltaTransformFromRefPose(BoneName: FName, BaseName: FName): Transform;
	public function GetCurrentSkinWeightProfileName(): FName;
	public function GetBoneName(BoneIndex: ucpp.num.Int32): FName;
	public function GetBoneIndex(BoneName: FName): ucpp.num.Int32;
	public function FindClosestBone_K2(TestLocation: Vector, BoneLocation: ucpp.Ref<Vector>, IgnoreScale: ucpp.num.Float32, bRequirePhysicsAsset: Bool): FName;
	public function ClearVertexColorOverride(LODIndex: ucpp.num.Int32): Void;
	public function ClearSkinWeightProfile(): Void;
	public function ClearSkinWeightOverride(LODIndex: ucpp.num.Int32): Void;
	public function BoneIsChildOf(BoneName: FName, ParentBoneName: FName): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(
	TransformToBoneSpace, IsUsingSkinWeightProfile, GetVertexOffsetUsage, GetTwistAndSwingAngleOfDeltaRotationFromRefPose, GetSocketBoneName,
	GetRefPoseTransform, GetRefPosePosition, GetPredictedLODLevel, GetParentBone, GetNumLODs,
	GetNumBones, GetForcedLOD, GetDeltaTransformFromRefPose, GetCurrentSkinWeightProfileName, GetBoneName,
	GetBoneIndex, FindClosestBone_K2, BoneIsChildOf
)
@:nativeGen
abstract ConstSkinnedMeshComp(SkinnedMeshComp) from SkinnedMeshComp {
	public extern var LeaderPoseComponent(get, never): TWeakObjectPtr<SkinnedMeshComp.ConstSkinnedMeshComp>;
	public inline extern function get_LeaderPoseComponent(): TWeakObjectPtr<SkinnedMeshComp.ConstSkinnedMeshComp> return this.LeaderPoseComponent;
	public extern var SkinCacheUsage(get, never): TArray<ESkinCacheUsage>;
	public inline extern function get_SkinCacheUsage(): TArray<ESkinCacheUsage> return this.SkinCacheUsage;
	public extern var PhysicsAssetOverride(get, never): ucpp.Ptr<PhysicsAsset.ConstPhysicsAsset>;
	public inline extern function get_PhysicsAssetOverride(): ucpp.Ptr<PhysicsAsset.ConstPhysicsAsset> return this.PhysicsAssetOverride;
	public extern var ForcedLodModel(get, never): ucpp.num.Int32;
	public inline extern function get_ForcedLodModel(): ucpp.num.Int32 return this.ForcedLodModel;
	public extern var MinLodModel(get, never): ucpp.num.Int32;
	public inline extern function get_MinLodModel(): ucpp.num.Int32 return this.MinLodModel;
	public extern var StreamingDistanceMultiplier(get, never): ucpp.num.Float32;
	public inline extern function get_StreamingDistanceMultiplier(): ucpp.num.Float32 return this.StreamingDistanceMultiplier;
	public extern var LODInfo(get, never): TArray<SkelMeshComponentLODInfo>;
	public inline extern function get_LODInfo(): TArray<SkelMeshComponentLODInfo> return this.LODInfo;
	public extern var VisibilityBasedAnimTickOption(get, never): EVisibilityBasedAnimTickOption;
	public inline extern function get_VisibilityBasedAnimTickOption(): EVisibilityBasedAnimTickOption return this.VisibilityBasedAnimTickOption;
	public extern var bOverrideMinLod(get, never): Bool;
	public inline extern function get_bOverrideMinLod(): Bool return this.bOverrideMinLod;
	public extern var bUseBoundsFromLeaderPoseComponent(get, never): Bool;
	public inline extern function get_bUseBoundsFromLeaderPoseComponent(): Bool return this.bUseBoundsFromLeaderPoseComponent;
	public extern var bForceWireframe(get, never): Bool;
	public inline extern function get_bForceWireframe(): Bool return this.bForceWireframe;
	public extern var bDisableMorphTarget(get, never): Bool;
	public inline extern function get_bDisableMorphTarget(): Bool return this.bDisableMorphTarget;
	public extern var bHideSkin(get, never): Bool;
	public inline extern function get_bHideSkin(): Bool return this.bHideSkin;
	public extern var bPerBoneMotionBlur(get, never): Bool;
	public inline extern function get_bPerBoneMotionBlur(): Bool return this.bPerBoneMotionBlur;
	public extern var bComponentUseFixedSkelBounds(get, never): Bool;
	public inline extern function get_bComponentUseFixedSkelBounds(): Bool return this.bComponentUseFixedSkelBounds;
	public extern var bConsiderAllBodiesForBounds(get, never): Bool;
	public inline extern function get_bConsiderAllBodiesForBounds(): Bool return this.bConsiderAllBodiesForBounds;
	public extern var bSyncAttachParentLOD(get, never): Bool;
	public inline extern function get_bSyncAttachParentLOD(): Bool return this.bSyncAttachParentLOD;
	public extern var bCanHighlightSelectedSections(get, never): Bool;
	public inline extern function get_bCanHighlightSelectedSections(): Bool return this.bCanHighlightSelectedSections;
	public extern var bRecentlyRendered(get, never): Bool;
	public inline extern function get_bRecentlyRendered(): Bool return this.bRecentlyRendered;
	public extern var bCastCapsuleDirectShadow(get, never): Bool;
	public inline extern function get_bCastCapsuleDirectShadow(): Bool return this.bCastCapsuleDirectShadow;
	public extern var bCastCapsuleIndirectShadow(get, never): Bool;
	public inline extern function get_bCastCapsuleIndirectShadow(): Bool return this.bCastCapsuleIndirectShadow;
	public extern var bCPUSkinning(get, never): Bool;
	public inline extern function get_bCPUSkinning(): Bool return this.bCPUSkinning;
	public extern var bEnableUpdateRateOptimizations(get, never): Bool;
	public inline extern function get_bEnableUpdateRateOptimizations(): Bool return this.bEnableUpdateRateOptimizations;
	public extern var bDisplayDebugUpdateRateOptimizations(get, never): Bool;
	public inline extern function get_bDisplayDebugUpdateRateOptimizations(): Bool return this.bDisplayDebugUpdateRateOptimizations;
	public extern var bRenderStatic(get, never): Bool;
	public inline extern function get_bRenderStatic(): Bool return this.bRenderStatic;
	public extern var bIgnoreLeaderPoseComponentLOD(get, never): Bool;
	public inline extern function get_bIgnoreLeaderPoseComponentLOD(): Bool return this.bIgnoreLeaderPoseComponentLOD;
	public extern var CapsuleIndirectShadowMinVisibility(get, never): ucpp.num.Float32;
	public inline extern function get_CapsuleIndirectShadowMinVisibility(): ucpp.num.Float32 return this.CapsuleIndirectShadowMinVisibility;
}

@:forward
@:nativeGen
@:native("SkinnedMeshComp*")
abstract SkinnedMeshCompPtr(ucpp.Ptr<SkinnedMeshComp>) from ucpp.Ptr<SkinnedMeshComp> to ucpp.Ptr<SkinnedMeshComp>{
	@:from
	public static extern inline function fromValue(v: SkinnedMeshComp): SkinnedMeshCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SkinnedMeshComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}