// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPoseAsset")
@:include("Animation/PoseAsset.h")
@:valueType
extern class PoseAsset extends AnimationAsset {
	private var PoseContainer: PoseDataContainer;
	private var bAdditivePose: Bool;
	private var BasePoseIndex: ucpp.num.Int32;
	public var RetargetSource: FName;
	public var RetargetSourceAssetReferencePose: TArray<Transform>;

	public function UpdatePoseFromAnimation(AnimSequence: ucpp.Ptr<AnimSequence>): Void;
	public function RenamePose(OriginalPoseName: ucpp.Ref<FName>, NewPoseName: ucpp.Ref<FName>): Void;
	public function GetPoseNames(PoseNames: ucpp.Ref<TArray<FName>>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetPoseNames)
@:nativeGen
abstract ConstPoseAsset(PoseAsset) from PoseAsset {
	public extern var RetargetSource(get, never): FName;
	public inline extern function get_RetargetSource(): FName return this.RetargetSource;
	public extern var RetargetSourceAssetReferencePose(get, never): TArray<Transform>;
	public inline extern function get_RetargetSourceAssetReferencePose(): TArray<Transform> return this.RetargetSourceAssetReferencePose;
}

@:forward
@:nativeGen
@:native("PoseAsset*")
abstract PoseAssetPtr(ucpp.Ptr<PoseAsset>) from ucpp.Ptr<PoseAsset> to ucpp.Ptr<PoseAsset>{
	@:from
	public static extern inline function fromValue(v: PoseAsset): PoseAssetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PoseAsset {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}