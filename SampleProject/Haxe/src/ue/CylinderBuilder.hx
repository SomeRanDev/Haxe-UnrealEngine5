// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UCylinderBuilder")
@:include("Builders/CylinderBuilder.h")
@:valueType
extern class CylinderBuilder extends EditorBrushBuilder {
	public var Z: ucpp.num.Float32;
	public var OuterRadius: ucpp.num.Float32;
	public var InnerRadius: ucpp.num.Float32;
	public var Sides: ucpp.num.Int32;
	public var GroupName: FName;
	public var AlignToSide: Bool;
	public var Hollow: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstCylinderBuilder(CylinderBuilder) from CylinderBuilder {
	public extern var Z(get, never): ucpp.num.Float32;
	public inline extern function get_Z(): ucpp.num.Float32 return this.Z;
	public extern var OuterRadius(get, never): ucpp.num.Float32;
	public inline extern function get_OuterRadius(): ucpp.num.Float32 return this.OuterRadius;
	public extern var InnerRadius(get, never): ucpp.num.Float32;
	public inline extern function get_InnerRadius(): ucpp.num.Float32 return this.InnerRadius;
	public extern var Sides(get, never): ucpp.num.Int32;
	public inline extern function get_Sides(): ucpp.num.Int32 return this.Sides;
	public extern var GroupName(get, never): FName;
	public inline extern function get_GroupName(): FName return this.GroupName;
	public extern var AlignToSide(get, never): Bool;
	public inline extern function get_AlignToSide(): Bool return this.AlignToSide;
	public extern var Hollow(get, never): Bool;
	public inline extern function get_Hollow(): Bool return this.Hollow;
}

@:forward
@:nativeGen
@:native("CylinderBuilder*")
abstract CylinderBuilderPtr(ucpp.Ptr<CylinderBuilder>) from ucpp.Ptr<CylinderBuilder> to ucpp.Ptr<CylinderBuilder>{
	@:from
	public static extern inline function fromValue(v: CylinderBuilder): CylinderBuilderPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): CylinderBuilder {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}