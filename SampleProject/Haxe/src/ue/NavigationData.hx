// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ANavigationData")
@:include("NavigationData.h")
@:valueType
extern class NavigationData extends Actor {
	public var RenderingComp: ucpp.Ptr<PrimitiveComp>;
	@:protected public var NavDataConfig: NavDataConfig;
	@:protected public var bEnableDrawing: Bool;
	@:protected public var bForceRebuildOnLoad: Bool;
	@:protected public var bAutoDestroyWhenNoNavigation: Bool;
	@:protected public var bCanBeMainNavData: Bool;
	@:protected public var bCanSpawnOnRebuild: Bool;
	@:protected public var RuntimeGeneration: ERuntimeGenerationType;
	@:protected public var ObservedPathsTickInterval: ucpp.num.Float32;
	@:protected public var DataVersion: ucpp.num.UInt32;
	@:protected public var SupportedAreas: TArray<SupportedAreaData>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstNavigationData(NavigationData) from NavigationData {
	public extern var RenderingComp(get, never): ucpp.Ptr<PrimitiveComp.ConstPrimitiveComp>;
	public inline extern function get_RenderingComp(): ucpp.Ptr<PrimitiveComp.ConstPrimitiveComp> return this.RenderingComp;
}

@:forward
@:nativeGen
@:native("NavigationData*")
abstract NavigationDataPtr(ucpp.Ptr<NavigationData>) from ucpp.Ptr<NavigationData> to ucpp.Ptr<NavigationData>{
	@:from
	public static extern inline function fromValue(v: NavigationData): NavigationDataPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): NavigationData {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}