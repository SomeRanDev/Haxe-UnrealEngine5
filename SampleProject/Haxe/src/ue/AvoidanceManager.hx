// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAvoidanceManager")
@:include("AI/Navigation/AvoidanceManager.h")
@:valueType
extern class AvoidanceManager extends Object {
	public var DefaultTimeToLive: ucpp.num.Float32;
	public var LockTimeAfterAvoid: ucpp.num.Float32;
	public var LockTimeAfterClean: ucpp.num.Float32;
	public var DeltaTimeToPredict: ucpp.num.Float32;
	public var ArtificialRadiusExpansion: ucpp.num.Float32;
	public var HeightCheckMargin: ucpp.num.Float32;

	public function RegisterMovementComponent(MovementComp: ucpp.Ptr<MovementComp>, AvoidanceWeight: ucpp.num.Float32): Bool;
	public function GetObjectCount(): ucpp.num.Int32;
	public function GetNewAvoidanceUID(): ucpp.num.Int32;
	public function GetAvoidanceVelocityForComponent(MovementComp: ucpp.Ptr<MovementComp>): Vector;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAvoidanceManager(AvoidanceManager) from AvoidanceManager {
	public extern var DefaultTimeToLive(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultTimeToLive(): ucpp.num.Float32 return this.DefaultTimeToLive;
	public extern var LockTimeAfterAvoid(get, never): ucpp.num.Float32;
	public inline extern function get_LockTimeAfterAvoid(): ucpp.num.Float32 return this.LockTimeAfterAvoid;
	public extern var LockTimeAfterClean(get, never): ucpp.num.Float32;
	public inline extern function get_LockTimeAfterClean(): ucpp.num.Float32 return this.LockTimeAfterClean;
	public extern var DeltaTimeToPredict(get, never): ucpp.num.Float32;
	public inline extern function get_DeltaTimeToPredict(): ucpp.num.Float32 return this.DeltaTimeToPredict;
	public extern var ArtificialRadiusExpansion(get, never): ucpp.num.Float32;
	public inline extern function get_ArtificialRadiusExpansion(): ucpp.num.Float32 return this.ArtificialRadiusExpansion;
	public extern var HeightCheckMargin(get, never): ucpp.num.Float32;
	public inline extern function get_HeightCheckMargin(): ucpp.num.Float32 return this.HeightCheckMargin;
}

@:forward
@:nativeGen
@:native("AvoidanceManager*")
abstract AvoidanceManagerPtr(ucpp.Ptr<AvoidanceManager>) from ucpp.Ptr<AvoidanceManager> to ucpp.Ptr<AvoidanceManager>{
	@:from
	public static extern inline function fromValue(v: AvoidanceManager): AvoidanceManagerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AvoidanceManager {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}