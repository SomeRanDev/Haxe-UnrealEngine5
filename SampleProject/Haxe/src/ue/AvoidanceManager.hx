// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAvoidanceManager")
@:include("AI/Navigation/AvoidanceManager.h")
@:structAccess
extern class AvoidanceManager extends Object {
	public var DefaultTimeToLive: cpp.Float32;
	public var LockTimeAfterAvoid: cpp.Float32;
	public var LockTimeAfterClean: cpp.Float32;
	public var DeltaTimeToPredict: cpp.Float32;
	public var ArtificialRadiusExpansion: cpp.Float32;
	public var TestHeightDifference_DEPRECATED: cpp.Float32;
	public var HeightCheckMargin: cpp.Float32;

	public function RegisterMovementComponent(MovementComp: cpp.Star<MovementComp>, AvoidanceWeight: cpp.Float32): cpp.Reference<Bool>;
	public function GetObjectCount(): cpp.Reference<cpp.Int32>;
	public function GetNewAvoidanceUID(): cpp.Reference<cpp.Int32>;
	public function GetAvoidanceVelocityForComponent(MovementComp: cpp.Star<MovementComp>): cpp.Reference<Vector>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAvoidanceManager(AvoidanceManager) from AvoidanceManager {
	public extern var DefaultTimeToLive(get, never): cpp.Float32;
	public inline extern function get_DefaultTimeToLive(): cpp.Float32 return this.DefaultTimeToLive;
	public extern var LockTimeAfterAvoid(get, never): cpp.Float32;
	public inline extern function get_LockTimeAfterAvoid(): cpp.Float32 return this.LockTimeAfterAvoid;
	public extern var LockTimeAfterClean(get, never): cpp.Float32;
	public inline extern function get_LockTimeAfterClean(): cpp.Float32 return this.LockTimeAfterClean;
	public extern var DeltaTimeToPredict(get, never): cpp.Float32;
	public inline extern function get_DeltaTimeToPredict(): cpp.Float32 return this.DeltaTimeToPredict;
	public extern var ArtificialRadiusExpansion(get, never): cpp.Float32;
	public inline extern function get_ArtificialRadiusExpansion(): cpp.Float32 return this.ArtificialRadiusExpansion;
	public extern var TestHeightDifference_DEPRECATED(get, never): cpp.Float32;
	public inline extern function get_TestHeightDifference_DEPRECATED(): cpp.Float32 return this.TestHeightDifference_DEPRECATED;
	public extern var HeightCheckMargin(get, never): cpp.Float32;
	public inline extern function get_HeightCheckMargin(): cpp.Float32 return this.HeightCheckMargin;
}

@:forward
@:nativeGen
@:native("AvoidanceManager*")
abstract AvoidanceManagerPtr(cpp.Star<AvoidanceManager>) from cpp.Star<AvoidanceManager> to cpp.Star<AvoidanceManager>{
	@:from
	public static extern inline function fromValue(v: AvoidanceManager): AvoidanceManagerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AvoidanceManager {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}