// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UShapeComponent")
@:include("Components/ShapeComponent.h")
@:valueType
extern class ShapeComp extends PrimitiveComp {
	public var ShapeBodySetup: ucpp.Ptr<BodySetup>;
	public var ShapeColor: Color;
	public var bDrawOnlyIfSelected: Bool;
	public var bShouldCollideWhenPlacing: Bool;
	public var bDynamicObstacle: Bool;
	@:protected public var AreaClassOverride: TSubclassOf<NavAreaBase>;
	@:protected public var bUseSystemDefaultObstacleAreaClass: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstShapeComp(ShapeComp) from ShapeComp {
	public extern var ShapeBodySetup(get, never): ucpp.Ptr<BodySetup.ConstBodySetup>;
	public inline extern function get_ShapeBodySetup(): ucpp.Ptr<BodySetup.ConstBodySetup> return this.ShapeBodySetup;
	public extern var ShapeColor(get, never): Color;
	public inline extern function get_ShapeColor(): Color return this.ShapeColor;
	public extern var bDrawOnlyIfSelected(get, never): Bool;
	public inline extern function get_bDrawOnlyIfSelected(): Bool return this.bDrawOnlyIfSelected;
	public extern var bShouldCollideWhenPlacing(get, never): Bool;
	public inline extern function get_bShouldCollideWhenPlacing(): Bool return this.bShouldCollideWhenPlacing;
	public extern var bDynamicObstacle(get, never): Bool;
	public inline extern function get_bDynamicObstacle(): Bool return this.bDynamicObstacle;
}

@:forward
@:nativeGen
@:native("ShapeComp*")
abstract ShapeCompPtr(ucpp.Ptr<ShapeComp>) from ucpp.Ptr<ShapeComp> to ucpp.Ptr<ShapeComp>{
	@:from
	public static extern inline function fromValue(v: ShapeComp): ShapeCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ShapeComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}