// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFractureTransformGizmoSettings")
@:include("FractureToolCutter.h")
extern class FractureTransformGizmoSettings extends FractureToolSettings {
	public var bUseGizmo: Bool;
	public var bCenterOnSelection: Bool;
	public var bShowUseGizmoOption: Bool;
	public var TransformGizmo: cpp.Star<CombinedTransformGizmo>;
	public var TransformProxy: cpp.Star<TransformProxy>;
	public var AttachedCutter: cpp.Star<FractureToolCutterBase>;
	public var UsedToolsContext: cpp.Star<InteractiveToolsContext>;
}

@:forward()
@:nativeGen
abstract ConstFractureTransformGizmoSettings(FractureTransformGizmoSettings) from FractureTransformGizmoSettings {
	public extern var bUseGizmo(get, never): Bool;
	public inline extern function get_bUseGizmo(): Bool return this.bUseGizmo;
	public extern var bCenterOnSelection(get, never): Bool;
	public inline extern function get_bCenterOnSelection(): Bool return this.bCenterOnSelection;
	public extern var bShowUseGizmoOption(get, never): Bool;
	public inline extern function get_bShowUseGizmoOption(): Bool return this.bShowUseGizmoOption;
	public extern var TransformGizmo(get, never): cpp.Star<CombinedTransformGizmo.ConstCombinedTransformGizmo>;
	public inline extern function get_TransformGizmo(): cpp.Star<CombinedTransformGizmo.ConstCombinedTransformGizmo> return this.TransformGizmo;
	public extern var TransformProxy(get, never): cpp.Star<TransformProxy.ConstTransformProxy>;
	public inline extern function get_TransformProxy(): cpp.Star<TransformProxy.ConstTransformProxy> return this.TransformProxy;
	public extern var AttachedCutter(get, never): cpp.Star<FractureToolCutterBase.ConstFractureToolCutterBase>;
	public inline extern function get_AttachedCutter(): cpp.Star<FractureToolCutterBase.ConstFractureToolCutterBase> return this.AttachedCutter;
	public extern var UsedToolsContext(get, never): cpp.Star<InteractiveToolsContext.ConstInteractiveToolsContext>;
	public inline extern function get_UsedToolsContext(): cpp.Star<InteractiveToolsContext.ConstInteractiveToolsContext> return this.UsedToolsContext;
}