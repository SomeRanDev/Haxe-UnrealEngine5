// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UParticleModuleRequired")
@:include("Particles/ParticleModuleRequired.h")
extern class ParticleModuleRequired extends ParticleModule {
	public var Material: cpp.Star<MaterialInterface>;
	public var MinFacingCameraBlendDistance: cpp.Float32;
	public var MaxFacingCameraBlendDistance: cpp.Float32;
	public var EmitterOrigin: Vector;
	public var EmitterRotation: Rotator;
	public var ScreenAlignment: EParticleScreenAlignment;
	public var bUseLocalSpace: Bool;
	public var bKillOnDeactivate: Bool;
	public var bKillOnCompleted: Bool;
	public var SortMode: EParticleSortMode;
	public var bUseLegacyEmitterTime: Bool;
	public var bRemoveHMDRoll: Bool;
	public var bSupportLargeWorldCoordinates: Bool;
	public var bEmitterDurationUseRange: Bool;
	public var EmitterDuration: cpp.Float32;
	public var SpawnRate: RawDistributionFloat;
	public var BurstList: TArray<ParticleBurst>;
	public var EmitterDelay: cpp.Float32;
	public var EmitterDelayLow: cpp.Float32;
	public var bDelayFirstLoopOnly: Bool;
	public var InterpolationMethod: EParticleSubUVInterpMethod;
	public var bScaleUV: Bool;
	public var bEmitterDelayUseRange: Bool;
	public var ParticleBurstMethod: EParticleBurstMethod;
	public var bOverrideSystemMacroUV: Bool;
	public var bUseMaxDrawCount: Bool;
	public var OpacitySourceMode: EOpacitySourceMode;
	public var EmitterNormalsMode: EEmitterNormalsMode;
	public var bOrbitModuleAffectsVelocityAlignment: Bool;
	public var SubImages_Horizontal: cpp.Int32;
	public var SubImages_Vertical: cpp.Int32;
	public var RandomImageTime: cpp.Float32;
	public var RandomImageChanges: cpp.Int32;
	public var MacroUVPosition: Vector;
	public var MacroUVRadius: cpp.Float32;
	public var UVFlippingMode: EParticleUVFlipMode;
	public var BoundingMode: ESubUVBoundingVertexCount;
	public var bDurationRecalcEachLoop: Bool;
	public var NormalsSphereCenter: Vector;
	public var AlphaThreshold: cpp.Float32;
	public var EmitterLoops: cpp.Int32;
	public var CutoutTexture: cpp.Star<Texture2D>;
	public var MaxDrawCount: cpp.Int32;
	public var EmitterDurationLow: cpp.Float32;
	public var NormalsCylinderDirection: Vector;
	public var NamedMaterialOverrides: TArray<FName>;
}

@:forward()
@:nativeGen
abstract ConstParticleModuleRequired(ParticleModuleRequired) from ParticleModuleRequired {
	public extern var Material(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_Material(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.Material;
	public extern var MinFacingCameraBlendDistance(get, never): cpp.Float32;
	public inline extern function get_MinFacingCameraBlendDistance(): cpp.Float32 return this.MinFacingCameraBlendDistance;
	public extern var MaxFacingCameraBlendDistance(get, never): cpp.Float32;
	public inline extern function get_MaxFacingCameraBlendDistance(): cpp.Float32 return this.MaxFacingCameraBlendDistance;
	public extern var EmitterOrigin(get, never): Vector;
	public inline extern function get_EmitterOrigin(): Vector return this.EmitterOrigin;
	public extern var EmitterRotation(get, never): Rotator;
	public inline extern function get_EmitterRotation(): Rotator return this.EmitterRotation;
	public extern var ScreenAlignment(get, never): EParticleScreenAlignment;
	public inline extern function get_ScreenAlignment(): EParticleScreenAlignment return this.ScreenAlignment;
	public extern var bUseLocalSpace(get, never): Bool;
	public inline extern function get_bUseLocalSpace(): Bool return this.bUseLocalSpace;
	public extern var bKillOnDeactivate(get, never): Bool;
	public inline extern function get_bKillOnDeactivate(): Bool return this.bKillOnDeactivate;
	public extern var bKillOnCompleted(get, never): Bool;
	public inline extern function get_bKillOnCompleted(): Bool return this.bKillOnCompleted;
	public extern var SortMode(get, never): EParticleSortMode;
	public inline extern function get_SortMode(): EParticleSortMode return this.SortMode;
	public extern var bUseLegacyEmitterTime(get, never): Bool;
	public inline extern function get_bUseLegacyEmitterTime(): Bool return this.bUseLegacyEmitterTime;
	public extern var bRemoveHMDRoll(get, never): Bool;
	public inline extern function get_bRemoveHMDRoll(): Bool return this.bRemoveHMDRoll;
	public extern var bSupportLargeWorldCoordinates(get, never): Bool;
	public inline extern function get_bSupportLargeWorldCoordinates(): Bool return this.bSupportLargeWorldCoordinates;
	public extern var bEmitterDurationUseRange(get, never): Bool;
	public inline extern function get_bEmitterDurationUseRange(): Bool return this.bEmitterDurationUseRange;
	public extern var EmitterDuration(get, never): cpp.Float32;
	public inline extern function get_EmitterDuration(): cpp.Float32 return this.EmitterDuration;
	public extern var SpawnRate(get, never): RawDistributionFloat;
	public inline extern function get_SpawnRate(): RawDistributionFloat return this.SpawnRate;
	public extern var BurstList(get, never): TArray<ParticleBurst>;
	public inline extern function get_BurstList(): TArray<ParticleBurst> return this.BurstList;
	public extern var EmitterDelay(get, never): cpp.Float32;
	public inline extern function get_EmitterDelay(): cpp.Float32 return this.EmitterDelay;
	public extern var EmitterDelayLow(get, never): cpp.Float32;
	public inline extern function get_EmitterDelayLow(): cpp.Float32 return this.EmitterDelayLow;
	public extern var bDelayFirstLoopOnly(get, never): Bool;
	public inline extern function get_bDelayFirstLoopOnly(): Bool return this.bDelayFirstLoopOnly;
	public extern var InterpolationMethod(get, never): EParticleSubUVInterpMethod;
	public inline extern function get_InterpolationMethod(): EParticleSubUVInterpMethod return this.InterpolationMethod;
	public extern var bScaleUV(get, never): Bool;
	public inline extern function get_bScaleUV(): Bool return this.bScaleUV;
	public extern var bEmitterDelayUseRange(get, never): Bool;
	public inline extern function get_bEmitterDelayUseRange(): Bool return this.bEmitterDelayUseRange;
	public extern var ParticleBurstMethod(get, never): EParticleBurstMethod;
	public inline extern function get_ParticleBurstMethod(): EParticleBurstMethod return this.ParticleBurstMethod;
	public extern var bOverrideSystemMacroUV(get, never): Bool;
	public inline extern function get_bOverrideSystemMacroUV(): Bool return this.bOverrideSystemMacroUV;
	public extern var bUseMaxDrawCount(get, never): Bool;
	public inline extern function get_bUseMaxDrawCount(): Bool return this.bUseMaxDrawCount;
	public extern var OpacitySourceMode(get, never): EOpacitySourceMode;
	public inline extern function get_OpacitySourceMode(): EOpacitySourceMode return this.OpacitySourceMode;
	public extern var EmitterNormalsMode(get, never): EEmitterNormalsMode;
	public inline extern function get_EmitterNormalsMode(): EEmitterNormalsMode return this.EmitterNormalsMode;
	public extern var bOrbitModuleAffectsVelocityAlignment(get, never): Bool;
	public inline extern function get_bOrbitModuleAffectsVelocityAlignment(): Bool return this.bOrbitModuleAffectsVelocityAlignment;
	public extern var SubImages_Horizontal(get, never): cpp.Int32;
	public inline extern function get_SubImages_Horizontal(): cpp.Int32 return this.SubImages_Horizontal;
	public extern var SubImages_Vertical(get, never): cpp.Int32;
	public inline extern function get_SubImages_Vertical(): cpp.Int32 return this.SubImages_Vertical;
	public extern var RandomImageTime(get, never): cpp.Float32;
	public inline extern function get_RandomImageTime(): cpp.Float32 return this.RandomImageTime;
	public extern var RandomImageChanges(get, never): cpp.Int32;
	public inline extern function get_RandomImageChanges(): cpp.Int32 return this.RandomImageChanges;
	public extern var MacroUVPosition(get, never): Vector;
	public inline extern function get_MacroUVPosition(): Vector return this.MacroUVPosition;
	public extern var MacroUVRadius(get, never): cpp.Float32;
	public inline extern function get_MacroUVRadius(): cpp.Float32 return this.MacroUVRadius;
	public extern var UVFlippingMode(get, never): EParticleUVFlipMode;
	public inline extern function get_UVFlippingMode(): EParticleUVFlipMode return this.UVFlippingMode;
	public extern var BoundingMode(get, never): ESubUVBoundingVertexCount;
	public inline extern function get_BoundingMode(): ESubUVBoundingVertexCount return this.BoundingMode;
	public extern var bDurationRecalcEachLoop(get, never): Bool;
	public inline extern function get_bDurationRecalcEachLoop(): Bool return this.bDurationRecalcEachLoop;
	public extern var NormalsSphereCenter(get, never): Vector;
	public inline extern function get_NormalsSphereCenter(): Vector return this.NormalsSphereCenter;
	public extern var AlphaThreshold(get, never): cpp.Float32;
	public inline extern function get_AlphaThreshold(): cpp.Float32 return this.AlphaThreshold;
	public extern var EmitterLoops(get, never): cpp.Int32;
	public inline extern function get_EmitterLoops(): cpp.Int32 return this.EmitterLoops;
	public extern var CutoutTexture(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_CutoutTexture(): cpp.Star<Texture2D.ConstTexture2D> return this.CutoutTexture;
	public extern var MaxDrawCount(get, never): cpp.Int32;
	public inline extern function get_MaxDrawCount(): cpp.Int32 return this.MaxDrawCount;
	public extern var EmitterDurationLow(get, never): cpp.Float32;
	public inline extern function get_EmitterDurationLow(): cpp.Float32 return this.EmitterDurationLow;
	public extern var NormalsCylinderDirection(get, never): Vector;
	public inline extern function get_NormalsCylinderDirection(): Vector return this.NormalsCylinderDirection;
	public extern var NamedMaterialOverrides(get, never): TArray<FName>;
	public inline extern function get_NamedMaterialOverrides(): TArray<FName> return this.NamedMaterialOverrides;
}