// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USkeletalMeshComponent")
@:include("Components/SkeletalMeshComponent.h")
extern class SkeletalMComp extends SkinnedMeComp {
	public var AnimationBlueprint_DEPRECATED: cpp.Star<AnimBlueprint>;
	public var AnimBlueprintGeneratedClass: TSubclassOf<Object>;
	public var AnimClass: TSubclassOf<AnimInstance>;
	public var AnimScriptInstance: cpp.Star<AnimInstance>;
	public var SubInstances: TArray<cpp.Star<AnimInstance>>;
	public var PostProcessAnimInstance: cpp.Star<AnimInstance>;
	public var AnimationData: FSingleAnimationPlayData;
	public var RootBoneTranslation: FVector;
	public var LineCheckBoundsScale: FVector;
	public var LinkedInstances: TArray<cpp.Star<AnimInstance>>;
	public var CachedBoneSpaceTransforms: TArray<FTransform>;
	public var CachedComponentSpaceTransforms: TArray<FTransform>;
	public var GlobalAnimRateScale: cpp.Float32;
	public var KinematicBonesUpdateType: EKinematicBonesUpdateToPhysics;
	public var PhysicsTransformUpdateMode: EPhysicsTransformUpdateMode;
	public var AnimationMode: EAnimationMode;
	public var bDisablePostProcessBlueprint: Bool;
	public var bUpdateOverlapsOnAnimationFinalize: Bool;
	public var bHasValidBodies: Bool;
	public var bBlendPhysics: Bool;
	public var bEnablePhysicsOnDedicatedServer: Bool;
	public var bUpdateJointsFromAnimation: Bool;
	public var bAllowClothActors: Bool;
	public var bDisableClothSimulation: Bool;
	public var bDisableRigidBodyAnimNode: Bool;
	public var bAllowAnimCurveEvaluation: Bool;
	public var bDisableAnimCurves_DEPRECATED: Bool;
	public var bCollideWithEnvironment: Bool;
	public var bCollideWithAttachedChildren: Bool;
	public var bForceCollisionUpdate: Bool;
	public var bLocalSpaceSimulation: Bool;
	public var bResetAfterTeleport: Bool;
	public var bDeferKinematicBoneUpdate: Bool;
	public var bNoSkeletonUpdate: Bool;
	public var bPauseAnims: Bool;
	public var bUseRefPoseOnInitAnim: Bool;
	public var bEnablePerPolyCollision: Bool;
	public var bForceRefpose: Bool;
	public var bOnlyAllowAutonomousTickPose: Bool;
	public var bIsAutonomousTickPose: Bool;
	public var bOldForceRefPose: Bool;
	public var bShowPrePhysBones: Bool;
	public var bRequiredBonesUpToDate: Bool;
	public var bAnimTreeInitialised: Bool;
	public var bIncludeComponentLocationIntoBounds: Bool;
	public var bEnableLineCheckWithBounds: Bool;
	public var bPropagateCurvesToSlaves: Bool;
	public var bSkipKinematicUpdateWhenInterpolating: Bool;
	public var bSkipBoundsUpdateWhenInterpolating: Bool;
	public var bUpdateAnimationInEditor: Bool;
	public var bUpdateClothInEditor: Bool;
	public var bOverrideDefaultAnimatingRig: Bool;
	public var bNeedsQueuedAnimEventsDispatched: Bool;
	public var CachedAnimCurveUidVersion: cpp.UInt16;
	public var ClothBlendWeight: cpp.Float32;
	public var bWaitForParallelClothTask: Bool;
	public var DisallowedAnimCurves: TArray<FName>;
	public var BodySetup: cpp.Star<BodySetup>;
	public var ClothMaxDistanceScale: cpp.Float32;
	public var OnConstraintBroken: HaxeMulticastSparseDelegateProperty<(cpp.Int32) -> Void>;
	public var OnPlasticDeformation: HaxeMulticastSparseDelegateProperty<(cpp.Int32) -> Void>;
	public var ClothingSimulationFactory: TSubclassOf<ClothingSimulationFactory>;
	public var TeleportDistanceThreshold: cpp.Float32;
	public var TeleportRotationThreshold: cpp.Float32;
	public var LastPoseTickFrame: cpp.UInt32;
	public var ClothingInteractor: cpp.Star<ClothingSimulationInteractor>;
	public var OnAnimInitialized: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var SequenceToPlay_DEPRECATED: cpp.Star<AnimSequence>;
	public var AnimToPlay_DEPRECATED: cpp.Star<AnimationAsset>;
	public var bDefaultLooping_DEPRECATED: Bool;
	public var bDefaultPlaying_DEPRECATED: Bool;
	public var DefaultPosition_DEPRECATED: cpp.Float32;
	public var DefaultPlayRate_DEPRECATED: cpp.Float32;
	public var DefaultAnimatingRigOverride: TSoftObjectPtr<Object>;

	public function UnlinkAnimClassLayers(InClass: TSubclassOf<AnimInstance>): Void;
	public function UnbindClothFromMasterPoseComponent(bRestoreSimulationSpace: Bool): Void;
	public function ToggleDisablePostProcessBlueprint(): Void;
	public function TermBodiesBelow(ParentBoneName: FName): Void;
	public function SuspendClothingSimulation(): Void;
	public function Stop(): Void;
	public function SnapshotPose(Snapshot: cpp.Reference<FPoseSnapshot>): Void;
	public function SetUpdateClothInEditor(NewUpdateState: Bool): Void;
	public function SetUpdateAnimationInEditor(NewUpdateState: Bool): Void;
	public function SetTeleportRotationThreshold(Threshold: cpp.Float32): Void;
	public function SetTeleportDistanceThreshold(Threshold: cpp.Float32): Void;
	public function SetPosition(InPos: cpp.Float32, bFireNotifies: Bool): Void;
	public function SetPlayRate(Rate: cpp.Float32): Void;
	public function SetPhysicsBlendWeight(PhysicsBlendWeight: cpp.Float32): Void;
	public function SetNotifyRigidBodyCollisionBelow(bNewNotifyRigidBodyCollision: Bool, BoneName: FName, bIncludeSelf: Bool): Void;
	public function SetMorphTarget(MorphTargetName: FName, Value: cpp.Float32, bRemoveZeroWeight: Bool): Void;
	public function SetEnablePhysicsBlending(bNewBlendPhysics: Bool): Void;
	public function SetEnableGravityOnAllBodiesBelow(bEnableGravity: Bool, BoneName: FName, bIncludeSelf: Bool): Void;
	public function SetEnableBodyGravity(bEnableGravity: Bool, BoneName: FName): Void;
	public function SetDisablePostProcessBlueprint(bInDisablePostProcess: Bool): Void;
	public function SetDisableAnimCurves(bInDisableAnimCurves: Bool): Void;
	public function SetDefaultAnimatingRigOverride(InAnimatingRig: TSoftObjectPtr<Object>): Void;
	public function SetConstraintProfileForAll(ProfileName: FName, bDefaultIfNotFound: Bool): Void;
	public function SetConstraintProfile(JointName: FName, ProfileName: FName, bDefaultIfNotFound: Bool): Void;
	public function SetClothMaxDistanceScale(Scale: cpp.Float32): Void;
	public function SetBodyNotifyRigidBodyCollision(bNewNotifyRigidBodyCollision: Bool, BoneName: FName): Void;
	public function SetAnimClass(NewClass: cpp.Star<Class>): Void;
	public function SetAnimationMode(InAnimationMode: EAnimationMode): Void;
	public function SetAnimation(NewAnimToPlay: cpp.Star<AnimationAsset>): Void;
	public function SetAngularLimits(InBoneName: FName, Swing1LimitAngle: cpp.Float32, TwistLimitAngle: cpp.Float32, Swing2LimitAngle: cpp.Float32): Void;
	public function SetAllowRigidBodyAnimNode(bInAllow: Bool, bReinitAnim: Bool): Void;
	public function SetAllowedAnimCurvesEvaluation(List: cpp.Reference<TArray<FName>>, bAllow: Bool): Void;
	public function SetAllowClothActors(bInAllow: Bool): Void;
	public function SetAllowAnimCurveEvaluation(bInAllow: Bool): Void;
	public function SetAllMotorsAngularVelocityDrive(bEnableSwingDrive: Bool, bEnableTwistDrive: Bool, bSkipCustomPhysicsType: Bool): Void;
	public function SetAllMotorsAngularPositionDrive(bEnableSwingDrive: Bool, bEnableTwistDrive: Bool, bSkipCustomPhysicsType: Bool): Void;
	public function SetAllMotorsAngularDriveParams(InSpring: cpp.Float32, InDamping: cpp.Float32, InForceLimit: cpp.Float32, bSkipCustomPhysicsType: Bool): Void;
	public function SetAllBodiesSimulatePhysics(bNewSimulate: Bool): Void;
	public function SetAllBodiesPhysicsBlendWeight(PhysicsBlendWeight: cpp.Float32, bSkipCustomPhysicsType: Bool): Void;
	public function SetAllBodiesBelowSimulatePhysics(InBoneName: cpp.Reference<FName>, bNewSimulate: Bool, bIncludeSelf: Bool): Void;
	public function SetAllBodiesBelowPhysicsDisabled(InBoneName: cpp.Reference<FName>, bDisabled: Bool, bIncludeSelf: Bool): Void;
	public function SetAllBodiesBelowPhysicsBlendWeight(InBoneName: cpp.Reference<FName>, PhysicsBlendWeight: cpp.Float32, bSkipCustomPhysicsType: Bool, bIncludeSelf: Bool): Void;
	public function SetAllBodiesBelowLinearVelocity(InBoneName: cpp.Reference<FName>, LinearVelocity: cpp.Reference<FVector>, bIncludeSelf: Bool): Void;
	public function ResumeClothingSimulation(): Void;
	public function ResetClothTeleportMode(): Void;
	public function ResetAnimInstanceDynamics(InTeleportType: ETeleportType): Void;
	public function ResetAllowedAnimCurveEvaluation(): Void;
	public function ResetAllBodiesSimulatePhysics(): Void;
	public function PlayAnimation(NewAnimToPlay: cpp.Star<AnimationAsset>, bLooping: Bool): Void;
	public function Play(bLooping: Bool): Void;
	public function OverrideAnimationData(InAnimToPlay: cpp.Star<AnimationAsset>, bIsLooping: Bool, bIsPlaying: Bool, Position: cpp.Float32, PlayRate: cpp.Float32): Void;
	public function LinkAnimGraphByTag(InTag: FName, InClass: TSubclassOf<AnimInstance>): Void;
	public function LinkAnimClassLayers(InClass: TSubclassOf<AnimInstance>): Void;
	public function K2_GetClosestPointOnPhysicsAsset(WorldPosition: cpp.Reference<FVector>, ClosestWorldPosition: cpp.Reference<FVector>, Normal: cpp.Reference<FVector>, BoneName: cpp.Reference<FName>, Distance: cpp.Reference<cpp.Float32>): cpp.Reference<Bool>;
	public function IsPlaying(): cpp.Reference<Bool>;
	public function IsClothingSimulationSuspended(): cpp.Reference<Bool>;
	public function IsBodyGravityEnabled(BoneName: FName): cpp.Reference<Bool>;
	public function HasValidAnimationInstance(): cpp.Reference<Bool>;
	public function GetTransformAttribute_Ref(BoneName: cpp.Reference<FName>, AttributeName: cpp.Reference<FName>, OutValue: cpp.Reference<FTransform>, LookupType: ECustomBoneAttributeLookup): cpp.Reference<Bool>;
	public function GetTransformAttribute(BoneName: cpp.Reference<FName>, AttributeName: cpp.Reference<FName>, DefaultValue: FTransform, OutValue: cpp.Reference<FTransform>, LookupType: ECustomBoneAttributeLookup): cpp.Reference<Bool>;
	public function GetTeleportRotationThreshold(): cpp.Reference<cpp.Float32>;
	public function GetTeleportDistanceThreshold(): cpp.Reference<cpp.Float32>;
	public function GetStringAttribute_Ref(BoneName: cpp.Reference<FName>, AttributeName: cpp.Reference<FName>, OutValue: cpp.Reference<FString>, LookupType: ECustomBoneAttributeLookup): cpp.Reference<Bool>;
	public function GetStringAttribute(BoneName: cpp.Reference<FName>, AttributeName: cpp.Reference<FName>, DefaultValue: FString, OutValue: cpp.Reference<FString>, LookupType: ECustomBoneAttributeLookup): cpp.Reference<Bool>;
	public function GetSkeletalCenterOfMass(): cpp.Reference<FVector>;
	public function GetPostProcessInstance(): cpp.Reference<cpp.Star<AnimInstance>>;
	public function GetPosition(): cpp.Reference<cpp.Float32>;
	public function GetPlayRate(): cpp.Reference<cpp.Float32>;
	public function GetMorphTarget(MorphTargetName: FName): cpp.Reference<cpp.Float32>;
	public function GetLinkedAnimLayerInstanceByGroup(InGroup: FName): cpp.Reference<cpp.Star<AnimInstance>>;
	public function GetLinkedAnimLayerInstanceByClass(InClass: TSubclassOf<AnimInstance>): cpp.Reference<cpp.Star<AnimInstance>>;
	public function GetLinkedAnimGraphInstancesByTag(InTag: FName, OutLinkedInstances: cpp.Reference<TArray<cpp.Star<AnimInstance>>>): Void;
	public function GetLinkedAnimGraphInstanceByTag(InTag: FName): cpp.Reference<cpp.Star<AnimInstance>>;
	public function GetIntegerAttribute_Ref(BoneName: cpp.Reference<FName>, AttributeName: cpp.Reference<FName>, OutValue: cpp.Reference<cpp.Int32>, LookupType: ECustomBoneAttributeLookup): cpp.Reference<Bool>;
	public function GetIntegerAttribute(BoneName: cpp.Reference<FName>, AttributeName: cpp.Reference<FName>, DefaultValue: cpp.Int32, OutValue: cpp.Reference<cpp.Int32>, LookupType: ECustomBoneAttributeLookup): cpp.Reference<Bool>;
	public function GetFloatAttribute_Ref(BoneName: cpp.Reference<FName>, AttributeName: cpp.Reference<FName>, OutValue: cpp.Reference<cpp.Float32>, LookupType: ECustomBoneAttributeLookup): cpp.Reference<Bool>;
	public function GetFloatAttribute(BoneName: cpp.Reference<FName>, AttributeName: cpp.Reference<FName>, DefaultValue: cpp.Float32, OutValue: cpp.Reference<cpp.Float32>, LookupType: ECustomBoneAttributeLookup): cpp.Reference<Bool>;
	public function GetDisablePostProcessBlueprint(): cpp.Reference<Bool>;
	public function GetDisableAnimCurves(): cpp.Reference<Bool>;
	public function GetDefaultAnimatingRigOverride(): cpp.Reference<TSoftObjectPtr<Object>>;
	public function GetDefaultAnimatingRig(): cpp.Reference<TSoftObjectPtr<Object>>;
	public function GetCurrentJointAngles(InBoneName: FName, Swing1Angle: cpp.Reference<cpp.Float32>, TwistAngle: cpp.Reference<cpp.Float32>, Swing2Angle: cpp.Reference<cpp.Float32>): Void;
	public function GetConstraintsFromBody(BodyName: FName, bParentConstraints: Bool, bChildConstraints: Bool, bIncludesTerminated: Bool, OutConstraints: cpp.Reference<TArray<FConstraintInstanceAccessor>>): Void;
	public function GetConstraints(bIncludesTerminated: Bool, OutConstraints: cpp.Reference<TArray<FConstraintInstanceAccessor>>): Void;
	public function GetConstraintByName(ConstraintName: FName, bIncludesTerminated: Bool): cpp.Reference<FConstraintInstanceAccessor>;
	public function GetClothMaxDistanceScale(): cpp.Reference<cpp.Float32>;
	public function GetClothingSimulationInteractor(): cpp.Reference<cpp.Star<ClothingSimulationInteractor>>;
	public function GetBoneMass(BoneName: FName, bScaleMass: Bool): cpp.Reference<cpp.Float32>;
	public function GetBoneLinearVelocity(InBoneName: cpp.Reference<FName>): cpp.Reference<FVector>;
	public function GetAnimInstance(): cpp.Reference<cpp.Star<AnimInstance>>;
	public function GetAnimClass(): cpp.Reference<cpp.Star<Class>>;
	public function GetAnimationMode(): cpp.Reference<EAnimationMode>;
	public function GetAllowRigidBodyAnimNode(): cpp.Reference<Bool>;
	public function GetAllowedAnimCurveEvaluate(): cpp.Reference<Bool>;
	public function GetAllowClothActors(): cpp.Reference<Bool>;
	public function ForceClothNextUpdateTeleportAndReset(): Void;
	public function ForceClothNextUpdateTeleport(): Void;
	public function FindConstraintBoneName(ConstraintIndex: cpp.Int32): cpp.Reference<FName>;
	public function ClearMorphTargets(): Void;
	public function BreakConstraint(Impulse: FVector, HitLocation: FVector, InBoneName: FName): Void;
	public function BindClothToMasterPoseComponent(): Void;
	public function AllowAnimCurveEvaluation(NameOfCurve: FName, bAllow: Bool): Void;
	public function AddImpulseToAllBodiesBelow(Impulse: FVector, BoneName: FName, bVelChange: Bool, bIncludeSelf: Bool): Void;
	public function AddForceToAllBodiesBelow(Force: FVector, BoneName: FName, bAccelChange: Bool, bIncludeSelf: Bool): Void;
	public function AccumulateAllBodiesBelowPhysicsBlendWeight(InBoneName: cpp.Reference<FName>, AddPhysicsBlendWeight: cpp.Float32, bSkipCustomPhysicsType: Bool): Void;
}

@:forward(
	K2_GetClosestPointOnPhysicsAsset, IsPlaying, IsClothingSimulationSuspended, HasValidAnimationInstance, GetTeleportRotationThreshold,
	GetTeleportDistanceThreshold, GetSkeletalCenterOfMass, GetPostProcessInstance, GetPosition, GetPlayRate,
	GetMorphTarget, GetLinkedAnimLayerInstanceByGroup, GetLinkedAnimLayerInstanceByClass, GetLinkedAnimGraphInstancesByTag, GetLinkedAnimGraphInstanceByTag,
	GetDisablePostProcessBlueprint, GetDisableAnimCurves, GetDefaultAnimatingRigOverride, GetDefaultAnimatingRig, GetClothMaxDistanceScale,
	GetClothingSimulationInteractor, GetBoneMass, GetAnimInstance, GetAnimationMode, GetAllowRigidBodyAnimNode,
	GetAllowedAnimCurveEvaluate, GetAllowClothActors
)
abstract ConstSkeletalMComp(SkeletalMComp) from SkeletalMComp {
}