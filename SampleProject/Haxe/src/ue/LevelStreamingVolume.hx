// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ALevelStreamingVolume")
@:include("Engine/LevelStreamingVolume.h")
@:valueType
extern class LevelStreamingVolume extends Volume {
	public var StreamingLevelNames: TArray<FName>;
	public var bEditorPreVisOnly: Bool;
	public var bDisabled: Bool;
	public var StreamingUsage: TEnumAsByte<EStreamingVolumeUsage>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstLevelStreamingVolume(LevelStreamingVolume) from LevelStreamingVolume {
	public extern var StreamingLevelNames(get, never): TArray<FName>;
	public inline extern function get_StreamingLevelNames(): TArray<FName> return this.StreamingLevelNames;
	public extern var bEditorPreVisOnly(get, never): Bool;
	public inline extern function get_bEditorPreVisOnly(): Bool return this.bEditorPreVisOnly;
	public extern var bDisabled(get, never): Bool;
	public inline extern function get_bDisabled(): Bool return this.bDisabled;
	public extern var StreamingUsage(get, never): TEnumAsByte<EStreamingVolumeUsage>;
	public inline extern function get_StreamingUsage(): TEnumAsByte<EStreamingVolumeUsage> return this.StreamingUsage;
}

@:forward
@:nativeGen
@:native("LevelStreamingVolume*")
abstract LevelStreamingVolumePtr(ucpp.Ptr<LevelStreamingVolume>) from ucpp.Ptr<LevelStreamingVolume> to ucpp.Ptr<LevelStreamingVolume>{
	@:from
	public static extern inline function fromValue(v: LevelStreamingVolume): LevelStreamingVolumePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LevelStreamingVolume {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}