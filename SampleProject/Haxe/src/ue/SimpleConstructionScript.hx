// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USimpleConstructionScript")
@:include("Engine/SimpleConstructionScript.h")
@:structAccess
extern class SimpleConstructionScript extends Object {
	public var RootNodes: TArray<cpp.Star<SCS_Node>>;
	public var AllNodes: TArray<cpp.Star<SCS_Node>>;
	public var DefaultSceneRootNode: cpp.Star<SCS_Node>;
	public var RootNode_DEPRECATED: cpp.Star<SCS_Node>;
	public var ActorComponentNodes_DEPRECATED: TArray<cpp.Star<SCS_Node>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstSimpleConstructionScript(SimpleConstructionScript) from SimpleConstructionScript {
	public extern var RootNodes(get, never): TArray<cpp.Star<SCS_Node.ConstSCS_Node>>;
	public inline extern function get_RootNodes(): TArray<cpp.Star<SCS_Node.ConstSCS_Node>> return this.RootNodes;
	public extern var AllNodes(get, never): TArray<cpp.Star<SCS_Node.ConstSCS_Node>>;
	public inline extern function get_AllNodes(): TArray<cpp.Star<SCS_Node.ConstSCS_Node>> return this.AllNodes;
	public extern var DefaultSceneRootNode(get, never): cpp.Star<SCS_Node.ConstSCS_Node>;
	public inline extern function get_DefaultSceneRootNode(): cpp.Star<SCS_Node.ConstSCS_Node> return this.DefaultSceneRootNode;
	public extern var RootNode_DEPRECATED(get, never): cpp.Star<SCS_Node.ConstSCS_Node>;
	public inline extern function get_RootNode_DEPRECATED(): cpp.Star<SCS_Node.ConstSCS_Node> return this.RootNode_DEPRECATED;
	public extern var ActorComponentNodes_DEPRECATED(get, never): TArray<cpp.Star<SCS_Node.ConstSCS_Node>>;
	public inline extern function get_ActorComponentNodes_DEPRECATED(): TArray<cpp.Star<SCS_Node.ConstSCS_Node>> return this.ActorComponentNodes_DEPRECATED;
}

@:forward
@:nativeGen
@:native("SimpleConstructionScript*")
abstract SimpleConstructionScriptPtr(cpp.Star<SimpleConstructionScript>) from cpp.Star<SimpleConstructionScript> to cpp.Star<SimpleConstructionScript>{
	@:from
	public static extern inline function fromValue(v: SimpleConstructionScript): SimpleConstructionScriptPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SimpleConstructionScript {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}