// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDirectionalLightComponent")
@:include("Components/DirectionalLightComponent.h")
extern class DirectionalLightComp extends LightComp {
	public var ShadowCascadeBiasDistribution: cpp.Float32;
	public var bEnableLightShaftOcclusion: Bool;
	public var OcclusionMaskDarkness: cpp.Float32;
	public var OcclusionDepthRange: cpp.Float32;
	public var LightShaftOverrideDirection: Vector;
	public var WholeSceneDynamicShadowRadius_DEPRECATED: cpp.Float32;
	public var DynamicShadowDistanceMovableLight: cpp.Float32;
	public var DynamicShadowDistanceStationaryLight: cpp.Float32;
	public var DynamicShadowCascades: cpp.Int32;
	public var CascadeDistributionExponent: cpp.Float32;
	public var CascadeTransitionFraction: cpp.Float32;
	public var ShadowDistanceFadeoutFraction: cpp.Float32;
	public var bUseInsetShadowsForMovableObjects: Bool;
	public var FarShadowCascadeCount: cpp.Int32;
	public var FarShadowDistance: cpp.Float32;
	public var DistanceFieldShadowDistance: cpp.Float32;
	public var LightSourceAngle: cpp.Float32;
	public var LightSourceSoftAngle: cpp.Float32;
	public var ShadowSourceAngleFactor: cpp.Float32;
	public var TraceDistance: cpp.Float32;
	public var bUsedAsAtmosphereSunLight_DEPRECATED: Bool;
	public var bAtmosphereSunLight: Bool;
	public var AtmosphereSunLightIndex: cpp.Int32;
	public var AtmosphereSunDiskColorScale: LinearColor;
	public var bPerPixelAtmosphereTransmittance: Bool;
	public var bCastShadowsOnClouds: Bool;
	public var bCastShadowsOnAtmosphere: Bool;
	public var bCastCloudShadows: Bool;
	public var CloudShadowStrength: cpp.Float32;
	public var CloudShadowOnAtmosphereStrength: cpp.Float32;
	public var CloudShadowOnSurfaceStrength: cpp.Float32;
	public var CloudShadowDepthBias: cpp.Float32;
	public var CloudShadowExtent: cpp.Float32;
	public var CloudShadowMapResolutionScale: cpp.Float32;
	public var CloudShadowRaySampleCountScale: cpp.Float32;
	public var CloudScatteredLuminanceScale: LinearColor;
	public var LightmassSettings: LightmassDirectionalLightSettings;
	public var bCastModulatedShadows: Bool;
	public var ModulatedShadowColor: Color;
	public var ShadowAmount: cpp.Float32;

	public function SetShadowSourceAngleFactor(NewValue: cpp.Float32): Void;
	public function SetShadowDistanceFadeoutFraction(NewValue: cpp.Float32): Void;
	public function SetShadowCascadeBiasDistribution(NewValue: cpp.Float32): Void;
	public function SetShadowAmount(NewValue: cpp.Float32): Void;
	public function SetOcclusionMaskDarkness(NewValue: cpp.Float32): Void;
	public function SetOcclusionDepthRange(NewValue: cpp.Float32): Void;
	public function SetLightSourceSoftAngle(NewValue: cpp.Float32): Void;
	public function SetLightSourceAngle(NewValue: cpp.Float32): Void;
	public function SetLightShaftOverrideDirection(NewValue: Vector): Void;
	public function SetEnableLightShaftOcclusion(bNewValue: Bool): Void;
	public function SetDynamicShadowDistanceStationaryLight(NewValue: cpp.Float32): Void;
	public function SetDynamicShadowDistanceMovableLight(NewValue: cpp.Float32): Void;
	public function SetDynamicShadowCascades(NewValue: cpp.Int32): Void;
	public function SetCascadeTransitionFraction(NewValue: cpp.Float32): Void;
	public function SetCascadeDistributionExponent(NewValue: cpp.Float32): Void;
	public function SetAtmosphereSunLightIndex(NewValue: cpp.Int32): Void;
	public function SetAtmosphereSunLight(bNewValue: Bool): Void;
}

@:forward()
@:nativeGen
abstract ConstDirectionalLightComp(DirectionalLightComp) from DirectionalLightComp {
	public extern var ShadowCascadeBiasDistribution(get, never): cpp.Float32;
	public inline extern function get_ShadowCascadeBiasDistribution(): cpp.Float32 return this.ShadowCascadeBiasDistribution;
	public extern var bEnableLightShaftOcclusion(get, never): Bool;
	public inline extern function get_bEnableLightShaftOcclusion(): Bool return this.bEnableLightShaftOcclusion;
	public extern var OcclusionMaskDarkness(get, never): cpp.Float32;
	public inline extern function get_OcclusionMaskDarkness(): cpp.Float32 return this.OcclusionMaskDarkness;
	public extern var OcclusionDepthRange(get, never): cpp.Float32;
	public inline extern function get_OcclusionDepthRange(): cpp.Float32 return this.OcclusionDepthRange;
	public extern var LightShaftOverrideDirection(get, never): Vector;
	public inline extern function get_LightShaftOverrideDirection(): Vector return this.LightShaftOverrideDirection;
	public extern var WholeSceneDynamicShadowRadius_DEPRECATED(get, never): cpp.Float32;
	public inline extern function get_WholeSceneDynamicShadowRadius_DEPRECATED(): cpp.Float32 return this.WholeSceneDynamicShadowRadius_DEPRECATED;
	public extern var DynamicShadowDistanceMovableLight(get, never): cpp.Float32;
	public inline extern function get_DynamicShadowDistanceMovableLight(): cpp.Float32 return this.DynamicShadowDistanceMovableLight;
	public extern var DynamicShadowDistanceStationaryLight(get, never): cpp.Float32;
	public inline extern function get_DynamicShadowDistanceStationaryLight(): cpp.Float32 return this.DynamicShadowDistanceStationaryLight;
	public extern var DynamicShadowCascades(get, never): cpp.Int32;
	public inline extern function get_DynamicShadowCascades(): cpp.Int32 return this.DynamicShadowCascades;
	public extern var CascadeDistributionExponent(get, never): cpp.Float32;
	public inline extern function get_CascadeDistributionExponent(): cpp.Float32 return this.CascadeDistributionExponent;
	public extern var CascadeTransitionFraction(get, never): cpp.Float32;
	public inline extern function get_CascadeTransitionFraction(): cpp.Float32 return this.CascadeTransitionFraction;
	public extern var ShadowDistanceFadeoutFraction(get, never): cpp.Float32;
	public inline extern function get_ShadowDistanceFadeoutFraction(): cpp.Float32 return this.ShadowDistanceFadeoutFraction;
	public extern var bUseInsetShadowsForMovableObjects(get, never): Bool;
	public inline extern function get_bUseInsetShadowsForMovableObjects(): Bool return this.bUseInsetShadowsForMovableObjects;
	public extern var FarShadowCascadeCount(get, never): cpp.Int32;
	public inline extern function get_FarShadowCascadeCount(): cpp.Int32 return this.FarShadowCascadeCount;
	public extern var FarShadowDistance(get, never): cpp.Float32;
	public inline extern function get_FarShadowDistance(): cpp.Float32 return this.FarShadowDistance;
	public extern var DistanceFieldShadowDistance(get, never): cpp.Float32;
	public inline extern function get_DistanceFieldShadowDistance(): cpp.Float32 return this.DistanceFieldShadowDistance;
	public extern var LightSourceAngle(get, never): cpp.Float32;
	public inline extern function get_LightSourceAngle(): cpp.Float32 return this.LightSourceAngle;
	public extern var LightSourceSoftAngle(get, never): cpp.Float32;
	public inline extern function get_LightSourceSoftAngle(): cpp.Float32 return this.LightSourceSoftAngle;
	public extern var ShadowSourceAngleFactor(get, never): cpp.Float32;
	public inline extern function get_ShadowSourceAngleFactor(): cpp.Float32 return this.ShadowSourceAngleFactor;
	public extern var TraceDistance(get, never): cpp.Float32;
	public inline extern function get_TraceDistance(): cpp.Float32 return this.TraceDistance;
	public extern var bUsedAsAtmosphereSunLight_DEPRECATED(get, never): Bool;
	public inline extern function get_bUsedAsAtmosphereSunLight_DEPRECATED(): Bool return this.bUsedAsAtmosphereSunLight_DEPRECATED;
	public extern var bAtmosphereSunLight(get, never): Bool;
	public inline extern function get_bAtmosphereSunLight(): Bool return this.bAtmosphereSunLight;
	public extern var AtmosphereSunLightIndex(get, never): cpp.Int32;
	public inline extern function get_AtmosphereSunLightIndex(): cpp.Int32 return this.AtmosphereSunLightIndex;
	public extern var AtmosphereSunDiskColorScale(get, never): LinearColor;
	public inline extern function get_AtmosphereSunDiskColorScale(): LinearColor return this.AtmosphereSunDiskColorScale;
	public extern var bPerPixelAtmosphereTransmittance(get, never): Bool;
	public inline extern function get_bPerPixelAtmosphereTransmittance(): Bool return this.bPerPixelAtmosphereTransmittance;
	public extern var bCastShadowsOnClouds(get, never): Bool;
	public inline extern function get_bCastShadowsOnClouds(): Bool return this.bCastShadowsOnClouds;
	public extern var bCastShadowsOnAtmosphere(get, never): Bool;
	public inline extern function get_bCastShadowsOnAtmosphere(): Bool return this.bCastShadowsOnAtmosphere;
	public extern var bCastCloudShadows(get, never): Bool;
	public inline extern function get_bCastCloudShadows(): Bool return this.bCastCloudShadows;
	public extern var CloudShadowStrength(get, never): cpp.Float32;
	public inline extern function get_CloudShadowStrength(): cpp.Float32 return this.CloudShadowStrength;
	public extern var CloudShadowOnAtmosphereStrength(get, never): cpp.Float32;
	public inline extern function get_CloudShadowOnAtmosphereStrength(): cpp.Float32 return this.CloudShadowOnAtmosphereStrength;
	public extern var CloudShadowOnSurfaceStrength(get, never): cpp.Float32;
	public inline extern function get_CloudShadowOnSurfaceStrength(): cpp.Float32 return this.CloudShadowOnSurfaceStrength;
	public extern var CloudShadowDepthBias(get, never): cpp.Float32;
	public inline extern function get_CloudShadowDepthBias(): cpp.Float32 return this.CloudShadowDepthBias;
	public extern var CloudShadowExtent(get, never): cpp.Float32;
	public inline extern function get_CloudShadowExtent(): cpp.Float32 return this.CloudShadowExtent;
	public extern var CloudShadowMapResolutionScale(get, never): cpp.Float32;
	public inline extern function get_CloudShadowMapResolutionScale(): cpp.Float32 return this.CloudShadowMapResolutionScale;
	public extern var CloudShadowRaySampleCountScale(get, never): cpp.Float32;
	public inline extern function get_CloudShadowRaySampleCountScale(): cpp.Float32 return this.CloudShadowRaySampleCountScale;
	public extern var CloudScatteredLuminanceScale(get, never): LinearColor;
	public inline extern function get_CloudScatteredLuminanceScale(): LinearColor return this.CloudScatteredLuminanceScale;
	public extern var LightmassSettings(get, never): LightmassDirectionalLightSettings;
	public inline extern function get_LightmassSettings(): LightmassDirectionalLightSettings return this.LightmassSettings;
	public extern var bCastModulatedShadows(get, never): Bool;
	public inline extern function get_bCastModulatedShadows(): Bool return this.bCastModulatedShadows;
	public extern var ModulatedShadowColor(get, never): Color;
	public inline extern function get_ModulatedShadowColor(): Color return this.ModulatedShadowColor;
	public extern var ShadowAmount(get, never): cpp.Float32;
	public inline extern function get_ShadowAmount(): cpp.Float32 return this.ShadowAmount;
}