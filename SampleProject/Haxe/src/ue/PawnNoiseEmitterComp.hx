// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPawnNoiseEmitterComponent")
@:include("Components/PawnNoiseEmitterComponent.h")
@:valueType
extern class PawnNoiseEmitterComp extends ActorComp {
	@:protected public var bAIPerceptionSystemCompatibilityMode: Bool;
	public var LastRemoteNoisePosition: Vector;
	public var NoiseLifetime: ucpp.num.Float32;
	private var LastRemoteNoiseVolume: ucpp.num.Float32;
	private var LastRemoteNoiseTime: ucpp.num.Float32;
	private var LastLocalNoiseVolume: ucpp.num.Float32;
	private var LastLocalNoiseTime: ucpp.num.Float32;

	public function MakeNoise(NoiseMaker: ucpp.Ptr<Actor>, Loudness: ucpp.num.Float32, NoiseLocation: ucpp.Ref<Vector>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPawnNoiseEmitterComp(PawnNoiseEmitterComp) from PawnNoiseEmitterComp {
	public extern var LastRemoteNoisePosition(get, never): Vector;
	public inline extern function get_LastRemoteNoisePosition(): Vector return this.LastRemoteNoisePosition;
	public extern var NoiseLifetime(get, never): ucpp.num.Float32;
	public inline extern function get_NoiseLifetime(): ucpp.num.Float32 return this.NoiseLifetime;
}

@:forward
@:nativeGen
@:native("PawnNoiseEmitterComp*")
abstract PawnNoiseEmitterCompPtr(ucpp.Ptr<PawnNoiseEmitterComp>) from ucpp.Ptr<PawnNoiseEmitterComp> to ucpp.Ptr<PawnNoiseEmitterComp>{
	@:from
	public static extern inline function fromValue(v: PawnNoiseEmitterComp): PawnNoiseEmitterCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PawnNoiseEmitterComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}