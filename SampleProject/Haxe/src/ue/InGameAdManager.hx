// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInGameAdManager")
@:include("Engine/InGameAdManager.h")
@:valueType
extern class InGameAdManager extends PlatformInterfaceBase {
	public var bShouldPauseWhileAdOpen: Bool;
	public var ClickedBannerDelegates: TArray<HaxeDelegateProperty<() -> Void>>;
	public var ClosedAdDelegates: TArray<HaxeDelegateProperty<() -> Void>>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstInGameAdManager(InGameAdManager) from InGameAdManager {
	public extern var bShouldPauseWhileAdOpen(get, never): Bool;
	public inline extern function get_bShouldPauseWhileAdOpen(): Bool return this.bShouldPauseWhileAdOpen;
	public extern var ClickedBannerDelegates(get, never): TArray<HaxeDelegateProperty<() -> Void>>;
	public inline extern function get_ClickedBannerDelegates(): TArray<HaxeDelegateProperty<() -> Void>> return this.ClickedBannerDelegates;
	public extern var ClosedAdDelegates(get, never): TArray<HaxeDelegateProperty<() -> Void>>;
	public inline extern function get_ClosedAdDelegates(): TArray<HaxeDelegateProperty<() -> Void>> return this.ClosedAdDelegates;
}

@:forward
@:nativeGen
@:native("InGameAdManager*")
abstract InGameAdManagerPtr(ucpp.Ptr<InGameAdManager>) from ucpp.Ptr<InGameAdManager> to ucpp.Ptr<InGameAdManager>{
	@:from
	public static extern inline function fromValue(v: InGameAdManager): InGameAdManagerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InGameAdManager {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}