// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPyTestObject")
@:include("PyTest.h")
extern class UPyTestObject extends UObject {
	public var Bool: Bool;
	public var Int: cpp.Int32;
	public var Float: cpp.Float32;
	public var Enum: EPyTestEnum;
	public var String: FString;
	public var Name: FName;
	public var Text: FText;
	public var StringArray: TArray<FString>;
	public var StringSet: TSet<FString>;
	public var StringIntMap: TMap<FString, cpp.Int32>;
	public var Delegate: HaxeDelegateProperty<(cpp.Int32) -> Void>;
	public var MulticastDelegate: HaxeMulticastSparseDelegateProperty<(FString) -> Void>;
	public var Struct: FPyTestStruct;
	public var StructArray: TArray<FPyTestStruct>;
	public var ChildStruct: FPyTestChildStruct;
	public var BoolInstanceOnly: Bool;
	public var BoolDefaultsOnly: Bool;

	public function ReturnSet(): TSet<cpp.Int32>;
	public function ReturnMap(): TMap<cpp.Int32, Bool>;
	public function ReturnArray(): TArray<cpp.Int32>;
	public function MulticastDelegatePropertyCallback(InStr: FString): Void;
	public function LegacyFuncTakingPyTestStruct(InStruct: FPyTestStruct): Void;
	public function GetConstantValue(): cpp.Int32;
	public function FuncTakingPyTestStructDefault(InStruct: FPyTestStruct): Void;
	public function FuncTakingPyTestStruct(InStruct: FPyTestStruct): Void;
	public function FuncTakingPyTestDelegate(InDelegate: HaxeDelegateProperty<(cpp.Int32) -> Void>, InValue: cpp.Int32): cpp.Int32;
	public function FuncTakingPyTestChildStruct(InStruct: FPyTestChildStruct): Void;
	public function FuncBlueprintNativeRef(InOutStruct: FPyTestStruct): Void;
	public function FuncBlueprintNative(InValue: cpp.Int32): cpp.Int32;
	public function FuncBlueprintImplementable(InValue: cpp.Int32): cpp.Int32;
	public function EmitScriptWarning(): Void;
	public function EmitScriptError(): Void;
	public function DelegatePropertyCallback(InValue: cpp.Int32): cpp.Int32;
	public function CallFuncBlueprintNativeRef(InOutStruct: FPyTestStruct): Void;
	public function CallFuncBlueprintNative(InValue: cpp.Int32): cpp.Int32;
	public function CallFuncBlueprintImplementable(InValue: cpp.Int32): cpp.Int32;
}
