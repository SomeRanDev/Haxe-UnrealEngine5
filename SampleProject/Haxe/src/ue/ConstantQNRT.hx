// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UConstantQNRT")
@:include("ConstantQNRT.h")
@:valueType
extern class ConstantQNRT extends AudioSynesthesiaNRT {
	public var Settings: ucpp.Ptr<ConstantQNRTSettings>;

	public function GetNormalizedChannelConstantQAtTime(InSeconds: ucpp.num.Float32, InChannel: ucpp.num.Int32, OutConstantQ: ucpp.Ref<TArray<ucpp.num.Float32>>): Void;
	public function GetChannelConstantQAtTime(InSeconds: ucpp.num.Float32, InChannel: ucpp.num.Int32, OutConstantQ: ucpp.Ref<TArray<ucpp.num.Float32>>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetNormalizedChannelConstantQAtTime, GetChannelConstantQAtTime)
@:nativeGen
abstract ConstConstantQNRT(ConstantQNRT) from ConstantQNRT {
	public extern var Settings(get, never): ucpp.Ptr<ConstantQNRTSettings.ConstConstantQNRTSettings>;
	public inline extern function get_Settings(): ucpp.Ptr<ConstantQNRTSettings.ConstConstantQNRTSettings> return this.Settings;
}

@:forward
@:nativeGen
@:native("ConstantQNRT*")
abstract ConstantQNRTPtr(ucpp.Ptr<ConstantQNRT>) from ucpp.Ptr<ConstantQNRT> to ucpp.Ptr<ConstantQNRT>{
	@:from
	public static extern inline function fromValue(v: ConstantQNRT): ConstantQNRTPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ConstantQNRT {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}