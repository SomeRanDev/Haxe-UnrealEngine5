// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULoudnessAnalyzer")
@:include("Loudness.h")
extern class LoudnessAnalyzer extends AudioAnalyzer {
	public var Settings: cpp.Star<LoudnessSettings>;
	public var OnOverallLoudnessResults: HaxeMulticastSparseDelegateProperty<(cpp.Reference<TArray<LoudnessResults>>) -> Void>;
	public var OnPerChannelLoudnessResults: HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<TArray<LoudnessResults>>) -> Void>;
	public var OnLatestOverallLoudnessResults: HaxeMulticastSparseDelegateProperty<(cpp.Reference<LoudnessResults>) -> Void>;
	public var OnLatestPerChannelLoudnessResults: HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<LoudnessResults>) -> Void>;
}

@:forward()
@:nativeGen
abstract ConstLoudnessAnalyzer(LoudnessAnalyzer) from LoudnessAnalyzer {
	public extern var Settings(get, never): cpp.Star<LoudnessSettings.ConstLoudnessSettings>;
	public inline extern function get_Settings(): cpp.Star<LoudnessSettings.ConstLoudnessSettings> return this.Settings;
	public extern var OnOverallLoudnessResults(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Reference<TArray<LoudnessResults>>) -> Void>;
	public inline extern function get_OnOverallLoudnessResults(): HaxeMulticastSparseDelegateProperty<(cpp.Reference<TArray<LoudnessResults>>) -> Void> return this.OnOverallLoudnessResults;
	public extern var OnPerChannelLoudnessResults(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<TArray<LoudnessResults>>) -> Void>;
	public inline extern function get_OnPerChannelLoudnessResults(): HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<TArray<LoudnessResults>>) -> Void> return this.OnPerChannelLoudnessResults;
	public extern var OnLatestOverallLoudnessResults(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Reference<LoudnessResults>) -> Void>;
	public inline extern function get_OnLatestOverallLoudnessResults(): HaxeMulticastSparseDelegateProperty<(cpp.Reference<LoudnessResults>) -> Void> return this.OnLatestOverallLoudnessResults;
	public extern var OnLatestPerChannelLoudnessResults(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<LoudnessResults>) -> Void>;
	public inline extern function get_OnLatestPerChannelLoudnessResults(): HaxeMulticastSparseDelegateProperty<(cpp.Int32, cpp.Reference<LoudnessResults>) -> Void> return this.OnLatestPerChannelLoudnessResults;
}