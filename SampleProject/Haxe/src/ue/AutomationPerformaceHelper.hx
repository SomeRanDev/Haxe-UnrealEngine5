// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAutomationPerformaceHelper")
@:include("FunctionalTest.h")
@:valueType
extern class AutomationPerformaceHelper extends Object {
	public function WriteLogFile(CaptureDir: FString, CaptureExtension: FString): Void;
	public function TriggerGPUTraceIfRecordFallsBelowBudget(): Void;
	public function Tick(DeltaSeconds: ucpp.num.Float32): Void;
	public function StopCPUProfiling(): Void;
	public function StartCPUProfiling(): Void;
	public function Sample(DeltaSeconds: ucpp.num.Float32): Void;
	public function OnBeginTests(): Void;
	public function OnAllTestsComplete(): Void;
	public function IsRecording(): Bool;
	public function IsCurrentRecordWithinRenderThreadBudget(): Bool;
	public function IsCurrentRecordWithinGPUBudget(): Bool;
	public function IsCurrentRecordWithinGameThreadBudget(): Bool;
	public function EndStatsFile(): Void;
	public function EndRecordingBaseline(): Void;
	public function EndRecording(): Void;
	public function BeginStatsFile(RecordName: FString): Void;
	public function BeginRecordingBaseline(RecordName: FString): Void;
	public function BeginRecording(RecordName: FString, InGPUBudget: ucpp.num.Float32, InRenderThreadBudget: ucpp.num.Float32, InGameThreadBudget: ucpp.num.Float32): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsRecording, IsCurrentRecordWithinRenderThreadBudget, IsCurrentRecordWithinGPUBudget, IsCurrentRecordWithinGameThreadBudget)
@:nativeGen
abstract ConstAutomationPerformaceHelper(AutomationPerformaceHelper) from AutomationPerformaceHelper {
}

@:forward
@:nativeGen
@:native("AutomationPerformaceHelper*")
abstract AutomationPerformaceHelperPtr(ucpp.Ptr<AutomationPerformaceHelper>) from ucpp.Ptr<AutomationPerformaceHelper> to ucpp.Ptr<AutomationPerformaceHelper>{
	@:from
	public static extern inline function fromValue(v: AutomationPerformaceHelper): AutomationPerformaceHelperPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AutomationPerformaceHelper {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}