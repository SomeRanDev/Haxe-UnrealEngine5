// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMotionControllerComponent")
@:include("MotionControllerComponent.h")
extern class MotionConComp extends PrimitiveComp {
	public var PlayerIndex: cpp.Int32;
	public var Hand_DEPRECATED: EControllerHand;
	public var MotionSource: FName;
	public var bDisableLowLatencyUpdate: Bool;
	public var CurrentTrackingStatus: ETrackingStatus;
	public var bDisplayDeviceModel: Bool;
	public var DisplayModelSource: FName;
	public var CustomDisplayMesh: cpp.Star<StaticMesh>;
	public var DisplayMeshMaterialOverrides: TArray<cpp.Star<MaterialInterface>>;
	public var DisplayComponent: cpp.Star<PrimitiveComp>;

	public function SetTrackingSource(NewSource: EControllerHand): Void;
	public function SetTrackingMotionSource(NewSource: FName): Void;
	public function SetShowDeviceModel(bShowControllerModel: Bool): Void;
	public function SetDisplayModelSource(NewDisplayModelSource: FName): Void;
	public function SetCustomDisplayMesh(NewDisplayMesh: cpp.Star<StaticMesh>): Void;
	public function SetAssociatedPlayerIndex(NewPlayer: cpp.Int32): Void;
	public function OnMotionControllerUpdated(): Void;
	public function IsTracked(): cpp.Reference<Bool>;
	public function GetTrackingSource(): cpp.Reference<EControllerHand>;
	public function GetParameterValue(InName: FName, bValueFound: cpp.Reference<Bool>): cpp.Reference<cpp.Float32>;
	public function GetHandJointPosition(jointIndex: cpp.Int32, bValueFound: cpp.Reference<Bool>): cpp.Reference<FVector>;
}

@:forward(IsTracked, GetTrackingSource)
abstract ConstMotionConComp(MotionConComp) from MotionConComp {
}