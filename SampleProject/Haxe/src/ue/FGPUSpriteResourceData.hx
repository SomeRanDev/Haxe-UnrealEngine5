// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("FGPUSpriteResourceData")
@:include("Particles/TypeData/ParticleModuleTypeDataGpu.h")
extern class FGPUSpriteResourceData {
	public var QuantizedColorSamples: TArray<FColor>;
	public var QuantizedMiscSamples: TArray<FColor>;
	public var QuantizedSimulationAttrSamples: TArray<FColor>;
	public var ColorScale: FVector4;
	public var ColorBias: FVector4;
	public var MiscScale: FVector4;
	public var MiscBias: FVector4;
	public var SimulationAttrCurveScale: FVector4;
	public var SimulationAttrCurveBias: FVector4;
	public var SubImageSize: FVector4;
	public var SizeBySpeed: FVector4;
	public var ConstantAcceleration: FVector;
	public var OrbitOffsetBase: FVector;
	public var OrbitOffsetRange: FVector;
	public var OrbitFrequencyBase: FVector;
	public var OrbitFrequencyRange: FVector;
	public var OrbitPhaseBase: FVector;
	public var OrbitPhaseRange: FVector;
	public var GlobalVectorFieldScale: cpp.Float32;
	public var GlobalVectorFieldTightness: cpp.Float32;
	public var PerParticleVectorFieldScale: cpp.Float32;
	public var PerParticleVectorFieldBias: cpp.Float32;
	public var DragCoefficientScale: cpp.Float32;
	public var DragCoefficientBias: cpp.Float32;
	public var ResilienceScale: cpp.Float32;
	public var ResilienceBias: cpp.Float32;
	public var CollisionRadiusScale: cpp.Float32;
	public var CollisionRadiusBias: cpp.Float32;
	public var CollisionTimeBias: cpp.Float32;
	public var CollisionRandomSpread: cpp.Float32;
	public var CollisionRandomDistribution: cpp.Float32;
	public var OneMinusFriction: cpp.Float32;
	public var RotationRateScale: cpp.Float32;
	public var CameraMotionBlurAmount: cpp.Float32;
	public var ScreenAlignment: EParticleScreenAlignment;
	public var LockAxisFlag: EParticleAxisLock;
	public var PivotOffset: FVector2D;
	public var bRemoveHMDRoll: Bool;
	public var MinFacingCameraBlendDistance: cpp.Float32;
	public var MaxFacingCameraBlendDistance: cpp.Float32;
}