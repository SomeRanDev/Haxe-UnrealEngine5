// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGeneralProjectSettings")
@:include("GeneralProjectSettings.h")
@:valueType
extern class GeneralProjectSettings extends Object {
	public var CompanyName: FString;
	public var CompanyDistinguishedName: FString;
	public var CopyrightNotice: FString;
	public var Description: FString;
	public var Homepage: FString;
	public var LicensingTerms: FString;
	public var PrivacyPolicy: FString;
	public var ProjectID: Guid;
	public var ProjectName: FString;
	public var ProjectVersion: FString;
	public var SupportContact: FString;
	public var ProjectDisplayedTitle: FText;
	public var ProjectDebugTitleInfo: FText;
	public var bShouldWindowPreserveAspectRatio: Bool;
	public var bUseBorderlessWindow: Bool;
	public var bStartInVR: Bool;
	public var bAllowWindowResize: Bool;
	public var bAllowClose: Bool;
	public var bAllowMaximize: Bool;
	public var bAllowMinimize: Bool;
	public var EyeOffsetForFakeStereoRenderingDevice: ucpp.num.Float32;
	public var FOVForFakeStereoRenderingDevice: ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstGeneralProjectSettings(GeneralProjectSettings) from GeneralProjectSettings {
	public extern var CompanyName(get, never): FString;
	public inline extern function get_CompanyName(): FString return this.CompanyName;
	public extern var CompanyDistinguishedName(get, never): FString;
	public inline extern function get_CompanyDistinguishedName(): FString return this.CompanyDistinguishedName;
	public extern var CopyrightNotice(get, never): FString;
	public inline extern function get_CopyrightNotice(): FString return this.CopyrightNotice;
	public extern var Description(get, never): FString;
	public inline extern function get_Description(): FString return this.Description;
	public extern var Homepage(get, never): FString;
	public inline extern function get_Homepage(): FString return this.Homepage;
	public extern var LicensingTerms(get, never): FString;
	public inline extern function get_LicensingTerms(): FString return this.LicensingTerms;
	public extern var PrivacyPolicy(get, never): FString;
	public inline extern function get_PrivacyPolicy(): FString return this.PrivacyPolicy;
	public extern var ProjectID(get, never): Guid;
	public inline extern function get_ProjectID(): Guid return this.ProjectID;
	public extern var ProjectName(get, never): FString;
	public inline extern function get_ProjectName(): FString return this.ProjectName;
	public extern var ProjectVersion(get, never): FString;
	public inline extern function get_ProjectVersion(): FString return this.ProjectVersion;
	public extern var SupportContact(get, never): FString;
	public inline extern function get_SupportContact(): FString return this.SupportContact;
	public extern var ProjectDisplayedTitle(get, never): FText;
	public inline extern function get_ProjectDisplayedTitle(): FText return this.ProjectDisplayedTitle;
	public extern var ProjectDebugTitleInfo(get, never): FText;
	public inline extern function get_ProjectDebugTitleInfo(): FText return this.ProjectDebugTitleInfo;
	public extern var bShouldWindowPreserveAspectRatio(get, never): Bool;
	public inline extern function get_bShouldWindowPreserveAspectRatio(): Bool return this.bShouldWindowPreserveAspectRatio;
	public extern var bUseBorderlessWindow(get, never): Bool;
	public inline extern function get_bUseBorderlessWindow(): Bool return this.bUseBorderlessWindow;
	public extern var bStartInVR(get, never): Bool;
	public inline extern function get_bStartInVR(): Bool return this.bStartInVR;
	public extern var bAllowWindowResize(get, never): Bool;
	public inline extern function get_bAllowWindowResize(): Bool return this.bAllowWindowResize;
	public extern var bAllowClose(get, never): Bool;
	public inline extern function get_bAllowClose(): Bool return this.bAllowClose;
	public extern var bAllowMaximize(get, never): Bool;
	public inline extern function get_bAllowMaximize(): Bool return this.bAllowMaximize;
	public extern var bAllowMinimize(get, never): Bool;
	public inline extern function get_bAllowMinimize(): Bool return this.bAllowMinimize;
	public extern var EyeOffsetForFakeStereoRenderingDevice(get, never): ucpp.num.Float32;
	public inline extern function get_EyeOffsetForFakeStereoRenderingDevice(): ucpp.num.Float32 return this.EyeOffsetForFakeStereoRenderingDevice;
	public extern var FOVForFakeStereoRenderingDevice(get, never): ucpp.num.Float32;
	public inline extern function get_FOVForFakeStereoRenderingDevice(): ucpp.num.Float32 return this.FOVForFakeStereoRenderingDevice;
}

@:forward
@:nativeGen
@:native("GeneralProjectSettings*")
abstract GeneralProjectSettingsPtr(ucpp.Ptr<GeneralProjectSettings>) from ucpp.Ptr<GeneralProjectSettings> to ucpp.Ptr<GeneralProjectSettings>{
	@:from
	public static extern inline function fromValue(v: GeneralProjectSettings): GeneralProjectSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GeneralProjectSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}