// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBlackboardComponent")
@:include("BehaviorTree/BlackboardComponent.h")
extern class UBlackboardComponent extends UActorComponent {
	public var BrainComp: TObjectPtr<UBrainComponent>;
	public var DefaultBlackboardAsset: TObjectPtr<UBlackboardData>;
	public var BlackboardAsset: TObjectPtr<UBlackboardData>;
	public var KeyInstances: TArray<TObjectPtr<UBlackboardKeyType>>;

	public function SetValueAsVector(KeyName: cpp.Reference<FName>, VectorValue: FVector): Void;
	public function SetValueAsString(KeyName: cpp.Reference<FName>, StringValue: FString): Void;
	public function SetValueAsRotator(KeyName: cpp.Reference<FName>, VectorValue: FRotator): Void;
	public function SetValueAsObject(KeyName: cpp.Reference<FName>, ObjectValue: cpp.Star<UObject>): Void;
	public function SetValueAsName(KeyName: cpp.Reference<FName>, NameValue: FName): Void;
	public function SetValueAsInt(KeyName: cpp.Reference<FName>, IntValue: cpp.Int32): Void;
	public function SetValueAsFloat(KeyName: cpp.Reference<FName>, FloatValue: cpp.Float32): Void;
	public function SetValueAsEnum(KeyName: cpp.Reference<FName>, EnumValue: cpp.UInt8): Void;
	public function SetValueAsClass(KeyName: cpp.Reference<FName>, ClassValue: cpp.Star<UClass>): Void;
	public function SetValueAsBool(KeyName: cpp.Reference<FName>, BoolValue: Bool): Void;
	public function IsVectorValueSet(KeyName: cpp.Reference<FName>): Bool;
	public function GetValueAsVector(KeyName: cpp.Reference<FName>): FVector;
	public function GetValueAsString(KeyName: cpp.Reference<FName>): FString;
	public function GetValueAsRotator(KeyName: cpp.Reference<FName>): FRotator;
	public function GetValueAsObject(KeyName: cpp.Reference<FName>): cpp.Star<UObject>;
	public function GetValueAsName(KeyName: cpp.Reference<FName>): FName;
	public function GetValueAsInt(KeyName: cpp.Reference<FName>): cpp.Int32;
	public function GetValueAsFloat(KeyName: cpp.Reference<FName>): cpp.Float32;
	public function GetValueAsEnum(KeyName: cpp.Reference<FName>): cpp.UInt8;
	public function GetValueAsClass(KeyName: cpp.Reference<FName>): cpp.Star<UClass>;
	public function GetValueAsBool(KeyName: cpp.Reference<FName>): Bool;
	public function GetRotationFromEntry(KeyName: cpp.Reference<FName>, ResultRotation: FRotator): Bool;
	public function GetLocationFromEntry(KeyName: cpp.Reference<FName>, ResultLocation: FVector): Bool;
	public function ClearValue(KeyName: cpp.Reference<FName>): Void;
}
