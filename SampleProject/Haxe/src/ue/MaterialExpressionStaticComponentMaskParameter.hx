// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionStaticComponentMaskParameter")
@:include("Materials/MaterialExpressionStaticComponentMaskParameter.h")
@:valueType
extern class MaterialExpressionStaticComponentMaskParameter extends MaterialExpressionParameter {
	public var Input: ExpressionInput;
	public var DefaultR: Bool;
	public var DefaultG: Bool;
	public var DefaultB: Bool;
	public var DefaultA: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionStaticComponentMaskParameter(MaterialExpressionStaticComponentMaskParameter) from MaterialExpressionStaticComponentMaskParameter {
	public extern var Input(get, never): ExpressionInput;
	public inline extern function get_Input(): ExpressionInput return this.Input;
	public extern var DefaultR(get, never): Bool;
	public inline extern function get_DefaultR(): Bool return this.DefaultR;
	public extern var DefaultG(get, never): Bool;
	public inline extern function get_DefaultG(): Bool return this.DefaultG;
	public extern var DefaultB(get, never): Bool;
	public inline extern function get_DefaultB(): Bool return this.DefaultB;
	public extern var DefaultA(get, never): Bool;
	public inline extern function get_DefaultA(): Bool return this.DefaultA;
}

@:forward
@:nativeGen
@:native("MaterialExpressionStaticComponentMaskParameter*")
abstract MaterialExpressionStaticComponentMaskParameterPtr(ucpp.Ptr<MaterialExpressionStaticComponentMaskParameter>) from ucpp.Ptr<MaterialExpressionStaticComponentMaskParameter> to ucpp.Ptr<MaterialExpressionStaticComponentMaskParameter>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionStaticComponentMaskParameter): MaterialExpressionStaticComponentMaskParameterPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionStaticComponentMaskParameter {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}