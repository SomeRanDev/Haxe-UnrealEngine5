// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UHLODLayer")
@:include("WorldPartition/HLOD/HLODLayer.h")
@:structAccess
extern class HLODLayer extends Object {
	public var LayerType: EHLODLayerType;
	public var HLODBuilderClass: TSubclassOf<HLODBuilder>;
	public var HLODBuilderSettings: cpp.Star<HLODBuilderSettings>;
	public var bIsSpatiallyLoaded: Bool;
	public var bAlwaysLoaded_DEPRECATED: Bool;
	public var CellSize: cpp.Int32;
	public var LoadingRange: cpp.Float64;
	public var ParentLayer: TSoftObjectPtr<HLODLayer>;
	public var MeshMergeSettings_DEPRECATED: MeshMergingSettings;
	public var MeshSimplifySettings_DEPRECATED: MeshProxySettings;
	public var MeshApproximationSettings_DEPRECATED: MeshApproximationSettings;
	public var HLODMaterial_DEPRECATED: TSoftObjectPtr<Material>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstHLODLayer(HLODLayer) from HLODLayer {
	public extern var LayerType(get, never): EHLODLayerType;
	public inline extern function get_LayerType(): EHLODLayerType return this.LayerType;
	public extern var HLODBuilderClass(get, never): TSubclassOf<HLODBuilder.ConstHLODBuilder>;
	public inline extern function get_HLODBuilderClass(): TSubclassOf<HLODBuilder.ConstHLODBuilder> return this.HLODBuilderClass;
	public extern var HLODBuilderSettings(get, never): cpp.Star<HLODBuilderSettings.ConstHLODBuilderSettings>;
	public inline extern function get_HLODBuilderSettings(): cpp.Star<HLODBuilderSettings.ConstHLODBuilderSettings> return this.HLODBuilderSettings;
	public extern var bIsSpatiallyLoaded(get, never): Bool;
	public inline extern function get_bIsSpatiallyLoaded(): Bool return this.bIsSpatiallyLoaded;
	public extern var bAlwaysLoaded_DEPRECATED(get, never): Bool;
	public inline extern function get_bAlwaysLoaded_DEPRECATED(): Bool return this.bAlwaysLoaded_DEPRECATED;
	public extern var CellSize(get, never): cpp.Int32;
	public inline extern function get_CellSize(): cpp.Int32 return this.CellSize;
	public extern var LoadingRange(get, never): cpp.Float64;
	public inline extern function get_LoadingRange(): cpp.Float64 return this.LoadingRange;
	public extern var ParentLayer(get, never): TSoftObjectPtr<HLODLayer.ConstHLODLayer>;
	public inline extern function get_ParentLayer(): TSoftObjectPtr<HLODLayer.ConstHLODLayer> return this.ParentLayer;
	public extern var MeshMergeSettings_DEPRECATED(get, never): MeshMergingSettings;
	public inline extern function get_MeshMergeSettings_DEPRECATED(): MeshMergingSettings return this.MeshMergeSettings_DEPRECATED;
	public extern var MeshSimplifySettings_DEPRECATED(get, never): MeshProxySettings;
	public inline extern function get_MeshSimplifySettings_DEPRECATED(): MeshProxySettings return this.MeshSimplifySettings_DEPRECATED;
	public extern var MeshApproximationSettings_DEPRECATED(get, never): MeshApproximationSettings;
	public inline extern function get_MeshApproximationSettings_DEPRECATED(): MeshApproximationSettings return this.MeshApproximationSettings_DEPRECATED;
	public extern var HLODMaterial_DEPRECATED(get, never): TSoftObjectPtr<Material.ConstMaterial>;
	public inline extern function get_HLODMaterial_DEPRECATED(): TSoftObjectPtr<Material.ConstMaterial> return this.HLODMaterial_DEPRECATED;
}

@:forward
@:nativeGen
@:native("HLODLayer*")
abstract HLODLayerPtr(cpp.Star<HLODLayer>) from cpp.Star<HLODLayer> to cpp.Star<HLODLayer>{
	@:from
	public static extern inline function fromValue(v: HLODLayer): HLODLayerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): HLODLayer {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}