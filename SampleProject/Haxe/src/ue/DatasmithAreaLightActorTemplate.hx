// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDatasmithAreaLightActorTemplate")
@:include("ObjectTemplates/DatasmithAreaLightActorTemplate.h")
@:valueType
extern class DatasmithAreaLightActorTemplate extends DatasmithObjectTemplate {
	public var LightType: EDatasmithAreaLightActorType;
	public var LightShape: EDatasmithAreaLightActorShape;
	public var Dimensions: Vector2D;
	public var Color: LinearColor;
	public var Intensity: ucpp.num.Float32;
	public var IntensityUnits: ELightUnits;
	public var Temperature: ucpp.num.Float32;
	public var IESTexture: TSoftObjectPtr<TextureLightProfile>;
	public var bUseIESBrightness: Bool;
	public var IESBrightnessScale: ucpp.num.Float32;
	public var Rotation: Rotator;
	public var SourceRadius: ucpp.num.Float32;
	public var SourceLength: ucpp.num.Float32;
	public var AttenuationRadius: ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstDatasmithAreaLightActorTemplate(DatasmithAreaLightActorTemplate) from DatasmithAreaLightActorTemplate {
	public extern var LightType(get, never): EDatasmithAreaLightActorType;
	public inline extern function get_LightType(): EDatasmithAreaLightActorType return this.LightType;
	public extern var LightShape(get, never): EDatasmithAreaLightActorShape;
	public inline extern function get_LightShape(): EDatasmithAreaLightActorShape return this.LightShape;
	public extern var Dimensions(get, never): Vector2D;
	public inline extern function get_Dimensions(): Vector2D return this.Dimensions;
	public extern var Color(get, never): LinearColor;
	public inline extern function get_Color(): LinearColor return this.Color;
	public extern var Intensity(get, never): ucpp.num.Float32;
	public inline extern function get_Intensity(): ucpp.num.Float32 return this.Intensity;
	public extern var IntensityUnits(get, never): ELightUnits;
	public inline extern function get_IntensityUnits(): ELightUnits return this.IntensityUnits;
	public extern var Temperature(get, never): ucpp.num.Float32;
	public inline extern function get_Temperature(): ucpp.num.Float32 return this.Temperature;
	public extern var IESTexture(get, never): TSoftObjectPtr<TextureLightProfile.ConstTextureLightProfile>;
	public inline extern function get_IESTexture(): TSoftObjectPtr<TextureLightProfile.ConstTextureLightProfile> return this.IESTexture;
	public extern var bUseIESBrightness(get, never): Bool;
	public inline extern function get_bUseIESBrightness(): Bool return this.bUseIESBrightness;
	public extern var IESBrightnessScale(get, never): ucpp.num.Float32;
	public inline extern function get_IESBrightnessScale(): ucpp.num.Float32 return this.IESBrightnessScale;
	public extern var Rotation(get, never): Rotator;
	public inline extern function get_Rotation(): Rotator return this.Rotation;
	public extern var SourceRadius(get, never): ucpp.num.Float32;
	public inline extern function get_SourceRadius(): ucpp.num.Float32 return this.SourceRadius;
	public extern var SourceLength(get, never): ucpp.num.Float32;
	public inline extern function get_SourceLength(): ucpp.num.Float32 return this.SourceLength;
	public extern var AttenuationRadius(get, never): ucpp.num.Float32;
	public inline extern function get_AttenuationRadius(): ucpp.num.Float32 return this.AttenuationRadius;
}

@:forward
@:nativeGen
@:native("DatasmithAreaLightActorTemplate*")
abstract DatasmithAreaLightActorTemplatePtr(ucpp.Ptr<DatasmithAreaLightActorTemplate>) from ucpp.Ptr<DatasmithAreaLightActorTemplate> to ucpp.Ptr<DatasmithAreaLightActorTemplate>{
	@:from
	public static extern inline function fromValue(v: DatasmithAreaLightActorTemplate): DatasmithAreaLightActorTemplatePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DatasmithAreaLightActorTemplate {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}