// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URigVMInjectionInfo")
@:include("RigVMModel/RigVMPin.h")
@:valueType
extern class RigVMInjectionInfo extends Object {
	public var Node: ucpp.Ptr<RigVMNode>;
	public var bInjectedAsInput: Bool;
	public var InputPin: ucpp.Ptr<RigVMPin>;
	public var OutputPin: ucpp.Ptr<RigVMPin>;

	public function GetPin(): ucpp.Ptr<RigVMPin>;
	public function GetGraph(): ucpp.Ptr<RigVMGraph>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetPin, GetGraph)
@:nativeGen
abstract ConstRigVMInjectionInfo(RigVMInjectionInfo) from RigVMInjectionInfo {
	public extern var Node(get, never): ucpp.Ptr<RigVMNode.ConstRigVMNode>;
	public inline extern function get_Node(): ucpp.Ptr<RigVMNode.ConstRigVMNode> return this.Node;
	public extern var bInjectedAsInput(get, never): Bool;
	public inline extern function get_bInjectedAsInput(): Bool return this.bInjectedAsInput;
	public extern var InputPin(get, never): ucpp.Ptr<RigVMPin.ConstRigVMPin>;
	public inline extern function get_InputPin(): ucpp.Ptr<RigVMPin.ConstRigVMPin> return this.InputPin;
	public extern var OutputPin(get, never): ucpp.Ptr<RigVMPin.ConstRigVMPin>;
	public inline extern function get_OutputPin(): ucpp.Ptr<RigVMPin.ConstRigVMPin> return this.OutputPin;
}

@:forward
@:nativeGen
@:native("RigVMInjectionInfo*")
abstract RigVMInjectionInfoPtr(ucpp.Ptr<RigVMInjectionInfo>) from ucpp.Ptr<RigVMInjectionInfo> to ucpp.Ptr<RigVMInjectionInfo>{
	@:from
	public static extern inline function fromValue(v: RigVMInjectionInfo): RigVMInjectionInfoPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RigVMInjectionInfo {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}