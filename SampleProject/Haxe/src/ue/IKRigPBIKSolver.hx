// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UIKRigPBIKSolver")
@:include("Solvers/IKRig_PBIKSolver.h")
@:structAccess
extern class IKRigPBIKSolver extends IKRigSolver {
	public var RootBone: FName;
	public var Iterations: cpp.Int32;
	public var MassMultiplier: cpp.Float32;
	public var MinMassMultiplier: cpp.Float32;
	public var bAllowStretch: Bool;
	public var RootBehavior: EPBIKRootBehavior;
	public var bStartSolveFromInputPose: Bool;
	public var Effectors: TArray<cpp.Star<IKRig_FBIKEffector>>;
	public var BoneSettings: TArray<cpp.Star<IKRig_PBIKBoneSettings>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstIKRigPBIKSolver(IKRigPBIKSolver) from IKRigPBIKSolver {
	public extern var RootBone(get, never): FName;
	public inline extern function get_RootBone(): FName return this.RootBone;
	public extern var Iterations(get, never): cpp.Int32;
	public inline extern function get_Iterations(): cpp.Int32 return this.Iterations;
	public extern var MassMultiplier(get, never): cpp.Float32;
	public inline extern function get_MassMultiplier(): cpp.Float32 return this.MassMultiplier;
	public extern var MinMassMultiplier(get, never): cpp.Float32;
	public inline extern function get_MinMassMultiplier(): cpp.Float32 return this.MinMassMultiplier;
	public extern var bAllowStretch(get, never): Bool;
	public inline extern function get_bAllowStretch(): Bool return this.bAllowStretch;
	public extern var RootBehavior(get, never): EPBIKRootBehavior;
	public inline extern function get_RootBehavior(): EPBIKRootBehavior return this.RootBehavior;
	public extern var bStartSolveFromInputPose(get, never): Bool;
	public inline extern function get_bStartSolveFromInputPose(): Bool return this.bStartSolveFromInputPose;
	public extern var Effectors(get, never): TArray<cpp.Star<IKRig_FBIKEffector.ConstIKRig_FBIKEffector>>;
	public inline extern function get_Effectors(): TArray<cpp.Star<IKRig_FBIKEffector.ConstIKRig_FBIKEffector>> return this.Effectors;
	public extern var BoneSettings(get, never): TArray<cpp.Star<IKRig_PBIKBoneSettings.ConstIKRig_PBIKBoneSettings>>;
	public inline extern function get_BoneSettings(): TArray<cpp.Star<IKRig_PBIKBoneSettings.ConstIKRig_PBIKBoneSettings>> return this.BoneSettings;
}

@:forward
@:nativeGen
@:native("IKRigPBIKSolver*")
abstract IKRigPBIKSolverPtr(cpp.Star<IKRigPBIKSolver>) from cpp.Star<IKRigPBIKSolver> to cpp.Star<IKRigPBIKSolver>{
	@:from
	public static extern inline function fromValue(v: IKRigPBIKSolver): IKRigPBIKSolverPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): IKRigPBIKSolver {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}