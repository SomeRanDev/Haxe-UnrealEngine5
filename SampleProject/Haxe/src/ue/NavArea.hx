// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UNavArea")
@:include("NavAreas/NavArea.h")
@:valueType
extern class NavArea extends NavAreaBase {
	public var DefaultCost: ucpp.num.Float32;
	@:protected public var FixedAreaEnteringCost: ucpp.num.Float32;
	public var DrawColor: Color;
	public var SupportedAgents: NavAgentSelector;
	public var bSupportsAgent0: Bool;
	public var bSupportsAgent1: Bool;
	public var bSupportsAgent2: Bool;
	public var bSupportsAgent3: Bool;
	public var bSupportsAgent4: Bool;
	public var bSupportsAgent5: Bool;
	public var bSupportsAgent6: Bool;
	public var bSupportsAgent7: Bool;
	public var bSupportsAgent8: Bool;
	public var bSupportsAgent9: Bool;
	public var bSupportsAgent10: Bool;
	public var bSupportsAgent11: Bool;
	public var bSupportsAgent12: Bool;
	public var bSupportsAgent13: Bool;
	public var bSupportsAgent14: Bool;
	public var bSupportsAgent15: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstNavArea(NavArea) from NavArea {
	public extern var DefaultCost(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultCost(): ucpp.num.Float32 return this.DefaultCost;
	public extern var DrawColor(get, never): Color;
	public inline extern function get_DrawColor(): Color return this.DrawColor;
	public extern var SupportedAgents(get, never): NavAgentSelector;
	public inline extern function get_SupportedAgents(): NavAgentSelector return this.SupportedAgents;
	public extern var bSupportsAgent0(get, never): Bool;
	public inline extern function get_bSupportsAgent0(): Bool return this.bSupportsAgent0;
	public extern var bSupportsAgent1(get, never): Bool;
	public inline extern function get_bSupportsAgent1(): Bool return this.bSupportsAgent1;
	public extern var bSupportsAgent2(get, never): Bool;
	public inline extern function get_bSupportsAgent2(): Bool return this.bSupportsAgent2;
	public extern var bSupportsAgent3(get, never): Bool;
	public inline extern function get_bSupportsAgent3(): Bool return this.bSupportsAgent3;
	public extern var bSupportsAgent4(get, never): Bool;
	public inline extern function get_bSupportsAgent4(): Bool return this.bSupportsAgent4;
	public extern var bSupportsAgent5(get, never): Bool;
	public inline extern function get_bSupportsAgent5(): Bool return this.bSupportsAgent5;
	public extern var bSupportsAgent6(get, never): Bool;
	public inline extern function get_bSupportsAgent6(): Bool return this.bSupportsAgent6;
	public extern var bSupportsAgent7(get, never): Bool;
	public inline extern function get_bSupportsAgent7(): Bool return this.bSupportsAgent7;
	public extern var bSupportsAgent8(get, never): Bool;
	public inline extern function get_bSupportsAgent8(): Bool return this.bSupportsAgent8;
	public extern var bSupportsAgent9(get, never): Bool;
	public inline extern function get_bSupportsAgent9(): Bool return this.bSupportsAgent9;
	public extern var bSupportsAgent10(get, never): Bool;
	public inline extern function get_bSupportsAgent10(): Bool return this.bSupportsAgent10;
	public extern var bSupportsAgent11(get, never): Bool;
	public inline extern function get_bSupportsAgent11(): Bool return this.bSupportsAgent11;
	public extern var bSupportsAgent12(get, never): Bool;
	public inline extern function get_bSupportsAgent12(): Bool return this.bSupportsAgent12;
	public extern var bSupportsAgent13(get, never): Bool;
	public inline extern function get_bSupportsAgent13(): Bool return this.bSupportsAgent13;
	public extern var bSupportsAgent14(get, never): Bool;
	public inline extern function get_bSupportsAgent14(): Bool return this.bSupportsAgent14;
	public extern var bSupportsAgent15(get, never): Bool;
	public inline extern function get_bSupportsAgent15(): Bool return this.bSupportsAgent15;
}

@:forward
@:nativeGen
@:native("NavArea*")
abstract NavAreaPtr(ucpp.Ptr<NavArea>) from ucpp.Ptr<NavArea> to ucpp.Ptr<NavArea>{
	@:from
	public static extern inline function fromValue(v: NavArea): NavAreaPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): NavArea {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}