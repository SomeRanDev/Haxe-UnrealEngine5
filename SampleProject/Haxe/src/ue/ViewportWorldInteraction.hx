// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UViewportWorldInteraction")
@:include("ViewportWorldInteraction.h")
@:valueType
extern class ViewportWorldInteraction extends EditorWorldExtension {
	private var Interactors: TArray<ucpp.Ptr<ViewportInteractor>>;
	private var ViewportTransformer: ucpp.Ptr<ViewportTransformer>;
	private var TransformGizmoActor: ucpp.Ptr<BaseTransformGizmo>;
	private var SnapGridActor: ucpp.Ptr<Actor>;
	private var SnapGridMeshComponent: ucpp.Ptr<StaticMeshComp>;
	private var SnapGridMID: ucpp.Ptr<MaterialInstanceDynamic>;
	private var DefaultMouseCursorInteractor: ucpp.Ptr<MouseCursorInteractor>;
	private var ActorsToExcludeFromHitTest: TArray<TWeakObjectPtr<Actor>>;
	private var AssetContainer: ucpp.Ptr<ViewportInteractionAssetContainer>;

	public function SetWorldToMetersScale(NewWorldToMetersScale: ucpp.num.Float32, bCompensateRoomWorldScale: Bool): Void;
	public function SetRoomTransformForNextFrame(NewRoomTransform: ucpp.Ref<Transform>): Void;
	public function SetHeadTransform(NewHeadTransform: ucpp.Ref<Transform>): Void;
	public function RemoveInteractor(Interactor: ucpp.Ptr<ViewportInteractor>): Void;
	public function GetWorldScaleFactor(): ucpp.num.Float32;
	public function GetTransformGizmoActor(): ucpp.Ptr<BaseTransformGizmo>;
	public function GetRoomTransform(): Transform;
	public function GetRoomSpaceHeadTransform(): Transform;
	public function GetInteractors(): TArray<ucpp.Ptr<ViewportInteractor>>;
	public function GetHeadTransform(): Transform;
	public function AddInteractor(Interactor: ucpp.Ptr<ViewportInteractor>): Void;
	public function AddActorToExcludeFromHitTests(ActorToExcludeFromHitTests: ucpp.Ptr<Actor>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetWorldScaleFactor, GetRoomTransform, GetRoomSpaceHeadTransform, GetInteractors, GetHeadTransform)
@:nativeGen
abstract ConstViewportWorldInteraction(ViewportWorldInteraction) from ViewportWorldInteraction {
}

@:forward
@:nativeGen
@:native("ViewportWorldInteraction*")
abstract ViewportWorldInteractionPtr(ucpp.Ptr<ViewportWorldInteraction>) from ucpp.Ptr<ViewportWorldInteraction> to ucpp.Ptr<ViewportWorldInteraction>{
	@:from
	public static extern inline function fromValue(v: ViewportWorldInteraction): ViewportWorldInteractionPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ViewportWorldInteraction {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}