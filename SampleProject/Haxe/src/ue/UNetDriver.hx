// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UNetDriver")
@:include("Engine/NetDriver.h")
extern class UNetDriver extends UObject {
	public var NetConnectionClassName: FString;
	public var ReplicationDriverClassName: FString;
	public var MaxDownloadSize: cpp.Int32;
	public var bClampListenServerTickRate: Bool;
	public var NetServerMaxTickRate: cpp.Int32;
	public var MaxNetTickRate: cpp.Int32;
	public var MaxInternetClientRate: cpp.Int32;
	public var MaxClientRate: cpp.Int32;
	public var ServerTravelPause: cpp.Float32;
	public var SpawnPrioritySeconds: cpp.Float32;
	public var RelevantTimeout: cpp.Float32;
	public var KeepAliveTime: cpp.Float32;
	public var InitialConnectTimeout: cpp.Float32;
	public var ConnectionTimeout: cpp.Float32;
	public var TimeoutMultiplierForUnoptimizedBuilds: cpp.Float32;
	public var bNoTimeouts: Bool;
	public var bNeverApplyNetworkEmulationSettings: Bool;
	public var ServerConnection: TObjectPtr<UNetConnection>;
	public var ClientConnections: TArray<TObjectPtr<UNetConnection>>;
	public var RecentlyDisconnectedTrackingTime: cpp.Int32;
	public var World: TObjectPtr<UWorld>;
	public var WorldPackage: TObjectPtr<UPackage>;
	public var NetConnectionClass: TObjectPtr<UClass>;
	public var ReplicationDriverClass: TObjectPtr<UClass>;
	public var NetDriverName: FName;
	public var ChannelDefinitions: TArray<FChannelDefinition>;
	public var ChannelDefinitionMap: TMap<FName, FChannelDefinition>;
	public var ActorChannelPool: TArray<TObjectPtr<UChannel>>;
	public var ReplicationDriver: TObjectPtr<UReplicationDriver>;
}
