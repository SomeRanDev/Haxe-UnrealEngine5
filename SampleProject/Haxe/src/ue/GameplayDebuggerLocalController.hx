// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGameplayDebuggerLocalController")
@:include("GameplayDebuggerLocalController.h")
@:structAccess
extern class GameplayDebuggerLocalController extends Object {
	public var CachedReplicator: cpp.Star<GameplayDebuggerCategoryReplicator>;
	public var CachedPlayerManager: cpp.Star<GameplayDebuggerPlayerManager>;
	public var DebugActorCandidate: cpp.Star<Actor>;
	public var HUDFont: cpp.Star<Font>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGameplayDebuggerLocalController(GameplayDebuggerLocalController) from GameplayDebuggerLocalController {
	public extern var CachedReplicator(get, never): cpp.Star<GameplayDebuggerCategoryReplicator.ConstGameplayDebuggerCategoryReplicator>;
	public inline extern function get_CachedReplicator(): cpp.Star<GameplayDebuggerCategoryReplicator.ConstGameplayDebuggerCategoryReplicator> return this.CachedReplicator;
	public extern var CachedPlayerManager(get, never): cpp.Star<GameplayDebuggerPlayerManager.ConstGameplayDebuggerPlayerManager>;
	public inline extern function get_CachedPlayerManager(): cpp.Star<GameplayDebuggerPlayerManager.ConstGameplayDebuggerPlayerManager> return this.CachedPlayerManager;
	public extern var DebugActorCandidate(get, never): cpp.Star<Actor.ConstActor>;
	public inline extern function get_DebugActorCandidate(): cpp.Star<Actor.ConstActor> return this.DebugActorCandidate;
	public extern var HUDFont(get, never): cpp.Star<Font.ConstFont>;
	public inline extern function get_HUDFont(): cpp.Star<Font.ConstFont> return this.HUDFont;
}

@:forward
@:nativeGen
@:native("GameplayDebuggerLocalController*")
abstract GameplayDebuggerLocalControllerPtr(cpp.Star<GameplayDebuggerLocalController>) from cpp.Star<GameplayDebuggerLocalController> to cpp.Star<GameplayDebuggerLocalController>{
	@:from
	public static extern inline function fromValue(v: GameplayDebuggerLocalController): GameplayDebuggerLocalControllerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GameplayDebuggerLocalController {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}