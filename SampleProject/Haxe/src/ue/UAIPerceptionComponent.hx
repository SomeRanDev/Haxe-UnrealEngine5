// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAIPerceptionComponent")
@:include("Perception/AIPerceptionComponent.h")
extern class UAIPerceptionComponent extends UActorComponent {
	public var SensesConfig: TArray<TObjectPtr<UAISenseConfig>>;
	public var DominantSense: TSubclassOf<UAISense>;
	public var AIOwner: TObjectPtr<AAIController>;
	public var OnPerceptionUpdated: HaxeMulticastSparseDelegateProperty<(TArray<cpp.Star<AActor>>) -> Void>;
	public var OnTargetPerceptionUpdated: HaxeMulticastSparseDelegateProperty<(cpp.Star<AActor>, FAIStimulus) -> Void>;
	public var OnTargetPerceptionInfoUpdated: HaxeMulticastSparseDelegateProperty<(FActorPerceptionUpdateInfo) -> Void>;

	public function SetSenseEnabled(SenseClass: TSubclassOf<UAISense>, bEnable: Bool): Void;
	public function RequestStimuliListenerUpdate(): Void;
	public function OnOwnerEndPlay(Actor: cpp.Star<AActor>, EndPlayReason: EEndPlayReason): Void;
	public function GetPerceivedHostileActorsBySense(SenseToUse: TSubclassOf<UAISense>, OutActors: TArray<cpp.Star<AActor>>): Void;
	public function GetPerceivedHostileActors(OutActors: TArray<cpp.Star<AActor>>): Void;
	public function GetPerceivedActors(SenseToUse: TSubclassOf<UAISense>, OutActors: TArray<cpp.Star<AActor>>): Void;
	public function GetKnownPerceivedActors(SenseToUse: TSubclassOf<UAISense>, OutActors: TArray<cpp.Star<AActor>>): Void;
	public function GetCurrentlyPerceivedActors(SenseToUse: TSubclassOf<UAISense>, OutActors: TArray<cpp.Star<AActor>>): Void;
	public function GetActorsPerception(Actor: cpp.Star<AActor>, Info: FActorPerceptionBlueprintInfo): Bool;
	public function ForgetAll(): Void;
}
