// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UListView")
@:include("Components/ListView.h")
extern class ListView extends ListViewBase {
	public var WidgetStyle: TableViewStyle;
	public var ScrollBarStyle: ScrollBarStyle;
	public var Orientation: EOrientation;
	public var SelectionMode: ESelectionMode;
	public var ConsumeMouseWheel: EConsumeMouseWheel;
	public var bClearSelectionOnClick: Bool;
	public var bIsFocusable: Bool;
	public var EntrySpacing: cpp.Float32;
	public var bReturnFocusToSelection: Bool;
	public var ListItems: TArray<cpp.Star<Object>>;
	public var BP_OnEntryInitialized: HaxeMulticastSparseDelegateProperty<(cpp.Star<Object>, cpp.Star<UserWidget>) -> Void>;
	public var BP_OnItemClicked: HaxeMulticastSparseDelegateProperty<(cpp.Star<Object>) -> Void>;
	public var BP_OnItemDoubleClicked: HaxeMulticastSparseDelegateProperty<(cpp.Star<Object>) -> Void>;
	public var BP_OnItemIsHoveredChanged: HaxeMulticastSparseDelegateProperty<(cpp.Star<Object>, Bool) -> Void>;
	public var BP_OnItemSelectionChanged: HaxeMulticastSparseDelegateProperty<(cpp.Star<Object>, Bool) -> Void>;
	public var BP_OnItemScrolledIntoView: HaxeMulticastSparseDelegateProperty<(cpp.Star<Object>, cpp.Star<UserWidget>) -> Void>;

	public function SetSelectionMode(SelectionMode: ESelectionMode): Void;
	public function SetSelectedIndex(Index: cpp.Int32): Void;
	public function ScrollIndexIntoView(Index: cpp.Int32): Void;
	public function RemoveItem(Item: cpp.Star<Object>): Void;
	public function OnListItemOuterEndPlayed(ItemOuter: cpp.Star<Actor>, EndPlayReason: EEndPlayReason): Void;
	public function OnListItemEndPlayed(Item: cpp.Star<Actor>, EndPlayReason: EEndPlayReason): Void;
	public function NavigateToIndex(Index: cpp.Int32): Void;
	public function IsRefreshPending(): cpp.Reference<Bool>;
	public function GetNumItems(): cpp.Reference<cpp.Int32>;
	public function GetListItems(): cpp.Reference<TArray<cpp.Star<Object>>>;
	public function GetItemAt(Index: cpp.Int32): cpp.Reference<cpp.Star<Object>>;
	public function GetIndexForItem(Item: cpp.Star<Object.ConstObject>): cpp.Reference<cpp.Int32>;
	public function ClearListItems(): Void;
	public function BP_SetSelectedItem(Item: cpp.Star<Object>): Void;
	public function BP_SetListItems(InListItems: cpp.Reference<TArray<cpp.Star<Object>>>): Void;
	public function BP_SetItemSelection(Item: cpp.Star<Object>, bSelected: Bool): Void;
	public function BP_ScrollItemIntoView(Item: cpp.Star<Object>): Void;
	public function BP_NavigateToItem(Item: cpp.Star<Object>): Void;
	public function BP_IsItemVisible(Item: cpp.Star<Object>): cpp.Reference<Bool>;
	public function BP_GetSelectedItems(Items: cpp.Reference<TArray<cpp.Star<Object>>>): cpp.Reference<Bool>;
	public function BP_GetSelectedItem(): cpp.Reference<cpp.Star<Object>>;
	public function BP_GetNumItemsSelected(): cpp.Reference<cpp.Int32>;
	public function BP_ClearSelection(): Void;
	public function BP_CancelScrollIntoView(): Void;
	public function AddItem(Item: cpp.Star<Object>): Void;
}

@:forward(IsRefreshPending, GetNumItems, GetListItems, GetItemAt, GetIndexForItem, BP_IsItemVisible, BP_GetSelectedItems, BP_GetSelectedItem, BP_GetNumItemsSelected)
@:nativeGen
abstract ConstListView(ListView) from ListView {
	public extern var WidgetStyle(get, never): TableViewStyle;
	public inline extern function get_WidgetStyle(): TableViewStyle return this.WidgetStyle;
	public extern var ScrollBarStyle(get, never): ScrollBarStyle;
	public inline extern function get_ScrollBarStyle(): ScrollBarStyle return this.ScrollBarStyle;
	public extern var Orientation(get, never): EOrientation;
	public inline extern function get_Orientation(): EOrientation return this.Orientation;
	public extern var SelectionMode(get, never): ESelectionMode;
	public inline extern function get_SelectionMode(): ESelectionMode return this.SelectionMode;
	public extern var ConsumeMouseWheel(get, never): EConsumeMouseWheel;
	public inline extern function get_ConsumeMouseWheel(): EConsumeMouseWheel return this.ConsumeMouseWheel;
	public extern var bClearSelectionOnClick(get, never): Bool;
	public inline extern function get_bClearSelectionOnClick(): Bool return this.bClearSelectionOnClick;
	public extern var bIsFocusable(get, never): Bool;
	public inline extern function get_bIsFocusable(): Bool return this.bIsFocusable;
	public extern var EntrySpacing(get, never): cpp.Float32;
	public inline extern function get_EntrySpacing(): cpp.Float32 return this.EntrySpacing;
	public extern var bReturnFocusToSelection(get, never): Bool;
	public inline extern function get_bReturnFocusToSelection(): Bool return this.bReturnFocusToSelection;
	public extern var ListItems(get, never): TArray<cpp.Star<Object.ConstObject>>;
	public inline extern function get_ListItems(): TArray<cpp.Star<Object.ConstObject>> return this.ListItems;
	public extern var BP_OnEntryInitialized(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>, cpp.Star<UserWidget.ConstUserWidget>) -> Void>;
	public inline extern function get_BP_OnEntryInitialized(): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>, cpp.Star<UserWidget.ConstUserWidget>) -> Void> return this.BP_OnEntryInitialized;
	public extern var BP_OnItemClicked(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>) -> Void>;
	public inline extern function get_BP_OnItemClicked(): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>) -> Void> return this.BP_OnItemClicked;
	public extern var BP_OnItemDoubleClicked(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>) -> Void>;
	public inline extern function get_BP_OnItemDoubleClicked(): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>) -> Void> return this.BP_OnItemDoubleClicked;
	public extern var BP_OnItemIsHoveredChanged(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>, Bool) -> Void>;
	public inline extern function get_BP_OnItemIsHoveredChanged(): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>, Bool) -> Void> return this.BP_OnItemIsHoveredChanged;
	public extern var BP_OnItemSelectionChanged(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>, Bool) -> Void>;
	public inline extern function get_BP_OnItemSelectionChanged(): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>, Bool) -> Void> return this.BP_OnItemSelectionChanged;
	public extern var BP_OnItemScrolledIntoView(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>, cpp.Star<UserWidget.ConstUserWidget>) -> Void>;
	public inline extern function get_BP_OnItemScrolledIntoView(): HaxeMulticastSparseDelegateProperty<(cpp.Star<Object.ConstObject>, cpp.Star<UserWidget.ConstUserWidget>) -> Void> return this.BP_OnItemScrolledIntoView;
}