// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UARTraceResultLibrary")
@:include("ARBlueprintLibrary.h")
@:structAccess
extern class ARTraceResultLibrary extends BlueprintFunctionLibrary {
	public function GetTrackedGeometry(TraceResult: cpp.Reference<ARTraceResult>): cpp.Reference<cpp.Star<ARTrackedGeometry>>;
	public function GetTraceChannel(TraceResult: cpp.Reference<ARTraceResult>): cpp.Reference<EARLineTraceChannels>;
	public function GetLocalTransform(TraceResult: cpp.Reference<ARTraceResult>): cpp.Reference<Transform>;
	public function GetLocalToWorldTransform(TraceResult: cpp.Reference<ARTraceResult>): cpp.Reference<Transform>;
	public function GetLocalToTrackingTransform(TraceResult: cpp.Reference<ARTraceResult>): cpp.Reference<Transform>;
	public function GetDistanceFromCamera(TraceResult: cpp.Reference<ARTraceResult>): cpp.Reference<cpp.Float32>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstARTraceResultLibrary(ARTraceResultLibrary) from ARTraceResultLibrary {
}

@:forward
@:nativeGen
@:native("ARTraceResultLibrary*")
abstract ARTraceResultLibraryPtr(cpp.Star<ARTraceResultLibrary>) from cpp.Star<ARTraceResultLibrary> to cpp.Star<ARTraceResultLibrary>{
	@:from
	public static extern inline function fromValue(v: ARTraceResultLibrary): ARTraceResultLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ARTraceResultLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}