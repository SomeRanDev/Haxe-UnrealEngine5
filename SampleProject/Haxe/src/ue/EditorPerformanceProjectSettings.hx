// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEditorPerformanceProjectSettings")
@:include("Settings/EditorProjectSettings.h")
@:structAccess
extern class EditorPerformanceProjectSettings extends DeveloperSettings {
	public var RealtimeScreenPercentageMode: EScreenPercentageMode;
	public var NonRealtimeScreenPercentageMode: EScreenPercentageMode;
	public var ManualScreenPercentage: cpp.Float32;
	public var MinViewportRenderingResolution: cpp.Int32;
	public var MaxViewportRenderingResolution: cpp.Int32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstEditorPerformanceProjectSettings(EditorPerformanceProjectSettings) from EditorPerformanceProjectSettings {
	public extern var RealtimeScreenPercentageMode(get, never): EScreenPercentageMode;
	public inline extern function get_RealtimeScreenPercentageMode(): EScreenPercentageMode return this.RealtimeScreenPercentageMode;
	public extern var NonRealtimeScreenPercentageMode(get, never): EScreenPercentageMode;
	public inline extern function get_NonRealtimeScreenPercentageMode(): EScreenPercentageMode return this.NonRealtimeScreenPercentageMode;
	public extern var ManualScreenPercentage(get, never): cpp.Float32;
	public inline extern function get_ManualScreenPercentage(): cpp.Float32 return this.ManualScreenPercentage;
	public extern var MinViewportRenderingResolution(get, never): cpp.Int32;
	public inline extern function get_MinViewportRenderingResolution(): cpp.Int32 return this.MinViewportRenderingResolution;
	public extern var MaxViewportRenderingResolution(get, never): cpp.Int32;
	public inline extern function get_MaxViewportRenderingResolution(): cpp.Int32 return this.MaxViewportRenderingResolution;
}