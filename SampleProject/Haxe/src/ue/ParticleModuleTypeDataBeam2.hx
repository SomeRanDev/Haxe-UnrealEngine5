// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UParticleModuleTypeDataBeam2")
@:include("Particles/TypeData/ParticleModuleTypeDataBeam2.h")
@:valueType
extern class ParticleModuleTypeDataBeam2 extends ParticleModuleTypeDataBase {
	public var BeamMethod: TEnumAsByte<EBeam2Method>;
	public var TextureTile: ucpp.num.Int32;
	public var TextureTileDistance: ucpp.num.Float32;
	public var Sheets: ucpp.num.Int32;
	public var MaxBeamCount: ucpp.num.Int32;
	public var Speed: ucpp.num.Float32;
	public var InterpolationPoints: ucpp.num.Int32;
	public var bAlwaysOn: Bool;
	public var UpVectorStepSize: ucpp.num.Int32;
	public var BranchParentName: FName;
	public var Distance: RawDistributionFloat;
	public var TaperMethod: TEnumAsByte<EBeamTaperMethod>;
	public var TaperFactor: RawDistributionFloat;
	public var TaperScale: RawDistributionFloat;
	public var RenderGeometry: Bool;
	public var RenderDirectLine: Bool;
	public var RenderLines: Bool;
	public var RenderTessellation: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstParticleModuleTypeDataBeam2(ParticleModuleTypeDataBeam2) from ParticleModuleTypeDataBeam2 {
	public extern var BeamMethod(get, never): TEnumAsByte<EBeam2Method>;
	public inline extern function get_BeamMethod(): TEnumAsByte<EBeam2Method> return this.BeamMethod;
	public extern var TextureTile(get, never): ucpp.num.Int32;
	public inline extern function get_TextureTile(): ucpp.num.Int32 return this.TextureTile;
	public extern var TextureTileDistance(get, never): ucpp.num.Float32;
	public inline extern function get_TextureTileDistance(): ucpp.num.Float32 return this.TextureTileDistance;
	public extern var Sheets(get, never): ucpp.num.Int32;
	public inline extern function get_Sheets(): ucpp.num.Int32 return this.Sheets;
	public extern var MaxBeamCount(get, never): ucpp.num.Int32;
	public inline extern function get_MaxBeamCount(): ucpp.num.Int32 return this.MaxBeamCount;
	public extern var Speed(get, never): ucpp.num.Float32;
	public inline extern function get_Speed(): ucpp.num.Float32 return this.Speed;
	public extern var InterpolationPoints(get, never): ucpp.num.Int32;
	public inline extern function get_InterpolationPoints(): ucpp.num.Int32 return this.InterpolationPoints;
	public extern var bAlwaysOn(get, never): Bool;
	public inline extern function get_bAlwaysOn(): Bool return this.bAlwaysOn;
	public extern var UpVectorStepSize(get, never): ucpp.num.Int32;
	public inline extern function get_UpVectorStepSize(): ucpp.num.Int32 return this.UpVectorStepSize;
	public extern var BranchParentName(get, never): FName;
	public inline extern function get_BranchParentName(): FName return this.BranchParentName;
	public extern var Distance(get, never): RawDistributionFloat;
	public inline extern function get_Distance(): RawDistributionFloat return this.Distance;
	public extern var TaperMethod(get, never): TEnumAsByte<EBeamTaperMethod>;
	public inline extern function get_TaperMethod(): TEnumAsByte<EBeamTaperMethod> return this.TaperMethod;
	public extern var TaperFactor(get, never): RawDistributionFloat;
	public inline extern function get_TaperFactor(): RawDistributionFloat return this.TaperFactor;
	public extern var TaperScale(get, never): RawDistributionFloat;
	public inline extern function get_TaperScale(): RawDistributionFloat return this.TaperScale;
	public extern var RenderGeometry(get, never): Bool;
	public inline extern function get_RenderGeometry(): Bool return this.RenderGeometry;
	public extern var RenderDirectLine(get, never): Bool;
	public inline extern function get_RenderDirectLine(): Bool return this.RenderDirectLine;
	public extern var RenderLines(get, never): Bool;
	public inline extern function get_RenderLines(): Bool return this.RenderLines;
	public extern var RenderTessellation(get, never): Bool;
	public inline extern function get_RenderTessellation(): Bool return this.RenderTessellation;
}

@:forward
@:nativeGen
@:native("ParticleModuleTypeDataBeam2*")
abstract ParticleModuleTypeDataBeam2Ptr(ucpp.Ptr<ParticleModuleTypeDataBeam2>) from ucpp.Ptr<ParticleModuleTypeDataBeam2> to ucpp.Ptr<ParticleModuleTypeDataBeam2>{
	@:from
	public static extern inline function fromValue(v: ParticleModuleTypeDataBeam2): ParticleModuleTypeDataBeam2Ptr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ParticleModuleTypeDataBeam2 {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}