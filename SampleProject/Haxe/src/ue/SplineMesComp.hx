// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USplineMeshComponent")
@:include("Components/SplineMeshComponent.h")
extern class SplineMesComp extends StaticMesComp {
	public var SplineParams: FSplineMeshParams;
	public var SplineUpDir: FVector;
	public var SplineBoundaryMin: cpp.Float32;
	public var CachedMeshBodySetupGuid: FGuid;
	public var BodySetup: cpp.Star<BodySetup>;
	public var SplineBoundaryMax: cpp.Float32;
	public var bAllowSplineEditingPerInstance: Bool;
	public var bSmoothInterpRollScale: Bool;
	public var bMeshDirty: Bool;
	public var ForwardAxis: ESplineMeshAxis;
	public var VirtualTextureMainPassMaxDrawDistance: cpp.Float32;
	public var bSelected: Bool;

	public function UpdateMesh(): Void;
	public function SetStartTangent(StartTangent: FVector, bUpdateMesh: Bool): Void;
	public function SetStartScale(StartScale: FVector2D, bUpdateMesh: Bool): Void;
	public function SetStartRoll(StartRoll: cpp.Float32, bUpdateMesh: Bool): Void;
	public function SetStartPosition(StartPos: FVector, bUpdateMesh: Bool): Void;
	public function SetStartOffset(StartOffset: FVector2D, bUpdateMesh: Bool): Void;
	public function SetStartAndEnd(StartPos: FVector, StartTangent: FVector, EndPos: FVector, EndTangent: FVector, bUpdateMesh: Bool): Void;
	public function SetSplineUpDir(InSplineUpDir: cpp.Reference<FVector>, bUpdateMesh: Bool): Void;
	public function SetForwardAxis(InForwardAxis: ESplineMeshAxis, bUpdateMesh: Bool): Void;
	public function SetEndTangent(EndTangent: FVector, bUpdateMesh: Bool): Void;
	public function SetEndScale(EndScale: FVector2D, bUpdateMesh: Bool): Void;
	public function SetEndRoll(EndRoll: cpp.Float32, bUpdateMesh: Bool): Void;
	public function SetEndPosition(EndPos: FVector, bUpdateMesh: Bool): Void;
	public function SetEndOffset(EndOffset: FVector2D, bUpdateMesh: Bool): Void;
	public function SetBoundaryMin(InBoundaryMin: cpp.Float32, bUpdateMesh: Bool): Void;
	public function SetBoundaryMax(InBoundaryMax: cpp.Float32, bUpdateMesh: Bool): Void;
	public function GetStartTangent(): cpp.Reference<FVector>;
	public function GetStartScale(): cpp.Reference<FVector2D>;
	public function GetStartRoll(): cpp.Reference<cpp.Float32>;
	public function GetStartPosition(): cpp.Reference<FVector>;
	public function GetStartOffset(): cpp.Reference<FVector2D>;
	public function GetSplineUpDir(): cpp.Reference<FVector>;
	public function GetForwardAxis(): cpp.Reference<ESplineMeshAxis>;
	public function GetEndTangent(): cpp.Reference<FVector>;
	public function GetEndScale(): cpp.Reference<FVector2D>;
	public function GetEndRoll(): cpp.Reference<cpp.Float32>;
	public function GetEndPosition(): cpp.Reference<FVector>;
	public function GetEndOffset(): cpp.Reference<FVector2D>;
	public function GetBoundaryMin(): cpp.Reference<cpp.Float32>;
	public function GetBoundaryMax(): cpp.Reference<cpp.Float32>;
}

@:forward(
	GetStartTangent, GetStartScale, GetStartRoll, GetStartPosition, GetStartOffset,
	GetSplineUpDir, GetForwardAxis, GetEndTangent, GetEndScale, GetEndRoll,
	GetEndPosition, GetEndOffset, GetBoundaryMin, GetBoundaryMax
)
abstract ConstSplineMesComp(SplineMesComp) from SplineMesComp {
}