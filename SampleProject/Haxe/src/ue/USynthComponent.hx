// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USynthComponent")
@:include("Components/SynthComponent.h")
extern class USynthComponent extends USceneComponent {
	public var bAutoDestroy: Bool;
	public var bStopWhenOwnerDestroyed: Bool;
	public var bAllowSpatialization: Bool;
	public var bOverrideAttenuation: Bool;
	public var bOutputToBusOnly_DEPRECATED: Bool;
	public var bEnableBusSends: Bool;
	public var bEnableBaseSubmix: Bool;
	public var bEnableSubmixSends: Bool;
	public var AttenuationSettings: TObjectPtr<USoundAttenuation>;
	public var AttenuationOverrides: FSoundAttenuationSettings;
	public var ConcurrencySettings_DEPRECATED: TObjectPtr<USoundConcurrency>;
	public var ConcurrencySet: TSet<TObjectPtr<USoundConcurrency>>;
	public var SoundClass: TObjectPtr<USoundClass>;
	public var SourceEffectChain: TObjectPtr<USoundEffectSourcePresetChain>;
	public var SoundSubmix: TObjectPtr<USoundSubmixBase>;
	public var SoundSubmixSends: TArray<FSoundSubmixSendInfo>;
	public var BusSends: TArray<FSoundSourceBusSendInfo>;
	public var PreEffectBusSends: TArray<FSoundSourceBusSendInfo>;
	public var bIsUISound: Bool;
	public var bIsPreviewSound: Bool;
	public var EnvelopeFollowerAttackTime: cpp.Int32;
	public var EnvelopeFollowerReleaseTime: cpp.Int32;
	public var OnAudioEnvelopeValue: HaxeMulticastSparseDelegateProperty<(cpp.Float32) -> Void>;
	public var Synth: TObjectPtr<USynthSound>;
	public var AudioComponent: TObjectPtr<UAudioComponent>;

	public function Stop(): Void;
	public function Start(): Void;
	public function SetVolumeMultiplier(VolumeMultiplier: cpp.Float32): Void;
	public function SetSubmixSend(Submix: cpp.Star<USoundSubmixBase>, SendLevel: cpp.Float32): Void;
	public function SetOutputToBusOnly(bInOutputToBusOnly: Bool): Void;
	public function SetLowPassFilterFrequency(InLowPassFilterFrequency: cpp.Float32): Void;
	public function SetLowPassFilterEnabled(InLowPassFilterEnabled: Bool): Void;
	public function IsPlaying(): Bool;
}
