// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UCheckBox")
@:include("Components/CheckBox.h")
@:valueType
extern class CheckBox extends ContentWidget {
	public function GetCheckedState(): ECheckBoxState;
	public function SetCheckedState(input: ECheckBoxState): Void;
	public var CheckedStateDelegate: HaxeDelegateProperty<() -> Void>;
	public var WidgetStyle: CheckBoxStyle;
	public var HorizontalAlignment: TEnumAsByte<EHorizontalAlignment>;
	public var ClickMethod: TEnumAsByte<EButtonClickMethod>;
	public var TouchMethod: TEnumAsByte<EButtonTouchMethod>;
	public var PressMethod: TEnumAsByte<EButtonPressMethod>;
	public var IsFocusable: Bool;
	public var OnCheckStateChanged: HaxeMulticastSparseDelegateProperty<(Bool) -> Void>;

	public function SetTouchMethod(InTouchMethod: TEnumAsByte<EButtonTouchMethod>): Void;
	public function SetPressMethod(InPressMethod: TEnumAsByte<EButtonPressMethod>): Void;
	public function SetIsChecked(InIsChecked: Bool): Void;
	public function SetClickMethod(InClickMethod: TEnumAsByte<EButtonClickMethod>): Void;
	public function IsPressed(): Bool;
	public function IsChecked(): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsPressed, IsChecked)
@:nativeGen
abstract ConstCheckBox(CheckBox) from CheckBox {
	public extern var CheckedStateDelegate(get, never): HaxeDelegateProperty<() -> Void>;
	public inline extern function get_CheckedStateDelegate(): HaxeDelegateProperty<() -> Void> return this.CheckedStateDelegate;
	public extern var WidgetStyle(get, never): CheckBoxStyle;
	public inline extern function get_WidgetStyle(): CheckBoxStyle return this.WidgetStyle;
	public extern var HorizontalAlignment(get, never): TEnumAsByte<EHorizontalAlignment>;
	public inline extern function get_HorizontalAlignment(): TEnumAsByte<EHorizontalAlignment> return this.HorizontalAlignment;
	public extern var ClickMethod(get, never): TEnumAsByte<EButtonClickMethod>;
	public inline extern function get_ClickMethod(): TEnumAsByte<EButtonClickMethod> return this.ClickMethod;
	public extern var TouchMethod(get, never): TEnumAsByte<EButtonTouchMethod>;
	public inline extern function get_TouchMethod(): TEnumAsByte<EButtonTouchMethod> return this.TouchMethod;
	public extern var PressMethod(get, never): TEnumAsByte<EButtonPressMethod>;
	public inline extern function get_PressMethod(): TEnumAsByte<EButtonPressMethod> return this.PressMethod;
	public extern var IsFocusable(get, never): Bool;
	public inline extern function get_IsFocusable(): Bool return this.IsFocusable;
	public extern var OnCheckStateChanged(get, never): HaxeMulticastSparseDelegateProperty<(Bool) -> Void>;
	public inline extern function get_OnCheckStateChanged(): HaxeMulticastSparseDelegateProperty<(Bool) -> Void> return this.OnCheckStateChanged;
}

@:forward
@:nativeGen
@:native("CheckBox*")
abstract CheckBoxPtr(ucpp.Ptr<CheckBox>) from ucpp.Ptr<CheckBox> to ucpp.Ptr<CheckBox>{
	@:from
	public static extern inline function fromValue(v: CheckBox): CheckBoxPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): CheckBox {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}