// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAudioParameterConversionStatics")
@:include("Audio/SoundParameterControllerInterface.h")
@:structAccess
extern class AudioParameterConversionStatics extends BlueprintFunctionLibrary {
	public function StringToAudioParameter(Name: FName, String: FString): cpp.Reference<AudioParameter>;
	public function StringArrayToAudioParameter(Name: FName, Strings: TArray<FString>): cpp.Reference<AudioParameter>;
	public function ObjectToAudioParameter(Name: FName, Object: cpp.Star<Object>): cpp.Reference<AudioParameter>;
	public function ObjectArrayToAudioParameter(Name: FName, Objects: TArray<cpp.Star<Object>>): cpp.Reference<AudioParameter>;
	public function IntegerToAudioParameter(Name: FName, Integer: cpp.Int32): cpp.Reference<AudioParameter>;
	public function IntegerArrayToAudioParameter(Name: FName, Integers: TArray<cpp.Int32>): cpp.Reference<AudioParameter>;
	public function FloatToAudioParameter(Name: FName, Float: cpp.Float32): cpp.Reference<AudioParameter>;
	public function FloatArrayToAudioParameter(Name: FName, Floats: TArray<cpp.Float32>): cpp.Reference<AudioParameter>;
	public function BooleanToAudioParameter(Name: FName, Bool: Bool): cpp.Reference<AudioParameter>;
	public function BooleanArrayToAudioParameter(Name: FName, Bools: TArray<Bool>): cpp.Reference<AudioParameter>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAudioParameterConversionStatics(AudioParameterConversionStatics) from AudioParameterConversionStatics {
}

@:forward
@:nativeGen
@:native("AudioParameterConversionStatics*")
abstract AudioParameterConversionStaticsPtr(cpp.Star<AudioParameterConversionStatics>) from cpp.Star<AudioParameterConversionStatics> to cpp.Star<AudioParameterConversionStatics>{
	@:from
	public static extern inline function fromValue(v: AudioParameterConversionStatics): AudioParameterConversionStaticsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AudioParameterConversionStatics {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}