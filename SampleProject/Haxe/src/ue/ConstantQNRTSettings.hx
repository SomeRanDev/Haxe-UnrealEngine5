// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UConstantQNRTSettings")
@:include("ConstantQNRT.h")
@:structAccess
extern class ConstantQNRTSettings extends AudioSynesthesiaNRTSettings {
	public var StartingFrequency: cpp.Float32;
	public var NumBands: cpp.Int32;
	public var NumBandsPerOctave: cpp.Float32;
	public var AnalysisPeriod: cpp.Float32;
	public var bDownmixToMono: Bool;
	public var FFTSize: EConstantQFFTSizeEnum;
	public var WindowType: EFFTWindowType;
	public var SpectrumType: EAudioSpectrumType;
	public var BandWidthStretch: cpp.Float32;
	public var CQTNormalization: EConstantQNormalizationEnum;
	public var NoiseFloorDb: cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstConstantQNRTSettings(ConstantQNRTSettings) from ConstantQNRTSettings {
	public extern var StartingFrequency(get, never): cpp.Float32;
	public inline extern function get_StartingFrequency(): cpp.Float32 return this.StartingFrequency;
	public extern var NumBands(get, never): cpp.Int32;
	public inline extern function get_NumBands(): cpp.Int32 return this.NumBands;
	public extern var NumBandsPerOctave(get, never): cpp.Float32;
	public inline extern function get_NumBandsPerOctave(): cpp.Float32 return this.NumBandsPerOctave;
	public extern var AnalysisPeriod(get, never): cpp.Float32;
	public inline extern function get_AnalysisPeriod(): cpp.Float32 return this.AnalysisPeriod;
	public extern var bDownmixToMono(get, never): Bool;
	public inline extern function get_bDownmixToMono(): Bool return this.bDownmixToMono;
	public extern var FFTSize(get, never): EConstantQFFTSizeEnum;
	public inline extern function get_FFTSize(): EConstantQFFTSizeEnum return this.FFTSize;
	public extern var WindowType(get, never): EFFTWindowType;
	public inline extern function get_WindowType(): EFFTWindowType return this.WindowType;
	public extern var SpectrumType(get, never): EAudioSpectrumType;
	public inline extern function get_SpectrumType(): EAudioSpectrumType return this.SpectrumType;
	public extern var BandWidthStretch(get, never): cpp.Float32;
	public inline extern function get_BandWidthStretch(): cpp.Float32 return this.BandWidthStretch;
	public extern var CQTNormalization(get, never): EConstantQNormalizationEnum;
	public inline extern function get_CQTNormalization(): EConstantQNormalizationEnum return this.CQTNormalization;
	public extern var NoiseFloorDb(get, never): cpp.Float32;
	public inline extern function get_NoiseFloorDb(): cpp.Float32 return this.NoiseFloorDb;
}