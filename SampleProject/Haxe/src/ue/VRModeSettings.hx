// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UVRModeSettings")
@:include("VRModeSettings.h")
@:valueType
extern class VRModeSettings extends VISettings {
	public var bEnableAutoVREditMode: Bool;
	public var bAutokeySequences: Bool;
	public var InteractorHand: EInteractorHand;
	public var bShowWorldMovementGrid: Bool;
	public var bShowWorldMovementPostProcess: Bool;
	public var bShowWorldScaleProgressBar: Bool;
	public var UIBrightness: ucpp.num.Float32;
	public var GizmoScale: ucpp.num.Float32;
	public var DoubleClickTime: ucpp.num.Float32;
	public var TriggerPressedThreshold_Vive: ucpp.num.Float32;
	public var TriggerPressedThreshold_Rift: ucpp.num.Float32;
	public var InteractorClass: TSoftClassPtr<Class>;
	public var TeleporterClass: TSoftClassPtr<Class>;
	public var ModeClass: TSoftClassPtr<Class>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstVRModeSettings(VRModeSettings) from VRModeSettings {
	public extern var bEnableAutoVREditMode(get, never): Bool;
	public inline extern function get_bEnableAutoVREditMode(): Bool return this.bEnableAutoVREditMode;
	public extern var bAutokeySequences(get, never): Bool;
	public inline extern function get_bAutokeySequences(): Bool return this.bAutokeySequences;
	public extern var InteractorHand(get, never): EInteractorHand;
	public inline extern function get_InteractorHand(): EInteractorHand return this.InteractorHand;
	public extern var bShowWorldMovementGrid(get, never): Bool;
	public inline extern function get_bShowWorldMovementGrid(): Bool return this.bShowWorldMovementGrid;
	public extern var bShowWorldMovementPostProcess(get, never): Bool;
	public inline extern function get_bShowWorldMovementPostProcess(): Bool return this.bShowWorldMovementPostProcess;
	public extern var bShowWorldScaleProgressBar(get, never): Bool;
	public inline extern function get_bShowWorldScaleProgressBar(): Bool return this.bShowWorldScaleProgressBar;
	public extern var UIBrightness(get, never): ucpp.num.Float32;
	public inline extern function get_UIBrightness(): ucpp.num.Float32 return this.UIBrightness;
	public extern var GizmoScale(get, never): ucpp.num.Float32;
	public inline extern function get_GizmoScale(): ucpp.num.Float32 return this.GizmoScale;
	public extern var DoubleClickTime(get, never): ucpp.num.Float32;
	public inline extern function get_DoubleClickTime(): ucpp.num.Float32 return this.DoubleClickTime;
	public extern var TriggerPressedThreshold_Vive(get, never): ucpp.num.Float32;
	public inline extern function get_TriggerPressedThreshold_Vive(): ucpp.num.Float32 return this.TriggerPressedThreshold_Vive;
	public extern var TriggerPressedThreshold_Rift(get, never): ucpp.num.Float32;
	public inline extern function get_TriggerPressedThreshold_Rift(): ucpp.num.Float32 return this.TriggerPressedThreshold_Rift;
	public extern var InteractorClass(get, never): TSoftClassPtr<Class.ConstClass>;
	public inline extern function get_InteractorClass(): TSoftClassPtr<Class.ConstClass> return this.InteractorClass;
	public extern var TeleporterClass(get, never): TSoftClassPtr<Class.ConstClass>;
	public inline extern function get_TeleporterClass(): TSoftClassPtr<Class.ConstClass> return this.TeleporterClass;
	public extern var ModeClass(get, never): TSoftClassPtr<Class.ConstClass>;
	public inline extern function get_ModeClass(): TSoftClassPtr<Class.ConstClass> return this.ModeClass;
}

@:forward
@:nativeGen
@:native("VRModeSettings*")
abstract VRModeSettingsPtr(ucpp.Ptr<VRModeSettings>) from ucpp.Ptr<VRModeSettings> to ucpp.Ptr<VRModeSettings>{
	@:from
	public static extern inline function fromValue(v: VRModeSettings): VRModeSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): VRModeSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}