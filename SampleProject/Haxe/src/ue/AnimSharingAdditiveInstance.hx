// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimSharingAdditiveInstance")
@:include("AnimationSharingInstances.h")
@:structAccess
extern class AnimSharingAdditiveInstance extends AnimInstance {
	public var BaseComponent: TWeakObjectPtr<SkeletalMeshComp>;
	public var AdditiveAnimation: TWeakObjectPtr<AnimSequence>;
	public var Alpha: cpp.Float32;
	public var bStateBool: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimSharingAdditiveInstance(AnimSharingAdditiveInstance) from AnimSharingAdditiveInstance {
	public extern var BaseComponent(get, never): TWeakObjectPtr<SkeletalMeshComp.ConstSkeletalMeshComp>;
	public inline extern function get_BaseComponent(): TWeakObjectPtr<SkeletalMeshComp.ConstSkeletalMeshComp> return this.BaseComponent;
	public extern var AdditiveAnimation(get, never): TWeakObjectPtr<AnimSequence.ConstAnimSequence>;
	public inline extern function get_AdditiveAnimation(): TWeakObjectPtr<AnimSequence.ConstAnimSequence> return this.AdditiveAnimation;
	public extern var Alpha(get, never): cpp.Float32;
	public inline extern function get_Alpha(): cpp.Float32 return this.Alpha;
	public extern var bStateBool(get, never): Bool;
	public inline extern function get_bStateBool(): Bool return this.bStateBool;
}

@:forward
@:nativeGen
@:native("AnimSharingAdditiveInstance*")
abstract AnimSharingAdditiveInstancePtr(cpp.Star<AnimSharingAdditiveInstance>) from cpp.Star<AnimSharingAdditiveInstance> to cpp.Star<AnimSharingAdditiveInstance>{
	@:from
	public static extern inline function fromValue(v: AnimSharingAdditiveInstance): AnimSharingAdditiveInstancePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimSharingAdditiveInstance {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}