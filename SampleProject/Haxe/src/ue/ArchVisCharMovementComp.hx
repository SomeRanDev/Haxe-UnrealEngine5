// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UArchVisCharMovementComponent")
@:include("ArchVisCharMovementComponent.h")
extern class ArchVisCharMovementComp extends CharacterMovementComp {
	public var RotationalAcceleration: Rotator;
	public var RotationalDeceleration: Rotator;
	public var MaxRotationalVelocity: Rotator;
	public var MinPitch: cpp.Float32;
	public var MaxPitch: cpp.Float32;
	public var WalkingFriction: cpp.Float32;
	public var WalkingSpeed: cpp.Float32;
	public var WalkingAcceleration: cpp.Float32;
}

@:forward()
@:nativeGen
abstract ConstArchVisCharMovementComp(ArchVisCharMovementComp) from ArchVisCharMovementComp {
	public extern var RotationalAcceleration(get, never): Rotator;
	public inline extern function get_RotationalAcceleration(): Rotator return this.RotationalAcceleration;
	public extern var RotationalDeceleration(get, never): Rotator;
	public inline extern function get_RotationalDeceleration(): Rotator return this.RotationalDeceleration;
	public extern var MaxRotationalVelocity(get, never): Rotator;
	public inline extern function get_MaxRotationalVelocity(): Rotator return this.MaxRotationalVelocity;
	public extern var MinPitch(get, never): cpp.Float32;
	public inline extern function get_MinPitch(): cpp.Float32 return this.MinPitch;
	public extern var MaxPitch(get, never): cpp.Float32;
	public inline extern function get_MaxPitch(): cpp.Float32 return this.MaxPitch;
	public extern var WalkingFriction(get, never): cpp.Float32;
	public inline extern function get_WalkingFriction(): cpp.Float32 return this.WalkingFriction;
	public extern var WalkingSpeed(get, never): cpp.Float32;
	public inline extern function get_WalkingSpeed(): cpp.Float32 return this.WalkingSpeed;
	public extern var WalkingAcceleration(get, never): cpp.Float32;
	public inline extern function get_WalkingAcceleration(): cpp.Float32 return this.WalkingAcceleration;
}