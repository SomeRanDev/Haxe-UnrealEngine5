// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USplineMeshComponent")
@:include("Components/SplineMeshComponent.h")
@:structAccess
extern class SplineMeshComp extends StaticMeshComp {
	public var SplineParams: SplineMeshParams;
	public var SplineUpDir: Vector;
	public var SplineBoundaryMin: cpp.Float32;
	public var CachedMeshBodySetupGuid: Guid;
	public var BodySetup: cpp.Star<BodySetup>;
	public var SplineBoundaryMax: cpp.Float32;
	public var bAllowSplineEditingPerInstance: Bool;
	public var bSmoothInterpRollScale: Bool;
	public var bMeshDirty: Bool;
	public var ForwardAxis: ESplineMeshAxis;
	public var VirtualTextureMainPassMaxDrawDistance: cpp.Float32;
	public var bSelected: Bool;

	public function UpdateMesh(): Void;
	public function SetStartTangent(StartTangent: Vector, bUpdateMesh: Bool): Void;
	public function SetStartScale(StartScale: Vector2D, bUpdateMesh: Bool): Void;
	public function SetStartRoll(StartRoll: cpp.Float32, bUpdateMesh: Bool): Void;
	public function SetStartPosition(StartPos: Vector, bUpdateMesh: Bool): Void;
	public function SetStartOffset(StartOffset: Vector2D, bUpdateMesh: Bool): Void;
	public function SetStartAndEnd(StartPos: Vector, StartTangent: Vector, EndPos: Vector, EndTangent: Vector, bUpdateMesh: Bool): Void;
	public function SetSplineUpDir(InSplineUpDir: cpp.Reference<Vector>, bUpdateMesh: Bool): Void;
	public function SetForwardAxis(InForwardAxis: ESplineMeshAxis, bUpdateMesh: Bool): Void;
	public function SetEndTangent(EndTangent: Vector, bUpdateMesh: Bool): Void;
	public function SetEndScale(EndScale: Vector2D, bUpdateMesh: Bool): Void;
	public function SetEndRoll(EndRoll: cpp.Float32, bUpdateMesh: Bool): Void;
	public function SetEndPosition(EndPos: Vector, bUpdateMesh: Bool): Void;
	public function SetEndOffset(EndOffset: Vector2D, bUpdateMesh: Bool): Void;
	public function SetBoundaryMin(InBoundaryMin: cpp.Float32, bUpdateMesh: Bool): Void;
	public function SetBoundaryMax(InBoundaryMax: cpp.Float32, bUpdateMesh: Bool): Void;
	public function GetStartTangent(): cpp.Reference<Vector>;
	public function GetStartScale(): cpp.Reference<Vector2D>;
	public function GetStartRoll(): cpp.Reference<cpp.Float32>;
	public function GetStartPosition(): cpp.Reference<Vector>;
	public function GetStartOffset(): cpp.Reference<Vector2D>;
	public function GetSplineUpDir(): cpp.Reference<Vector>;
	public function GetForwardAxis(): cpp.Reference<ESplineMeshAxis>;
	public function GetEndTangent(): cpp.Reference<Vector>;
	public function GetEndScale(): cpp.Reference<Vector2D>;
	public function GetEndRoll(): cpp.Reference<cpp.Float32>;
	public function GetEndPosition(): cpp.Reference<Vector>;
	public function GetEndOffset(): cpp.Reference<Vector2D>;
	public function GetBoundaryMin(): cpp.Reference<cpp.Float32>;
	public function GetBoundaryMax(): cpp.Reference<cpp.Float32>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	GetStartTangent, GetStartScale, GetStartRoll, GetStartPosition, GetStartOffset,
	GetSplineUpDir, GetForwardAxis, GetEndTangent, GetEndScale, GetEndRoll,
	GetEndPosition, GetEndOffset, GetBoundaryMin, GetBoundaryMax
)
@:nativeGen
abstract ConstSplineMeshComp(SplineMeshComp) from SplineMeshComp {
	public extern var SplineParams(get, never): SplineMeshParams;
	public inline extern function get_SplineParams(): SplineMeshParams return this.SplineParams;
	public extern var SplineUpDir(get, never): Vector;
	public inline extern function get_SplineUpDir(): Vector return this.SplineUpDir;
	public extern var SplineBoundaryMin(get, never): cpp.Float32;
	public inline extern function get_SplineBoundaryMin(): cpp.Float32 return this.SplineBoundaryMin;
	public extern var CachedMeshBodySetupGuid(get, never): Guid;
	public inline extern function get_CachedMeshBodySetupGuid(): Guid return this.CachedMeshBodySetupGuid;
	public extern var BodySetup(get, never): cpp.Star<BodySetup.ConstBodySetup>;
	public inline extern function get_BodySetup(): cpp.Star<BodySetup.ConstBodySetup> return this.BodySetup;
	public extern var SplineBoundaryMax(get, never): cpp.Float32;
	public inline extern function get_SplineBoundaryMax(): cpp.Float32 return this.SplineBoundaryMax;
	public extern var bAllowSplineEditingPerInstance(get, never): Bool;
	public inline extern function get_bAllowSplineEditingPerInstance(): Bool return this.bAllowSplineEditingPerInstance;
	public extern var bSmoothInterpRollScale(get, never): Bool;
	public inline extern function get_bSmoothInterpRollScale(): Bool return this.bSmoothInterpRollScale;
	public extern var bMeshDirty(get, never): Bool;
	public inline extern function get_bMeshDirty(): Bool return this.bMeshDirty;
	public extern var ForwardAxis(get, never): ESplineMeshAxis;
	public inline extern function get_ForwardAxis(): ESplineMeshAxis return this.ForwardAxis;
	public extern var VirtualTextureMainPassMaxDrawDistance(get, never): cpp.Float32;
	public inline extern function get_VirtualTextureMainPassMaxDrawDistance(): cpp.Float32 return this.VirtualTextureMainPassMaxDrawDistance;
	public extern var bSelected(get, never): Bool;
	public inline extern function get_bSelected(): Bool return this.bSelected;
}