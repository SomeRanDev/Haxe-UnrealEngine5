// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UNavigationPath")
@:include("NavigationPath.h")
@:structAccess
extern class NavigationPath extends Object {
	public var PathUpdatedNotifier: HaxeMulticastSparseDelegateProperty<(cpp.Star<NavigationPath>, ENavPathEvent) -> Void>;
	public var PathPoints: TArray<Vector>;
	public var RecalculateOnInvalidation: ENavigationOptionFlag;

	public function IsValid(): cpp.Reference<Bool>;
	public function IsStringPulled(): cpp.Reference<Bool>;
	public function IsPartial(): cpp.Reference<Bool>;
	public function GetPathLength(): cpp.Reference<cpp.Float32>;
	public function GetPathCost(): cpp.Reference<cpp.Float32>;
	public function GetDebugString(): cpp.Reference<FString>;
	public function EnableRecalculationOnInvalidation(DoRecalculation: ENavigationOptionFlag): Void;
	public function EnableDebugDrawing(bShouldDrawDebugData: Bool, PathColor: LinearColor): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(IsValid, IsStringPulled, IsPartial, GetPathLength, GetPathCost, GetDebugString)
@:nativeGen
abstract ConstNavigationPath(NavigationPath) from NavigationPath {
	public extern var PathUpdatedNotifier(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<NavigationPath.ConstNavigationPath>, ENavPathEvent) -> Void>;
	public inline extern function get_PathUpdatedNotifier(): HaxeMulticastSparseDelegateProperty<(cpp.Star<NavigationPath.ConstNavigationPath>, ENavPathEvent) -> Void> return this.PathUpdatedNotifier;
	public extern var PathPoints(get, never): TArray<Vector>;
	public inline extern function get_PathPoints(): TArray<Vector> return this.PathPoints;
	public extern var RecalculateOnInvalidation(get, never): ENavigationOptionFlag;
	public inline extern function get_RecalculateOnInvalidation(): ENavigationOptionFlag return this.RecalculateOnInvalidation;
}