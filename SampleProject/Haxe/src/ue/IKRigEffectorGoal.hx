// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UIKRigEffectorGoal")
@:include("IKRigDefinition.h")
@:structAccess
extern class IKRigEffectorGoal extends Object {
	public var GoalName: FName;
	public var BoneName: FName;
	public var PositionAlpha: cpp.Float32;
	public var RotationAlpha: cpp.Float32;
	public var CurrentTransform: Transform;
	public var InitialTransform: Transform;
	public var PreviewMode: EIKRigGoalPreviewMode;
	public var SizeMultiplier: cpp.Float32;
	public var ThicknessMultiplier: cpp.Float32;
	public var bExposePosition: Bool;
	public var bExposeRotation: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstIKRigEffectorGoal(IKRigEffectorGoal) from IKRigEffectorGoal {
	public extern var GoalName(get, never): FName;
	public inline extern function get_GoalName(): FName return this.GoalName;
	public extern var BoneName(get, never): FName;
	public inline extern function get_BoneName(): FName return this.BoneName;
	public extern var PositionAlpha(get, never): cpp.Float32;
	public inline extern function get_PositionAlpha(): cpp.Float32 return this.PositionAlpha;
	public extern var RotationAlpha(get, never): cpp.Float32;
	public inline extern function get_RotationAlpha(): cpp.Float32 return this.RotationAlpha;
	public extern var CurrentTransform(get, never): Transform;
	public inline extern function get_CurrentTransform(): Transform return this.CurrentTransform;
	public extern var InitialTransform(get, never): Transform;
	public inline extern function get_InitialTransform(): Transform return this.InitialTransform;
	public extern var PreviewMode(get, never): EIKRigGoalPreviewMode;
	public inline extern function get_PreviewMode(): EIKRigGoalPreviewMode return this.PreviewMode;
	public extern var SizeMultiplier(get, never): cpp.Float32;
	public inline extern function get_SizeMultiplier(): cpp.Float32 return this.SizeMultiplier;
	public extern var ThicknessMultiplier(get, never): cpp.Float32;
	public inline extern function get_ThicknessMultiplier(): cpp.Float32 return this.ThicknessMultiplier;
	public extern var bExposePosition(get, never): Bool;
	public inline extern function get_bExposePosition(): Bool return this.bExposePosition;
	public extern var bExposeRotation(get, never): Bool;
	public inline extern function get_bExposeRotation(): Bool return this.bExposeRotation;
}