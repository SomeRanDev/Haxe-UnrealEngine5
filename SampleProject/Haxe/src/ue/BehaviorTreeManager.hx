// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBehaviorTreeManager")
@:include("BehaviorTree/BehaviorTreeManager.h")
@:structAccess
extern class BehaviorTreeManager extends Object {
	public var MaxDebuggerSteps: cpp.Int32;
	public var LoadedTemplates: TArray<BehaviorTreeTemplateInfo>;
	public var ActiveComponents: TArray<cpp.Star<BehaviorTreeComp>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstBehaviorTreeManager(BehaviorTreeManager) from BehaviorTreeManager {
	public extern var MaxDebuggerSteps(get, never): cpp.Int32;
	public inline extern function get_MaxDebuggerSteps(): cpp.Int32 return this.MaxDebuggerSteps;
	public extern var LoadedTemplates(get, never): TArray<BehaviorTreeTemplateInfo>;
	public inline extern function get_LoadedTemplates(): TArray<BehaviorTreeTemplateInfo> return this.LoadedTemplates;
	public extern var ActiveComponents(get, never): TArray<cpp.Star<BehaviorTreeComp.ConstBehaviorTreeComp>>;
	public inline extern function get_ActiveComponents(): TArray<cpp.Star<BehaviorTreeComp.ConstBehaviorTreeComp>> return this.ActiveComponents;
}

@:forward
@:nativeGen
@:native("BehaviorTreeManager*")
abstract BehaviorTreeManagerPtr(cpp.Star<BehaviorTreeManager>) from cpp.Star<BehaviorTreeManager> to cpp.Star<BehaviorTreeManager>{
	@:from
	public static extern inline function fromValue(v: BehaviorTreeManager): BehaviorTreeManagerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BehaviorTreeManager {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}