// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UImportSubsystem")
@:include("Subsystems/ImportSubsystem.h")
@:structAccess
extern class ImportSubsystem extends EditorSubsystem {
	private var OnAssetPreImport_BP: HaxeMulticastSparseDelegateProperty<(cpp.Star<Factory>, cpp.Star<Class>, cpp.Star<Object>, cpp.Reference<FName>, FString) -> Void>;
	private var OnAssetPostImport_BP: HaxeMulticastSparseDelegateProperty<(cpp.Star<Factory>, cpp.Star<Object>) -> Void>;
	private var OnAssetReimport_BP: HaxeMulticastSparseDelegateProperty<(cpp.Star<Object>) -> Void>;
	private var OnAssetPostLODImport_BP: HaxeMulticastSparseDelegateProperty<(cpp.Star<Object>, cpp.Int32) -> Void>;

	public function OnAssetReimport_Dyn__DelegateSignature(InCreatedObject: cpp.Star<Object>): Void;
	public function OnAssetPreImport_Dyn__DelegateSignature(InFactory: cpp.Star<Factory>, InClass: cpp.Star<Class>, InParent: cpp.Star<Object>, Name: cpp.Reference<FName>, Type: FString): Void;
	public function OnAssetPostLODImport_Dyn__DelegateSignature(InObject: cpp.Star<Object>, InLODIndex: cpp.Int32): Void;
	public function OnAssetPostImport_Dyn__DelegateSignature(InFactory: cpp.Star<Factory>, InCreatedObject: cpp.Star<Object>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstImportSubsystem(ImportSubsystem) from ImportSubsystem {
}

@:forward
@:nativeGen
@:native("ImportSubsystem*")
abstract ImportSubsystemPtr(cpp.Star<ImportSubsystem>) from cpp.Star<ImportSubsystem> to cpp.Star<ImportSubsystem>{
	@:from
	public static extern inline function fromValue(v: ImportSubsystem): ImportSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ImportSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}