// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UProjectileMovementComponent")
@:include("GameFramework/ProjectileMovementComponent.h")
extern class UProjectileMovementComponent extends UMovementComponent {
	public var InitialSpeed: cpp.Float32;
	public var MaxSpeed: cpp.Float32;
	public var bRotationFollowsVelocity: Bool;
	public var bRotationRemainsVertical: Bool;
	public var bShouldBounce: Bool;
	public var bInitialVelocityInLocalSpace: Bool;
	public var bForceSubStepping: Bool;
	public var bSimulationEnabled: Bool;
	public var bSweepCollision: Bool;
	public var bIsHomingProjectile: Bool;
	public var bBounceAngleAffectsFriction: Bool;
	public var bIsSliding: Bool;
	public var bInterpMovement: Bool;
	public var bInterpRotation: Bool;
	public var PreviousHitTime: cpp.Float32;
	public var PreviousHitNormal: FVector;
	public var ProjectileGravityScale: cpp.Float32;
	public var Buoyancy: cpp.Float32;
	public var Bounciness: cpp.Float32;
	public var Friction: cpp.Float32;
	public var BounceVelocityStopSimulatingThreshold: cpp.Float32;
	public var MinFrictionFraction: cpp.Float32;
	public var OnProjectileBounce: HaxeMulticastSparseDelegateProperty<(FHitResult, FVector) -> Void>;
	public var OnProjectileStop: HaxeMulticastSparseDelegateProperty<(FHitResult) -> Void>;
	public var HomingAccelerationMagnitude: cpp.Float32;
	public var HomingTargetComponent: TWeakObjectPtr<USceneComponent>;
	public var MaxSimulationTimeStep: cpp.Float32;
	public var MaxSimulationIterations: cpp.Int32;
	public var BounceAdditionalIterations: cpp.Int32;
	public var InterpLocationTime: cpp.Float32;
	public var InterpRotationTime: cpp.Float32;
	public var InterpLocationMaxLagDistance: cpp.Float32;
	public var InterpLocationSnapToTargetDistance: cpp.Float32;

	public function StopSimulating(HitResult: FHitResult): Void;
	public function SetVelocityInLocalSpace(NewVelocity: FVector): Void;
	public function SetInterpolatedComponent(Component: cpp.Star<USceneComponent>): Void;
	public function ResetInterpolation(): Void;
	public function OnProjectileStopDelegate__DelegateSignature(ImpactResult: FHitResult): Void;
	public function OnProjectileBounceDelegate__DelegateSignature(ImpactResult: FHitResult, ImpactVelocity: FVector): Void;
	public function MoveInterpolationTarget(NewLocation: FVector, NewRotation: FRotator): Void;
	public function LimitVelocity(NewVelocity: FVector): FVector;
	public function IsVelocityUnderSimulationThreshold(): Bool;
	public function IsInterpolationComplete(): Bool;
}
