// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPaperTileMapComponent")
@:include("PaperTileMapComponent.h")
extern class UPaperTileMapComponent extends UMeshComponent {
	public var MapWidth_DEPRECATED: cpp.Int32;
	public var MapHeight_DEPRECATED: cpp.Int32;
	public var TileWidth_DEPRECATED: cpp.Int32;
	public var TileHeight_DEPRECATED: cpp.Int32;
	public var DefaultLayerTileSet_DEPRECATED: TObjectPtr<UPaperTileSet>;
	public var Material_DEPRECATED: TObjectPtr<UMaterialInterface>;
	public var TileLayers_DEPRECATED: TArray<TObjectPtr<UPaperTileLayer>>;
	public var TileMapColor: FLinearColor;
	public var UseSingleLayerIndex: cpp.Int32;
	public var bUseSingleLayer: Bool;
	public var TileMap: TObjectPtr<UPaperTileMap>;
	public var bShowPerTileGridWhenSelected: Bool;
	public var bShowPerLayerGridWhenSelected: Bool;
	public var bShowOutlineWhenUnselected: Bool;
	public var bShowPerTileGridWhenUnselected: Bool;
	public var bShowPerLayerGridWhenUnselected: Bool;

	public function SetTileMapColor(NewColor: FLinearColor): Void;
	public function SetTileMap(NewTileMap: cpp.Star<UPaperTileMap>): Bool;
	public function SetTile(X: cpp.Int32, Y: cpp.Int32, Layer: cpp.Int32, NewValue: FPaperTileInfo): Void;
	public function SetLayerColor(NewColor: FLinearColor, Layer: cpp.Int32): Void;
	public function SetLayerCollision(Layer: cpp.Int32, bHasCollision: Bool, bOverrideThickness: Bool, CustomThickness: cpp.Float32, bOverrideOffset: Bool, CustomOffset: cpp.Float32, bRebuildCollision: Bool): Void;
	public function SetDefaultCollisionThickness(Thickness: cpp.Float32, bRebuildCollision: Bool): Void;
	public function ResizeMap(NewWidthInTiles: cpp.Int32, NewHeightInTiles: cpp.Int32): Void;
	public function RebuildCollision(): Void;
	public function OwnsTileMap(): Bool;
	public function MakeTileMapEditable(): Void;
	public function GetTilePolygon(TileX: cpp.Int32, TileY: cpp.Int32, Points: TArray<FVector>, LayerIndex: cpp.Int32, bWorldSpace: Bool): Void;
	public function GetTileMapColor(): FLinearColor;
	public function GetTileCornerPosition(TileX: cpp.Int32, TileY: cpp.Int32, LayerIndex: cpp.Int32, bWorldSpace: Bool): FVector;
	public function GetTileCenterPosition(TileX: cpp.Int32, TileY: cpp.Int32, LayerIndex: cpp.Int32, bWorldSpace: Bool): FVector;
	public function GetTile(X: cpp.Int32, Y: cpp.Int32, Layer: cpp.Int32): FPaperTileInfo;
	public function GetMapSize(MapWidth: cpp.Reference<cpp.Int32>, MapHeight: cpp.Reference<cpp.Int32>, NumLayers: cpp.Reference<cpp.Int32>): Void;
	public function GetLayerColor(Layer: cpp.Int32): FLinearColor;
	public function CreateNewTileMap(MapWidth: cpp.Int32, MapHeight: cpp.Int32, TileWidth: cpp.Int32, TileHeight: cpp.Int32, PixelsPerUnrealUnit: cpp.Float32, bCreateLayer: Bool): Void;
	public function AddNewLayer(): cpp.Star<UPaperTileLayer>;
}
