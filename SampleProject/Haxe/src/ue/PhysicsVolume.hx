// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("APhysicsVolume")
@:include("GameFramework/PhysicsVolume.h")
@:valueType
extern class PhysicsVolume extends Volume {
	public var TerminalVelocity: ucpp.num.Float32;
	public var Priority: ucpp.num.Int32;
	public var FluidFriction: ucpp.num.Float32;
	public var bWaterVolume: Bool;
	public var bPhysicsOnContact: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPhysicsVolume(PhysicsVolume) from PhysicsVolume {
	public extern var TerminalVelocity(get, never): ucpp.num.Float32;
	public inline extern function get_TerminalVelocity(): ucpp.num.Float32 return this.TerminalVelocity;
	public extern var Priority(get, never): ucpp.num.Int32;
	public inline extern function get_Priority(): ucpp.num.Int32 return this.Priority;
	public extern var FluidFriction(get, never): ucpp.num.Float32;
	public inline extern function get_FluidFriction(): ucpp.num.Float32 return this.FluidFriction;
	public extern var bWaterVolume(get, never): Bool;
	public inline extern function get_bWaterVolume(): Bool return this.bWaterVolume;
	public extern var bPhysicsOnContact(get, never): Bool;
	public inline extern function get_bPhysicsOnContact(): Bool return this.bPhysicsOnContact;
}

@:forward
@:nativeGen
@:native("PhysicsVolume*")
abstract PhysicsVolumePtr(ucpp.Ptr<PhysicsVolume>) from ucpp.Ptr<PhysicsVolume> to ucpp.Ptr<PhysicsVolume>{
	@:from
	public static extern inline function fromValue(v: PhysicsVolume): PhysicsVolumePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PhysicsVolume {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}