// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URigVMMemory_Work")
@:valueType
extern class RigVMMemory_Work extends RigVMMemoryStorage {
	public var RigVMModel___FootTrace_Offset: Vector;
	public var FootTrace___FootTrace_Entry_Ik_Foot_Bone: RigElementKey;
	public var FootTrace___FootTrace_Return_Offset: Vector;
	public var FootTrace___FootTrace_MathVectorAdd_Result: Vector;
	public var FootTrace___FootTrace_GetTransform_Transform: Transform;
	public var FootTrace___FootTrace_GetTransform_CachedIndex: TArray<CachedRigElement>;
	public var FootTrace___FootTrace_MathFloatAdd_Result: ucpp.num.Float32;
	public var FootTrace___FootTrace_MathFloatAdd_A: ucpp.num.Float32;
	public var FootTrace___FootTrace_GetTransform_1_Transform: Transform;
	public var FootTrace___FootTrace_GetTransform_1_CachedIndex: TArray<CachedRigElement>;
	public var FootTrace___FootTrace_MathVectorAdd_A__IO: Vector;
	public var FootTrace___FootTrace_MathVectorSub_Result: Vector;
	public var FootTrace___FootTrace_MathVectorSub_A__IO: Vector;
	public var FootTrace___FootTrace_SphereTraceByTraceChannel_bHit: Bool;
	public var FootTrace___FootTrace_SphereTraceByTraceChannel_HitNormal: Vector;
	public var RigVMModel___FootTrace_1_Offset: Vector;
	public var FootTrace_1___FootTrace_Entry_Ik_Foot_Bone: RigElementKey;
	public var FootTrace_1___FootTrace_Return_Offset: Vector;
	public var FootTrace_1___FootTrace_MathVectorAdd_Result: Vector;
	public var FootTrace_1___FootTrace_GetTransform_Transform: Transform;
	public var FootTrace_1___FootTrace_GetTransform_CachedIndex: TArray<CachedRigElement>;
	public var FootTrace_1___FootTrace_MathFloatAdd_Result: ucpp.num.Float32;
	public var FootTrace_1___FootTrace_MathFloatAdd_A: ucpp.num.Float32;
	public var FootTrace_1___FootTrace_GetTransform_1_Transform: Transform;
	public var FootTrace_1___FootTrace_GetTransform_1_CachedIndex: TArray<CachedRigElement>;
	public var FootTrace_1___FootTrace_MathVectorAdd_A__IO: Vector;
	public var FootTrace_1___FootTrace_MathVectorSub_Result: Vector;
	public var FootTrace_1___FootTrace_MathVectorSub_A__IO: Vector;
	public var FootTrace_1___FootTrace_SphereTraceByTraceChannel_bHit: Bool;
	public var FootTrace_1___FootTrace_SphereTraceByTraceChannel_HitNormal: Vector;
	public var RigVMModel___Branch_BlockToRun: FName;
	public var RigVMModel___AlphaInterp_Result: ucpp.num.Float32;
	public var RigVMModel___AlphaInterp_Value: ucpp.num.Float32;
	public var RigVMModel___AlphaInterp_ScaleBiasClamp: TArray<InputScaleBiasClamp>;
	public var RigVMModel___AlphaInterp_1_Result: ucpp.num.Float32;
	public var RigVMModel___AlphaInterp_1_Value: ucpp.num.Float32;
	public var RigVMModel___AlphaInterp_1_ScaleBiasClamp: TArray<InputScaleBiasClamp>;
	public var RigVMModel___If_Result: ucpp.num.Float64;
	public var RigVMModel___MathFloatLess_Result: Bool;
	public var RigVMModel___MathFloatLess_A: ucpp.num.Float32;
	public var RigVMModel___MathFloatLess_B: ucpp.num.Float32;
	public var RigVMModel___ModifyTransforms_ItemToModify__IO: TArray<RigUnit_ModifyTransforms_PerItem>;
	public var RigVMModel___ModifyTransforms_WorkData: TArray<RigUnit_ModifyTransforms_WorkData>;
	public var RigVMModel___ModifyTransforms_1_ItemToModify__IO: TArray<RigUnit_ModifyTransforms_PerItem>;
	public var RigVMModel___ModifyTransforms_1_WorkData: TArray<RigUnit_ModifyTransforms_WorkData>;
	public var RigVMModel___ModifyTransforms_1_1_ItemToModify__IO: TArray<RigUnit_ModifyTransforms_PerItem>;
	public var RigVMModel___ModifyTransforms_1_1_WorkData: TArray<RigUnit_ModifyTransforms_WorkData>;
	public var RigVMModel___GetTransform_Transform: Transform;
	public var RigVMModel___GetTransform_CachedIndex: TArray<CachedRigElement>;
	public var RigVMModel___GetTransform_1_Transform: Transform;
	public var RigVMModel___GetTransform_1_CachedIndex: TArray<CachedRigElement>;
	public var RigVMModel___PBIK_Effectors__IO: TArray<PBIKEffector>;
	public var RigVMModel___PBIK_EffectorSolverIndices: TArray<TArray<ucpp.num.Int32>>;
	public var RigVMModel___PBIK_BoneSettingToSolverBoneIndex: TArray<TArray<ucpp.num.Int32>>;
	public var RigVMModel___PBIK_SolverBoneToElementIndex: TArray<TArray<ucpp.num.Int32>>;
	public var RigVMModel___PBIK_Solver: TArray<PBIKSolver>;
	public var RigVMModel___PBIK_bNeedsInit: TArray<Bool>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstRigVMMemory_Work(RigVMMemory_Work) from RigVMMemory_Work {
	public extern var RigVMModel___FootTrace_Offset(get, never): Vector;
	public inline extern function get_RigVMModel___FootTrace_Offset(): Vector return this.RigVMModel___FootTrace_Offset;
	public extern var FootTrace___FootTrace_Entry_Ik_Foot_Bone(get, never): RigElementKey;
	public inline extern function get_FootTrace___FootTrace_Entry_Ik_Foot_Bone(): RigElementKey return this.FootTrace___FootTrace_Entry_Ik_Foot_Bone;
	public extern var FootTrace___FootTrace_Return_Offset(get, never): Vector;
	public inline extern function get_FootTrace___FootTrace_Return_Offset(): Vector return this.FootTrace___FootTrace_Return_Offset;
	public extern var FootTrace___FootTrace_MathVectorAdd_Result(get, never): Vector;
	public inline extern function get_FootTrace___FootTrace_MathVectorAdd_Result(): Vector return this.FootTrace___FootTrace_MathVectorAdd_Result;
	public extern var FootTrace___FootTrace_GetTransform_Transform(get, never): Transform;
	public inline extern function get_FootTrace___FootTrace_GetTransform_Transform(): Transform return this.FootTrace___FootTrace_GetTransform_Transform;
	public extern var FootTrace___FootTrace_GetTransform_CachedIndex(get, never): TArray<CachedRigElement>;
	public inline extern function get_FootTrace___FootTrace_GetTransform_CachedIndex(): TArray<CachedRigElement> return this.FootTrace___FootTrace_GetTransform_CachedIndex;
	public extern var FootTrace___FootTrace_MathFloatAdd_Result(get, never): ucpp.num.Float32;
	public inline extern function get_FootTrace___FootTrace_MathFloatAdd_Result(): ucpp.num.Float32 return this.FootTrace___FootTrace_MathFloatAdd_Result;
	public extern var FootTrace___FootTrace_MathFloatAdd_A(get, never): ucpp.num.Float32;
	public inline extern function get_FootTrace___FootTrace_MathFloatAdd_A(): ucpp.num.Float32 return this.FootTrace___FootTrace_MathFloatAdd_A;
	public extern var FootTrace___FootTrace_GetTransform_1_Transform(get, never): Transform;
	public inline extern function get_FootTrace___FootTrace_GetTransform_1_Transform(): Transform return this.FootTrace___FootTrace_GetTransform_1_Transform;
	public extern var FootTrace___FootTrace_GetTransform_1_CachedIndex(get, never): TArray<CachedRigElement>;
	public inline extern function get_FootTrace___FootTrace_GetTransform_1_CachedIndex(): TArray<CachedRigElement> return this.FootTrace___FootTrace_GetTransform_1_CachedIndex;
	public extern var FootTrace___FootTrace_MathVectorAdd_A__IO(get, never): Vector;
	public inline extern function get_FootTrace___FootTrace_MathVectorAdd_A__IO(): Vector return this.FootTrace___FootTrace_MathVectorAdd_A__IO;
	public extern var FootTrace___FootTrace_MathVectorSub_Result(get, never): Vector;
	public inline extern function get_FootTrace___FootTrace_MathVectorSub_Result(): Vector return this.FootTrace___FootTrace_MathVectorSub_Result;
	public extern var FootTrace___FootTrace_MathVectorSub_A__IO(get, never): Vector;
	public inline extern function get_FootTrace___FootTrace_MathVectorSub_A__IO(): Vector return this.FootTrace___FootTrace_MathVectorSub_A__IO;
	public extern var FootTrace___FootTrace_SphereTraceByTraceChannel_bHit(get, never): Bool;
	public inline extern function get_FootTrace___FootTrace_SphereTraceByTraceChannel_bHit(): Bool return this.FootTrace___FootTrace_SphereTraceByTraceChannel_bHit;
	public extern var FootTrace___FootTrace_SphereTraceByTraceChannel_HitNormal(get, never): Vector;
	public inline extern function get_FootTrace___FootTrace_SphereTraceByTraceChannel_HitNormal(): Vector return this.FootTrace___FootTrace_SphereTraceByTraceChannel_HitNormal;
	public extern var RigVMModel___FootTrace_1_Offset(get, never): Vector;
	public inline extern function get_RigVMModel___FootTrace_1_Offset(): Vector return this.RigVMModel___FootTrace_1_Offset;
	public extern var FootTrace_1___FootTrace_Entry_Ik_Foot_Bone(get, never): RigElementKey;
	public inline extern function get_FootTrace_1___FootTrace_Entry_Ik_Foot_Bone(): RigElementKey return this.FootTrace_1___FootTrace_Entry_Ik_Foot_Bone;
	public extern var FootTrace_1___FootTrace_Return_Offset(get, never): Vector;
	public inline extern function get_FootTrace_1___FootTrace_Return_Offset(): Vector return this.FootTrace_1___FootTrace_Return_Offset;
	public extern var FootTrace_1___FootTrace_MathVectorAdd_Result(get, never): Vector;
	public inline extern function get_FootTrace_1___FootTrace_MathVectorAdd_Result(): Vector return this.FootTrace_1___FootTrace_MathVectorAdd_Result;
	public extern var FootTrace_1___FootTrace_GetTransform_Transform(get, never): Transform;
	public inline extern function get_FootTrace_1___FootTrace_GetTransform_Transform(): Transform return this.FootTrace_1___FootTrace_GetTransform_Transform;
	public extern var FootTrace_1___FootTrace_GetTransform_CachedIndex(get, never): TArray<CachedRigElement>;
	public inline extern function get_FootTrace_1___FootTrace_GetTransform_CachedIndex(): TArray<CachedRigElement> return this.FootTrace_1___FootTrace_GetTransform_CachedIndex;
	public extern var FootTrace_1___FootTrace_MathFloatAdd_Result(get, never): ucpp.num.Float32;
	public inline extern function get_FootTrace_1___FootTrace_MathFloatAdd_Result(): ucpp.num.Float32 return this.FootTrace_1___FootTrace_MathFloatAdd_Result;
	public extern var FootTrace_1___FootTrace_MathFloatAdd_A(get, never): ucpp.num.Float32;
	public inline extern function get_FootTrace_1___FootTrace_MathFloatAdd_A(): ucpp.num.Float32 return this.FootTrace_1___FootTrace_MathFloatAdd_A;
	public extern var FootTrace_1___FootTrace_GetTransform_1_Transform(get, never): Transform;
	public inline extern function get_FootTrace_1___FootTrace_GetTransform_1_Transform(): Transform return this.FootTrace_1___FootTrace_GetTransform_1_Transform;
	public extern var FootTrace_1___FootTrace_GetTransform_1_CachedIndex(get, never): TArray<CachedRigElement>;
	public inline extern function get_FootTrace_1___FootTrace_GetTransform_1_CachedIndex(): TArray<CachedRigElement> return this.FootTrace_1___FootTrace_GetTransform_1_CachedIndex;
	public extern var FootTrace_1___FootTrace_MathVectorAdd_A__IO(get, never): Vector;
	public inline extern function get_FootTrace_1___FootTrace_MathVectorAdd_A__IO(): Vector return this.FootTrace_1___FootTrace_MathVectorAdd_A__IO;
	public extern var FootTrace_1___FootTrace_MathVectorSub_Result(get, never): Vector;
	public inline extern function get_FootTrace_1___FootTrace_MathVectorSub_Result(): Vector return this.FootTrace_1___FootTrace_MathVectorSub_Result;
	public extern var FootTrace_1___FootTrace_MathVectorSub_A__IO(get, never): Vector;
	public inline extern function get_FootTrace_1___FootTrace_MathVectorSub_A__IO(): Vector return this.FootTrace_1___FootTrace_MathVectorSub_A__IO;
	public extern var FootTrace_1___FootTrace_SphereTraceByTraceChannel_bHit(get, never): Bool;
	public inline extern function get_FootTrace_1___FootTrace_SphereTraceByTraceChannel_bHit(): Bool return this.FootTrace_1___FootTrace_SphereTraceByTraceChannel_bHit;
	public extern var FootTrace_1___FootTrace_SphereTraceByTraceChannel_HitNormal(get, never): Vector;
	public inline extern function get_FootTrace_1___FootTrace_SphereTraceByTraceChannel_HitNormal(): Vector return this.FootTrace_1___FootTrace_SphereTraceByTraceChannel_HitNormal;
	public extern var RigVMModel___Branch_BlockToRun(get, never): FName;
	public inline extern function get_RigVMModel___Branch_BlockToRun(): FName return this.RigVMModel___Branch_BlockToRun;
	public extern var RigVMModel___AlphaInterp_Result(get, never): ucpp.num.Float32;
	public inline extern function get_RigVMModel___AlphaInterp_Result(): ucpp.num.Float32 return this.RigVMModel___AlphaInterp_Result;
	public extern var RigVMModel___AlphaInterp_Value(get, never): ucpp.num.Float32;
	public inline extern function get_RigVMModel___AlphaInterp_Value(): ucpp.num.Float32 return this.RigVMModel___AlphaInterp_Value;
	public extern var RigVMModel___AlphaInterp_ScaleBiasClamp(get, never): TArray<InputScaleBiasClamp>;
	public inline extern function get_RigVMModel___AlphaInterp_ScaleBiasClamp(): TArray<InputScaleBiasClamp> return this.RigVMModel___AlphaInterp_ScaleBiasClamp;
	public extern var RigVMModel___AlphaInterp_1_Result(get, never): ucpp.num.Float32;
	public inline extern function get_RigVMModel___AlphaInterp_1_Result(): ucpp.num.Float32 return this.RigVMModel___AlphaInterp_1_Result;
	public extern var RigVMModel___AlphaInterp_1_Value(get, never): ucpp.num.Float32;
	public inline extern function get_RigVMModel___AlphaInterp_1_Value(): ucpp.num.Float32 return this.RigVMModel___AlphaInterp_1_Value;
	public extern var RigVMModel___AlphaInterp_1_ScaleBiasClamp(get, never): TArray<InputScaleBiasClamp>;
	public inline extern function get_RigVMModel___AlphaInterp_1_ScaleBiasClamp(): TArray<InputScaleBiasClamp> return this.RigVMModel___AlphaInterp_1_ScaleBiasClamp;
	public extern var RigVMModel___If_Result(get, never): ucpp.num.Float64;
	public inline extern function get_RigVMModel___If_Result(): ucpp.num.Float64 return this.RigVMModel___If_Result;
	public extern var RigVMModel___MathFloatLess_Result(get, never): Bool;
	public inline extern function get_RigVMModel___MathFloatLess_Result(): Bool return this.RigVMModel___MathFloatLess_Result;
	public extern var RigVMModel___MathFloatLess_A(get, never): ucpp.num.Float32;
	public inline extern function get_RigVMModel___MathFloatLess_A(): ucpp.num.Float32 return this.RigVMModel___MathFloatLess_A;
	public extern var RigVMModel___MathFloatLess_B(get, never): ucpp.num.Float32;
	public inline extern function get_RigVMModel___MathFloatLess_B(): ucpp.num.Float32 return this.RigVMModel___MathFloatLess_B;
	public extern var RigVMModel___ModifyTransforms_ItemToModify__IO(get, never): TArray<RigUnit_ModifyTransforms_PerItem>;
	public inline extern function get_RigVMModel___ModifyTransforms_ItemToModify__IO(): TArray<RigUnit_ModifyTransforms_PerItem> return this.RigVMModel___ModifyTransforms_ItemToModify__IO;
	public extern var RigVMModel___ModifyTransforms_WorkData(get, never): TArray<RigUnit_ModifyTransforms_WorkData>;
	public inline extern function get_RigVMModel___ModifyTransforms_WorkData(): TArray<RigUnit_ModifyTransforms_WorkData> return this.RigVMModel___ModifyTransforms_WorkData;
	public extern var RigVMModel___ModifyTransforms_1_ItemToModify__IO(get, never): TArray<RigUnit_ModifyTransforms_PerItem>;
	public inline extern function get_RigVMModel___ModifyTransforms_1_ItemToModify__IO(): TArray<RigUnit_ModifyTransforms_PerItem> return this.RigVMModel___ModifyTransforms_1_ItemToModify__IO;
	public extern var RigVMModel___ModifyTransforms_1_WorkData(get, never): TArray<RigUnit_ModifyTransforms_WorkData>;
	public inline extern function get_RigVMModel___ModifyTransforms_1_WorkData(): TArray<RigUnit_ModifyTransforms_WorkData> return this.RigVMModel___ModifyTransforms_1_WorkData;
	public extern var RigVMModel___ModifyTransforms_1_1_ItemToModify__IO(get, never): TArray<RigUnit_ModifyTransforms_PerItem>;
	public inline extern function get_RigVMModel___ModifyTransforms_1_1_ItemToModify__IO(): TArray<RigUnit_ModifyTransforms_PerItem> return this.RigVMModel___ModifyTransforms_1_1_ItemToModify__IO;
	public extern var RigVMModel___ModifyTransforms_1_1_WorkData(get, never): TArray<RigUnit_ModifyTransforms_WorkData>;
	public inline extern function get_RigVMModel___ModifyTransforms_1_1_WorkData(): TArray<RigUnit_ModifyTransforms_WorkData> return this.RigVMModel___ModifyTransforms_1_1_WorkData;
	public extern var RigVMModel___GetTransform_Transform(get, never): Transform;
	public inline extern function get_RigVMModel___GetTransform_Transform(): Transform return this.RigVMModel___GetTransform_Transform;
	public extern var RigVMModel___GetTransform_CachedIndex(get, never): TArray<CachedRigElement>;
	public inline extern function get_RigVMModel___GetTransform_CachedIndex(): TArray<CachedRigElement> return this.RigVMModel___GetTransform_CachedIndex;
	public extern var RigVMModel___GetTransform_1_Transform(get, never): Transform;
	public inline extern function get_RigVMModel___GetTransform_1_Transform(): Transform return this.RigVMModel___GetTransform_1_Transform;
	public extern var RigVMModel___GetTransform_1_CachedIndex(get, never): TArray<CachedRigElement>;
	public inline extern function get_RigVMModel___GetTransform_1_CachedIndex(): TArray<CachedRigElement> return this.RigVMModel___GetTransform_1_CachedIndex;
	public extern var RigVMModel___PBIK_Effectors__IO(get, never): TArray<PBIKEffector>;
	public inline extern function get_RigVMModel___PBIK_Effectors__IO(): TArray<PBIKEffector> return this.RigVMModel___PBIK_Effectors__IO;
	public extern var RigVMModel___PBIK_EffectorSolverIndices(get, never): TArray<TArray<ucpp.num.Int32>>;
	public inline extern function get_RigVMModel___PBIK_EffectorSolverIndices(): TArray<TArray<ucpp.num.Int32>> return this.RigVMModel___PBIK_EffectorSolverIndices;
	public extern var RigVMModel___PBIK_BoneSettingToSolverBoneIndex(get, never): TArray<TArray<ucpp.num.Int32>>;
	public inline extern function get_RigVMModel___PBIK_BoneSettingToSolverBoneIndex(): TArray<TArray<ucpp.num.Int32>> return this.RigVMModel___PBIK_BoneSettingToSolverBoneIndex;
	public extern var RigVMModel___PBIK_SolverBoneToElementIndex(get, never): TArray<TArray<ucpp.num.Int32>>;
	public inline extern function get_RigVMModel___PBIK_SolverBoneToElementIndex(): TArray<TArray<ucpp.num.Int32>> return this.RigVMModel___PBIK_SolverBoneToElementIndex;
	public extern var RigVMModel___PBIK_Solver(get, never): TArray<PBIKSolver>;
	public inline extern function get_RigVMModel___PBIK_Solver(): TArray<PBIKSolver> return this.RigVMModel___PBIK_Solver;
	public extern var RigVMModel___PBIK_bNeedsInit(get, never): TArray<Bool>;
	public inline extern function get_RigVMModel___PBIK_bNeedsInit(): TArray<Bool> return this.RigVMModel___PBIK_bNeedsInit;
}

@:forward
@:nativeGen
@:native("RigVMMemory_Work*")
abstract RigVMMemory_WorkPtr(ucpp.Ptr<RigVMMemory_Work>) from ucpp.Ptr<RigVMMemory_Work> to ucpp.Ptr<RigVMMemory_Work>{
	@:from
	public static extern inline function fromValue(v: RigVMMemory_Work): RigVMMemory_WorkPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RigVMMemory_Work {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}