// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UParticleModuleLocationPrimitiveCylinder")
@:include("Particles/Location/ParticleModuleLocationPrimitiveCylinder.h")
@:valueType
extern class ParticleModuleLocationPrimitiveCylinder extends ParticleModuleLocationPrimitiveBase {
	public var RadialVelocity: Bool;
	public var StartRadius: RawDistributionFloat;
	public var StartHeight: RawDistributionFloat;
	public var HeightAxis: TEnumAsByte<CylinderHeightAxis>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstParticleModuleLocationPrimitiveCylinder(ParticleModuleLocationPrimitiveCylinder) from ParticleModuleLocationPrimitiveCylinder {
	public extern var RadialVelocity(get, never): Bool;
	public inline extern function get_RadialVelocity(): Bool return this.RadialVelocity;
	public extern var StartRadius(get, never): RawDistributionFloat;
	public inline extern function get_StartRadius(): RawDistributionFloat return this.StartRadius;
	public extern var StartHeight(get, never): RawDistributionFloat;
	public inline extern function get_StartHeight(): RawDistributionFloat return this.StartHeight;
	public extern var HeightAxis(get, never): TEnumAsByte<CylinderHeightAxis>;
	public inline extern function get_HeightAxis(): TEnumAsByte<CylinderHeightAxis> return this.HeightAxis;
}

@:forward
@:nativeGen
@:native("ParticleModuleLocationPrimitiveCylinder*")
abstract ParticleModuleLocationPrimitiveCylinderPtr(ucpp.Ptr<ParticleModuleLocationPrimitiveCylinder>) from ucpp.Ptr<ParticleModuleLocationPrimitiveCylinder> to ucpp.Ptr<ParticleModuleLocationPrimitiveCylinder>{
	@:from
	public static extern inline function fromValue(v: ParticleModuleLocationPrimitiveCylinder): ParticleModuleLocationPrimitiveCylinderPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ParticleModuleLocationPrimitiveCylinder {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}