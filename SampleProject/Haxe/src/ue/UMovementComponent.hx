// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovementComponent")
@:include("GameFramework/MovementComponent.h")
extern class UMovementComponent extends UActorComponent {
	public var UpdatedComponent: TObjectPtr<USceneComponent>;
	public var UpdatedPrimitive: TObjectPtr<UPrimitiveComponent>;
	public var Velocity: FVector;
	public var PlaneConstraintNormal: FVector;
	public var PlaneConstraintOrigin: FVector;
	public var bUpdateOnlyIfRendered: Bool;
	public var bAutoUpdateTickRegistration: Bool;
	public var bTickBeforeOwner: Bool;
	public var bAutoRegisterUpdatedComponent: Bool;
	public var bConstrainToPlane: Bool;
	public var bSnapToPlaneAtStart: Bool;
	public var bAutoRegisterPhysicsVolumeUpdates: Bool;
	public var bComponentShouldUpdatePhysicsVolume: Bool;
	public var PlaneConstraintAxisSetting: EPlaneConstraintAxisSetting;

	public function StopMovementImmediately(): Void;
	public function SnapUpdatedComponentToPlane(): Void;
	public function SetUpdatedComponent(NewUpdatedComponent: cpp.Star<USceneComponent>): Void;
	public function SetPlaneConstraintOrigin(PlaneOrigin: FVector): Void;
	public function SetPlaneConstraintNormal(PlaneNormal: FVector): Void;
	public function SetPlaneConstraintFromVectors(Forward: FVector, Up: FVector): Void;
	public function SetPlaneConstraintEnabled(bEnabled: Bool): Void;
	public function SetPlaneConstraintAxisSetting(NewAxisSetting: EPlaneConstraintAxisSetting): Void;
	public function PhysicsVolumeChanged(NewVolume: cpp.Star<APhysicsVolume>): Void;
	public function K2_MoveUpdatedComponent(Delta: FVector, NewRotation: FRotator, OutHit: FHitResult, bSweep: Bool, bTeleport: Bool): Bool;
	public function IsExceedingMaxSpeed(MaxSpeed: cpp.Float32): Bool;
	public function GetPlaneConstraintOrigin(): FVector;
	public function GetPlaneConstraintNormal(): FVector;
	public function GetPlaneConstraintAxisSetting(): EPlaneConstraintAxisSetting;
	public function GetPhysicsVolume(): cpp.Star<APhysicsVolume>;
	public function GetMaxSpeed(): cpp.Float32;
	public function GetGravityZ(): cpp.Float32;
	public function ConstrainNormalToPlane(Normal: FVector): FVector;
	public function ConstrainLocationToPlane(Location: FVector): FVector;
	public function ConstrainDirectionToPlane(Direction: FVector): FVector;
}
