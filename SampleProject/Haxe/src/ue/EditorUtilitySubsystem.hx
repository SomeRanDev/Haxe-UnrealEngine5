// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEditorUtilitySubsystem")
@:include("EditorUtilitySubsystem.h")
@:valueType
extern class EditorUtilitySubsystem extends EditorSubsystem {
	public var LoadedUIs: TArray<SoftObjectPath>;
	public var StartupObjects: TArray<SoftObjectPath>;
	public var OnBeginPIE: HaxeMulticastSparseDelegateProperty<(Bool) -> Void>;
	public var OnEndPIE: HaxeMulticastSparseDelegateProperty<(Bool) -> Void>;
	private var ObjectInstances: TMap<ucpp.Ptr<Object>, ucpp.Ptr<Object>>;
	private var ActiveTaskStack: TArray<ucpp.Ptr<EditorUtilityTask>>;
	private var ReferencedObjects: TSet<ucpp.Ptr<Object>>;

	public function UnregisterTabByID(TabID: FName): Bool;
	public function TryRun(Asset: ucpp.Ptr<Object>): Bool;
	public function SpawnRegisteredTabByID(NewTabID: FName): Bool;
	public function SpawnAndRegisterTabWithId(InBlueprint: ucpp.Ptr<EditorUtilityWidgetBlueprint>, InTabID: FName): ucpp.Ptr<EditorUtilityWidget>;
	public function SpawnAndRegisterTabAndGetID(InBlueprint: ucpp.Ptr<EditorUtilityWidgetBlueprint>, NewTabID: ucpp.Ref<FName>): ucpp.Ptr<EditorUtilityWidget>;
	public function SpawnAndRegisterTab(InBlueprint: ucpp.Ptr<EditorUtilityWidgetBlueprint>): ucpp.Ptr<EditorUtilityWidget>;
	public function ReleaseInstanceOfAsset(Asset: ucpp.Ptr<Object>): Void;
	public function RegisterTabAndGetID(InBlueprint: ucpp.Ptr<EditorUtilityWidgetBlueprint>, NewTabID: ucpp.Ref<FName>): Void;
	public function RegisterAndExecuteTask(NewTask: ucpp.Ptr<EditorUtilityTask>, OptionalParentTask: ucpp.Ptr<EditorUtilityTask>): Void;
	public function FindUtilityWidgetFromBlueprint(InBlueprint: ucpp.Ptr<EditorUtilityWidgetBlueprint>): ucpp.Ptr<EditorUtilityWidget>;
	public function DoesTabExist(NewTabID: FName): Bool;
	public function CloseTabByID(NewTabID: FName): Bool;
	public function CanRun(Asset: ucpp.Ptr<Object>): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(CanRun)
@:nativeGen
abstract ConstEditorUtilitySubsystem(EditorUtilitySubsystem) from EditorUtilitySubsystem {
	public extern var LoadedUIs(get, never): TArray<SoftObjectPath>;
	public inline extern function get_LoadedUIs(): TArray<SoftObjectPath> return this.LoadedUIs;
	public extern var StartupObjects(get, never): TArray<SoftObjectPath>;
	public inline extern function get_StartupObjects(): TArray<SoftObjectPath> return this.StartupObjects;
	public extern var OnBeginPIE(get, never): HaxeMulticastSparseDelegateProperty<(Bool) -> Void>;
	public inline extern function get_OnBeginPIE(): HaxeMulticastSparseDelegateProperty<(Bool) -> Void> return this.OnBeginPIE;
	public extern var OnEndPIE(get, never): HaxeMulticastSparseDelegateProperty<(Bool) -> Void>;
	public inline extern function get_OnEndPIE(): HaxeMulticastSparseDelegateProperty<(Bool) -> Void> return this.OnEndPIE;
}

@:forward
@:nativeGen
@:native("EditorUtilitySubsystem*")
abstract EditorUtilitySubsystemPtr(ucpp.Ptr<EditorUtilitySubsystem>) from ucpp.Ptr<EditorUtilitySubsystem> to ucpp.Ptr<EditorUtilitySubsystem>{
	@:from
	public static extern inline function fromValue(v: EditorUtilitySubsystem): EditorUtilitySubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EditorUtilitySubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}