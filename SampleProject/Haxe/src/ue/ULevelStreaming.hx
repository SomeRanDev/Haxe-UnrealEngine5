// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULevelStreaming")
@:include("Engine/LevelStreaming.h")
extern class ULevelStreaming extends UObject {
	public var PackageName_DEPRECATED: FName;
	public var WorldAsset: TSoftObjectPtr<UWorld>;
	public var StreamingPriority: cpp.Int32;
	public var PackageNameToLoad: FName;
	public var LODPackageNames: TArray<FName>;
	public var LevelTransform: FTransform;
	public var bClientOnlyVisible: Bool;
	public var LevelLODIndex: cpp.Int32;
	public var bShouldBeVisibleInEditor: Bool;
	public var bShouldBeVisible: Bool;
	public var bShouldBeLoaded: Bool;
	public var bLocked: Bool;
	public var bIsStatic: Bool;
	public var bShouldBlockOnLoad: Bool;
	public var bShouldBlockOnUnload: Bool;
	public var bDisableDistanceStreaming: Bool;
	public var bDrawOnLevelStatusMap: Bool;
	public var DrawColor_DEPRECATED: FColor;
	public var LevelColor: FLinearColor;
	public var EditorStreamingVolumes: TArray<TObjectPtr<ALevelStreamingVolume>>;
	public var MinTimeBetweenVolumeUnloadRequests: cpp.Float32;
	public var Keywords: TArray<FString>;
	public var OnLevelLoaded: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var OnLevelUnloaded: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var OnLevelShown: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var OnLevelHidden: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var LoadedLevel: TObjectPtr<ULevel>;
	public var PendingUnloadLevel: TObjectPtr<ULevel>;
	public var FolderPath: FName;

	public function ShouldBeLoaded(): Bool;
	public function SetShouldBeVisible(bInShouldBeVisible: Bool): Void;
	public function SetShouldBeLoaded(bInShouldBeLoaded: Bool): Void;
	public function SetPriority(NewPriority: cpp.Int32): Void;
	public function SetLevelLODIndex(LODIndex: cpp.Int32): Void;
	public function SetIsRequestingUnloadAndRemoval(bInIsRequestingUnloadAndRemoval: Bool): Void;
	public function IsStreamingStatePending(): Bool;
	public function IsLevelVisible(): Bool;
	public function IsLevelLoaded(): Bool;
	public function GetWorldAssetPackageFName(): FName;
	public function GetLoadedLevel(): cpp.Star<ULevel>;
	public function GetLevelScriptActor(): cpp.Star<ALevelScriptActor>;
	public function GetIsRequestingUnloadAndRemoval(): Bool;
	public function CreateInstance(UniqueInstanceName: FString): cpp.Star<ULevelStreaming>;
}
