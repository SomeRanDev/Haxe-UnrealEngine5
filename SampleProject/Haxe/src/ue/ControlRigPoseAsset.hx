// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UControlRigPoseAsset")
@:include("Tools/ControlRigPose.h")
@:structAccess
extern class ControlRigPoseAsset extends Object {
	public var Pose: ControlRigControlPose;

	public function SelectControls(InControlRig: cpp.Star<ControlRig>, bDoMirror: Bool): Void;
	public function SavePose(InControlRig: cpp.Star<ControlRig>, bUseAll: Bool): Void;
	public function ReplaceControlName(CurrentName: cpp.Reference<FName>, NewName: cpp.Reference<FName>): Void;
	public function PastePose(InControlRig: cpp.Star<ControlRig>, bDoKey: Bool, bDoMirror: Bool): Void;
	public function GetCurrentPose(InControlRig: cpp.Star<ControlRig>, OutPose: cpp.Reference<ControlRigControlPose>): Void;
	public function GetControlNames(): cpp.Reference<TArray<FName>>;
	public function DoesMirrorMatch(ControlRig: cpp.Star<ControlRig>, ControlName: cpp.Reference<FName>): cpp.Reference<Bool>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetControlNames, DoesMirrorMatch)
@:nativeGen
abstract ConstControlRigPoseAsset(ControlRigPoseAsset) from ControlRigPoseAsset {
	public extern var Pose(get, never): ControlRigControlPose;
	public inline extern function get_Pose(): ControlRigControlPose return this.Pose;
}

@:forward
@:nativeGen
@:native("ControlRigPoseAsset*")
abstract ControlRigPoseAssetPtr(cpp.Star<ControlRigPoseAsset>) from cpp.Star<ControlRigPoseAsset> to cpp.Star<ControlRigPoseAsset>{
	@:from
	public static extern inline function fromValue(v: ControlRigPoseAsset): ControlRigPoseAssetPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ControlRigPoseAsset {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}