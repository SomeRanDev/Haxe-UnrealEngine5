// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AVectorFieldVolume")
@:include("VectorField/VectorFieldVolume.h")
@:structAccess
extern class VectorFieldVolume extends Actor {
	public var VectorFieldComponent: cpp.Star<VectorFieldComp>;
	public var SpriteComponent: cpp.Star<BillboardComp>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstVectorFieldVolume(VectorFieldVolume) from VectorFieldVolume {
	public extern var VectorFieldComponent(get, never): cpp.Star<VectorFieldComp.ConstVectorFieldComp>;
	public inline extern function get_VectorFieldComponent(): cpp.Star<VectorFieldComp.ConstVectorFieldComp> return this.VectorFieldComponent;
	public extern var SpriteComponent(get, never): cpp.Star<BillboardComp.ConstBillboardComp>;
	public inline extern function get_SpriteComponent(): cpp.Star<BillboardComp.ConstBillboardComp> return this.SpriteComponent;
}

@:forward
@:nativeGen
@:native("VectorFieldVolume*")
abstract VectorFieldVolumePtr(cpp.Star<VectorFieldVolume>) from cpp.Star<VectorFieldVolume> to cpp.Star<VectorFieldVolume>{
	@:from
	public static extern inline function fromValue(v: VectorFieldVolume): VectorFieldVolumePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): VectorFieldVolume {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}