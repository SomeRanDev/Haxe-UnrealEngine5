// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMatineeCameraShake")
@:include("MatineeCameraShake.h")
@:structAccess
extern class MatineeCameraShake extends CameraShakeBase {
	public var OscillationDuration: cpp.Float32;
	public var OscillationBlendInTime: cpp.Float32;
	public var OscillationBlendOutTime: cpp.Float32;
	public var RotOscillation: ROscillator;
	public var LocOscillation: VOscillator;
	public var FOVOscillation: FOscillator;
	public var AnimPlayRate: cpp.Float32;
	public var AnimScale: cpp.Float32;
	public var AnimBlendInTime: cpp.Float32;
	public var AnimBlendOutTime: cpp.Float32;
	public var RandomAnimSegmentDuration: cpp.Float32;
	public var Anim: cpp.Star<CameraAnim>;
	public var AnimSequence: cpp.Star<CameraAnimationSequence>;
	public var bRandomAnimSegment: Bool;
	public var OscillatorTimeRemaining: cpp.Float32;
	public var AnimInst: cpp.Star<CameraAnimInst>;
	public var SequenceShakePattern: cpp.Star<SequenceCameraShakePattern>;

	public function StartMatineeCameraShakeFromSource(PlayerCameraManager: cpp.Star<PlayerCameraManager>, ShakeClass: TSubclassOf<MatineeCameraShake>, SourceComponent: cpp.Star<CameraShakeSourceComp>, Scale: cpp.Float32, PlaySpace: ECameraShakePlaySpace, UserPlaySpaceRot: Rotator): cpp.Reference<cpp.Star<MatineeCameraShake>>;
	public function StartMatineeCameraShake(PlayerCameraManager: cpp.Star<PlayerCameraManager>, ShakeClass: TSubclassOf<MatineeCameraShake>, Scale: cpp.Float32, PlaySpace: ECameraShakePlaySpace, UserPlaySpaceRot: Rotator): cpp.Reference<cpp.Star<MatineeCameraShake>>;
	public function ReceiveStopShake(bImmediately: Bool): Void;
	public function ReceivePlayShake(Scale: cpp.Float32): Void;
	public function ReceiveIsFinished(): cpp.Reference<Bool>;
	public function BlueprintUpdateCameraShake(DeltaTime: cpp.Float32, Alpha: cpp.Float32, POV: cpp.Reference<MinimalViewInfo>, ModifiedPOV: cpp.Reference<MinimalViewInfo>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(ReceiveIsFinished)
@:nativeGen
abstract ConstMatineeCameraShake(MatineeCameraShake) from MatineeCameraShake {
	public extern var OscillationDuration(get, never): cpp.Float32;
	public inline extern function get_OscillationDuration(): cpp.Float32 return this.OscillationDuration;
	public extern var OscillationBlendInTime(get, never): cpp.Float32;
	public inline extern function get_OscillationBlendInTime(): cpp.Float32 return this.OscillationBlendInTime;
	public extern var OscillationBlendOutTime(get, never): cpp.Float32;
	public inline extern function get_OscillationBlendOutTime(): cpp.Float32 return this.OscillationBlendOutTime;
	public extern var RotOscillation(get, never): ROscillator;
	public inline extern function get_RotOscillation(): ROscillator return this.RotOscillation;
	public extern var LocOscillation(get, never): VOscillator;
	public inline extern function get_LocOscillation(): VOscillator return this.LocOscillation;
	public extern var FOVOscillation(get, never): FOscillator;
	public inline extern function get_FOVOscillation(): FOscillator return this.FOVOscillation;
	public extern var AnimPlayRate(get, never): cpp.Float32;
	public inline extern function get_AnimPlayRate(): cpp.Float32 return this.AnimPlayRate;
	public extern var AnimScale(get, never): cpp.Float32;
	public inline extern function get_AnimScale(): cpp.Float32 return this.AnimScale;
	public extern var AnimBlendInTime(get, never): cpp.Float32;
	public inline extern function get_AnimBlendInTime(): cpp.Float32 return this.AnimBlendInTime;
	public extern var AnimBlendOutTime(get, never): cpp.Float32;
	public inline extern function get_AnimBlendOutTime(): cpp.Float32 return this.AnimBlendOutTime;
	public extern var RandomAnimSegmentDuration(get, never): cpp.Float32;
	public inline extern function get_RandomAnimSegmentDuration(): cpp.Float32 return this.RandomAnimSegmentDuration;
	public extern var Anim(get, never): cpp.Star<CameraAnim.ConstCameraAnim>;
	public inline extern function get_Anim(): cpp.Star<CameraAnim.ConstCameraAnim> return this.Anim;
	public extern var AnimSequence(get, never): cpp.Star<CameraAnimationSequence.ConstCameraAnimationSequence>;
	public inline extern function get_AnimSequence(): cpp.Star<CameraAnimationSequence.ConstCameraAnimationSequence> return this.AnimSequence;
	public extern var bRandomAnimSegment(get, never): Bool;
	public inline extern function get_bRandomAnimSegment(): Bool return this.bRandomAnimSegment;
	public extern var OscillatorTimeRemaining(get, never): cpp.Float32;
	public inline extern function get_OscillatorTimeRemaining(): cpp.Float32 return this.OscillatorTimeRemaining;
	public extern var AnimInst(get, never): cpp.Star<CameraAnimInst.ConstCameraAnimInst>;
	public inline extern function get_AnimInst(): cpp.Star<CameraAnimInst.ConstCameraAnimInst> return this.AnimInst;
	public extern var SequenceShakePattern(get, never): cpp.Star<SequenceCameraShakePattern.ConstSequenceCameraShakePattern>;
	public inline extern function get_SequenceShakePattern(): cpp.Star<SequenceCameraShakePattern.ConstSequenceCameraShakePattern> return this.SequenceShakePattern;
}

@:forward
@:nativeGen
@:native("MatineeCameraShake*")
abstract MatineeCameraShakePtr(cpp.Star<MatineeCameraShake>) from cpp.Star<MatineeCameraShake> to cpp.Star<MatineeCameraShake>{
	@:from
	public static extern inline function fromValue(v: MatineeCameraShake): MatineeCameraShakePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MatineeCameraShake {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}