// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDisplaceMeshTextureMapProperties")
@:include("DisplaceMeshTool.h")
extern class DisplaceMeshTextureMapProperties extends InteractiveToolPropertySet {
	public var DisplacementMap: cpp.Star<Texture2D>;
	public var Channel: EDisplaceMeshToolChannelType;
	public var DisplacementMapBaseValue: cpp.Float32;
	public var UVScale: Vector2D;
	public var UVOffset: Vector2D;
	public var bApplyAdjustmentCurve: Bool;
	public var AdjustmentCurve: cpp.Star<CurveFloat>;
	public var bRecalcNormals: Bool;
}

@:forward()
@:nativeGen
abstract ConstDisplaceMeshTextureMapProperties(DisplaceMeshTextureMapProperties) from DisplaceMeshTextureMapProperties {
	public extern var DisplacementMap(get, never): cpp.Star<Texture2D.ConstTexture2D>;
	public inline extern function get_DisplacementMap(): cpp.Star<Texture2D.ConstTexture2D> return this.DisplacementMap;
	public extern var Channel(get, never): EDisplaceMeshToolChannelType;
	public inline extern function get_Channel(): EDisplaceMeshToolChannelType return this.Channel;
	public extern var DisplacementMapBaseValue(get, never): cpp.Float32;
	public inline extern function get_DisplacementMapBaseValue(): cpp.Float32 return this.DisplacementMapBaseValue;
	public extern var UVScale(get, never): Vector2D;
	public inline extern function get_UVScale(): Vector2D return this.UVScale;
	public extern var UVOffset(get, never): Vector2D;
	public inline extern function get_UVOffset(): Vector2D return this.UVOffset;
	public extern var bApplyAdjustmentCurve(get, never): Bool;
	public inline extern function get_bApplyAdjustmentCurve(): Bool return this.bApplyAdjustmentCurve;
	public extern var AdjustmentCurve(get, never): cpp.Star<CurveFloat.ConstCurveFloat>;
	public inline extern function get_AdjustmentCurve(): cpp.Star<CurveFloat.ConstCurveFloat> return this.AdjustmentCurve;
	public extern var bRecalcNormals(get, never): Bool;
	public inline extern function get_bRecalcNormals(): Bool return this.bRecalcNormals;
}