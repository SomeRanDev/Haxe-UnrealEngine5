// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPhysicsSettings")
@:include("PhysicsEngine/PhysicsSettings.h")
@:valueType
extern class PhysicsSettings extends PhysicsSettingsCore {
	public var PhysicErrorCorrection: RigidBodyErrorCorrection;
	public var DefaultDegreesOfFreedom: TEnumAsByte<ESettingsDOF>;
	public var bSuppressFaceRemapTable: Bool;
	public var bSupportUVFromHitResults: Bool;
	public var bDisableActiveActors: Bool;
	public var bDisableKinematicStaticPairs: Bool;
	public var bDisableKinematicKinematicPairs: Bool;
	public var bDisableCCD: Bool;
	public var AnimPhysicsMinDeltaTime: ucpp.num.Float32;
	public var bSimulateAnimPhysicsAfterReset: Bool;
	public var MinPhysicsDeltaTime: ucpp.num.Float32;
	public var MaxPhysicsDeltaTime: ucpp.num.Float32;
	public var bSubstepping: Bool;
	public var bSubsteppingAsync: Bool;
	public var bTickPhysicsAsync: Bool;
	public var AsyncFixedTimeStepSize: ucpp.num.Float32;
	public var MaxSubstepDeltaTime: ucpp.num.Float32;
	public var MaxSubsteps: ucpp.num.Int32;
	public var SyncSceneSmoothingFactor: ucpp.num.Float32;
	public var InitialAverageFrameRate: ucpp.num.Float32;
	public var PhysXTreeRebuildRate: ucpp.num.Int32;
	public var PhysicalSurfaces: TArray<PhysicalSurfaceName>;
	public var DefaultBroadphaseSettings: BroadphaseSettings;
	public var MinDeltaVelocityForHitEvents: ucpp.num.Float32;
	public var ChaosSettings: ChaosPhysicsSettings;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPhysicsSettings(PhysicsSettings) from PhysicsSettings {
	public extern var PhysicErrorCorrection(get, never): RigidBodyErrorCorrection;
	public inline extern function get_PhysicErrorCorrection(): RigidBodyErrorCorrection return this.PhysicErrorCorrection;
	public extern var DefaultDegreesOfFreedom(get, never): TEnumAsByte<ESettingsDOF>;
	public inline extern function get_DefaultDegreesOfFreedom(): TEnumAsByte<ESettingsDOF> return this.DefaultDegreesOfFreedom;
	public extern var bSuppressFaceRemapTable(get, never): Bool;
	public inline extern function get_bSuppressFaceRemapTable(): Bool return this.bSuppressFaceRemapTable;
	public extern var bSupportUVFromHitResults(get, never): Bool;
	public inline extern function get_bSupportUVFromHitResults(): Bool return this.bSupportUVFromHitResults;
	public extern var bDisableActiveActors(get, never): Bool;
	public inline extern function get_bDisableActiveActors(): Bool return this.bDisableActiveActors;
	public extern var bDisableKinematicStaticPairs(get, never): Bool;
	public inline extern function get_bDisableKinematicStaticPairs(): Bool return this.bDisableKinematicStaticPairs;
	public extern var bDisableKinematicKinematicPairs(get, never): Bool;
	public inline extern function get_bDisableKinematicKinematicPairs(): Bool return this.bDisableKinematicKinematicPairs;
	public extern var bDisableCCD(get, never): Bool;
	public inline extern function get_bDisableCCD(): Bool return this.bDisableCCD;
	public extern var AnimPhysicsMinDeltaTime(get, never): ucpp.num.Float32;
	public inline extern function get_AnimPhysicsMinDeltaTime(): ucpp.num.Float32 return this.AnimPhysicsMinDeltaTime;
	public extern var bSimulateAnimPhysicsAfterReset(get, never): Bool;
	public inline extern function get_bSimulateAnimPhysicsAfterReset(): Bool return this.bSimulateAnimPhysicsAfterReset;
	public extern var MinPhysicsDeltaTime(get, never): ucpp.num.Float32;
	public inline extern function get_MinPhysicsDeltaTime(): ucpp.num.Float32 return this.MinPhysicsDeltaTime;
	public extern var MaxPhysicsDeltaTime(get, never): ucpp.num.Float32;
	public inline extern function get_MaxPhysicsDeltaTime(): ucpp.num.Float32 return this.MaxPhysicsDeltaTime;
	public extern var bSubstepping(get, never): Bool;
	public inline extern function get_bSubstepping(): Bool return this.bSubstepping;
	public extern var bSubsteppingAsync(get, never): Bool;
	public inline extern function get_bSubsteppingAsync(): Bool return this.bSubsteppingAsync;
	public extern var bTickPhysicsAsync(get, never): Bool;
	public inline extern function get_bTickPhysicsAsync(): Bool return this.bTickPhysicsAsync;
	public extern var AsyncFixedTimeStepSize(get, never): ucpp.num.Float32;
	public inline extern function get_AsyncFixedTimeStepSize(): ucpp.num.Float32 return this.AsyncFixedTimeStepSize;
	public extern var MaxSubstepDeltaTime(get, never): ucpp.num.Float32;
	public inline extern function get_MaxSubstepDeltaTime(): ucpp.num.Float32 return this.MaxSubstepDeltaTime;
	public extern var MaxSubsteps(get, never): ucpp.num.Int32;
	public inline extern function get_MaxSubsteps(): ucpp.num.Int32 return this.MaxSubsteps;
	public extern var SyncSceneSmoothingFactor(get, never): ucpp.num.Float32;
	public inline extern function get_SyncSceneSmoothingFactor(): ucpp.num.Float32 return this.SyncSceneSmoothingFactor;
	public extern var InitialAverageFrameRate(get, never): ucpp.num.Float32;
	public inline extern function get_InitialAverageFrameRate(): ucpp.num.Float32 return this.InitialAverageFrameRate;
	public extern var PhysXTreeRebuildRate(get, never): ucpp.num.Int32;
	public inline extern function get_PhysXTreeRebuildRate(): ucpp.num.Int32 return this.PhysXTreeRebuildRate;
	public extern var PhysicalSurfaces(get, never): TArray<PhysicalSurfaceName>;
	public inline extern function get_PhysicalSurfaces(): TArray<PhysicalSurfaceName> return this.PhysicalSurfaces;
	public extern var DefaultBroadphaseSettings(get, never): BroadphaseSettings;
	public inline extern function get_DefaultBroadphaseSettings(): BroadphaseSettings return this.DefaultBroadphaseSettings;
	public extern var MinDeltaVelocityForHitEvents(get, never): ucpp.num.Float32;
	public inline extern function get_MinDeltaVelocityForHitEvents(): ucpp.num.Float32 return this.MinDeltaVelocityForHitEvents;
	public extern var ChaosSettings(get, never): ChaosPhysicsSettings;
	public inline extern function get_ChaosSettings(): ChaosPhysicsSettings return this.ChaosSettings;
}

@:forward
@:nativeGen
@:native("PhysicsSettings*")
abstract PhysicsSettingsPtr(ucpp.Ptr<PhysicsSettings>) from ucpp.Ptr<PhysicsSettings> to ucpp.Ptr<PhysicsSettings>{
	@:from
	public static extern inline function fromValue(v: PhysicsSettings): PhysicsSettingsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PhysicsSettings {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}