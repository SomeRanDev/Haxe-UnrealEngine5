// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimBlueprint")
@:include("Animation/AnimBlueprint.h")
@:structAccess
extern class AnimBlueprint extends Blueprint {
	public var TargetSkeleton: cpp.Star<Skeleton>;
	public var Groups: TArray<AnimGroupInfo>;
	public var bIsTemplate: Bool;
	public var bUseMultiThreadedAnimationUpdate: Bool;
	public var bWarnAboutBlueprintUsage: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimBlueprint(AnimBlueprint) from AnimBlueprint {
	public extern var TargetSkeleton(get, never): cpp.Star<Skeleton.ConstSkeleton>;
	public inline extern function get_TargetSkeleton(): cpp.Star<Skeleton.ConstSkeleton> return this.TargetSkeleton;
	public extern var Groups(get, never): TArray<AnimGroupInfo>;
	public inline extern function get_Groups(): TArray<AnimGroupInfo> return this.Groups;
	public extern var bIsTemplate(get, never): Bool;
	public inline extern function get_bIsTemplate(): Bool return this.bIsTemplate;
	public extern var bUseMultiThreadedAnimationUpdate(get, never): Bool;
	public inline extern function get_bUseMultiThreadedAnimationUpdate(): Bool return this.bUseMultiThreadedAnimationUpdate;
	public extern var bWarnAboutBlueprintUsage(get, never): Bool;
	public inline extern function get_bWarnAboutBlueprintUsage(): Bool return this.bWarnAboutBlueprintUsage;
}

@:forward
@:nativeGen
@:native("AnimBlueprint*")
abstract AnimBlueprintPtr(cpp.Star<AnimBlueprint>) from cpp.Star<AnimBlueprint> to cpp.Star<AnimBlueprint>{
	@:from
	public static extern inline function fromValue(v: AnimBlueprint): AnimBlueprintPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimBlueprint {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}