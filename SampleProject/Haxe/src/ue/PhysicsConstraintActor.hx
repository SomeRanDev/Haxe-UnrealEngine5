// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("APhysicsConstraintActor")
@:include("PhysicsEngine/PhysicsConstraintActor.h")
@:structAccess
extern class PhysicsConstraintActor extends RigidBodyBase {
	public var ConstraintComp: cpp.Star<PhysicsConstraintComp>;
	public var ConstraintActor1_DEPRECATED: cpp.Star<Actor>;
	public var ConstraintActor2_DEPRECATED: cpp.Star<Actor>;
	public var bDisableCollision_DEPRECATED: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstPhysicsConstraintActor(PhysicsConstraintActor) from PhysicsConstraintActor {
	public extern var ConstraintComp(get, never): cpp.Star<PhysicsConstraintComp.ConstPhysicsConstraintComp>;
	public inline extern function get_ConstraintComp(): cpp.Star<PhysicsConstraintComp.ConstPhysicsConstraintComp> return this.ConstraintComp;
	public extern var ConstraintActor1_DEPRECATED(get, never): cpp.Star<Actor.ConstActor>;
	public inline extern function get_ConstraintActor1_DEPRECATED(): cpp.Star<Actor.ConstActor> return this.ConstraintActor1_DEPRECATED;
	public extern var ConstraintActor2_DEPRECATED(get, never): cpp.Star<Actor.ConstActor>;
	public inline extern function get_ConstraintActor2_DEPRECATED(): cpp.Star<Actor.ConstActor> return this.ConstraintActor2_DEPRECATED;
	public extern var bDisableCollision_DEPRECATED(get, never): Bool;
	public inline extern function get_bDisableCollision_DEPRECATED(): Bool return this.bDisableCollision_DEPRECATED;
}

@:forward
@:nativeGen
@:native("PhysicsConstraintActor*")
abstract PhysicsConstraintActorPtr(cpp.Star<PhysicsConstraintActor>) from cpp.Star<PhysicsConstraintActor> to cpp.Star<PhysicsConstraintActor>{
	@:from
	public static extern inline function fromValue(v: PhysicsConstraintActor): PhysicsConstraintActorPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PhysicsConstraintActor {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}