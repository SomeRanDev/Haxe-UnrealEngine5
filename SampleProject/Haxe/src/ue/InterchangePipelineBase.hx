// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangePipelineBase")
@:include("InterchangePipelineBase.h")
@:structAccess
extern class InterchangePipelineBase extends Object {
	@:protected public var Results: cpp.Star<InterchangeResultsContainer>;

	public function ScriptedExecutePreImportPipeline(BaseNodeContainer: cpp.Star<InterchangeBaseNodeContainer>, SourceDatas: cpp.Reference<TArray<cpp.Star<InterchangeSourceData>>>): Bool;
	public function ScriptedExecutePostImportPipeline(BaseNodeContainer: cpp.Star<InterchangeBaseNodeContainer.ConstInterchangeBaseNodeContainer>, NodeKey: FString, CreatedAsset: cpp.Star<Object>, bIsAReimport: Bool): Bool;
	public function ScriptedExecuteExportPipeline(BaseNodeContainer: cpp.Star<InterchangeBaseNodeContainer>): Bool;
	public function ScriptedCanExecuteOnAnyThread(PipelineTask: EInterchangePipelineTask): Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstInterchangePipelineBase(InterchangePipelineBase) from InterchangePipelineBase {
}

@:forward
@:nativeGen
@:native("InterchangePipelineBase*")
abstract InterchangePipelineBasePtr(cpp.Star<InterchangePipelineBase>) from cpp.Star<InterchangePipelineBase> to cpp.Star<InterchangePipelineBase>{
	@:from
	public static extern inline function fromValue(v: InterchangePipelineBase): InterchangePipelineBasePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangePipelineBase {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}