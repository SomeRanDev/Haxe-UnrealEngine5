// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovieSceneAsyncAction_SequencePrediction")
@:include("Systems/MovieScenePredictionSystem.h")
extern class MovieSceneAsyncAction_SequencePrediction extends BlueprintAsyncActionBase {
	public var Result: HaxeMulticastSparseDelegateProperty<(Transform) -> Void>;
	public var Failure: HaxeMulticastSparseDelegateProperty<() -> Void>;
	public var SequencePlayer: cpp.Star<MovieSceneSequencePlayer>;
	public var SceneComponent: cpp.Star<SceneComp>;

	public function PredictWorldTransformAtTime(Player: cpp.Star<MovieSceneSequencePlayer>, TargetComponent: cpp.Star<SceneComp>, TimeInSeconds: cpp.Float32): cpp.Reference<cpp.Star<MovieSceneAsyncAction_SequencePrediction>>;
	public function PredictWorldTransformAtFrame(Player: cpp.Star<MovieSceneSequencePlayer>, TargetComponent: cpp.Star<SceneComp>, FrameTime: FrameTime): cpp.Reference<cpp.Star<MovieSceneAsyncAction_SequencePrediction>>;
	public function PredictLocalTransformAtTime(Player: cpp.Star<MovieSceneSequencePlayer>, TargetComponent: cpp.Star<SceneComp>, TimeInSeconds: cpp.Float32): cpp.Reference<cpp.Star<MovieSceneAsyncAction_SequencePrediction>>;
	public function PredictLocalTransformAtFrame(Player: cpp.Star<MovieSceneSequencePlayer>, TargetComponent: cpp.Star<SceneComp>, FrameTime: FrameTime): cpp.Reference<cpp.Star<MovieSceneAsyncAction_SequencePrediction>>;
}

@:forward()
@:nativeGen
abstract ConstMovieSceneAsyncAction_SequencePrediction(MovieSceneAsyncAction_SequencePrediction) from MovieSceneAsyncAction_SequencePrediction {
	public extern var Result(get, never): HaxeMulticastSparseDelegateProperty<(Transform) -> Void>;
	public inline extern function get_Result(): HaxeMulticastSparseDelegateProperty<(Transform) -> Void> return this.Result;
	public extern var Failure(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_Failure(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.Failure;
	public extern var SequencePlayer(get, never): cpp.Star<MovieSceneSequencePlayer.ConstMovieSceneSequencePlayer>;
	public inline extern function get_SequencePlayer(): cpp.Star<MovieSceneSequencePlayer.ConstMovieSceneSequencePlayer> return this.SequencePlayer;
	public extern var SceneComponent(get, never): cpp.Star<SceneComp.ConstSceneComp>;
	public inline extern function get_SceneComponent(): cpp.Star<SceneComp.ConstSceneComp> return this.SceneComponent;
}