// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULandscapeEditorObject")
@:include("LandscapeEditorObject.h")
extern class ULandscapeEditorObject extends UObject {
	public var ToolStrength: cpp.Float32;
	public var bUseWeightTargetValue: Bool;
	public var WeightTargetValue: cpp.Float32;
	public var MaximumValueRadius: cpp.Float32;
	public var bCombinedLayersOperation: Bool;
	public var FlattenMode: ELandscapeToolFlattenMode;
	public var bUseSlopeFlatten: Bool;
	public var bPickValuePerApply: Bool;
	public var bUseFlattenTarget: Bool;
	public var FlattenTarget: cpp.Float32;
	public var bShowFlattenTargetPreview: Bool;
	public var TerraceInterval: cpp.Float32;
	public var TerraceSmooth: cpp.Float32;
	public var bFlattenEyeDropperModeActivated: Bool;
	public var FlattenEyeDropperModeDesiredTarget: cpp.Float32;
	public var RampWidth: cpp.Float32;
	public var RampSideFalloff: cpp.Float32;
	public var SmoothFilterKernelSize: cpp.Int32;
	public var bDetailSmooth: Bool;
	public var DetailScale: cpp.Float32;
	public var ErodeThresh: cpp.Int32;
	public var ErodeSurfaceThickness: cpp.Int32;
	public var ErodeIterationNum: cpp.Int32;
	public var ErosionNoiseMode: ELandscapeToolErosionMode;
	public var ErosionNoiseScale: cpp.Float32;
	public var RainAmount: cpp.Int32;
	public var SedimentCapacity: cpp.Float32;
	public var HErodeIterationNum: cpp.Int32;
	public var RainDistMode: ELandscapeToolHydroErosionMode;
	public var RainDistScale: cpp.Float32;
	public var bHErosionDetailSmooth: Bool;
	public var HErosionDetailScale: cpp.Float32;
	public var NoiseMode: ELandscapeToolNoiseMode;
	public var NoiseScale: cpp.Float32;
	public var bUseSelectedRegion: Bool;
	public var bUseNegativeMask: Bool;
	public var PasteMode: ELandscapeToolPasteMode;
	public var bApplyToAllTargets: Bool;
	public var bSnapGizmo: Bool;
	public var bSmoothGizmoBrush: Bool;
	public var GizmoHeightmapFilenameString: FString;
	public var GizmoImportSize: FIntPoint;
	public var GizmoImportLayers: TArray<FGizmoImportLayer>;
	public var MirrorPoint: FVector2D;
	public var MirrorOp: ELandscapeMirrorOperation;
	public var MirrorSmoothingWidth: cpp.Int32;
	public var BlueprintBrush: TSubclassOf<ALandscapeBlueprintBrush>;
	public var ResizeLandscape_QuadsPerSection: cpp.Int32;
	public var ResizeLandscape_SectionsPerComponent: cpp.Int32;
	public var ResizeLandscape_ComponentCount: FIntPoint;
	public var ResizeLandscape_ConvertMode: ELandscapeConvertMode;
	public var NewLandscape_Material: TWeakObjectPtr<UMaterialInterface>;
	public var NewLandscape_QuadsPerSection: cpp.Int32;
	public var NewLandscape_SectionsPerComponent: cpp.Int32;
	public var NewLandscape_ComponentCount: FIntPoint;
	public var NewLandscape_Location: FVector;
	public var NewLandscape_Rotation: FRotator;
	public var NewLandscape_Scale: FVector;
	public var ImportLandscape_HeightmapImportResult: ELandscapeImportResult;
	public var ImportLandscape_HeightmapErrorMessage: FText;
	public var ImportLandscape_HeightmapFilename: FString;
	public var ImportLandscape_Width: cpp.UInt32;
	public var ImportLandscape_Height: cpp.UInt32;
	public var HeightmapExportFilename: FString;
	public var ImportLandscape_GizmoLocalPosition: FIntPoint;
	public var ImportType: ELandscapeImportTransformType;
	public var bHeightmapSelected: Bool;
	public var bExportEditLayer: Bool;
	public var HeightmapImportDescriptor: FLandscapeImportDescriptor;
	public var HeightmapImportDescriptorIndex: cpp.Int32;
	public var ImportLandscape_Data: TArray<cpp.UInt16>;
	public var bCanHaveLayersContent: Bool;
	public var bFlipYAxis: Bool;
	public var WorldPartitionGridSize: cpp.UInt32;
	public var ImportLandscape_AlphamapType: ELandscapeImportAlphamapType;
	public var ImportLandscape_Layers: TArray<FLandscapeImportLayer>;
	public var BrushRadius: cpp.Float32;
	public var BrushFalloff: cpp.Float32;
	public var bUseClayBrush: Bool;
	public var AlphaBrushScale: cpp.Float32;
	public var bAlphaBrushAutoRotate: Bool;
	public var AlphaBrushRotation: cpp.Float32;
	public var AlphaBrushPanU: cpp.Float32;
	public var AlphaBrushPanV: cpp.Float32;
	public var bUseWorldSpacePatternBrush: Bool;
	public var WorldSpacePatternBrushSettings: FLandscapePatternBrushWorldSpaceSettings;
	public var AlphaTexture: TObjectPtr<UTexture2D>;
	public var AlphaTextureChannel: EColorChannel;
	public var AlphaTextureSizeX: cpp.Int32;
	public var AlphaTextureSizeY: cpp.Int32;
	public var AlphaTextureData: TArray<cpp.UInt8>;
	public var BrushComponentSize: cpp.Int32;
	public var PaintingRestriction: ELandscapeLayerPaintingRestriction;
	public var TargetDisplayOrder: ELandscapeLayerDisplayMode;
	public var ShowUnusedLayers: Bool;
	public var CurrentLayerIndex: cpp.Int32;
}
