// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDistributionVectorParameterBase")
@:include("Distributions/DistributionVectorParameterBase.h")
@:valueType
extern class DistributionVectorParameterBase extends DistributionVectorConstant {
	public var ParameterName: FName;
	public var MinInput: Vector;
	public var MaxInput: Vector;
	public var MinOutput: Vector;
	public var MaxOutput: Vector;
	public var ParamModes: TEnumAsByte<DistributionParamMode>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstDistributionVectorParameterBase(DistributionVectorParameterBase) from DistributionVectorParameterBase {
	public extern var ParameterName(get, never): FName;
	public inline extern function get_ParameterName(): FName return this.ParameterName;
	public extern var MinInput(get, never): Vector;
	public inline extern function get_MinInput(): Vector return this.MinInput;
	public extern var MaxInput(get, never): Vector;
	public inline extern function get_MaxInput(): Vector return this.MaxInput;
	public extern var MinOutput(get, never): Vector;
	public inline extern function get_MinOutput(): Vector return this.MinOutput;
	public extern var MaxOutput(get, never): Vector;
	public inline extern function get_MaxOutput(): Vector return this.MaxOutput;
	public extern var ParamModes(get, never): TEnumAsByte<DistributionParamMode>;
	public inline extern function get_ParamModes(): TEnumAsByte<DistributionParamMode> return this.ParamModes;
}

@:forward
@:nativeGen
@:native("DistributionVectorParameterBase*")
abstract DistributionVectorParameterBasePtr(ucpp.Ptr<DistributionVectorParameterBase>) from ucpp.Ptr<DistributionVectorParameterBase> to ucpp.Ptr<DistributionVectorParameterBase>{
	@:from
	public static extern inline function fromValue(v: DistributionVectorParameterBase): DistributionVectorParameterBasePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DistributionVectorParameterBase {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}