// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBlackboardData")
@:include("BehaviorTree/BlackboardData.h")
@:structAccess
extern class BlackboardData extends DataAsset {
	public var Parent: cpp.Star<BlackboardData>;
	public var ParentKeys: TArray<BlackboardEntry>;
	public var Keys: TArray<BlackboardEntry>;
	public var bHasSynchronizedKeys: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstBlackboardData(BlackboardData) from BlackboardData {
	public extern var Parent(get, never): cpp.Star<BlackboardData.ConstBlackboardData>;
	public inline extern function get_Parent(): cpp.Star<BlackboardData.ConstBlackboardData> return this.Parent;
	public extern var ParentKeys(get, never): TArray<BlackboardEntry>;
	public inline extern function get_ParentKeys(): TArray<BlackboardEntry> return this.ParentKeys;
	public extern var Keys(get, never): TArray<BlackboardEntry>;
	public inline extern function get_Keys(): TArray<BlackboardEntry> return this.Keys;
	public extern var bHasSynchronizedKeys(get, never): Bool;
	public inline extern function get_bHasSynchronizedKeys(): Bool return this.bHasSynchronizedKeys;
}

@:forward
@:nativeGen
@:native("BlackboardData*")
abstract BlackboardDataPtr(cpp.Star<BlackboardData>) from cpp.Star<BlackboardData> to cpp.Star<BlackboardData>{
	@:from
	public static extern inline function fromValue(v: BlackboardData): BlackboardDataPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): BlackboardData {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}