// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGeometryCollectionComponent")
@:include("GeometryCollection/GeometryCollectionComponent.h")
extern class UGeometryCollectionComponent extends UMeshComponent {
	public var ChaosSolverActor: TObjectPtr<AChaosSolverActor>;
	public var RestCollection: TObjectPtr<UGeometryCollection>;
	public var InitializationFields: TArray<TObjectPtr<AFieldSystemActor>>;
	public var Simulating_DEPRECATED: Bool;
	public var ObjectType: EObjectStateTypeEnum;
	public var bForceMotionBlur: Bool;
	public var EnableClustering: Bool;
	public var ClusterGroupIndex: cpp.Int32;
	public var MaxClusterLevel: cpp.Int32;
	public var DamageThreshold: TArray<cpp.Float32>;
	public var bUseSizeSpecificDamageThreshold: Bool;
	public var ClusterConnectionType_DEPRECATED: EClusterConnectionTypeEnum;
	public var CollisionGroup: cpp.Int32;
	public var CollisionSampleFraction: cpp.Float32;
	public var LinearEtherDrag_DEPRECATED: cpp.Float32;
	public var AngularEtherDrag_DEPRECATED: cpp.Float32;
	public var PhysicalMaterial_DEPRECATED: TObjectPtr<UChaosPhysicalMaterial>;
	public var InitialVelocityType: EInitialVelocityTypeEnum;
	public var InitialLinearVelocity: FVector;
	public var InitialAngularVelocity: FVector;
	public var PhysicalMaterialOverride_DEPRECATED: TObjectPtr<UPhysicalMaterial>;
	public var CacheParameters: FGeomComponentCacheParameters;
	public var RestTransforms: TArray<FTransform>;
	public var NotifyGeometryCollectionPhysicsStateChange: HaxeMulticastSparseDelegateProperty<(cpp.Star<UGeometryCollectionComponent>) -> Void>;
	public var NotifyGeometryCollectionPhysicsLoadingStateChange: HaxeMulticastSparseDelegateProperty<(cpp.Star<UGeometryCollectionComponent>) -> Void>;
	public var OnChaosBreakEvent: HaxeMulticastSparseDelegateProperty<(FChaosBreakEvent) -> Void>;
	public var OnChaosRemovalEvent: HaxeMulticastSparseDelegateProperty<(FChaosRemovalEvent) -> Void>;
	public var DesiredCacheTime: cpp.Float32;
	public var CachePlayback: Bool;
	public var OnChaosPhysicsCollision: HaxeMulticastSparseDelegateProperty<(FChaosPhysicsCollisionInfo) -> Void>;
	public var bNotifyBreaks: Bool;
	public var bNotifyCollisions: Bool;
	public var bNotifyTrailing: Bool;
	public var bNotifyRemovals: Bool;
	public var bStoreVelocities: Bool;
	public var bShowBoneColors: Bool;
	public var bEnableReplication: Bool;
	public var bEnableAbandonAfterLevel: Bool;
	public var ReplicationAbandonClusterLevel: cpp.Int32;
	public var RepData: FGeometryCollectionRepData;
	public var SelectedBones: TArray<cpp.Int32>;
	public var HighlightedBones: TArray<cpp.Int32>;
	public var DummyBodySetup: TObjectPtr<UBodySetup>;
	public var EditorActor: TObjectPtr<AActor>;
	public var EmbeddedGeometryComponents: TArray<TObjectPtr<UInstancedStaticMeshComponent>>;

	public function SetNotifyRemovals(bNewNotifyRemovals: Bool): Void;
	public function SetNotifyBreaks(bNewNotifyBreaks: Bool): Void;
	public function ReceivePhysicsCollision(CollisionInfo: FChaosPhysicsCollisionInfo): Void;
	public function OnRep_RepData(OldData: FGeometryCollectionRepData): Void;
	public function NotifyGeometryCollectionPhysicsStateChange__DelegateSignature(FracturedComponent: cpp.Star<UGeometryCollectionComponent>): Void;
	public function NotifyGeometryCollectionPhysicsLoadingStateChange__DelegateSignature(FracturedComponent: cpp.Star<UGeometryCollectionComponent>): Void;
	public function NetAbandonCluster(TransformIndex: cpp.Int32): Void;
	public function ApplyPhysicsField(Enabled: Bool, Target: EGeometryCollectionPhysicsTypeEnum, MetaData: cpp.Star<UFieldSystemMetaData>, Field: cpp.Star<UFieldNodeBase>): Void;
	public function ApplyKinematicField(Radius: cpp.Float32, Position: FVector): Void;
}
