// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWrapBox")
@:include("Components/WrapBox.h")
@:valueType
extern class WrapBox extends PanelWidget {
	public var InnerSlotPadding: Vector2D;
	public var WrapSize: ucpp.num.Float32;
	public var bExplicitWrapSize: Bool;
	public var HorizontalAlignment: TEnumAsByte<EHorizontalAlignment>;
	public var Orientation: TEnumAsByte<EOrientation>;

	public function SetInnerSlotPadding(InPadding: Vector2D): Void;
	public function SetHorizontalAlignment(InHorizontalAlignment: TEnumAsByte<EHorizontalAlignment>): Void;
	public function AddChildToWrapBox(Content: ucpp.Ptr<Widget>): ucpp.Ptr<WrapBoxSlot>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstWrapBox(WrapBox) from WrapBox {
	public extern var InnerSlotPadding(get, never): Vector2D;
	public inline extern function get_InnerSlotPadding(): Vector2D return this.InnerSlotPadding;
	public extern var WrapSize(get, never): ucpp.num.Float32;
	public inline extern function get_WrapSize(): ucpp.num.Float32 return this.WrapSize;
	public extern var bExplicitWrapSize(get, never): Bool;
	public inline extern function get_bExplicitWrapSize(): Bool return this.bExplicitWrapSize;
	public extern var HorizontalAlignment(get, never): TEnumAsByte<EHorizontalAlignment>;
	public inline extern function get_HorizontalAlignment(): TEnumAsByte<EHorizontalAlignment> return this.HorizontalAlignment;
	public extern var Orientation(get, never): TEnumAsByte<EOrientation>;
	public inline extern function get_Orientation(): TEnumAsByte<EOrientation> return this.Orientation;
}

@:forward
@:nativeGen
@:native("WrapBox*")
abstract WrapBoxPtr(ucpp.Ptr<WrapBox>) from ucpp.Ptr<WrapBox> to ucpp.Ptr<WrapBox>{
	@:from
	public static extern inline function fromValue(v: WrapBox): WrapBoxPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): WrapBox {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}