// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULoudnessNRT")
@:include("LoudnessNRT.h")
@:valueType
extern class LoudnessNRT extends AudioSynesthesiaNRT {
	public var Settings: ucpp.Ptr<LoudnessNRTSettings>;

	public function GetNormalizedLoudnessAtTime(InSeconds: ucpp.num.Float32, OutLoudness: ucpp.Ref<ucpp.num.Float32>): Void;
	public function GetNormalizedChannelLoudnessAtTime(InSeconds: ucpp.num.Float32, InChannel: ucpp.num.Int32, OutLoudness: ucpp.Ref<ucpp.num.Float32>): Void;
	public function GetLoudnessAtTime(InSeconds: ucpp.num.Float32, OutLoudness: ucpp.Ref<ucpp.num.Float32>): Void;
	public function GetChannelLoudnessAtTime(InSeconds: ucpp.num.Float32, InChannel: ucpp.num.Int32, OutLoudness: ucpp.Ref<ucpp.num.Float32>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetNormalizedLoudnessAtTime, GetNormalizedChannelLoudnessAtTime, GetLoudnessAtTime, GetChannelLoudnessAtTime)
@:nativeGen
abstract ConstLoudnessNRT(LoudnessNRT) from LoudnessNRT {
	public extern var Settings(get, never): ucpp.Ptr<LoudnessNRTSettings.ConstLoudnessNRTSettings>;
	public inline extern function get_Settings(): ucpp.Ptr<LoudnessNRTSettings.ConstLoudnessNRTSettings> return this.Settings;
}

@:forward
@:nativeGen
@:native("LoudnessNRT*")
abstract LoudnessNRTPtr(ucpp.Ptr<LoudnessNRT>) from ucpp.Ptr<LoudnessNRT> to ucpp.Ptr<LoudnessNRT>{
	@:from
	public static extern inline function fromValue(v: LoudnessNRT): LoudnessNRTPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LoudnessNRT {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}