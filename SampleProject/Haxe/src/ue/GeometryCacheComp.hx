// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGeometryCacheComponent")
@:include("GeometryCacheComponent.h")
@:valueType
extern class GeometryCacheComp extends MeshComp {
	public var GeometryCache: ucpp.Ptr<GeometryCache>;
	@:protected public var bRunning: Bool;
	@:protected public var bLooping: Bool;
	@:protected public var bExtrapolateFrames: Bool;
	@:protected public var StartTimeOffset: ucpp.num.Float32;
	@:protected public var PlaybackSpeed: ucpp.num.Float32;
	@:protected public var MotionVectorScale: ucpp.num.Float32;
	@:protected public var NumTracks: ucpp.num.Int32;
	@:protected public var ElapsedTime: ucpp.num.Float32;
	@:protected public var Duration: ucpp.num.Float32;
	@:protected public var bManualTick: Bool;
	@:protected public var bOverrideWireframeColor: Bool;
	@:protected public var WireframeOverrideColor: LinearColor;

	public function TickAtThisTime(Time: ucpp.num.Float32, bInIsRunning: Bool, bInBackwards: Bool, bInIsLooping: Bool): Void;
	public function Stop(): Void;
	public function SetWireframeOverrideColor(Color: LinearColor): Void;
	public function SetStartTimeOffset(NewStartTimeOffset: ucpp.num.Float32): Void;
	public function SetPlaybackSpeed(NewPlaybackSpeed: ucpp.num.Float32): Void;
	public function SetOverrideWireframeColor(bOverride: Bool): Void;
	public function SetMotionVectorScale(NewMotionVectorScale: ucpp.num.Float32): Void;
	public function SetLooping(bNewLooping: Bool): Void;
	public function SetGeometryCache(NewGeomCache: ucpp.Ptr<GeometryCache>): Bool;
	public function SetExtrapolateFrames(bNewExtrapolating: Bool): Void;
	public function PlayReversedFromEnd(): Void;
	public function PlayReversed(): Void;
	public function PlayFromStart(): Void;
	public function Play(): Void;
	public function Pause(): Void;
	public function IsPlayingReversed(): Bool;
	public function IsPlaying(): Bool;
	public function IsLooping(): Bool;
	public function IsExtrapolatingFrames(): Bool;
	public function GetWireframeOverrideColor(): LinearColor;
	public function GetStartTimeOffset(): ucpp.num.Float32;
	public function GetPlaybackSpeed(): ucpp.num.Float32;
	public function GetPlaybackDirection(): ucpp.num.Float32;
	public function GetOverrideWireframeColor(): Bool;
	public function GetNumberOfFrames(): ucpp.num.Int32;
	public function GetMotionVectorScale(): ucpp.num.Float32;
	public function GetDuration(): ucpp.num.Float32;
	public function GetAnimationTime(): ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(
	IsPlayingReversed, IsPlaying, IsLooping, IsExtrapolatingFrames, GetWireframeOverrideColor,
	GetStartTimeOffset, GetPlaybackSpeed, GetPlaybackDirection, GetOverrideWireframeColor, GetNumberOfFrames,
	GetMotionVectorScale, GetDuration, GetAnimationTime
)
@:nativeGen
abstract ConstGeometryCacheComp(GeometryCacheComp) from GeometryCacheComp {
	public extern var GeometryCache(get, never): ucpp.Ptr<GeometryCache.ConstGeometryCache>;
	public inline extern function get_GeometryCache(): ucpp.Ptr<GeometryCache.ConstGeometryCache> return this.GeometryCache;
}

@:forward
@:nativeGen
@:native("GeometryCacheComp*")
abstract GeometryCacheCompPtr(ucpp.Ptr<GeometryCacheComp>) from ucpp.Ptr<GeometryCacheComp> to ucpp.Ptr<GeometryCacheComp>{
	@:from
	public static extern inline function fromValue(v: GeometryCacheComp): GeometryCacheCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GeometryCacheComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}