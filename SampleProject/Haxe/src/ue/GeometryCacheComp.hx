// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGeometryCacheComponent")
@:include("GeometryCacheComponent.h")
@:structAccess
extern class GeometryCacheComp extends MeshComp {
	public var GeometryCache: cpp.Star<GeometryCache>;
	public var bRunning: Bool;
	public var bLooping: Bool;
	public var bExtrapolateFrames: Bool;
	public var StartTimeOffset: cpp.Float32;
	public var PlaybackSpeed: cpp.Float32;
	public var MotionVectorScale: cpp.Float32;
	public var NumTracks: cpp.Int32;
	public var ElapsedTime: cpp.Float32;
	public var Duration: cpp.Float32;
	public var bManualTick: Bool;
	public var bOverrideWireframeColor: Bool;
	public var WireframeOverrideColor: LinearColor;

	public function TickAtThisTime(Time: cpp.Float32, bInIsRunning: Bool, bInBackwards: Bool, bInIsLooping: Bool): Void;
	public function Stop(): Void;
	public function SetWireframeOverrideColor(Color: LinearColor): Void;
	public function SetStartTimeOffset(NewStartTimeOffset: cpp.Float32): Void;
	public function SetPlaybackSpeed(NewPlaybackSpeed: cpp.Float32): Void;
	public function SetOverrideWireframeColor(bOverride: Bool): Void;
	public function SetMotionVectorScale(NewMotionVectorScale: cpp.Float32): Void;
	public function SetLooping(bNewLooping: Bool): Void;
	public function SetGeometryCache(NewGeomCache: cpp.Star<GeometryCache>): cpp.Reference<Bool>;
	public function SetExtrapolateFrames(bNewExtrapolating: Bool): Void;
	public function PlayReversedFromEnd(): Void;
	public function PlayReversed(): Void;
	public function PlayFromStart(): Void;
	public function Play(): Void;
	public function Pause(): Void;
	public function IsPlayingReversed(): cpp.Reference<Bool>;
	public function IsPlaying(): cpp.Reference<Bool>;
	public function IsLooping(): cpp.Reference<Bool>;
	public function IsExtrapolatingFrames(): cpp.Reference<Bool>;
	public function GetWireframeOverrideColor(): cpp.Reference<LinearColor>;
	public function GetStartTimeOffset(): cpp.Reference<cpp.Float32>;
	public function GetPlaybackSpeed(): cpp.Reference<cpp.Float32>;
	public function GetPlaybackDirection(): cpp.Reference<cpp.Float32>;
	public function GetOverrideWireframeColor(): cpp.Reference<Bool>;
	public function GetNumberOfFrames(): cpp.Reference<cpp.Int32>;
	public function GetMotionVectorScale(): cpp.Reference<cpp.Float32>;
	public function GetDuration(): cpp.Reference<cpp.Float32>;
	public function GetAnimationTime(): cpp.Reference<cpp.Float32>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	IsPlayingReversed, IsPlaying, IsLooping, IsExtrapolatingFrames, GetWireframeOverrideColor,
	GetStartTimeOffset, GetPlaybackSpeed, GetPlaybackDirection, GetOverrideWireframeColor, GetNumberOfFrames,
	GetMotionVectorScale, GetDuration, GetAnimationTime
)
@:nativeGen
abstract ConstGeometryCacheComp(GeometryCacheComp) from GeometryCacheComp {
	public extern var GeometryCache(get, never): cpp.Star<GeometryCache.ConstGeometryCache>;
	public inline extern function get_GeometryCache(): cpp.Star<GeometryCache.ConstGeometryCache> return this.GeometryCache;
	public extern var bRunning(get, never): Bool;
	public inline extern function get_bRunning(): Bool return this.bRunning;
	public extern var bLooping(get, never): Bool;
	public inline extern function get_bLooping(): Bool return this.bLooping;
	public extern var bExtrapolateFrames(get, never): Bool;
	public inline extern function get_bExtrapolateFrames(): Bool return this.bExtrapolateFrames;
	public extern var StartTimeOffset(get, never): cpp.Float32;
	public inline extern function get_StartTimeOffset(): cpp.Float32 return this.StartTimeOffset;
	public extern var PlaybackSpeed(get, never): cpp.Float32;
	public inline extern function get_PlaybackSpeed(): cpp.Float32 return this.PlaybackSpeed;
	public extern var MotionVectorScale(get, never): cpp.Float32;
	public inline extern function get_MotionVectorScale(): cpp.Float32 return this.MotionVectorScale;
	public extern var NumTracks(get, never): cpp.Int32;
	public inline extern function get_NumTracks(): cpp.Int32 return this.NumTracks;
	public extern var ElapsedTime(get, never): cpp.Float32;
	public inline extern function get_ElapsedTime(): cpp.Float32 return this.ElapsedTime;
	public extern var Duration(get, never): cpp.Float32;
	public inline extern function get_Duration(): cpp.Float32 return this.Duration;
	public extern var bManualTick(get, never): Bool;
	public inline extern function get_bManualTick(): Bool return this.bManualTick;
	public extern var bOverrideWireframeColor(get, never): Bool;
	public inline extern function get_bOverrideWireframeColor(): Bool return this.bOverrideWireframeColor;
	public extern var WireframeOverrideColor(get, never): LinearColor;
	public inline extern function get_WireframeOverrideColor(): LinearColor return this.WireframeOverrideColor;
}