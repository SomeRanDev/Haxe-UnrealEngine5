// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URigVM")
@:include("RigVMCore/RigVM.h")
extern class RigVM extends Object {
	public var WorkMemoryStorageObject: cpp.Star<RigVMMemoryStorage>;
	public var LiteralMemoryStorageObject: cpp.Star<RigVMMemoryStorage>;
	public var DebugMemoryStorageObject: cpp.Star<RigVMMemoryStorage>;
	public var ByteCodeStorage: RigVMByteCode;
	public var Instructions: RigVMInstructionArray;
	public var Context: RigVMExecuteContext;
	public var NumExecutions: cpp.UInt32;
	public var FunctionNamesStorage: TArray<FName>;
	public var Parameters: TArray<RigVMParameter>;
	public var ParametersNameMap: TMap<FName, cpp.Int32>;
	public var DeferredVMToCopy: cpp.Star<RigVM>;

	public function SetParameterValueVector2D(InParameterName: cpp.Reference<FName>, InValue: cpp.Reference<Vector2D>, InArrayIndex: cpp.Int32): Void;
	public function SetParameterValueVector(InParameterName: cpp.Reference<FName>, InValue: cpp.Reference<Vector>, InArrayIndex: cpp.Int32): Void;
	public function SetParameterValueTransform(InParameterName: cpp.Reference<FName>, InValue: cpp.Reference<Transform>, InArrayIndex: cpp.Int32): Void;
	public function SetParameterValueString(InParameterName: cpp.Reference<FName>, InValue: FString, InArrayIndex: cpp.Int32): Void;
	public function SetParameterValueQuat(InParameterName: cpp.Reference<FName>, InValue: cpp.Reference<Quat>, InArrayIndex: cpp.Int32): Void;
	public function SetParameterValueName(InParameterName: cpp.Reference<FName>, InValue: cpp.Reference<FName>, InArrayIndex: cpp.Int32): Void;
	public function SetParameterValueInt(InParameterName: cpp.Reference<FName>, InValue: cpp.Int32, InArrayIndex: cpp.Int32): Void;
	public function SetParameterValueFloat(InParameterName: cpp.Reference<FName>, InValue: cpp.Float32, InArrayIndex: cpp.Int32): Void;
	public function SetParameterValueDouble(InParameterName: cpp.Reference<FName>, InValue: cpp.Float64, InArrayIndex: cpp.Int32): Void;
	public function SetParameterValueBool(InParameterName: cpp.Reference<FName>, InValue: Bool, InArrayIndex: cpp.Int32): Void;
	public function GetStatistics(): cpp.Reference<RigVMStatistics>;
	public function GetRigVMFunctionName(InFunctionIndex: cpp.Int32): cpp.Reference<FString>;
	public function GetParameterValueVector2D(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<Vector2D>;
	public function GetParameterValueVector(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<Vector>;
	public function GetParameterValueTransform(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<Transform>;
	public function GetParameterValueString(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<FString>;
	public function GetParameterValueQuat(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<Quat>;
	public function GetParameterValueName(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<FName>;
	public function GetParameterValueInt(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<cpp.Int32>;
	public function GetParameterValueFloat(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<cpp.Float32>;
	public function GetParameterValueDouble(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<cpp.Float64>;
	public function GetParameterValueBool(InParameterName: cpp.Reference<FName>, InArrayIndex: cpp.Int32): cpp.Reference<Bool>;
	public function Execute(InEntryName: cpp.Reference<FName>): cpp.Reference<Bool>;
	public function AddRigVMFunction(InRigVMStruct: cpp.Star<ScriptStruct>, InMethodName: cpp.Reference<FName>): cpp.Reference<cpp.Int32>;
}

@:forward(GetStatistics, GetRigVMFunctionName)
@:nativeGen
abstract ConstRigVM(RigVM) from RigVM {
	public extern var WorkMemoryStorageObject(get, never): cpp.Star<RigVMMemoryStorage.ConstRigVMMemoryStorage>;
	public inline extern function get_WorkMemoryStorageObject(): cpp.Star<RigVMMemoryStorage.ConstRigVMMemoryStorage> return this.WorkMemoryStorageObject;
	public extern var LiteralMemoryStorageObject(get, never): cpp.Star<RigVMMemoryStorage.ConstRigVMMemoryStorage>;
	public inline extern function get_LiteralMemoryStorageObject(): cpp.Star<RigVMMemoryStorage.ConstRigVMMemoryStorage> return this.LiteralMemoryStorageObject;
	public extern var DebugMemoryStorageObject(get, never): cpp.Star<RigVMMemoryStorage.ConstRigVMMemoryStorage>;
	public inline extern function get_DebugMemoryStorageObject(): cpp.Star<RigVMMemoryStorage.ConstRigVMMemoryStorage> return this.DebugMemoryStorageObject;
	public extern var ByteCodeStorage(get, never): RigVMByteCode;
	public inline extern function get_ByteCodeStorage(): RigVMByteCode return this.ByteCodeStorage;
	public extern var Instructions(get, never): RigVMInstructionArray;
	public inline extern function get_Instructions(): RigVMInstructionArray return this.Instructions;
	public extern var Context(get, never): RigVMExecuteContext;
	public inline extern function get_Context(): RigVMExecuteContext return this.Context;
	public extern var NumExecutions(get, never): cpp.UInt32;
	public inline extern function get_NumExecutions(): cpp.UInt32 return this.NumExecutions;
	public extern var FunctionNamesStorage(get, never): TArray<FName>;
	public inline extern function get_FunctionNamesStorage(): TArray<FName> return this.FunctionNamesStorage;
	public extern var Parameters(get, never): TArray<RigVMParameter>;
	public inline extern function get_Parameters(): TArray<RigVMParameter> return this.Parameters;
	public extern var ParametersNameMap(get, never): TMap<FName, cpp.Int32>;
	public inline extern function get_ParametersNameMap(): TMap<FName, cpp.Int32> return this.ParametersNameMap;
	public extern var DeferredVMToCopy(get, never): cpp.Star<RigVM.ConstRigVM>;
	public inline extern function get_DeferredVMToCopy(): cpp.Star<RigVM.ConstRigVM> return this.DeferredVMToCopy;
}