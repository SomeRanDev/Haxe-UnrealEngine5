// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UARPlaneGeometry")
@:include("ARTrackable.h")
@:structAccess
extern class ARPlaneGeometry extends ARTrackedGeometry {
	private var Orientation: EARPlaneOrientation;
	private var Center: Vector;
	private var Extent: Vector;
	private var BoundaryPolygon: TArray<Vector>;
	private var SubsumedBy: cpp.Star<ARPlaneGeometry>;

	public function GetSubsumedBy(): cpp.Star<ARPlaneGeometry>;
	public function GetOrientation(): EARPlaneOrientation;
	public function GetExtent(): Vector;
	public function GetCenter(): Vector;
	public function GetBoundaryPolygonInLocalSpace(): TArray<Vector>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetSubsumedBy, GetOrientation, GetExtent, GetCenter, GetBoundaryPolygonInLocalSpace)
@:nativeGen
abstract ConstARPlaneGeometry(ARPlaneGeometry) from ARPlaneGeometry {
}

@:forward
@:nativeGen
@:native("ARPlaneGeometry*")
abstract ARPlaneGeometryPtr(cpp.Star<ARPlaneGeometry>) from cpp.Star<ARPlaneGeometry> to cpp.Star<ARPlaneGeometry>{
	@:from
	public static extern inline function fromValue(v: ARPlaneGeometry): ARPlaneGeometryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ARPlaneGeometry {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}