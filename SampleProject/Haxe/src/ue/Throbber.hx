// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UThrobber")
@:include("Components/Throbber.h")
@:structAccess
extern class Throbber extends Widget {
	public var NumberOfPieces: cpp.Int32;
	public var bAnimateHorizontally: Bool;
	public var bAnimateVertically: Bool;
	public var bAnimateOpacity: Bool;
	public var PieceImage_DEPRECATED: cpp.Star<SlateBrushAsset>;
	public var Image: SlateBrush;

	public function SetNumberOfPieces(InNumberOfPieces: cpp.Int32): Void;
	public function SetAnimateVertically(bInAnimateVertically: Bool): Void;
	public function SetAnimateOpacity(bInAnimateOpacity: Bool): Void;
	public function SetAnimateHorizontally(bInAnimateHorizontally: Bool): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstThrobber(Throbber) from Throbber {
	public extern var NumberOfPieces(get, never): cpp.Int32;
	public inline extern function get_NumberOfPieces(): cpp.Int32 return this.NumberOfPieces;
	public extern var bAnimateHorizontally(get, never): Bool;
	public inline extern function get_bAnimateHorizontally(): Bool return this.bAnimateHorizontally;
	public extern var bAnimateVertically(get, never): Bool;
	public inline extern function get_bAnimateVertically(): Bool return this.bAnimateVertically;
	public extern var bAnimateOpacity(get, never): Bool;
	public inline extern function get_bAnimateOpacity(): Bool return this.bAnimateOpacity;
	public extern var PieceImage_DEPRECATED(get, never): cpp.Star<SlateBrushAsset.ConstSlateBrushAsset>;
	public inline extern function get_PieceImage_DEPRECATED(): cpp.Star<SlateBrushAsset.ConstSlateBrushAsset> return this.PieceImage_DEPRECATED;
	public extern var Image(get, never): SlateBrush;
	public inline extern function get_Image(): SlateBrush return this.Image;
}

@:forward
@:nativeGen
@:native("Throbber*")
abstract ThrobberPtr(cpp.Star<Throbber>) from cpp.Star<Throbber> to cpp.Star<Throbber>{
	@:from
	public static extern inline function fromValue(v: Throbber): ThrobberPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): Throbber {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}