// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UScrollBox")
@:include("Components/ScrollBox.h")
@:valueType
extern class ScrollBox extends PanelWidget {
	public var WidgetStyle: ScrollBoxStyle;
	public var WidgetBarStyle: ScrollBarStyle;
	public var Orientation: TEnumAsByte<EOrientation>;
	public var ScrollBarVisibility: ESlateVisibility;
	public var ConsumeMouseWheel: EConsumeMouseWheel;
	public var ScrollbarThickness: Vector2D;
	public var ScrollbarPadding: Margin;
	public var AlwaysShowScrollbar: Bool;
	public var AlwaysShowScrollbarTrack: Bool;
	public var AllowOverscroll: Bool;
	public var BackPadScrolling: Bool;
	public var FrontPadScrolling: Bool;
	public var bAnimateWheelScrolling: Bool;
	public var NavigationDestination: EDescendantScrollDestination;
	public var NavigationScrollPadding: ucpp.num.Float32;
	public var ScrollWhenFocusChanges: EScrollWhenFocusChanges;
	public var bAllowRightClickDragScrolling: Bool;
	public var WheelScrollMultiplier: ucpp.num.Float32;
	public var OnUserScrolled: HaxeMulticastSparseDelegateProperty<(ucpp.num.Float32) -> Void>;

	public function SetWheelScrollMultiplier(NewWheelScrollMultiplier: ucpp.num.Float32): Void;
	public function SetScrollWhenFocusChanges(NewScrollWhenFocusChanges: EScrollWhenFocusChanges): Void;
	public function SetScrollOffset(NewScrollOffset: ucpp.num.Float32): Void;
	public function SetScrollBarVisibility(NewScrollBarVisibility: ESlateVisibility): Void;
	public function SetScrollbarThickness(NewScrollbarThickness: ucpp.Ref<Vector2D>): Void;
	public function SetScrollbarPadding(NewScrollbarPadding: ucpp.Ref<Margin>): Void;
	public function SetOrientation(NewOrientation: TEnumAsByte<EOrientation>): Void;
	public function SetNavigationDestination(NewNavigationDestination: EDescendantScrollDestination): Void;
	public function SetConsumeMouseWheel(NewConsumeMouseWheel: EConsumeMouseWheel): Void;
	public function SetAnimateWheelScrolling(bShouldAnimateWheelScrolling: Bool): Void;
	public function SetAlwaysShowScrollbar(NewAlwaysShowScrollbar: Bool): Void;
	public function SetAllowOverscroll(NewAllowOverscroll: Bool): Void;
	public function ScrollWidgetIntoView(WidgetToFind: ucpp.Ptr<Widget>, AnimateScroll: Bool, ScrollDestination: EDescendantScrollDestination, Padding: ucpp.num.Float32): Void;
	public function ScrollToStart(): Void;
	public function ScrollToEnd(): Void;
	public function GetViewOffsetFraction(): ucpp.num.Float32;
	public function GetViewFraction(): ucpp.num.Float32;
	public function GetScrollOffsetOfEnd(): ucpp.num.Float32;
	public function GetScrollOffset(): ucpp.num.Float32;
	public function EndInertialScrolling(): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetViewOffsetFraction, GetViewFraction, GetScrollOffsetOfEnd, GetScrollOffset)
@:nativeGen
abstract ConstScrollBox(ScrollBox) from ScrollBox {
	public extern var WidgetStyle(get, never): ScrollBoxStyle;
	public inline extern function get_WidgetStyle(): ScrollBoxStyle return this.WidgetStyle;
	public extern var WidgetBarStyle(get, never): ScrollBarStyle;
	public inline extern function get_WidgetBarStyle(): ScrollBarStyle return this.WidgetBarStyle;
	public extern var Orientation(get, never): TEnumAsByte<EOrientation>;
	public inline extern function get_Orientation(): TEnumAsByte<EOrientation> return this.Orientation;
	public extern var ScrollBarVisibility(get, never): ESlateVisibility;
	public inline extern function get_ScrollBarVisibility(): ESlateVisibility return this.ScrollBarVisibility;
	public extern var ConsumeMouseWheel(get, never): EConsumeMouseWheel;
	public inline extern function get_ConsumeMouseWheel(): EConsumeMouseWheel return this.ConsumeMouseWheel;
	public extern var ScrollbarThickness(get, never): Vector2D;
	public inline extern function get_ScrollbarThickness(): Vector2D return this.ScrollbarThickness;
	public extern var ScrollbarPadding(get, never): Margin;
	public inline extern function get_ScrollbarPadding(): Margin return this.ScrollbarPadding;
	public extern var AlwaysShowScrollbar(get, never): Bool;
	public inline extern function get_AlwaysShowScrollbar(): Bool return this.AlwaysShowScrollbar;
	public extern var AlwaysShowScrollbarTrack(get, never): Bool;
	public inline extern function get_AlwaysShowScrollbarTrack(): Bool return this.AlwaysShowScrollbarTrack;
	public extern var AllowOverscroll(get, never): Bool;
	public inline extern function get_AllowOverscroll(): Bool return this.AllowOverscroll;
	public extern var BackPadScrolling(get, never): Bool;
	public inline extern function get_BackPadScrolling(): Bool return this.BackPadScrolling;
	public extern var FrontPadScrolling(get, never): Bool;
	public inline extern function get_FrontPadScrolling(): Bool return this.FrontPadScrolling;
	public extern var bAnimateWheelScrolling(get, never): Bool;
	public inline extern function get_bAnimateWheelScrolling(): Bool return this.bAnimateWheelScrolling;
	public extern var NavigationDestination(get, never): EDescendantScrollDestination;
	public inline extern function get_NavigationDestination(): EDescendantScrollDestination return this.NavigationDestination;
	public extern var NavigationScrollPadding(get, never): ucpp.num.Float32;
	public inline extern function get_NavigationScrollPadding(): ucpp.num.Float32 return this.NavigationScrollPadding;
	public extern var ScrollWhenFocusChanges(get, never): EScrollWhenFocusChanges;
	public inline extern function get_ScrollWhenFocusChanges(): EScrollWhenFocusChanges return this.ScrollWhenFocusChanges;
	public extern var bAllowRightClickDragScrolling(get, never): Bool;
	public inline extern function get_bAllowRightClickDragScrolling(): Bool return this.bAllowRightClickDragScrolling;
	public extern var WheelScrollMultiplier(get, never): ucpp.num.Float32;
	public inline extern function get_WheelScrollMultiplier(): ucpp.num.Float32 return this.WheelScrollMultiplier;
	public extern var OnUserScrolled(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.num.Float32) -> Void>;
	public inline extern function get_OnUserScrolled(): HaxeMulticastSparseDelegateProperty<(ucpp.num.Float32) -> Void> return this.OnUserScrolled;
}

@:forward
@:nativeGen
@:native("ScrollBox*")
abstract ScrollBoxPtr(ucpp.Ptr<ScrollBox>) from ucpp.Ptr<ScrollBox> to ucpp.Ptr<ScrollBox>{
	@:from
	public static extern inline function fromValue(v: ScrollBox): ScrollBoxPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ScrollBox {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}