// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UControlRig")
@:include("ControlRig.h")
@:valueType
extern class ControlRig extends RigVMHost {
	public var ExecutionType: ERigExecutionType;
	public var HierarchySettings: RigHierarchySettings;
	@:protected public var ControlCustomizations: TMap<RigElementKey, RigControlElementCustomization>;
	@:protected public var DynamicHierarchy: ucpp.Ptr<RigHierarchy>;
	@:protected public var ShapeLibraries: TArray<TSoftObjectPtr<ControlRigShapeLibrary>>;
	private var DataSourceRegistry: ucpp.Ptr<AnimationDataSourceRegistry>;
	private var Influences: RigInfluenceMapPerEvent;
	public function GetInteractionRig(): ucpp.Ptr<ControlRig>;
	public function SetInteractionRig(input: ucpp.Ptr<ControlRig>): Void;
	public function GetInteractionRigClass(): TSubclassOf<ControlRig>;
	public function SetInteractionRigClass(input: TSubclassOf<ControlRig>): Void;
	@:protected public var OnControlSelected_BP: HaxeMulticastSparseDelegateProperty<(ucpp.Ptr<ControlRig>, ucpp.Ref<RigControlElement>, Bool) -> Void>;

	public function SelectControl(InControlName: ucpp.Ref<FName>, bSelect: Bool): Void;
	public function RequestConstruction(): Void;
	public function OnControlSelectedBP__DelegateSignature(Rig: ucpp.Ptr<ControlRig>, Control: ucpp.Ref<RigControlElement>, bSelected: Bool): Void;
	public function IsControlSelected(InControlName: ucpp.Ref<FName>): Bool;
	public function GetHostingActor(): ucpp.Ptr<Actor>;
	public function GetHierarchy(): ucpp.Ptr<RigHierarchy>;
	public function FindControlRigs(Outer: ucpp.Ptr<Object>, OptionalClass: TSubclassOf<ControlRig>): TArray<ucpp.Ptr<ControlRig>>;
	public function CurrentControlSelection(): TArray<FName>;
	public function CreateTransformableControlHandle(Outer: ucpp.Ptr<Object>, ControlName: ucpp.Ref<FName>): ucpp.Ptr<TransformableControlHandle>;
	public function ClearControlSelection(): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsControlSelected, GetHostingActor, CurrentControlSelection, CreateTransformableControlHandle)
@:nativeGen
abstract ConstControlRig(ControlRig) from ControlRig {
	public extern var ExecutionType(get, never): ERigExecutionType;
	public inline extern function get_ExecutionType(): ERigExecutionType return this.ExecutionType;
	public extern var HierarchySettings(get, never): RigHierarchySettings;
	public inline extern function get_HierarchySettings(): RigHierarchySettings return this.HierarchySettings;
}

@:forward
@:nativeGen
@:native("ControlRig*")
abstract ControlRigPtr(ucpp.Ptr<ControlRig>) from ucpp.Ptr<ControlRig> to ucpp.Ptr<ControlRig>{
	@:from
	public static extern inline function fromValue(v: ControlRig): ControlRigPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ControlRig {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}