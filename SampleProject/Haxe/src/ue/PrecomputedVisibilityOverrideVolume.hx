// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("APrecomputedVisibilityOverrideVolume")
@:include("Lightmass/PrecomputedVisibilityOverrideVolume.h")
@:valueType
extern class PrecomputedVisibilityOverrideVolume extends Volume {
	public var OverrideVisibleActors: TArray<ucpp.Ptr<Actor>>;
	public var OverrideInvisibleActors: TArray<ucpp.Ptr<Actor>>;
	public var OverrideInvisibleLevels: TArray<FName>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPrecomputedVisibilityOverrideVolume(PrecomputedVisibilityOverrideVolume) from PrecomputedVisibilityOverrideVolume {
	public extern var OverrideVisibleActors(get, never): TArray<ucpp.Ptr<Actor.ConstActor>>;
	public inline extern function get_OverrideVisibleActors(): TArray<ucpp.Ptr<Actor.ConstActor>> return this.OverrideVisibleActors;
	public extern var OverrideInvisibleActors(get, never): TArray<ucpp.Ptr<Actor.ConstActor>>;
	public inline extern function get_OverrideInvisibleActors(): TArray<ucpp.Ptr<Actor.ConstActor>> return this.OverrideInvisibleActors;
	public extern var OverrideInvisibleLevels(get, never): TArray<FName>;
	public inline extern function get_OverrideInvisibleLevels(): TArray<FName> return this.OverrideInvisibleLevels;
}

@:forward
@:nativeGen
@:native("PrecomputedVisibilityOverrideVolume*")
abstract PrecomputedVisibilityOverrideVolumePtr(ucpp.Ptr<PrecomputedVisibilityOverrideVolume>) from ucpp.Ptr<PrecomputedVisibilityOverrideVolume> to ucpp.Ptr<PrecomputedVisibilityOverrideVolume>{
	@:from
	public static extern inline function fromValue(v: PrecomputedVisibilityOverrideVolume): PrecomputedVisibilityOverrideVolumePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PrecomputedVisibilityOverrideVolume {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}