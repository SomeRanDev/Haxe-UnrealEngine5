// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USequenceEvaluatorLibrary")
@:include("SequenceEvaluatorLibrary.h")
extern class USequenceEvaluatorLibrary extends UBlueprintFunctionLibrary {

	public function SetSequenceWithInertialBlending(UpdateContext: FAnimUpdateContext, SequenceEvaluator: FSequenceEvaluatorReference, Sequence: cpp.Star<UAnimSequenceBase>, BlendTime: cpp.Float32): FSequenceEvaluatorReference;
	public function SetSequence(SequenceEvaluator: FSequenceEvaluatorReference, Sequence: cpp.Star<UAnimSequenceBase>): FSequenceEvaluatorReference;
	public function SetExplicitTime(SequenceEvaluator: FSequenceEvaluatorReference, Time: cpp.Float32): FSequenceEvaluatorReference;
	public function GetSequence(SequenceEvaluator: FSequenceEvaluatorReference): cpp.Star<UAnimSequenceBase>;
	public function GetAccumulatedTime(SequenceEvaluator: FSequenceEvaluatorReference): cpp.Float32;
	public function ConvertToSequenceEvaluatorPure(Node: FAnimNodeReference, SequenceEvaluator: FSequenceEvaluatorReference, Result: Bool): Void;
	public function ConvertToSequenceEvaluator(Node: FAnimNodeReference, Result: EAnimNodeReferenceConversionResult): FSequenceEvaluatorReference;
	public function AdvanceTime(UpdateContext: FAnimUpdateContext, SequenceEvaluator: FSequenceEvaluatorReference, PlayRate: cpp.Float32): FSequenceEvaluatorReference;
}
