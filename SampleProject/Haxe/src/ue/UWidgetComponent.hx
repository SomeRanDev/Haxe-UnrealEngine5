// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWidgetComponent")
@:include("Components/WidgetComponent.h")
extern class UWidgetComponent extends UMeshComponent {
	public var Space: EWidgetSpace;
	public var TimingPolicy: EWidgetTimingPolicy;
	public var WidgetClass: TSubclassOf<UUserWidget>;
	public var DrawSize: FIntPoint;
	public var bManuallyRedraw: Bool;
	public var bRedrawRequested: Bool;
	public var RedrawTime: cpp.Float32;
	public var CurrentDrawSize: FIntPoint;
	public var bDrawAtDesiredSize: Bool;
	public var Pivot: FVector2D;
	public var bReceiveHardwareInput: Bool;
	public var bWindowFocusable: Bool;
	public var WindowVisibility: EWindowVisibility;
	public var bApplyGammaCorrection: Bool;
	public var OwnerPlayer: TObjectPtr<ULocalPlayer>;
	public var BackgroundColor: FLinearColor;
	public var TintColorAndOpacity: FLinearColor;
	public var OpacityFromTexture: cpp.Float32;
	public var BlendMode: EWidgetBlendMode;
	public var bIsTwoSided: Bool;
	public var TickWhenOffscreen: Bool;
	public var BodySetup: TObjectPtr<UBodySetup>;
	public var TranslucentMaterial: TObjectPtr<UMaterialInterface>;
	public var TranslucentMaterial_OneSided: TObjectPtr<UMaterialInterface>;
	public var OpaqueMaterial: TObjectPtr<UMaterialInterface>;
	public var OpaqueMaterial_OneSided: TObjectPtr<UMaterialInterface>;
	public var MaskedMaterial: TObjectPtr<UMaterialInterface>;
	public var MaskedMaterial_OneSided: TObjectPtr<UMaterialInterface>;
	public var RenderTarget: TObjectPtr<UTextureRenderTarget2D>;
	public var MaterialInstance: TObjectPtr<UMaterialInstanceDynamic>;
	public var bAddedToScreen: Bool;
	public var bEditTimeUsable: Bool;
	public var SharedLayerName: FName;
	public var LayerZOrder: cpp.Int32;
	public var GeometryMode: EWidgetGeometryMode;
	public var CylinderArcAngle: cpp.Float32;
	public var TickMode: ETickMode;
	public var Widget: TObjectPtr<UUserWidget>;

	public function SetWindowVisibility(InVisibility: EWindowVisibility): Void;
	public function SetWindowFocusable(bInWindowFocusable: Bool): Void;
	public function SetWidgetSpace(NewSpace: EWidgetSpace): Void;
	public function SetWidget(Widget: cpp.Star<UUserWidget>): Void;
	public function SetTwoSided(bWantTwoSided: Bool): Void;
	public function SetTintColorAndOpacity(NewTintColorAndOpacity: FLinearColor): Void;
	public function SetTickWhenOffscreen(bWantTickWhenOffscreen: Bool): Void;
	public function SetTickMode(InTickMode: ETickMode): Void;
	public function SetRedrawTime(InRedrawTime: cpp.Float32): Void;
	public function SetPivot(InPivot: FVector2D): Void;
	public function SetOwnerPlayer(LocalPlayer: cpp.Star<ULocalPlayer>): Void;
	public function SetManuallyRedraw(bUseManualRedraw: Bool): Void;
	public function SetGeometryMode(InGeometryMode: EWidgetGeometryMode): Void;
	public function SetDrawSize(Size: FVector2D): Void;
	public function SetDrawAtDesiredSize(bInDrawAtDesiredSize: Bool): Void;
	public function SetCylinderArcAngle(InCylinderArcAngle: cpp.Float32): Void;
	public function SetBackgroundColor(NewBackgroundColor: FLinearColor): Void;
	public function RequestRenderUpdate(): Void;
	public function RequestRedraw(): Void;
	public function IsWidgetVisible(): Bool;
	public function GetWindowVisiblility(): EWindowVisibility;
	public function GetWindowFocusable(): Bool;
	public function GetWidgetSpace(): EWidgetSpace;
	public function GetWidget(): cpp.Star<UUserWidget>;
	public function GetUserWidgetObject(): cpp.Star<UUserWidget>;
	public function GetTwoSided(): Bool;
	public function GetTickWhenOffscreen(): Bool;
	public function GetRenderTarget(): cpp.Star<UTextureRenderTarget2D>;
	public function GetRedrawTime(): cpp.Float32;
	public function GetPivot(): FVector2D;
	public function GetOwnerPlayer(): cpp.Star<ULocalPlayer>;
	public function GetMaterialInstance(): cpp.Star<UMaterialInstanceDynamic>;
	public function GetManuallyRedraw(): Bool;
	public function GetGeometryMode(): EWidgetGeometryMode;
	public function GetDrawSize(): FVector2D;
	public function GetDrawAtDesiredSize(): Bool;
	public function GetCylinderArcAngle(): cpp.Float32;
	public function GetCurrentDrawSize(): FVector2D;
}
