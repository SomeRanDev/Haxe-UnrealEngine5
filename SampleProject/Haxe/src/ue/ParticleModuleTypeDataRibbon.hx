// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UParticleModuleTypeDataRibbon")
@:include("Particles/TypeData/ParticleModuleTypeDataRibbon.h")
@:valueType
extern class ParticleModuleTypeDataRibbon extends ParticleModuleTypeDataBase {
	public var MaxTessellationBetweenParticles: ucpp.num.Int32;
	public var SheetsPerTrail: ucpp.num.Int32;
	public var MaxTrailCount: ucpp.num.Int32;
	public var MaxParticleInTrailCount: ucpp.num.Int32;
	public var bDeadTrailsOnDeactivate: Bool;
	public var bDeadTrailsOnSourceLoss: Bool;
	public var bClipSourceSegement: Bool;
	public var bEnablePreviousTangentRecalculation: Bool;
	public var bTangentRecalculationEveryFrame: Bool;
	public var bSpawnInitialParticle: Bool;
	public var RenderAxis: TEnumAsByte<ETrailsRenderAxisOption>;
	public var TangentSpawningScalar: ucpp.num.Float32;
	public var bRenderGeometry: Bool;
	public var bRenderSpawnPoints: Bool;
	public var bRenderTangents: Bool;
	public var bRenderTessellation: Bool;
	public var TilingDistance: ucpp.num.Float32;
	public var DistanceTessellationStepSize: ucpp.num.Float32;
	public var bEnableTangentDiffInterpScale: Bool;
	public var TangentTessellationScalar: ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstParticleModuleTypeDataRibbon(ParticleModuleTypeDataRibbon) from ParticleModuleTypeDataRibbon {
	public extern var MaxTessellationBetweenParticles(get, never): ucpp.num.Int32;
	public inline extern function get_MaxTessellationBetweenParticles(): ucpp.num.Int32 return this.MaxTessellationBetweenParticles;
	public extern var SheetsPerTrail(get, never): ucpp.num.Int32;
	public inline extern function get_SheetsPerTrail(): ucpp.num.Int32 return this.SheetsPerTrail;
	public extern var MaxTrailCount(get, never): ucpp.num.Int32;
	public inline extern function get_MaxTrailCount(): ucpp.num.Int32 return this.MaxTrailCount;
	public extern var MaxParticleInTrailCount(get, never): ucpp.num.Int32;
	public inline extern function get_MaxParticleInTrailCount(): ucpp.num.Int32 return this.MaxParticleInTrailCount;
	public extern var bDeadTrailsOnDeactivate(get, never): Bool;
	public inline extern function get_bDeadTrailsOnDeactivate(): Bool return this.bDeadTrailsOnDeactivate;
	public extern var bDeadTrailsOnSourceLoss(get, never): Bool;
	public inline extern function get_bDeadTrailsOnSourceLoss(): Bool return this.bDeadTrailsOnSourceLoss;
	public extern var bClipSourceSegement(get, never): Bool;
	public inline extern function get_bClipSourceSegement(): Bool return this.bClipSourceSegement;
	public extern var bEnablePreviousTangentRecalculation(get, never): Bool;
	public inline extern function get_bEnablePreviousTangentRecalculation(): Bool return this.bEnablePreviousTangentRecalculation;
	public extern var bTangentRecalculationEveryFrame(get, never): Bool;
	public inline extern function get_bTangentRecalculationEveryFrame(): Bool return this.bTangentRecalculationEveryFrame;
	public extern var bSpawnInitialParticle(get, never): Bool;
	public inline extern function get_bSpawnInitialParticle(): Bool return this.bSpawnInitialParticle;
	public extern var RenderAxis(get, never): TEnumAsByte<ETrailsRenderAxisOption>;
	public inline extern function get_RenderAxis(): TEnumAsByte<ETrailsRenderAxisOption> return this.RenderAxis;
	public extern var TangentSpawningScalar(get, never): ucpp.num.Float32;
	public inline extern function get_TangentSpawningScalar(): ucpp.num.Float32 return this.TangentSpawningScalar;
	public extern var bRenderGeometry(get, never): Bool;
	public inline extern function get_bRenderGeometry(): Bool return this.bRenderGeometry;
	public extern var bRenderSpawnPoints(get, never): Bool;
	public inline extern function get_bRenderSpawnPoints(): Bool return this.bRenderSpawnPoints;
	public extern var bRenderTangents(get, never): Bool;
	public inline extern function get_bRenderTangents(): Bool return this.bRenderTangents;
	public extern var bRenderTessellation(get, never): Bool;
	public inline extern function get_bRenderTessellation(): Bool return this.bRenderTessellation;
	public extern var TilingDistance(get, never): ucpp.num.Float32;
	public inline extern function get_TilingDistance(): ucpp.num.Float32 return this.TilingDistance;
	public extern var DistanceTessellationStepSize(get, never): ucpp.num.Float32;
	public inline extern function get_DistanceTessellationStepSize(): ucpp.num.Float32 return this.DistanceTessellationStepSize;
	public extern var bEnableTangentDiffInterpScale(get, never): Bool;
	public inline extern function get_bEnableTangentDiffInterpScale(): Bool return this.bEnableTangentDiffInterpScale;
	public extern var TangentTessellationScalar(get, never): ucpp.num.Float32;
	public inline extern function get_TangentTessellationScalar(): ucpp.num.Float32 return this.TangentTessellationScalar;
}

@:forward
@:nativeGen
@:native("ParticleModuleTypeDataRibbon*")
abstract ParticleModuleTypeDataRibbonPtr(ucpp.Ptr<ParticleModuleTypeDataRibbon>) from ucpp.Ptr<ParticleModuleTypeDataRibbon> to ucpp.Ptr<ParticleModuleTypeDataRibbon>{
	@:from
	public static extern inline function fromValue(v: ParticleModuleTypeDataRibbon): ParticleModuleTypeDataRibbonPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ParticleModuleTypeDataRibbon {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}