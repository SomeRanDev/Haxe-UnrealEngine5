// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USplineComponent")
@:include("Components/SplineComponent.h")
extern class SplineComComp extends PrimitiveComp {
	public var SplineCurves: FSplineCurves;
	public var SplineInfo_DEPRECATED: FInterpCurveVector;
	public var SplineRotInfo_DEPRECATED: FInterpCurveQuat;
	public var SplineScaleInfo_DEPRECATED: FInterpCurveVector;
	public var SplineReparamTable_DEPRECATED: FInterpCurveFloat;
	public var bAllowSplineEditingPerInstance_DEPRECATED: Bool;
	public var ReparamStepsPerSegment: cpp.Int32;
	public var Duration: cpp.Float32;
	public var bStationaryEndpoints: Bool;
	public var bSplineHasBeenEdited: Bool;
	public var bModifiedByConstructionScript: Bool;
	public var bInputSplinePointsToConstructionScript: Bool;
	public var bDrawDebug: Bool;
	public var bClosedLoop: Bool;
	public var bLoopPositionOverride: Bool;
	public var LoopPosition: cpp.Float32;
	public var DefaultUpVector: FVector;
	public var EditorUnselectedSplineSegmentColor: FLinearColor;
	public var EditorSelectedSplineSegmentColor: FLinearColor;
	public var EditorTangentColor: FLinearColor;
	public var bAllowDiscontinuousSpline: Bool;
	public var bShouldVisualizeScale: Bool;
	public var ScaleVisualizationWidth: cpp.Float32;

	public function UpdateSpline(): Void;
	public function SetWorldLocationAtSplinePoint(PointIndex: cpp.Int32, InLocation: cpp.Reference<FVector>): Void;
	public function SetUpVectorAtSplinePoint(PointIndex: cpp.Int32, InUpVector: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace, bUpdateSpline: Bool): Void;
	public function SetUnselectedSplineSegmentColor(SegmentColor: cpp.Reference<FLinearColor>): Void;
	public function SetTangentsAtSplinePoint(PointIndex: cpp.Int32, InArriveTangent: cpp.Reference<FVector>, InLeaveTangent: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace, bUpdateSpline: Bool): Void;
	public function SetTangentColor(TangentColor: cpp.Reference<FLinearColor>): Void;
	public function SetTangentAtSplinePoint(PointIndex: cpp.Int32, InTangent: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace, bUpdateSpline: Bool): Void;
	public function SetSplineWorldPoints(Points: cpp.Reference<TArray<FVector>>): Void;
	public function SetSplinePointType(PointIndex: cpp.Int32, Type: ESplinePointType, bUpdateSpline: Bool): Void;
	public function SetSplinePoints(Points: cpp.Reference<TArray<FVector>>, CoordinateSpace: ESplineCoordinateSpace, bUpdateSpline: Bool): Void;
	public function SetSplineLocalPoints(Points: cpp.Reference<TArray<FVector>>): Void;
	public function SetSelectedSplineSegmentColor(SegmentColor: cpp.Reference<FLinearColor>): Void;
	public function SetScaleAtSplinePoint(PointIndex: cpp.Int32, InScaleVector: cpp.Reference<FVector>, bUpdateSpline: Bool): Void;
	public function SetRotationAtSplinePoint(PointIndex: cpp.Int32, InRotation: cpp.Reference<FRotator>, CoordinateSpace: ESplineCoordinateSpace, bUpdateSpline: Bool): Void;
	public function SetLocationAtSplinePoint(PointIndex: cpp.Int32, InLocation: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace, bUpdateSpline: Bool): Void;
	public function SetDrawDebug(bShow: Bool): Void;
	public function SetDefaultUpVector(UpVector: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace): Void;
	public function SetClosedLoopAtPosition(bInClosedLoop: Bool, Key: cpp.Float32, bUpdateSpline: Bool): Void;
	public function SetClosedLoop(bInClosedLoop: Bool, bUpdateSpline: Bool): Void;
	public function RemoveSplinePoint(Index: cpp.Int32, bUpdateSpline: Bool): Void;
	public function IsClosedLoop(): cpp.Reference<Bool>;
	public function GetWorldTangentAtDistanceAlongSpline(Distance: cpp.Float32): cpp.Reference<FVector>;
	public function GetWorldRotationAtTime(Time: cpp.Float32, bUseConstantVelocity: Bool): cpp.Reference<FRotator>;
	public function GetWorldRotationAtDistanceAlongSpline(Distance: cpp.Float32): cpp.Reference<FRotator>;
	public function GetWorldLocationAtTime(Time: cpp.Float32, bUseConstantVelocity: Bool): cpp.Reference<FVector>;
	public function GetWorldLocationAtSplinePoint(PointIndex: cpp.Int32): cpp.Reference<FVector>;
	public function GetWorldLocationAtDistanceAlongSpline(Distance: cpp.Float32): cpp.Reference<FVector>;
	public function GetWorldDirectionAtTime(Time: cpp.Float32, bUseConstantVelocity: Bool): cpp.Reference<FVector>;
	public function GetWorldDirectionAtDistanceAlongSpline(Distance: cpp.Float32): cpp.Reference<FVector>;
	public function GetVectorPropertyAtSplinePoint(Index: cpp.Int32, PropertyName: FName): cpp.Reference<FVector>;
	public function GetVectorPropertyAtSplineInputKey(InKey: cpp.Float32, PropertyName: FName): cpp.Reference<FVector>;
	public function GetUpVectorAtTime(Time: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseConstantVelocity: Bool): cpp.Reference<FVector>;
	public function GetUpVectorAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetUpVectorAtSplineInputKey(InKey: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetUpVectorAtDistanceAlongSpline(Distance: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetTransformAtTime(Time: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseConstantVelocity: Bool, bUseScale: Bool): cpp.Reference<FTransform>;
	public function GetTransformAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace, bUseScale: Bool): cpp.Reference<FTransform>;
	public function GetTransformAtSplineInputKey(InKey: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseScale: Bool): cpp.Reference<FTransform>;
	public function GetTransformAtDistanceAlongSpline(Distance: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseScale: Bool): cpp.Reference<FTransform>;
	public function GetTangentAtTime(Time: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseConstantVelocity: Bool): cpp.Reference<FVector>;
	public function GetTangentAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetTangentAtSplineInputKey(InKey: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetTangentAtDistanceAlongSpline(Distance: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetSplinePointType(PointIndex: cpp.Int32): cpp.Reference<ESplinePointType>;
	public function GetSplineLength(): cpp.Reference<cpp.Float32>;
	public function GetScaleAtTime(Time: cpp.Float32, bUseConstantVelocity: Bool): cpp.Reference<FVector>;
	public function GetScaleAtSplinePoint(PointIndex: cpp.Int32): cpp.Reference<FVector>;
	public function GetScaleAtSplineInputKey(InKey: cpp.Float32): cpp.Reference<FVector>;
	public function GetScaleAtDistanceAlongSpline(Distance: cpp.Float32): cpp.Reference<FVector>;
	public function GetRotationAtTime(Time: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseConstantVelocity: Bool): cpp.Reference<FRotator>;
	public function GetRotationAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FRotator>;
	public function GetRotationAtSplineInputKey(InKey: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FRotator>;
	public function GetRotationAtDistanceAlongSpline(Distance: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FRotator>;
	public function GetRollAtTime(Time: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseConstantVelocity: Bool): cpp.Reference<cpp.Float32>;
	public function GetRollAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<cpp.Float32>;
	public function GetRollAtSplineInputKey(InKey: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<cpp.Float32>;
	public function GetRollAtDistanceAlongSpline(Distance: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<cpp.Float32>;
	public function GetRightVectorAtTime(Time: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseConstantVelocity: Bool): cpp.Reference<FVector>;
	public function GetRightVectorAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetRightVectorAtSplineInputKey(InKey: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetRightVectorAtDistanceAlongSpline(Distance: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetNumberOfSplineSegments(): cpp.Reference<cpp.Int32>;
	public function GetNumberOfSplinePoints(): cpp.Reference<cpp.Int32>;
	public function GetLocationAtTime(Time: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseConstantVelocity: Bool): cpp.Reference<FVector>;
	public function GetLocationAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetLocationAtSplineInputKey(InKey: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetLocationAtDistanceAlongSpline(Distance: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetLocationAndTangentAtSplinePoint(PointIndex: cpp.Int32, Location: cpp.Reference<FVector>, Tangent: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace): Void;
	public function GetLocalLocationAndTangentAtSplinePoint(PointIndex: cpp.Int32, LocalLocation: cpp.Reference<FVector>, LocalTangent: cpp.Reference<FVector>): Void;
	public function GetLeaveTangentAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetInputKeyAtDistanceAlongSpline(Distance: cpp.Float32): cpp.Reference<cpp.Float32>;
	public function GetFloatPropertyAtSplinePoint(Index: cpp.Int32, PropertyName: FName): cpp.Reference<cpp.Float32>;
	public function GetFloatPropertyAtSplineInputKey(InKey: cpp.Float32, PropertyName: FName): cpp.Reference<cpp.Float32>;
	public function GetDistanceAlongSplineAtSplinePoint(PointIndex: cpp.Int32): cpp.Reference<cpp.Float32>;
	public function GetDistanceAlongSplineAtSplineInputKey(InKey: cpp.Float32): cpp.Reference<cpp.Float32>;
	public function GetDirectionAtTime(Time: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, bUseConstantVelocity: Bool): cpp.Reference<FVector>;
	public function GetDirectionAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetDirectionAtSplineInputKey(InKey: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetDirectionAtDistanceAlongSpline(Distance: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetDefaultUpVector(CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function GetArriveTangentAtSplinePoint(PointIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function FindUpVectorClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function FindTransformClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace, bUseScale: Bool): cpp.Reference<FTransform>;
	public function FindTangentClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function FindScaleClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>): cpp.Reference<FVector>;
	public function FindRotationClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FRotator>;
	public function FindRollClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<cpp.Float32>;
	public function FindRightVectorClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function FindLocationClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function FindInputKeyClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>): cpp.Reference<cpp.Float32>;
	public function FindDirectionClosestToWorldLocation(WorldLocation: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace): cpp.Reference<FVector>;
	public function DivideSplineIntoPolylineRecursive(StartDistanceAlongSpline: cpp.Float32, EndDistanceAlongSpline: cpp.Float32, CoordinateSpace: ESplineCoordinateSpace, MaxSquareDistanceFromSpline: cpp.Float32, OutPoints: cpp.Reference<TArray<FVector>>): cpp.Reference<Bool>;
	public function ConvertSplineToPolyLine(CoordinateSpace: ESplineCoordinateSpace, MaxSquareDistanceFromSpline: cpp.Float32, OutPoints: cpp.Reference<TArray<FVector>>): cpp.Reference<Bool>;
	public function ConvertSplineSegmentToPolyLine(SplinePointStartIndex: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace, MaxSquareDistanceFromSpline: cpp.Float32, OutPoints: cpp.Reference<TArray<FVector>>): cpp.Reference<Bool>;
	public function ClearSplinePoints(bUpdateSpline: Bool): Void;
	public function AddSplineWorldPoint(Position: cpp.Reference<FVector>): Void;
	public function AddSplinePointAtIndex(Position: cpp.Reference<FVector>, Index: cpp.Int32, CoordinateSpace: ESplineCoordinateSpace, bUpdateSpline: Bool): Void;
	public function AddSplinePoint(Position: cpp.Reference<FVector>, CoordinateSpace: ESplineCoordinateSpace, bUpdateSpline: Bool): Void;
	public function AddSplineLocalPoint(Position: cpp.Reference<FVector>): Void;
	public function AddPoints(Points: cpp.Reference<TArray<FSplinePoint>>, bUpdateSpline: Bool): Void;
	public function AddPoint(Point: cpp.Reference<FSplinePoint>, bUpdateSpline: Bool): Void;
}

@:forward(
	IsClosedLoop, GetWorldTangentAtDistanceAlongSpline, GetWorldRotationAtTime, GetWorldRotationAtDistanceAlongSpline, GetWorldLocationAtTime,
	GetWorldLocationAtSplinePoint, GetWorldLocationAtDistanceAlongSpline, GetWorldDirectionAtTime, GetWorldDirectionAtDistanceAlongSpline, GetVectorPropertyAtSplinePoint,
	GetVectorPropertyAtSplineInputKey, GetUpVectorAtTime, GetUpVectorAtSplinePoint, GetUpVectorAtSplineInputKey, GetUpVectorAtDistanceAlongSpline,
	GetTransformAtTime, GetTransformAtSplinePoint, GetTransformAtSplineInputKey, GetTransformAtDistanceAlongSpline, GetTangentAtTime,
	GetTangentAtSplinePoint, GetTangentAtSplineInputKey, GetTangentAtDistanceAlongSpline, GetSplinePointType, GetSplineLength,
	GetScaleAtTime, GetScaleAtSplinePoint, GetScaleAtSplineInputKey, GetScaleAtDistanceAlongSpline, GetRotationAtTime,
	GetRotationAtSplinePoint, GetRotationAtSplineInputKey, GetRotationAtDistanceAlongSpline, GetRollAtTime, GetRollAtSplinePoint,
	GetRollAtSplineInputKey, GetRollAtDistanceAlongSpline, GetRightVectorAtTime, GetRightVectorAtSplinePoint, GetRightVectorAtSplineInputKey,
	GetRightVectorAtDistanceAlongSpline, GetNumberOfSplineSegments, GetNumberOfSplinePoints, GetLocationAtTime, GetLocationAtSplinePoint,
	GetLocationAtSplineInputKey, GetLocationAtDistanceAlongSpline, GetLocationAndTangentAtSplinePoint, GetLocalLocationAndTangentAtSplinePoint, GetLeaveTangentAtSplinePoint,
	GetInputKeyAtDistanceAlongSpline, GetFloatPropertyAtSplinePoint, GetFloatPropertyAtSplineInputKey, GetDistanceAlongSplineAtSplinePoint, GetDistanceAlongSplineAtSplineInputKey,
	GetDirectionAtTime, GetDirectionAtSplinePoint, GetDirectionAtSplineInputKey, GetDirectionAtDistanceAlongSpline, GetDefaultUpVector,
	GetArriveTangentAtSplinePoint, FindUpVectorClosestToWorldLocation, FindTransformClosestToWorldLocation, FindTangentClosestToWorldLocation, FindScaleClosestToWorldLocation,
	FindRotationClosestToWorldLocation, FindRollClosestToWorldLocation, FindRightVectorClosestToWorldLocation, FindLocationClosestToWorldLocation, FindInputKeyClosestToWorldLocation,
	FindDirectionClosestToWorldLocation, DivideSplineIntoPolylineRecursive, ConvertSplineToPolyLine, ConvertSplineSegmentToPolyLine
)
abstract ConstSplineComComp(SplineComComp) from SplineComComp {
}