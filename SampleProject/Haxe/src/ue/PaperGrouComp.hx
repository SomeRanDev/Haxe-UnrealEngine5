// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPaperGroupedSpriteComponent")
@:include("PaperGroupedSpriteComponent.h")
extern class PaperGrouComp extends MeshCompoComp {
	public var InstanceMaterials: TArray<cpp.Star<MaterialInterface>>;
	public var PerInstanceSpriteData: TArray<FSpriteInstanceData>;

	public function UpdateInstanceTransform(InstanceIndex: cpp.Int32, NewInstanceTransform: cpp.Reference<FTransform>, bWorldSpace: Bool, bMarkRenderStateDirty: Bool, bTeleport: Bool): cpp.Reference<Bool>;
	public function UpdateInstanceColor(InstanceIndex: cpp.Int32, NewInstanceColor: FLinearColor, bMarkRenderStateDirty: Bool): cpp.Reference<Bool>;
	public function SortInstancesAlongAxis(WorldSpaceSortAxis: FVector): Void;
	public function RemoveInstance(InstanceIndex: cpp.Int32): cpp.Reference<Bool>;
	public function GetInstanceTransform(InstanceIndex: cpp.Int32, OutInstanceTransform: cpp.Reference<FTransform>, bWorldSpace: Bool): cpp.Reference<Bool>;
	public function GetInstanceCount(): cpp.Reference<cpp.Int32>;
	public function ClearInstances(): Void;
	public function AddInstance(Transform: cpp.Reference<FTransform>, Sprite: cpp.Star<PaperSprite>, bWorldSpace: Bool, Color: FLinearColor): cpp.Reference<cpp.Int32>;
}

@:forward(GetInstanceTransform, GetInstanceCount)
abstract ConstPaperGrouComp(PaperGrouComp) from PaperGrouComp {
}