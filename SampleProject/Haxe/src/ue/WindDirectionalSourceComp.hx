// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWindDirectionalSourceComponent")
@:include("Components/WindDirectionalSourceComponent.h")
@:valueType
extern class WindDirectionalSourceComp extends SceneComp {
	public var Strength: ucpp.num.Float32;
	public var Speed: ucpp.num.Float32;
	public var MinGustAmount: ucpp.num.Float32;
	public var MaxGustAmount: ucpp.num.Float32;
	public var Radius: ucpp.num.Float32;
	public var bPointWind: Bool;

	public function SetWindType(InNewType: EWindSourceType): Void;
	public function SetStrength(InNewStrength: ucpp.num.Float32): Void;
	public function SetSpeed(InNewSpeed: ucpp.num.Float32): Void;
	public function SetRadius(InNewRadius: ucpp.num.Float32): Void;
	public function SetMinimumGustAmount(InNewMinGust: ucpp.num.Float32): Void;
	public function SetMaximumGustAmount(InNewMaxGust: ucpp.num.Float32): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstWindDirectionalSourceComp(WindDirectionalSourceComp) from WindDirectionalSourceComp {
	public extern var Strength(get, never): ucpp.num.Float32;
	public inline extern function get_Strength(): ucpp.num.Float32 return this.Strength;
	public extern var Speed(get, never): ucpp.num.Float32;
	public inline extern function get_Speed(): ucpp.num.Float32 return this.Speed;
	public extern var MinGustAmount(get, never): ucpp.num.Float32;
	public inline extern function get_MinGustAmount(): ucpp.num.Float32 return this.MinGustAmount;
	public extern var MaxGustAmount(get, never): ucpp.num.Float32;
	public inline extern function get_MaxGustAmount(): ucpp.num.Float32 return this.MaxGustAmount;
	public extern var Radius(get, never): ucpp.num.Float32;
	public inline extern function get_Radius(): ucpp.num.Float32 return this.Radius;
	public extern var bPointWind(get, never): Bool;
	public inline extern function get_bPointWind(): Bool return this.bPointWind;
}

@:forward
@:nativeGen
@:native("WindDirectionalSourceComp*")
abstract WindDirectionalSourceCompPtr(ucpp.Ptr<WindDirectionalSourceComp>) from ucpp.Ptr<WindDirectionalSourceComp> to ucpp.Ptr<WindDirectionalSourceComp>{
	@:from
	public static extern inline function fromValue(v: WindDirectionalSourceComp): WindDirectionalSourceCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): WindDirectionalSourceComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}