// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAISense_Sight")
@:include("Perception/AISense_Sight.h")
@:structAccess
extern class AISense_Sight extends AISense {
	@:protected public var MaxTracesPerTick: cpp.Int32;
	@:protected public var MinQueriesPerTimeSliceCheck: cpp.Int32;
	@:protected public var MaxTimeSlicePerTick: cpp.Float64;
	@:protected public var HighImportanceQueryDistanceThreshold: cpp.Float32;
	@:protected public var MaxQueryImportance: cpp.Float32;
	@:protected public var SightLimitQueryImportance: cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstAISense_Sight(AISense_Sight) from AISense_Sight {
}

@:forward
@:nativeGen
@:native("AISense_Sight*")
abstract AISense_SightPtr(cpp.Star<AISense_Sight>) from cpp.Star<AISense_Sight> to cpp.Star<AISense_Sight>{
	@:from
	public static extern inline function fromValue(v: AISense_Sight): AISense_SightPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AISense_Sight {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}