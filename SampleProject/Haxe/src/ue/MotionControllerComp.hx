// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMotionControllerComponent")
@:include("MotionControllerComponent.h")
@:structAccess
extern class MotionControllerComp extends PrimitiveComp {
	public var PlayerIndex: cpp.Int32;
	public var MotionSource: FName;
	public var bDisableLowLatencyUpdate: Bool;
	public var CurrentTrackingStatus: ETrackingStatus;
	public var bDisplayDeviceModel: Bool;
	public var DisplayModelSource: FName;
	public var CustomDisplayMesh: cpp.Star<StaticMesh>;
	public var DisplayMeshMaterialOverrides: TArray<cpp.Star<MaterialInterface>>;
	private var DisplayComponent: cpp.Star<PrimitiveComp>;

	public function SetTrackingSource(NewSource: EControllerHand): Void;
	public function SetTrackingMotionSource(NewSource: FName): Void;
	public function SetShowDeviceModel(bShowControllerModel: Bool): Void;
	public function SetDisplayModelSource(NewDisplayModelSource: FName): Void;
	public function SetCustomDisplayMesh(NewDisplayMesh: cpp.Star<StaticMesh>): Void;
	public function SetAssociatedPlayerIndex(NewPlayer: cpp.Int32): Void;
	@:protected public function OnMotionControllerUpdated(): Void;
	public function IsTracked(): Bool;
	public function GetTrackingSource(): EControllerHand;
	@:protected public function GetParameterValue(InName: FName, bValueFound: cpp.Reference<Bool>): cpp.Float32;
	@:protected public function GetHandJointPosition(jointIndex: cpp.Int32, bValueFound: cpp.Reference<Bool>): Vector;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(IsTracked, GetTrackingSource)
@:nativeGen
abstract ConstMotionControllerComp(MotionControllerComp) from MotionControllerComp {
	public extern var PlayerIndex(get, never): cpp.Int32;
	public inline extern function get_PlayerIndex(): cpp.Int32 return this.PlayerIndex;
	public extern var MotionSource(get, never): FName;
	public inline extern function get_MotionSource(): FName return this.MotionSource;
	public extern var bDisableLowLatencyUpdate(get, never): Bool;
	public inline extern function get_bDisableLowLatencyUpdate(): Bool return this.bDisableLowLatencyUpdate;
	public extern var CurrentTrackingStatus(get, never): ETrackingStatus;
	public inline extern function get_CurrentTrackingStatus(): ETrackingStatus return this.CurrentTrackingStatus;
	public extern var bDisplayDeviceModel(get, never): Bool;
	public inline extern function get_bDisplayDeviceModel(): Bool return this.bDisplayDeviceModel;
	public extern var DisplayModelSource(get, never): FName;
	public inline extern function get_DisplayModelSource(): FName return this.DisplayModelSource;
	public extern var CustomDisplayMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_CustomDisplayMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.CustomDisplayMesh;
	public extern var DisplayMeshMaterialOverrides(get, never): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>>;
	public inline extern function get_DisplayMeshMaterialOverrides(): TArray<cpp.Star<MaterialInterface.ConstMaterialInterface>> return this.DisplayMeshMaterialOverrides;
}

@:forward
@:nativeGen
@:native("MotionControllerComp*")
abstract MotionControllerCompPtr(cpp.Star<MotionControllerComp>) from cpp.Star<MotionControllerComp> to cpp.Star<MotionControllerComp>{
	@:from
	public static extern inline function fromValue(v: MotionControllerComp): MotionControllerCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MotionControllerComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}