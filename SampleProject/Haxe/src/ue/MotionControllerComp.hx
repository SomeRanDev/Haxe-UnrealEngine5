// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMotionControllerComponent")
@:include("MotionControllerComponent.h")
@:valueType
extern class MotionControllerComp extends PrimitiveComp {
	public var PlayerIndex: ucpp.num.Int32;
	public var MotionSource: FName;
	public var bDisableLowLatencyUpdate: Bool;
	public var CurrentTrackingStatus: ETrackingStatus;
	public var bDisplayDeviceModel: Bool;
	public var DisplayModelSource: FName;
	public var CustomDisplayMesh: ucpp.Ptr<StaticMesh>;
	public var DisplayMeshMaterialOverrides: TArray<ucpp.Ptr<MaterialInterface>>;
	public var DisplayComponent: ucpp.Ptr<PrimitiveComp>;

	public function SetTrackingSource(NewSource: EControllerHand): Void;
	public function SetTrackingMotionSource(NewSource: FName): Void;
	public function SetShowDeviceModel(bShowControllerModel: Bool): Void;
	public function SetDisplayModelSource(NewDisplayModelSource: FName): Void;
	public function SetCustomDisplayMesh(NewDisplayMesh: ucpp.Ptr<StaticMesh>): Void;
	public function SetAssociatedPlayerIndex(NewPlayer: ucpp.num.Int32): Void;
	@:protected public function OnMotionControllerUpdated(): Void;
	public function IsTracked(): Bool;
	public function GetTrackingSource(): EControllerHand;
	@:protected public function GetParameterValue(InName: FName, bValueFound: ucpp.Ref<Bool>): ucpp.num.Float32;
	@:protected public function GetHandJointPosition(jointIndex: ucpp.num.Int32, bValueFound: ucpp.Ref<Bool>): Vector;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsTracked, GetTrackingSource)
@:nativeGen
abstract ConstMotionControllerComp(MotionControllerComp) from MotionControllerComp {
	public extern var PlayerIndex(get, never): ucpp.num.Int32;
	public inline extern function get_PlayerIndex(): ucpp.num.Int32 return this.PlayerIndex;
	public extern var MotionSource(get, never): FName;
	public inline extern function get_MotionSource(): FName return this.MotionSource;
	public extern var bDisableLowLatencyUpdate(get, never): Bool;
	public inline extern function get_bDisableLowLatencyUpdate(): Bool return this.bDisableLowLatencyUpdate;
	public extern var CurrentTrackingStatus(get, never): ETrackingStatus;
	public inline extern function get_CurrentTrackingStatus(): ETrackingStatus return this.CurrentTrackingStatus;
	public extern var bDisplayDeviceModel(get, never): Bool;
	public inline extern function get_bDisplayDeviceModel(): Bool return this.bDisplayDeviceModel;
	public extern var DisplayModelSource(get, never): FName;
	public inline extern function get_DisplayModelSource(): FName return this.DisplayModelSource;
	public extern var CustomDisplayMesh(get, never): ucpp.Ptr<StaticMesh.ConstStaticMesh>;
	public inline extern function get_CustomDisplayMesh(): ucpp.Ptr<StaticMesh.ConstStaticMesh> return this.CustomDisplayMesh;
	public extern var DisplayMeshMaterialOverrides(get, never): TArray<ucpp.Ptr<MaterialInterface.ConstMaterialInterface>>;
	public inline extern function get_DisplayMeshMaterialOverrides(): TArray<ucpp.Ptr<MaterialInterface.ConstMaterialInterface>> return this.DisplayMeshMaterialOverrides;
	public extern var DisplayComponent(get, never): ucpp.Ptr<PrimitiveComp.ConstPrimitiveComp>;
	public inline extern function get_DisplayComponent(): ucpp.Ptr<PrimitiveComp.ConstPrimitiveComp> return this.DisplayComponent;
}

@:forward
@:nativeGen
@:native("MotionControllerComp*")
abstract MotionControllerCompPtr(ucpp.Ptr<MotionControllerComp>) from ucpp.Ptr<MotionControllerComp> to ucpp.Ptr<MotionControllerComp>{
	@:from
	public static extern inline function fromValue(v: MotionControllerComp): MotionControllerCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MotionControllerComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}