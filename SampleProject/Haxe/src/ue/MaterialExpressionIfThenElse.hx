// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionIfThenElse")
@:include("Materials/MaterialExpressionIfThenElse.h")
@:structAccess
extern class MaterialExpressionIfThenElse extends MaterialExpression {
	public var Then: ExpressionExecOutput;
	public var Else: ExpressionExecOutput;
	public var Condition: ExpressionInput;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionIfThenElse(MaterialExpressionIfThenElse) from MaterialExpressionIfThenElse {
	public extern var Then(get, never): ExpressionExecOutput;
	public inline extern function get_Then(): ExpressionExecOutput return this.Then;
	public extern var Else(get, never): ExpressionExecOutput;
	public inline extern function get_Else(): ExpressionExecOutput return this.Else;
	public extern var Condition(get, never): ExpressionInput;
	public inline extern function get_Condition(): ExpressionInput return this.Condition;
}

@:forward
@:nativeGen
@:native("MaterialExpressionIfThenElse*")
abstract MaterialExpressionIfThenElsePtr(cpp.Star<MaterialExpressionIfThenElse>) from cpp.Star<MaterialExpressionIfThenElse> to cpp.Star<MaterialExpressionIfThenElse>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionIfThenElse): MaterialExpressionIfThenElsePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionIfThenElse {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}