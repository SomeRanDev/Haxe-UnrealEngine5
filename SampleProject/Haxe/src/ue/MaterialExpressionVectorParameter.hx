// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionVectorParameter")
@:include("Materials/MaterialExpressionVectorParameter.h")
@:valueType
extern class MaterialExpressionVectorParameter extends MaterialExpressionParameter {
	public var DefaultValue: LinearColor;
	public var bUseCustomPrimitiveData: Bool;
	public var PrimitiveDataIndex: ucpp.num.UInt8;
	public var ChannelNames: ParameterChannelNames;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionVectorParameter(MaterialExpressionVectorParameter) from MaterialExpressionVectorParameter {
	public extern var DefaultValue(get, never): LinearColor;
	public inline extern function get_DefaultValue(): LinearColor return this.DefaultValue;
	public extern var bUseCustomPrimitiveData(get, never): Bool;
	public inline extern function get_bUseCustomPrimitiveData(): Bool return this.bUseCustomPrimitiveData;
	public extern var PrimitiveDataIndex(get, never): ucpp.num.UInt8;
	public inline extern function get_PrimitiveDataIndex(): ucpp.num.UInt8 return this.PrimitiveDataIndex;
	public extern var ChannelNames(get, never): ParameterChannelNames;
	public inline extern function get_ChannelNames(): ParameterChannelNames return this.ChannelNames;
}

@:forward
@:nativeGen
@:native("MaterialExpressionVectorParameter*")
abstract MaterialExpressionVectorParameterPtr(ucpp.Ptr<MaterialExpressionVectorParameter>) from ucpp.Ptr<MaterialExpressionVectorParameter> to ucpp.Ptr<MaterialExpressionVectorParameter>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionVectorParameter): MaterialExpressionVectorParameterPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionVectorParameter {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}