// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UOnsetNRT")
@:include("OnsetNRT.h")
@:structAccess
extern class OnsetNRT extends AudioSynesthesiaNRT {
	public var Settings: cpp.Star<OnsetNRTSettings>;

	public function GetNormalizedChannelOnsetsBetweenTimes(InStartSeconds: cpp.Float32, InEndSeconds: cpp.Float32, InChannel: cpp.Int32, OutOnsetTimestamps: cpp.Reference<TArray<cpp.Float32>>, OutOnsetStrengths: cpp.Reference<TArray<cpp.Float32>>): Void;
	public function GetChannelOnsetsBetweenTimes(InStartSeconds: cpp.Float32, InEndSeconds: cpp.Float32, InChannel: cpp.Int32, OutOnsetTimestamps: cpp.Reference<TArray<cpp.Float32>>, OutOnsetStrengths: cpp.Reference<TArray<cpp.Float32>>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetNormalizedChannelOnsetsBetweenTimes, GetChannelOnsetsBetweenTimes)
@:nativeGen
abstract ConstOnsetNRT(OnsetNRT) from OnsetNRT {
	public extern var Settings(get, never): cpp.Star<OnsetNRTSettings.ConstOnsetNRTSettings>;
	public inline extern function get_Settings(): cpp.Star<OnsetNRTSettings.ConstOnsetNRTSettings> return this.Settings;
}

@:forward
@:nativeGen
@:native("OnsetNRT*")
abstract OnsetNRTPtr(cpp.Star<OnsetNRT>) from cpp.Star<OnsetNRT> to cpp.Star<OnsetNRT>{
	@:from
	public static extern inline function fromValue(v: OnsetNRT): OnsetNRTPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): OnsetNRT {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}