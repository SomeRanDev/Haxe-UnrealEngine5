// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UNiagaraBaselineController")
@:include("NiagaraPerfBaseline.h")
@:structAccess
extern class NiagaraBaselineController extends Object {
	public var TestDuration: cpp.Float32;
	public var EffectType: cpp.Star<NiagaraEffectType>;
	public var Owner: cpp.Star<NiagaraPerfBaselineActor>;
	private var System: TSoftObjectPtr<NiagaraSystem>;

	public function OnTickTest(): Bool;
	public function OnOwnerTick(DeltaTime: cpp.Float32): Void;
	public function OnEndTest(Stats: NiagaraPerfBaselineStats): Void;
	public function OnBeginTest(): Void;
	public function GetSystem(): cpp.Star<NiagaraSystem>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstNiagaraBaselineController(NiagaraBaselineController) from NiagaraBaselineController {
	public extern var TestDuration(get, never): cpp.Float32;
	public inline extern function get_TestDuration(): cpp.Float32 return this.TestDuration;
	public extern var EffectType(get, never): cpp.Star<NiagaraEffectType.ConstNiagaraEffectType>;
	public inline extern function get_EffectType(): cpp.Star<NiagaraEffectType.ConstNiagaraEffectType> return this.EffectType;
	public extern var Owner(get, never): cpp.Star<NiagaraPerfBaselineActor.ConstNiagaraPerfBaselineActor>;
	public inline extern function get_Owner(): cpp.Star<NiagaraPerfBaselineActor.ConstNiagaraPerfBaselineActor> return this.Owner;
}

@:forward
@:nativeGen
@:native("NiagaraBaselineController*")
abstract NiagaraBaselineControllerPtr(cpp.Star<NiagaraBaselineController>) from cpp.Star<NiagaraBaselineController> to cpp.Star<NiagaraBaselineController>{
	@:from
	public static extern inline function fromValue(v: NiagaraBaselineController): NiagaraBaselineControllerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): NiagaraBaselineController {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}