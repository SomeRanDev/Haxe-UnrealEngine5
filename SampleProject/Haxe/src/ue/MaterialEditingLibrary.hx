// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialEditingLibrary")
@:include("MaterialEditingLibrary.h")
@:valueType
extern class MaterialEditingLibrary extends BlueprintFunctionLibrary {
	public function UpdateMaterialInstance(Instance: ucpp.Ptr<MaterialInstanceConstant>): Void;
	public function UpdateMaterialFunction(MaterialFunction: ucpp.Ptr<MaterialFunctionInterface>, PreviewMaterial: ucpp.Ptr<Material>): Void;
	public function SetMaterialUsage(Material: ucpp.Ptr<Material>, Usage: TEnumAsByte<EMaterialUsage>, bNeedsRecompile: ucpp.Ref<Bool>): Bool;
	public function SetMaterialInstanceVectorParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Value: LinearColor, Association: TEnumAsByte<EMaterialParameterAssociation>): Bool;
	public function SetMaterialInstanceTextureParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Value: ucpp.Ptr<Texture>, Association: TEnumAsByte<EMaterialParameterAssociation>): Bool;
	public function SetMaterialInstanceStaticSwitchParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Value: Bool, Association: TEnumAsByte<EMaterialParameterAssociation>): Bool;
	public function SetMaterialInstanceSparseVolumeTextureParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Value: ucpp.Ptr<SparseVolumeTexture>, Association: TEnumAsByte<EMaterialParameterAssociation>): Bool;
	public function SetMaterialInstanceScalarParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Value: ucpp.num.Float32, Association: TEnumAsByte<EMaterialParameterAssociation>): Bool;
	public function SetMaterialInstanceRuntimeVirtualTextureParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Value: ucpp.Ptr<RuntimeVirtualTexture>, Association: TEnumAsByte<EMaterialParameterAssociation>): Bool;
	public function SetMaterialInstanceParent(Instance: ucpp.Ptr<MaterialInstanceConstant>, NewParent: ucpp.Ptr<MaterialInterface>): Void;
	public function RecompileMaterial(Material: ucpp.Ptr<Material>): Void;
	public function LayoutMaterialFunctionExpressions(MaterialFunction: ucpp.Ptr<MaterialFunction>): Void;
	public function LayoutMaterialExpressions(Material: ucpp.Ptr<Material>): Void;
	public function HasMaterialUsage(Material: ucpp.Ptr<Material>, Usage: TEnumAsByte<EMaterialUsage>): Bool;
	public function GetVectorParameterSource(Material: ucpp.Ptr<MaterialInterface>, ParameterName: FName, ParameterSource: ucpp.Ref<SoftObjectPath>): Bool;
	public function GetVectorParameterNames(Material: ucpp.Ptr<MaterialInterface>, ParameterNames: ucpp.Ref<TArray<FName>>): Void;
	public function GetUsedTextures(Material: ucpp.Ptr<Material>): TArray<ucpp.Ptr<Texture>>;
	public function GetTextureParameterSource(Material: ucpp.Ptr<MaterialInterface>, ParameterName: FName, ParameterSource: ucpp.Ref<SoftObjectPath>): Bool;
	public function GetTextureParameterNames(Material: ucpp.Ptr<MaterialInterface>, ParameterNames: ucpp.Ref<TArray<FName>>): Void;
	public function GetStatistics(Material: ucpp.Ptr<MaterialInterface>): MaterialStatistics;
	public function GetStaticSwitchParameterSource(Material: ucpp.Ptr<MaterialInterface>, ParameterName: FName, ParameterSource: ucpp.Ref<SoftObjectPath>): Bool;
	public function GetStaticSwitchParameterNames(Material: ucpp.Ptr<MaterialInterface>, ParameterNames: ucpp.Ref<TArray<FName>>): Void;
	public function GetScalarParameterSource(Material: ucpp.Ptr<MaterialInterface>, ParameterName: FName, ParameterSource: ucpp.Ref<SoftObjectPath>): Bool;
	public function GetScalarParameterNames(Material: ucpp.Ptr<MaterialInterface>, ParameterNames: ucpp.Ref<TArray<FName>>): Void;
	public function GetNumMaterialExpressionsInFunction(MaterialFunction: ucpp.Ptr<MaterialFunction.ConstMaterialFunction>): ucpp.num.Int32;
	public function GetNumMaterialExpressions(Material: ucpp.Ptr<Material.ConstMaterial>): ucpp.num.Int32;
	public function GetMaterialSelectedNodes(Material: ucpp.Ptr<Material>): TSet<ucpp.Ptr<Object>>;
	public function GetMaterialPropertyInputNodeOutputName(Material: ucpp.Ptr<Material>, Property: TEnumAsByte<EMaterialProperty>): FString;
	public function GetMaterialPropertyInputNode(Material: ucpp.Ptr<Material>, Property: TEnumAsByte<EMaterialProperty>): ucpp.Ptr<MaterialExpression>;
	public function GetMaterialInstanceVectorParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Association: TEnumAsByte<EMaterialParameterAssociation>): LinearColor;
	public function GetMaterialInstanceTextureParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Association: TEnumAsByte<EMaterialParameterAssociation>): ucpp.Ptr<Texture>;
	public function GetMaterialInstanceStaticSwitchParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Association: TEnumAsByte<EMaterialParameterAssociation>): Bool;
	public function GetMaterialInstanceSparseVolumeTextureParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Association: TEnumAsByte<EMaterialParameterAssociation>): ucpp.Ptr<SparseVolumeTexture>;
	public function GetMaterialInstanceScalarParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Association: TEnumAsByte<EMaterialParameterAssociation>): ucpp.num.Float32;
	public function GetMaterialInstanceRuntimeVirtualTextureParameterValue(Instance: ucpp.Ptr<MaterialInstanceConstant>, ParameterName: FName, Association: TEnumAsByte<EMaterialParameterAssociation>): ucpp.Ptr<RuntimeVirtualTexture>;
	public function GetMaterialExpressionNodePosition(MaterialExpression: ucpp.Ptr<MaterialExpression>, NodePosX: ucpp.Ref<ucpp.num.Int32>, NodePosY: ucpp.Ref<ucpp.num.Int32>): Void;
	public function GetMaterialDefaultVectorParameterValue(Material: ucpp.Ptr<Material>, ParameterName: FName): LinearColor;
	public function GetMaterialDefaultTextureParameterValue(Material: ucpp.Ptr<Material>, ParameterName: FName): ucpp.Ptr<Texture>;
	public function GetMaterialDefaultStaticSwitchParameterValue(Material: ucpp.Ptr<Material>, ParameterName: FName): Bool;
	public function GetMaterialDefaultScalarParameterValue(Material: ucpp.Ptr<Material>, ParameterName: FName): ucpp.num.Float32;
	public function GetInputsForMaterialExpression(Material: ucpp.Ptr<Material>, MaterialExpression: ucpp.Ptr<MaterialExpression>): TArray<ucpp.Ptr<MaterialExpression>>;
	public function GetInputNodeOutputNameForMaterialExpression(MaterialExpression: ucpp.Ptr<MaterialExpression>, InputNode: ucpp.Ptr<MaterialExpression>, OutputName: ucpp.Ref<FString>): Bool;
	public function GetChildInstances(Parent: ucpp.Ptr<MaterialInterface>, ChildInstances: ucpp.Ref<TArray<AssetData>>): Void;
	public function DuplicateMaterialExpression(Material: ucpp.Ptr<Material>, MaterialFunction: ucpp.Ptr<MaterialFunction>, Expression: ucpp.Ptr<MaterialExpression>): ucpp.Ptr<MaterialExpression>;
	public function DeleteMaterialExpressionInFunction(MaterialFunction: ucpp.Ptr<MaterialFunction>, Expression: ucpp.Ptr<MaterialExpression>): Void;
	public function DeleteMaterialExpression(Material: ucpp.Ptr<Material>, Expression: ucpp.Ptr<MaterialExpression>): Void;
	public function DeleteAllMaterialExpressionsInFunction(MaterialFunction: ucpp.Ptr<MaterialFunction>): Void;
	public function DeleteAllMaterialExpressions(Material: ucpp.Ptr<Material>): Void;
	public function CreateMaterialExpressionInFunction(MaterialFunction: ucpp.Ptr<MaterialFunction>, ExpressionClass: TSubclassOf<MaterialExpression>, NodePosX: ucpp.num.Int32, NodePosY: ucpp.num.Int32): ucpp.Ptr<MaterialExpression>;
	public function CreateMaterialExpression(Material: ucpp.Ptr<Material>, ExpressionClass: TSubclassOf<MaterialExpression>, NodePosX: ucpp.num.Int32, NodePosY: ucpp.num.Int32): ucpp.Ptr<MaterialExpression>;
	public function ConnectMaterialProperty(FromExpression: ucpp.Ptr<MaterialExpression>, FromOutputName: FString, Property: TEnumAsByte<EMaterialProperty>): Bool;
	public function ConnectMaterialExpressions(FromExpression: ucpp.Ptr<MaterialExpression>, FromOutputName: FString, ToExpression: ucpp.Ptr<MaterialExpression>, ToInputName: FString): Bool;
	public function ClearAllMaterialInstanceParameters(Instance: ucpp.Ptr<MaterialInstanceConstant>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialEditingLibrary(MaterialEditingLibrary) from MaterialEditingLibrary {
}

@:forward
@:nativeGen
@:native("MaterialEditingLibrary*")
abstract MaterialEditingLibraryPtr(ucpp.Ptr<MaterialEditingLibrary>) from ucpp.Ptr<MaterialEditingLibrary> to ucpp.Ptr<MaterialEditingLibrary>{
	@:from
	public static extern inline function fromValue(v: MaterialEditingLibrary): MaterialEditingLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialEditingLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}