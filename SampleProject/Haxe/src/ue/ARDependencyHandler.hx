// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UARDependencyHandler")
@:include("ARDependencyHandler.h")
@:structAccess
extern class ARDependencyHandler extends Object {
	public function StartARSessionLatent(WorldContextObject: cpp.Star<Object>, SessionConfig: cpp.Star<ARSessionConfig>, LatentInfo: LatentActionInfo): Void;
	public function RequestARSessionPermission(WorldContextObject: cpp.Star<Object>, SessionConfig: cpp.Star<ARSessionConfig>, LatentInfo: LatentActionInfo, OutPermissionResult: cpp.Reference<EARServicePermissionRequestResult>): Void;
	public function InstallARService(WorldContextObject: cpp.Star<Object>, LatentInfo: LatentActionInfo, OutInstallResult: cpp.Reference<EARServiceInstallRequestResult>): Void;
	public function GetARDependencyHandler(): cpp.Reference<cpp.Star<ARDependencyHandler>>;
	public function CheckARServiceAvailability(WorldContextObject: cpp.Star<Object>, LatentInfo: LatentActionInfo, OutAvailability: cpp.Reference<EARServiceAvailability>): Void;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstARDependencyHandler(ARDependencyHandler) from ARDependencyHandler {
}

@:forward
@:nativeGen
@:native("ARDependencyHandler*")
abstract ARDependencyHandlerPtr(cpp.Star<ARDependencyHandler>) from cpp.Star<ARDependencyHandler> to cpp.Star<ARDependencyHandler>{
	@:from
	public static extern inline function fromValue(v: ARDependencyHandler): ARDependencyHandlerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ARDependencyHandler {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}