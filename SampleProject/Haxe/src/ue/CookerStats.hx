// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UCookerStats")
@:include("CookerStats.h")
@:valueType
extern class CookerStats extends Object {
	public var Assets: TArray<TWeakObjectPtr<Object>>;
	public var SizeBefore: ucpp.num.Float32;
	public var SizeAfter: ucpp.num.Float32;
	public var Path: FString;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstCookerStats(CookerStats) from CookerStats {
	public extern var Assets(get, never): TArray<TWeakObjectPtr<Object.ConstObject>>;
	public inline extern function get_Assets(): TArray<TWeakObjectPtr<Object.ConstObject>> return this.Assets;
	public extern var SizeBefore(get, never): ucpp.num.Float32;
	public inline extern function get_SizeBefore(): ucpp.num.Float32 return this.SizeBefore;
	public extern var SizeAfter(get, never): ucpp.num.Float32;
	public inline extern function get_SizeAfter(): ucpp.num.Float32 return this.SizeAfter;
	public extern var Path(get, never): FString;
	public inline extern function get_Path(): FString return this.Path;
}

@:forward
@:nativeGen
@:native("CookerStats*")
abstract CookerStatsPtr(ucpp.Ptr<CookerStats>) from ucpp.Ptr<CookerStats> to ucpp.Ptr<CookerStats>{
	@:from
	public static extern inline function fromValue(v: CookerStats): CookerStatsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): CookerStats {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}