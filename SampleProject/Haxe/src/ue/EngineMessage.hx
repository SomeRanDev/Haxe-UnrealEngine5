// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEngineMessage")
@:include("GameFramework/EngineMessage.h")
extern class EngineMessage extends LocalMessage {
	public var FailedPlaceMessage: FString;
	public var MaxedOutMessage: FString;
	public var EnteredMessage: FString;
	public var LeftMessage: FString;
	public var GlobalNameChange: FString;
	public var SpecEnteredMessage: FString;
	public var NewPlayerMessage: FString;
	public var NewSpecMessage: FString;
}

@:forward()
@:nativeGen
abstract ConstEngineMessage(EngineMessage) from EngineMessage {
	public extern var FailedPlaceMessage(get, never): FString;
	public inline extern function get_FailedPlaceMessage(): FString return this.FailedPlaceMessage;
	public extern var MaxedOutMessage(get, never): FString;
	public inline extern function get_MaxedOutMessage(): FString return this.MaxedOutMessage;
	public extern var EnteredMessage(get, never): FString;
	public inline extern function get_EnteredMessage(): FString return this.EnteredMessage;
	public extern var LeftMessage(get, never): FString;
	public inline extern function get_LeftMessage(): FString return this.LeftMessage;
	public extern var GlobalNameChange(get, never): FString;
	public inline extern function get_GlobalNameChange(): FString return this.GlobalNameChange;
	public extern var SpecEnteredMessage(get, never): FString;
	public inline extern function get_SpecEnteredMessage(): FString return this.SpecEnteredMessage;
	public extern var NewPlayerMessage(get, never): FString;
	public inline extern function get_NewPlayerMessage(): FString return this.NewPlayerMessage;
	public extern var NewSpecMessage(get, never): FString;
	public inline extern function get_NewSpecMessage(): FString return this.NewSpecMessage;
}