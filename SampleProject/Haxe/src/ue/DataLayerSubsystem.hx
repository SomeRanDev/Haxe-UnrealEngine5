// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDataLayerSubsystem")
@:include("WorldPartition/DataLayer/DataLayerSubsystem.h")
@:structAccess
extern class DataLayerSubsystem extends WorldSubsystem {
	public var OnDataLayerRuntimeStateChanged: HaxeMulticastSparseDelegateProperty<(cpp.Star<DataLayer.ConstDataLayer>, EDataLayerRuntimeState) -> Void>;

	public function SetDataLayerStateByLabel(InDataLayerLabel: cpp.Reference<FName>, InState: EDataLayerState): Void;
	public function SetDataLayerState(InDataLayer: cpp.Reference<ActorDataLayer>, InState: EDataLayerState): Void;
	public function SetDataLayerRuntimeStateByLabel(InDataLayerLabel: cpp.Reference<FName>, InState: EDataLayerRuntimeState, bInIsRecursive: Bool): Void;
	public function SetDataLayerRuntimeState(InDataLayer: cpp.Reference<ActorDataLayer>, InState: EDataLayerRuntimeState, bInIsRecursive: Bool): Void;
	public function GetLoadedDataLayerNames(): TSet<FName>;
	public function GetDataLayerStateByLabel(InDataLayerLabel: cpp.Reference<FName>): EDataLayerState;
	public function GetDataLayerState(InDataLayer: cpp.Reference<ActorDataLayer>): EDataLayerState;
	public function GetDataLayerRuntimeStateByLabel(InDataLayerLabel: cpp.Reference<FName>): EDataLayerRuntimeState;
	public function GetDataLayerRuntimeState(InDataLayer: cpp.Reference<ActorDataLayer>): EDataLayerRuntimeState;
	public function GetDataLayerFromName(InDataLayerName: FName): cpp.Star<DataLayer>;
	public function GetDataLayerFromLabel(InDataLayerLabel: FName): cpp.Star<DataLayer>;
	public function GetDataLayerEffectiveRuntimeStateByLabel(InDataLayerLabel: cpp.Reference<FName>): EDataLayerRuntimeState;
	public function GetDataLayerEffectiveRuntimeState(InDataLayer: cpp.Reference<ActorDataLayer>): EDataLayerRuntimeState;
	public function GetDataLayer(InDataLayer: cpp.Reference<ActorDataLayer>): cpp.Star<DataLayer>;
	public function GetActiveDataLayerNames(): TSet<FName>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	GetLoadedDataLayerNames, GetDataLayerStateByLabel, GetDataLayerState, GetDataLayerRuntimeStateByLabel, GetDataLayerRuntimeState,
	GetDataLayerFromName, GetDataLayerFromLabel, GetDataLayerEffectiveRuntimeStateByLabel, GetDataLayerEffectiveRuntimeState, GetDataLayer,
	GetActiveDataLayerNames
)
@:nativeGen
abstract ConstDataLayerSubsystem(DataLayerSubsystem) from DataLayerSubsystem {
	public extern var OnDataLayerRuntimeStateChanged(get, never): HaxeMulticastSparseDelegateProperty<(cpp.Star<DataLayer.ConstDataLayer>, EDataLayerRuntimeState) -> Void>;
	public inline extern function get_OnDataLayerRuntimeStateChanged(): HaxeMulticastSparseDelegateProperty<(cpp.Star<DataLayer.ConstDataLayer>, EDataLayerRuntimeState) -> Void> return this.OnDataLayerRuntimeStateChanged;
}

@:forward
@:nativeGen
@:native("DataLayerSubsystem*")
abstract DataLayerSubsystemPtr(cpp.Star<DataLayerSubsystem>) from cpp.Star<DataLayerSubsystem> to cpp.Star<DataLayerSubsystem>{
	@:from
	public static extern inline function fromValue(v: DataLayerSubsystem): DataLayerSubsystemPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DataLayerSubsystem {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}