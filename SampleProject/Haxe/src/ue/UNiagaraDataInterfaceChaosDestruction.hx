// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UNiagaraDataInterfaceChaosDestruction")
@:include("NiagaraDataInterfaceChaosDestruction.h")
extern class UNiagaraDataInterfaceChaosDestruction extends UNiagaraDataInterface {
	public var ChaosSolverActorSet: TSet<TObjectPtr<AChaosSolverActor>>;
	public var DataSourceType: EDataSourceTypeEnum;
	public var DataProcessFrequency: cpp.Int32;
	public var MaxNumberOfDataEntriesToSpawn: cpp.Int32;
	public var DoSpawn: Bool;
	public var SpawnMultiplierMinMax: FVector2D;
	public var SpawnChance: cpp.Float32;
	public var ImpulseToSpawnMinMax: FVector2D;
	public var SpeedToSpawnMinMax: FVector2D;
	public var MassToSpawnMinMax: FVector2D;
	public var ExtentMinToSpawnMinMax: FVector2D;
	public var ExtentMaxToSpawnMinMax: FVector2D;
	public var VolumeToSpawnMinMax: FVector2D;
	public var SolverTimeToSpawnMinMax: FVector2D;
	public var SurfaceTypeToSpawn: cpp.Int32;
	public var LocationFilteringMode: ELocationFilteringModeEnum;
	public var LocationXToSpawn: ELocationXToSpawnEnum;
	public var LocationXToSpawnMinMax: FVector2D;
	public var LocationYToSpawn: ELocationYToSpawnEnum;
	public var LocationYToSpawnMinMax: FVector2D;
	public var LocationZToSpawn: ELocationZToSpawnEnum;
	public var LocationZToSpawnMinMax: FVector2D;
	public var TrailMinSpeedToSpawn: cpp.Float32;
	public var DataSortingType: EDataSortTypeEnum;
	public var bGetExternalCollisionData: Bool;
	public var DoSpatialHash: Bool;
	public var SpatialHashVolumeMin: FVector;
	public var SpatialHashVolumeMax: FVector;
	public var SpatialHashVolumeCellSize: FVector;
	public var MaxDataPerCell: cpp.Int32;
	public var bApplyMaterialsFilter: Bool;
	public var ChaosBreakingMaterialSet: TSet<TObjectPtr<UPhysicalMaterial>>;
	public var bGetExternalBreakingData: Bool;
	public var bGetExternalTrailingData: Bool;
	public var RandomPositionMagnitudeMinMax: FVector2D;
	public var InheritedVelocityMultiplier: cpp.Float32;
	public var RandomVelocityGenerationType: ERandomVelocityGenerationTypeEnum;
	public var RandomVelocityMagnitudeMinMax: FVector2D;
	public var SpreadAngleMax: cpp.Float32;
	public var VelocityOffsetMin: FVector;
	public var VelocityOffsetMax: FVector;
	public var FinalVelocityMagnitudeMinMax: FVector2D;
	public var MaxLatency: cpp.Float32;
	public var DebugType: EDebugTypeEnum;
	public var LastSpawnedPointID: cpp.Int32;
	public var LastSpawnTime: cpp.Float32;
	public var SolverTime: cpp.Float32;
	public var TimeStampOfLastProcessedData: cpp.Float32;
}
