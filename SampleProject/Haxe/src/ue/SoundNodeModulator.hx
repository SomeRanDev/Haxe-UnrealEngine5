// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USoundNodeModulator")
@:include("Sound/SoundNodeModulator.h")
@:valueType
extern class SoundNodeModulator extends SoundNode {
	public var PitchMin: ucpp.num.Float32;
	public var PitchMax: ucpp.num.Float32;
	public var VolumeMin: ucpp.num.Float32;
	public var VolumeMax: ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstSoundNodeModulator(SoundNodeModulator) from SoundNodeModulator {
	public extern var PitchMin(get, never): ucpp.num.Float32;
	public inline extern function get_PitchMin(): ucpp.num.Float32 return this.PitchMin;
	public extern var PitchMax(get, never): ucpp.num.Float32;
	public inline extern function get_PitchMax(): ucpp.num.Float32 return this.PitchMax;
	public extern var VolumeMin(get, never): ucpp.num.Float32;
	public inline extern function get_VolumeMin(): ucpp.num.Float32 return this.VolumeMin;
	public extern var VolumeMax(get, never): ucpp.num.Float32;
	public inline extern function get_VolumeMax(): ucpp.num.Float32 return this.VolumeMax;
}

@:forward
@:nativeGen
@:native("SoundNodeModulator*")
abstract SoundNodeModulatorPtr(ucpp.Ptr<SoundNodeModulator>) from ucpp.Ptr<SoundNodeModulator> to ucpp.Ptr<SoundNodeModulator>{
	@:from
	public static extern inline function fromValue(v: SoundNodeModulator): SoundNodeModulatorPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SoundNodeModulator {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}