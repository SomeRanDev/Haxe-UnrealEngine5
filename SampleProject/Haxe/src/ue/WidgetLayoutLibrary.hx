// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWidgetLayoutLibrary")
@:include("Blueprint/WidgetLayoutLibrary.h")
@:valueType
extern class WidgetLayoutLibrary extends BlueprintFunctionLibrary {
	public function SlotAsWrapBoxSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<WrapBoxSlot>;
	public function SlotAsWidgetSwitcherSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<WidgetSwitcherSlot>;
	public function SlotAsVerticalBoxSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<VerticalBoxSlot>;
	public function SlotAsUniformGridSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<UniformGridSlot>;
	public function SlotAsSizeBoxSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<SizeBoxSlot>;
	public function SlotAsScrollBoxSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<ScrollBoxSlot>;
	public function SlotAsScaleBoxSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<ScaleBoxSlot>;
	public function SlotAsSafeBoxSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<SafeZoneSlot>;
	public function SlotAsOverlaySlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<OverlaySlot>;
	public function SlotAsHorizontalBoxSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<HorizontalBoxSlot>;
	public function SlotAsGridSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<GridSlot>;
	public function SlotAsCanvasSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<CanvasPanelSlot>;
	public function SlotAsBorderSlot(Widget: ucpp.Ptr<Widget>): ucpp.Ptr<BorderSlot>;
	public function RemoveAllWidgets(WorldContextObject: ucpp.Ptr<Object>): Void;
	public function ProjectWorldLocationToWidgetPosition(PlayerController: ucpp.Ptr<PlayerController>, WorldLocation: Vector, ScreenPosition: ucpp.Ref<Vector2D>, bPlayerViewportRelative: Bool): Bool;
	public function GetViewportWidgetGeometry(WorldContextObject: ucpp.Ptr<Object>): Geometry;
	public function GetViewportSize(WorldContextObject: ucpp.Ptr<Object>): Vector2D;
	public function GetViewportScale(WorldContextObject: ucpp.Ptr<Object.ConstObject>): ucpp.num.Float32;
	public function GetPlayerScreenWidgetGeometry(PlayerController: ucpp.Ptr<PlayerController>): Geometry;
	public function GetMousePositionScaledByDPI(Player: ucpp.Ptr<PlayerController>, LocationX: ucpp.Ref<ucpp.num.Float32>, LocationY: ucpp.Ref<ucpp.num.Float32>): Bool;
	public function GetMousePositionOnViewport(WorldContextObject: ucpp.Ptr<Object>): Vector2D;
	public function GetMousePositionOnPlatform(): Vector2D;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstWidgetLayoutLibrary(WidgetLayoutLibrary) from WidgetLayoutLibrary {
}

@:forward
@:nativeGen
@:native("WidgetLayoutLibrary*")
abstract WidgetLayoutLibraryPtr(ucpp.Ptr<WidgetLayoutLibrary>) from ucpp.Ptr<WidgetLayoutLibrary> to ucpp.Ptr<WidgetLayoutLibrary>{
	@:from
	public static extern inline function fromValue(v: WidgetLayoutLibrary): WidgetLayoutLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): WidgetLayoutLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}