// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInstancedStaticMeshComponent")
@:include("Components/InstancedStaticMeshComponent.h")
extern class UInstancedStaticMeshComponent extends UStaticMeshComponent {
	public var PerInstanceSMData: TArray<FInstancedStaticMeshInstanceData>;
	public var PerInstancePrevTransform: TArray<FMatrix>;
	public var NumCustomDataFloats: cpp.Int32;
	public var PerInstanceSMCustomData: TArray<cpp.Float32>;
	public var InstancingRandomSeed: cpp.Int32;
	public var AdditionalRandomSeeds: TArray<FInstancedStaticMeshRandomSeed>;
	public var InstanceStartCullDistance: cpp.Int32;
	public var InstanceEndCullDistance: cpp.Int32;
	public var InstanceReorderTable: TArray<cpp.Int32>;
	public var NumPendingLightmaps: cpp.Int32;
	public var CachedMappings: TArray<FInstancedStaticMeshMappingInfo>;

	public function UpdateInstanceTransform(InstanceIndex: cpp.Int32, NewInstanceTransform: FTransform, bWorldSpace: Bool, bMarkRenderStateDirty: Bool, bTeleport: Bool): Bool;
	public function SetCustomDataValue(InstanceIndex: cpp.Int32, CustomDataIndex: cpp.Int32, CustomDataValue: cpp.Float32, bMarkRenderStateDirty: Bool): Bool;
	public function SetCullDistances(StartCullDistance: cpp.Int32, EndCullDistance: cpp.Int32): Void;
	public function RemoveInstances(InstancesToRemove: TArray<cpp.Int32>): Bool;
	public function RemoveInstance(InstanceIndex: cpp.Int32): Bool;
	public function IsValidInstance(InstanceIndex: cpp.Int32): Bool;
	public function GetInstanceTransform(InstanceIndex: cpp.Int32, OutInstanceTransform: FTransform, bWorldSpace: Bool): Bool;
	public function GetInstancesOverlappingSphere(Center: FVector, Radius: cpp.Float32, bSphereInWorldSpace: Bool): TArray<cpp.Int32>;
	public function GetInstancesOverlappingBox(Box: FBox, bBoxInWorldSpace: Bool): TArray<cpp.Int32>;
	public function GetInstanceCount(): cpp.Int32;
	public function ClearInstances(): Void;
	public function BatchUpdateInstancesTransforms(StartInstanceIndex: cpp.Int32, NewInstancesTransforms: TArray<FTransform>, bWorldSpace: Bool, bMarkRenderStateDirty: Bool, bTeleport: Bool): Bool;
	public function BatchUpdateInstancesTransform(StartInstanceIndex: cpp.Int32, NumInstances: cpp.Int32, NewInstancesTransform: FTransform, bWorldSpace: Bool, bMarkRenderStateDirty: Bool, bTeleport: Bool): Bool;
	public function AddInstanceWorldSpace(WorldTransform: FTransform): cpp.Int32;
	public function AddInstances(InstanceTransforms: TArray<FTransform>, bShouldReturnIndices: Bool, bWorldSpace: Bool): TArray<cpp.Int32>;
	public function AddInstance(InstanceTransform: FTransform, bWorldSpace: Bool): cpp.Int32;
}
