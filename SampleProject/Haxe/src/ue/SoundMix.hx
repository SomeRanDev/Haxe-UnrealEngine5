// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("USoundMix")
@:include("Sound/SoundMix.h")
@:valueType
extern class SoundMix extends Object {
	public var bApplyEQ: Bool;
	public var EQPriority: ucpp.num.Float32;
	public var EQSettings: AudioEQEffect;
	public var SoundClassEffects: TArray<SoundClassAdjuster>;
	public var InitialDelay: ucpp.num.Float32;
	public var FadeInTime: ucpp.num.Float32;
	public var Duration: ucpp.num.Float32;
	public var FadeOutTime: ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstSoundMix(SoundMix) from SoundMix {
	public extern var bApplyEQ(get, never): Bool;
	public inline extern function get_bApplyEQ(): Bool return this.bApplyEQ;
	public extern var EQPriority(get, never): ucpp.num.Float32;
	public inline extern function get_EQPriority(): ucpp.num.Float32 return this.EQPriority;
	public extern var EQSettings(get, never): AudioEQEffect;
	public inline extern function get_EQSettings(): AudioEQEffect return this.EQSettings;
	public extern var SoundClassEffects(get, never): TArray<SoundClassAdjuster>;
	public inline extern function get_SoundClassEffects(): TArray<SoundClassAdjuster> return this.SoundClassEffects;
	public extern var InitialDelay(get, never): ucpp.num.Float32;
	public inline extern function get_InitialDelay(): ucpp.num.Float32 return this.InitialDelay;
	public extern var FadeInTime(get, never): ucpp.num.Float32;
	public inline extern function get_FadeInTime(): ucpp.num.Float32 return this.FadeInTime;
	public extern var Duration(get, never): ucpp.num.Float32;
	public inline extern function get_Duration(): ucpp.num.Float32 return this.Duration;
	public extern var FadeOutTime(get, never): ucpp.num.Float32;
	public inline extern function get_FadeOutTime(): ucpp.num.Float32 return this.FadeOutTime;
}

@:forward
@:nativeGen
@:native("SoundMix*")
abstract SoundMixPtr(ucpp.Ptr<SoundMix>) from ucpp.Ptr<SoundMix> to ucpp.Ptr<SoundMix>{
	@:from
	public static extern inline function fromValue(v: SoundMix): SoundMixPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): SoundMix {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}