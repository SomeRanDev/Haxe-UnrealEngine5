// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeManager")
@:include("InterchangeManager.h")
@:structAccess
extern class InterchangeManager extends Object {
	public var RegisteredTranslatorsClass: TSet<TSubclassOf<Object>>;
	public var RegisteredFactoryClasses: TMap<TSubclassOf<Object>, TSubclassOf<Object>>;
	public var RegisteredWriters: TMap<TSubclassOf<Object>, cpp.Star<InterchangeWriterBase>>;
	public var TextureOnlyTranslatorClass: TSet<TSubclassOf<Object>>;

	public function ImportScene(ContentPath: FString, SourceData: cpp.Star<InterchangeSourceData.ConstInterchangeSourceData>, ImportAssetParameters: cpp.Reference<ImportAssetParameters>): cpp.Reference<Bool>;
	public function ImportAsset(ContentPath: FString, SourceData: cpp.Star<InterchangeSourceData.ConstInterchangeSourceData>, ImportAssetParameters: cpp.Reference<ImportAssetParameters>): cpp.Reference<Bool>;
	public function GetRegisteredFactoryClass(ClassToMake: cpp.Star<Class>): cpp.Reference<cpp.Star<Class>>;
	public function GetInterchangeManagerScripted(): cpp.Reference<cpp.Star<InterchangeManager>>;
	public function ExportScene(World: cpp.Star<Object.ConstObject>, bIsAutomated: Bool): cpp.Reference<Bool>;
	public function ExportAsset(Asset: cpp.Star<Object.ConstObject>, bIsAutomated: Bool): cpp.Reference<Bool>;
	public function CreateSourceData(InFileName: FString): cpp.Reference<cpp.Star<InterchangeSourceData>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetRegisteredFactoryClass)
@:nativeGen
abstract ConstInterchangeManager(InterchangeManager) from InterchangeManager {
	public extern var RegisteredTranslatorsClass(get, never): TSet<TSubclassOf<Object.ConstObject>>;
	public inline extern function get_RegisteredTranslatorsClass(): TSet<TSubclassOf<Object.ConstObject>> return this.RegisteredTranslatorsClass;
	public extern var RegisteredFactoryClasses(get, never): TMap<TSubclassOf<Object.ConstObject>, TSubclassOf<Object.ConstObject>>;
	public inline extern function get_RegisteredFactoryClasses(): TMap<TSubclassOf<Object.ConstObject>, TSubclassOf<Object.ConstObject>> return this.RegisteredFactoryClasses;
	public extern var RegisteredWriters(get, never): TMap<TSubclassOf<Object.ConstObject>, cpp.Star<InterchangeWriterBase.ConstInterchangeWriterBase>>;
	public inline extern function get_RegisteredWriters(): TMap<TSubclassOf<Object.ConstObject>, cpp.Star<InterchangeWriterBase.ConstInterchangeWriterBase>> return this.RegisteredWriters;
	public extern var TextureOnlyTranslatorClass(get, never): TSet<TSubclassOf<Object.ConstObject>>;
	public inline extern function get_TextureOnlyTranslatorClass(): TSet<TSubclassOf<Object.ConstObject>> return this.TextureOnlyTranslatorClass;
}