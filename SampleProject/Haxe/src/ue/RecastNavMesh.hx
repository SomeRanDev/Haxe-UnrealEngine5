// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ARecastNavMesh")
@:include("NavMesh/RecastNavMesh.h")
@:valueType
extern class RecastNavMesh extends NavigationData {
	public var bDrawTriangleEdges: Bool;
	public var bDrawPolyEdges: Bool;
	public var bDrawFilledPolys: Bool;
	public var bDrawNavMeshEdges: Bool;
	public var bDrawTileBounds: Bool;
	public var bDrawTileResolutions: Bool;
	public var bDrawPathCollidingGeometry: Bool;
	public var bDrawTileLabels: Bool;
	public var bDrawTileBuildTimes: Bool;
	public var bDrawTileBuildTimesHeatMap: Bool;
	public var bDrawPolygonLabels: Bool;
	public var bDrawDefaultPolygonCost: Bool;
	public var bDrawPolygonFlags: Bool;
	public var bDrawLabelsOnPathNodes: Bool;
	public var bDrawNavLinks: Bool;
	public var bDrawFailedNavLinks: Bool;
	public var bDrawClusters: Bool;
	public var bDrawOctree: Bool;
	public var bDrawOctreeDetails: Bool;
	public var bDrawMarkedForbiddenPolys: Bool;
	public var bDistinctlyDrawTilesBeingBuilt: Bool;
	public var DrawOffset: ucpp.num.Float32;
	public var TileGenerationDebug: RecastNavMeshTileGenerationDebug;
	public var bFixedTilePoolSize: Bool;
	public var TilePoolSize: ucpp.num.Int32;
	public var TileSizeUU: ucpp.num.Float32;
	public var CellSize: ucpp.num.Float32;
	public var CellHeight: ucpp.num.Float32;
	public var NavMeshResolutionParams: NavMeshResolutionParam;
	public var AgentRadius: ucpp.num.Float32;
	public var AgentHeight: ucpp.num.Float32;
	public var AgentMaxSlope: ucpp.num.Float32;
	public var AgentMaxStepHeight: ucpp.num.Float32;
	public var MinRegionArea: ucpp.num.Float32;
	public var MergeRegionSize: ucpp.num.Float32;
	public var MaxSimplificationError: ucpp.num.Float32;
	public var MaxSimultaneousTileGenerationJobsCount: ucpp.num.Int32;
	public var TileNumberHardLimit: ucpp.num.Int32;
	public var PolyRefTileBits: ucpp.num.Int32;
	public var PolyRefNavPolyBits: ucpp.num.Int32;
	public var PolyRefSaltBits: ucpp.num.Int32;
	public var NavMeshOriginOffset: Vector;
	public var DefaultDrawDistance: ucpp.num.Float32;
	public var DefaultMaxSearchNodes: ucpp.num.Float32;
	public var DefaultMaxHierarchicalSearchNodes: ucpp.num.Float32;
	public var RegionPartitioning: TEnumAsByte<ERecastPartitioning>;
	public var LayerPartitioning: TEnumAsByte<ERecastPartitioning>;
	public var RegionChunkSplits: ucpp.num.Int32;
	public var LayerChunkSplits: ucpp.num.Int32;
	public var bSortNavigationAreasByCost: Bool;
	public var bIsWorldPartitioned: Bool;
	public var bPerformVoxelFiltering: Bool;
	public var bMarkLowHeightAreas: Bool;
	public var bUseExtraTopCellWhenMarkingAreas: Bool;
	public var bFilterLowSpanSequences: Bool;
	public var bFilterLowSpanFromTileCache: Bool;
	public var bDoFullyAsyncNavDataGathering: Bool;
	public var bUseBetterOffsetsFromCorners: Bool;
	public var bStoreEmptyTileLayers: Bool;
	public var bUseVirtualFilters: Bool;
	public var bUseVirtualGeometryFilteringAndDirtying: Bool;
	public var bAllowNavLinkAsPathEnd: Bool;
	public var TimeSliceFilterLedgeSpansMaxYProcess: ucpp.num.Int32;
	public var TimeSliceLongDurationDebug: ucpp.num.Float64;
	private var bUseVoxelCache: Bool;
	private var TileSetUpdateInterval: ucpp.num.Float32;
	public var HeuristicScale: ucpp.num.Float32;
	public var VerticalDeviationFromGroundCompensation: ucpp.num.Float32;

	public function K2_ReplaceAreaInTileBounds(Bounds: Box, OldArea: TSubclassOf<NavArea>, NewArea: TSubclassOf<NavArea>, ReplaceLinks: Bool): Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstRecastNavMesh(RecastNavMesh) from RecastNavMesh {
	public extern var bDrawTriangleEdges(get, never): Bool;
	public inline extern function get_bDrawTriangleEdges(): Bool return this.bDrawTriangleEdges;
	public extern var bDrawPolyEdges(get, never): Bool;
	public inline extern function get_bDrawPolyEdges(): Bool return this.bDrawPolyEdges;
	public extern var bDrawFilledPolys(get, never): Bool;
	public inline extern function get_bDrawFilledPolys(): Bool return this.bDrawFilledPolys;
	public extern var bDrawNavMeshEdges(get, never): Bool;
	public inline extern function get_bDrawNavMeshEdges(): Bool return this.bDrawNavMeshEdges;
	public extern var bDrawTileBounds(get, never): Bool;
	public inline extern function get_bDrawTileBounds(): Bool return this.bDrawTileBounds;
	public extern var bDrawTileResolutions(get, never): Bool;
	public inline extern function get_bDrawTileResolutions(): Bool return this.bDrawTileResolutions;
	public extern var bDrawPathCollidingGeometry(get, never): Bool;
	public inline extern function get_bDrawPathCollidingGeometry(): Bool return this.bDrawPathCollidingGeometry;
	public extern var bDrawTileLabels(get, never): Bool;
	public inline extern function get_bDrawTileLabels(): Bool return this.bDrawTileLabels;
	public extern var bDrawTileBuildTimes(get, never): Bool;
	public inline extern function get_bDrawTileBuildTimes(): Bool return this.bDrawTileBuildTimes;
	public extern var bDrawTileBuildTimesHeatMap(get, never): Bool;
	public inline extern function get_bDrawTileBuildTimesHeatMap(): Bool return this.bDrawTileBuildTimesHeatMap;
	public extern var bDrawPolygonLabels(get, never): Bool;
	public inline extern function get_bDrawPolygonLabels(): Bool return this.bDrawPolygonLabels;
	public extern var bDrawDefaultPolygonCost(get, never): Bool;
	public inline extern function get_bDrawDefaultPolygonCost(): Bool return this.bDrawDefaultPolygonCost;
	public extern var bDrawPolygonFlags(get, never): Bool;
	public inline extern function get_bDrawPolygonFlags(): Bool return this.bDrawPolygonFlags;
	public extern var bDrawLabelsOnPathNodes(get, never): Bool;
	public inline extern function get_bDrawLabelsOnPathNodes(): Bool return this.bDrawLabelsOnPathNodes;
	public extern var bDrawNavLinks(get, never): Bool;
	public inline extern function get_bDrawNavLinks(): Bool return this.bDrawNavLinks;
	public extern var bDrawFailedNavLinks(get, never): Bool;
	public inline extern function get_bDrawFailedNavLinks(): Bool return this.bDrawFailedNavLinks;
	public extern var bDrawClusters(get, never): Bool;
	public inline extern function get_bDrawClusters(): Bool return this.bDrawClusters;
	public extern var bDrawOctree(get, never): Bool;
	public inline extern function get_bDrawOctree(): Bool return this.bDrawOctree;
	public extern var bDrawOctreeDetails(get, never): Bool;
	public inline extern function get_bDrawOctreeDetails(): Bool return this.bDrawOctreeDetails;
	public extern var bDrawMarkedForbiddenPolys(get, never): Bool;
	public inline extern function get_bDrawMarkedForbiddenPolys(): Bool return this.bDrawMarkedForbiddenPolys;
	public extern var bDistinctlyDrawTilesBeingBuilt(get, never): Bool;
	public inline extern function get_bDistinctlyDrawTilesBeingBuilt(): Bool return this.bDistinctlyDrawTilesBeingBuilt;
	public extern var DrawOffset(get, never): ucpp.num.Float32;
	public inline extern function get_DrawOffset(): ucpp.num.Float32 return this.DrawOffset;
	public extern var TileGenerationDebug(get, never): RecastNavMeshTileGenerationDebug;
	public inline extern function get_TileGenerationDebug(): RecastNavMeshTileGenerationDebug return this.TileGenerationDebug;
	public extern var bFixedTilePoolSize(get, never): Bool;
	public inline extern function get_bFixedTilePoolSize(): Bool return this.bFixedTilePoolSize;
	public extern var TilePoolSize(get, never): ucpp.num.Int32;
	public inline extern function get_TilePoolSize(): ucpp.num.Int32 return this.TilePoolSize;
	public extern var TileSizeUU(get, never): ucpp.num.Float32;
	public inline extern function get_TileSizeUU(): ucpp.num.Float32 return this.TileSizeUU;
	public extern var CellSize(get, never): ucpp.num.Float32;
	public inline extern function get_CellSize(): ucpp.num.Float32 return this.CellSize;
	public extern var CellHeight(get, never): ucpp.num.Float32;
	public inline extern function get_CellHeight(): ucpp.num.Float32 return this.CellHeight;
	public extern var NavMeshResolutionParams(get, never): NavMeshResolutionParam;
	public inline extern function get_NavMeshResolutionParams(): NavMeshResolutionParam return this.NavMeshResolutionParams;
	public extern var AgentRadius(get, never): ucpp.num.Float32;
	public inline extern function get_AgentRadius(): ucpp.num.Float32 return this.AgentRadius;
	public extern var AgentHeight(get, never): ucpp.num.Float32;
	public inline extern function get_AgentHeight(): ucpp.num.Float32 return this.AgentHeight;
	public extern var AgentMaxSlope(get, never): ucpp.num.Float32;
	public inline extern function get_AgentMaxSlope(): ucpp.num.Float32 return this.AgentMaxSlope;
	public extern var AgentMaxStepHeight(get, never): ucpp.num.Float32;
	public inline extern function get_AgentMaxStepHeight(): ucpp.num.Float32 return this.AgentMaxStepHeight;
	public extern var MinRegionArea(get, never): ucpp.num.Float32;
	public inline extern function get_MinRegionArea(): ucpp.num.Float32 return this.MinRegionArea;
	public extern var MergeRegionSize(get, never): ucpp.num.Float32;
	public inline extern function get_MergeRegionSize(): ucpp.num.Float32 return this.MergeRegionSize;
	public extern var MaxSimplificationError(get, never): ucpp.num.Float32;
	public inline extern function get_MaxSimplificationError(): ucpp.num.Float32 return this.MaxSimplificationError;
	public extern var MaxSimultaneousTileGenerationJobsCount(get, never): ucpp.num.Int32;
	public inline extern function get_MaxSimultaneousTileGenerationJobsCount(): ucpp.num.Int32 return this.MaxSimultaneousTileGenerationJobsCount;
	public extern var TileNumberHardLimit(get, never): ucpp.num.Int32;
	public inline extern function get_TileNumberHardLimit(): ucpp.num.Int32 return this.TileNumberHardLimit;
	public extern var PolyRefTileBits(get, never): ucpp.num.Int32;
	public inline extern function get_PolyRefTileBits(): ucpp.num.Int32 return this.PolyRefTileBits;
	public extern var PolyRefNavPolyBits(get, never): ucpp.num.Int32;
	public inline extern function get_PolyRefNavPolyBits(): ucpp.num.Int32 return this.PolyRefNavPolyBits;
	public extern var PolyRefSaltBits(get, never): ucpp.num.Int32;
	public inline extern function get_PolyRefSaltBits(): ucpp.num.Int32 return this.PolyRefSaltBits;
	public extern var NavMeshOriginOffset(get, never): Vector;
	public inline extern function get_NavMeshOriginOffset(): Vector return this.NavMeshOriginOffset;
	public extern var DefaultDrawDistance(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultDrawDistance(): ucpp.num.Float32 return this.DefaultDrawDistance;
	public extern var DefaultMaxSearchNodes(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultMaxSearchNodes(): ucpp.num.Float32 return this.DefaultMaxSearchNodes;
	public extern var DefaultMaxHierarchicalSearchNodes(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultMaxHierarchicalSearchNodes(): ucpp.num.Float32 return this.DefaultMaxHierarchicalSearchNodes;
	public extern var RegionPartitioning(get, never): TEnumAsByte<ERecastPartitioning>;
	public inline extern function get_RegionPartitioning(): TEnumAsByte<ERecastPartitioning> return this.RegionPartitioning;
	public extern var LayerPartitioning(get, never): TEnumAsByte<ERecastPartitioning>;
	public inline extern function get_LayerPartitioning(): TEnumAsByte<ERecastPartitioning> return this.LayerPartitioning;
	public extern var RegionChunkSplits(get, never): ucpp.num.Int32;
	public inline extern function get_RegionChunkSplits(): ucpp.num.Int32 return this.RegionChunkSplits;
	public extern var LayerChunkSplits(get, never): ucpp.num.Int32;
	public inline extern function get_LayerChunkSplits(): ucpp.num.Int32 return this.LayerChunkSplits;
	public extern var bSortNavigationAreasByCost(get, never): Bool;
	public inline extern function get_bSortNavigationAreasByCost(): Bool return this.bSortNavigationAreasByCost;
	public extern var bIsWorldPartitioned(get, never): Bool;
	public inline extern function get_bIsWorldPartitioned(): Bool return this.bIsWorldPartitioned;
	public extern var bPerformVoxelFiltering(get, never): Bool;
	public inline extern function get_bPerformVoxelFiltering(): Bool return this.bPerformVoxelFiltering;
	public extern var bMarkLowHeightAreas(get, never): Bool;
	public inline extern function get_bMarkLowHeightAreas(): Bool return this.bMarkLowHeightAreas;
	public extern var bUseExtraTopCellWhenMarkingAreas(get, never): Bool;
	public inline extern function get_bUseExtraTopCellWhenMarkingAreas(): Bool return this.bUseExtraTopCellWhenMarkingAreas;
	public extern var bFilterLowSpanSequences(get, never): Bool;
	public inline extern function get_bFilterLowSpanSequences(): Bool return this.bFilterLowSpanSequences;
	public extern var bFilterLowSpanFromTileCache(get, never): Bool;
	public inline extern function get_bFilterLowSpanFromTileCache(): Bool return this.bFilterLowSpanFromTileCache;
	public extern var bDoFullyAsyncNavDataGathering(get, never): Bool;
	public inline extern function get_bDoFullyAsyncNavDataGathering(): Bool return this.bDoFullyAsyncNavDataGathering;
	public extern var bUseBetterOffsetsFromCorners(get, never): Bool;
	public inline extern function get_bUseBetterOffsetsFromCorners(): Bool return this.bUseBetterOffsetsFromCorners;
	public extern var bStoreEmptyTileLayers(get, never): Bool;
	public inline extern function get_bStoreEmptyTileLayers(): Bool return this.bStoreEmptyTileLayers;
	public extern var bUseVirtualFilters(get, never): Bool;
	public inline extern function get_bUseVirtualFilters(): Bool return this.bUseVirtualFilters;
	public extern var bUseVirtualGeometryFilteringAndDirtying(get, never): Bool;
	public inline extern function get_bUseVirtualGeometryFilteringAndDirtying(): Bool return this.bUseVirtualGeometryFilteringAndDirtying;
	public extern var bAllowNavLinkAsPathEnd(get, never): Bool;
	public inline extern function get_bAllowNavLinkAsPathEnd(): Bool return this.bAllowNavLinkAsPathEnd;
	public extern var TimeSliceFilterLedgeSpansMaxYProcess(get, never): ucpp.num.Int32;
	public inline extern function get_TimeSliceFilterLedgeSpansMaxYProcess(): ucpp.num.Int32 return this.TimeSliceFilterLedgeSpansMaxYProcess;
	public extern var TimeSliceLongDurationDebug(get, never): ucpp.num.Float64;
	public inline extern function get_TimeSliceLongDurationDebug(): ucpp.num.Float64 return this.TimeSliceLongDurationDebug;
	public extern var HeuristicScale(get, never): ucpp.num.Float32;
	public inline extern function get_HeuristicScale(): ucpp.num.Float32 return this.HeuristicScale;
	public extern var VerticalDeviationFromGroundCompensation(get, never): ucpp.num.Float32;
	public inline extern function get_VerticalDeviationFromGroundCompensation(): ucpp.num.Float32 return this.VerticalDeviationFromGroundCompensation;
}

@:forward
@:nativeGen
@:native("RecastNavMesh*")
abstract RecastNavMeshPtr(ucpp.Ptr<RecastNavMesh>) from ucpp.Ptr<RecastNavMesh> to ucpp.Ptr<RecastNavMesh>{
	@:from
	public static extern inline function fromValue(v: RecastNavMesh): RecastNavMeshPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RecastNavMesh {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}