// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UDistributionVector")
@:include("Distributions/DistributionVector.h")
@:structAccess
extern class DistributionVector extends Distribution {
	public var bCanBeBaked: Bool;
	public var bIsDirty: Bool;
	public var bBakedDataSuccesfully: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstDistributionVector(DistributionVector) from DistributionVector {
	public extern var bCanBeBaked(get, never): Bool;
	public inline extern function get_bCanBeBaked(): Bool return this.bCanBeBaked;
	public extern var bIsDirty(get, never): Bool;
	public inline extern function get_bIsDirty(): Bool return this.bIsDirty;
	public extern var bBakedDataSuccesfully(get, never): Bool;
	public inline extern function get_bBakedDataSuccesfully(): Bool return this.bBakedDataSuccesfully;
}

@:forward
@:nativeGen
@:native("DistributionVector*")
abstract DistributionVectorPtr(cpp.Star<DistributionVector>) from cpp.Star<DistributionVector> to cpp.Star<DistributionVector>{
	@:from
	public static extern inline function fromValue(v: DistributionVector): DistributionVectorPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): DistributionVector {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}