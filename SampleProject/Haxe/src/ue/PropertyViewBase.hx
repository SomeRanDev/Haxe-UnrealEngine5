// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPropertyViewBase")
@:include("Components/PropertyViewBase.h")
@:structAccess
extern class PropertyViewBase extends Widget {
	public var Object: TSoftObjectPtr<Object>;
	public var SoftObjectPath_DEPRECATED: SoftObjectPath;
	public var bAutoLoadAsset: Bool;
	public var OnPropertyChanged: HaxeMulticastSparseDelegateProperty<(FName) -> Void>;

	public function SetObject(NewObject: cpp.Star<Object>): Void;
	public function GetObject(): cpp.Reference<cpp.Star<Object>>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetObject)
@:nativeGen
abstract ConstPropertyViewBase(PropertyViewBase) from PropertyViewBase {
	public extern var Object(get, never): TSoftObjectPtr<Object.ConstObject>;
	public inline extern function get_Object(): TSoftObjectPtr<Object.ConstObject> return this.Object;
	public extern var SoftObjectPath_DEPRECATED(get, never): SoftObjectPath;
	public inline extern function get_SoftObjectPath_DEPRECATED(): SoftObjectPath return this.SoftObjectPath_DEPRECATED;
	public extern var bAutoLoadAsset(get, never): Bool;
	public inline extern function get_bAutoLoadAsset(): Bool return this.bAutoLoadAsset;
	public extern var OnPropertyChanged(get, never): HaxeMulticastSparseDelegateProperty<(FName) -> Void>;
	public inline extern function get_OnPropertyChanged(): HaxeMulticastSparseDelegateProperty<(FName) -> Void> return this.OnPropertyChanged;
}

@:forward
@:nativeGen
@:native("PropertyViewBase*")
abstract PropertyViewBasePtr(cpp.Star<PropertyViewBase>) from cpp.Star<PropertyViewBase> to cpp.Star<PropertyViewBase>{
	@:from
	public static extern inline function fromValue(v: PropertyViewBase): PropertyViewBasePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PropertyViewBase {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}