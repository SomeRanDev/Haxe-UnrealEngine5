// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFindSessionsCallbackProxy")
@:include("FindSessionsCallbackProxy.h")
@:valueType
extern class FindSessionsCallbackProxy extends OnlineBlueprintCallProxyBase {
	public var OnSuccess: HaxeMulticastSparseDelegateProperty<(ucpp.Ref<TArray<BlueprintSessionResult>>) -> Void>;
	public var OnFailure: HaxeMulticastSparseDelegateProperty<(ucpp.Ref<TArray<BlueprintSessionResult>>) -> Void>;

	public function GetServerName(Result: ucpp.Ref<BlueprintSessionResult>): FString;
	public function GetPingInMs(Result: ucpp.Ref<BlueprintSessionResult>): ucpp.num.Int32;
	public function GetMaxPlayers(Result: ucpp.Ref<BlueprintSessionResult>): ucpp.num.Int32;
	public function GetCurrentPlayers(Result: ucpp.Ref<BlueprintSessionResult>): ucpp.num.Int32;
	public function FindSessions(WorldContextObject: ucpp.Ptr<Object>, PlayerController: ucpp.Ptr<PlayerController>, MaxResults: ucpp.num.Int32, bUseLAN: Bool): ucpp.Ptr<FindSessionsCallbackProxy>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstFindSessionsCallbackProxy(FindSessionsCallbackProxy) from FindSessionsCallbackProxy {
	public extern var OnSuccess(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<TArray<BlueprintSessionResult>>) -> Void>;
	public inline extern function get_OnSuccess(): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<TArray<BlueprintSessionResult>>) -> Void> return this.OnSuccess;
	public extern var OnFailure(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<TArray<BlueprintSessionResult>>) -> Void>;
	public inline extern function get_OnFailure(): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<TArray<BlueprintSessionResult>>) -> Void> return this.OnFailure;
}

@:forward
@:nativeGen
@:native("FindSessionsCallbackProxy*")
abstract FindSessionsCallbackProxyPtr(ucpp.Ptr<FindSessionsCallbackProxy>) from ucpp.Ptr<FindSessionsCallbackProxy> to ucpp.Ptr<FindSessionsCallbackProxy>{
	@:from
	public static extern inline function fromValue(v: FindSessionsCallbackProxy): FindSessionsCallbackProxyPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): FindSessionsCallbackProxy {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}