// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTexAligner")
@:include("TexAligner/TexAligner.h")
@:structAccess
extern class TexAligner extends Object {
	public var DefTexAlign: TEnumAsByte<ETexAlign>;
	public var TAxis: cpp.UInt8;
	public var UTile: cpp.Float32;
	public var VTile: cpp.Float32;
	public var Desc: FString;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstTexAligner(TexAligner) from TexAligner {
	public extern var DefTexAlign(get, never): TEnumAsByte<ETexAlign>;
	public inline extern function get_DefTexAlign(): TEnumAsByte<ETexAlign> return this.DefTexAlign;
	public extern var TAxis(get, never): cpp.UInt8;
	public inline extern function get_TAxis(): cpp.UInt8 return this.TAxis;
	public extern var UTile(get, never): cpp.Float32;
	public inline extern function get_UTile(): cpp.Float32 return this.UTile;
	public extern var VTile(get, never): cpp.Float32;
	public inline extern function get_VTile(): cpp.Float32 return this.VTile;
	public extern var Desc(get, never): FString;
	public inline extern function get_Desc(): FString return this.Desc;
}

@:forward
@:nativeGen
@:native("TexAligner*")
abstract TexAlignerPtr(cpp.Star<TexAligner>) from cpp.Star<TexAligner> to cpp.Star<TexAligner>{
	@:from
	public static extern inline function fromValue(v: TexAligner): TexAlignerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TexAligner {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}