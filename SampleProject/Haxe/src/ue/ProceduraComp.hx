// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UProceduralMeshComponent")
@:include("ProceduralMeshComponent.h")
extern class ProceduraComp extends MeshCompoComp {
	public var bUseComplexAsSimpleCollision: Bool;
	public var bUseAsyncCooking: Bool;
	public var ProcMeshBodySetup: cpp.Star<BodySetup>;
	public var ProcMeshSections: TArray<FProcMeshSection>;
	public var CollisionConvexElems: TArray<FKConvexElem>;
	public var LocalBounds: FBoxSphereBounds;
	public var AsyncBodySetupQueue: TArray<cpp.Star<BodySetup>>;

	public function UpdateMeshSection_LinearColor(SectionIndex: cpp.Int32, Vertices: cpp.Reference<TArray<FVector>>, Normals: cpp.Reference<TArray<FVector>>, UV0: cpp.Reference<TArray<FVector2D>>, UV1: cpp.Reference<TArray<FVector2D>>, UV2: cpp.Reference<TArray<FVector2D>>, UV3: cpp.Reference<TArray<FVector2D>>, VertexColors: cpp.Reference<TArray<FLinearColor>>, Tangents: cpp.Reference<TArray<FProcMeshTangent>>): Void;
	public function UpdateMeshSection(SectionIndex: cpp.Int32, Vertices: cpp.Reference<TArray<FVector>>, Normals: cpp.Reference<TArray<FVector>>, UV0: cpp.Reference<TArray<FVector2D>>, VertexColors: cpp.Reference<TArray<FColor>>, Tangents: cpp.Reference<TArray<FProcMeshTangent>>): Void;
	public function SetMeshSectionVisible(SectionIndex: cpp.Int32, bNewVisibility: Bool): Void;
	public function IsMeshSectionVisible(SectionIndex: cpp.Int32): cpp.Reference<Bool>;
	public function GetNumSections(): cpp.Reference<cpp.Int32>;
	public function CreateMeshSection_LinearColor(SectionIndex: cpp.Int32, Vertices: cpp.Reference<TArray<FVector>>, Triangles: cpp.Reference<TArray<cpp.Int32>>, Normals: cpp.Reference<TArray<FVector>>, UV0: cpp.Reference<TArray<FVector2D>>, UV1: cpp.Reference<TArray<FVector2D>>, UV2: cpp.Reference<TArray<FVector2D>>, UV3: cpp.Reference<TArray<FVector2D>>, VertexColors: cpp.Reference<TArray<FLinearColor>>, Tangents: cpp.Reference<TArray<FProcMeshTangent>>, bCreateCollision: Bool): Void;
	public function CreateMeshSection(SectionIndex: cpp.Int32, Vertices: cpp.Reference<TArray<FVector>>, Triangles: cpp.Reference<TArray<cpp.Int32>>, Normals: cpp.Reference<TArray<FVector>>, UV0: cpp.Reference<TArray<FVector2D>>, VertexColors: cpp.Reference<TArray<FColor>>, Tangents: cpp.Reference<TArray<FProcMeshTangent>>, bCreateCollision: Bool): Void;
	public function ClearMeshSection(SectionIndex: cpp.Int32): Void;
	public function ClearCollisionConvexMeshes(): Void;
	public function ClearAllMeshSections(): Void;
	public function AddCollisionConvexMesh(ConvexVerts: TArray<FVector>): Void;
}

@:forward(IsMeshSectionVisible, GetNumSections)
abstract ConstProceduraComp(ProceduraComp) from ProceduraComp {
}