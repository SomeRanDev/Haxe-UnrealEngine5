// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAnimStreamable")
@:include("Animation/AnimStreamable.h")
@:valueType
extern class AnimStreamable extends AnimSequenceBase {
	public var NumberOfKeys: ucpp.num.Int32;
	public var Interpolation: EAnimInterpolationType;
	public var RetargetSource: FName;
	public var SamplingFrameRate: FrameRate;
	public var BoneCompressionSettings: ucpp.Ptr<AnimBoneCompressionSettings>;
	public var CurveCompressionSettings: ucpp.Ptr<AnimCurveCompressionSettings>;
	public var bEnableRootMotion: Bool;
	public var RootMotionRootLock: TEnumAsByte<ERootMotionRootLock>;
	public var bForceRootLock: Bool;
	public var bUseNormalizedRootMotionScale: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAnimStreamable(AnimStreamable) from AnimStreamable {
	public extern var NumberOfKeys(get, never): ucpp.num.Int32;
	public inline extern function get_NumberOfKeys(): ucpp.num.Int32 return this.NumberOfKeys;
	public extern var Interpolation(get, never): EAnimInterpolationType;
	public inline extern function get_Interpolation(): EAnimInterpolationType return this.Interpolation;
	public extern var RetargetSource(get, never): FName;
	public inline extern function get_RetargetSource(): FName return this.RetargetSource;
	public extern var SamplingFrameRate(get, never): FrameRate;
	public inline extern function get_SamplingFrameRate(): FrameRate return this.SamplingFrameRate;
	public extern var BoneCompressionSettings(get, never): ucpp.Ptr<AnimBoneCompressionSettings.ConstAnimBoneCompressionSettings>;
	public inline extern function get_BoneCompressionSettings(): ucpp.Ptr<AnimBoneCompressionSettings.ConstAnimBoneCompressionSettings> return this.BoneCompressionSettings;
	public extern var CurveCompressionSettings(get, never): ucpp.Ptr<AnimCurveCompressionSettings.ConstAnimCurveCompressionSettings>;
	public inline extern function get_CurveCompressionSettings(): ucpp.Ptr<AnimCurveCompressionSettings.ConstAnimCurveCompressionSettings> return this.CurveCompressionSettings;
	public extern var bEnableRootMotion(get, never): Bool;
	public inline extern function get_bEnableRootMotion(): Bool return this.bEnableRootMotion;
	public extern var RootMotionRootLock(get, never): TEnumAsByte<ERootMotionRootLock>;
	public inline extern function get_RootMotionRootLock(): TEnumAsByte<ERootMotionRootLock> return this.RootMotionRootLock;
	public extern var bForceRootLock(get, never): Bool;
	public inline extern function get_bForceRootLock(): Bool return this.bForceRootLock;
	public extern var bUseNormalizedRootMotionScale(get, never): Bool;
	public inline extern function get_bUseNormalizedRootMotionScale(): Bool return this.bUseNormalizedRootMotionScale;
}

@:forward
@:nativeGen
@:native("AnimStreamable*")
abstract AnimStreamablePtr(ucpp.Ptr<AnimStreamable>) from ucpp.Ptr<AnimStreamable> to ucpp.Ptr<AnimStreamable>{
	@:from
	public static extern inline function fromValue(v: AnimStreamable): AnimStreamablePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AnimStreamable {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}