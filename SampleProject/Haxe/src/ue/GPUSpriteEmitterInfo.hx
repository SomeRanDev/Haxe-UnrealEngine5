// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("FGPUSpriteEmitterInfo")
@:include("Particles/TypeData/ParticleModuleTypeDataGpu.h")
@:valueType
extern class GPUSpriteEmitterInfo {
	public var RequiredModule: ucpp.Ptr<ParticleModuleRequired>;
	public var SpawnModule: ucpp.Ptr<ParticleModuleSpawn>;
	public var SpawnPerUnitModule: ucpp.Ptr<ParticleModuleSpawnPerUnit>;
	public var SpawnModules: TArray<ucpp.Ptr<ParticleModule>>;
	public var LocalVectorField: GPUSpriteLocalVectorFieldInfo;
	public var VectorFieldScale: FloatDistribution;
	public var DragCoefficient: FloatDistribution;
	public var PointAttractorStrength: FloatDistribution;
	public var Resilience: FloatDistribution;
	public var ConstantAcceleration: Vector;
	public var PointAttractorPosition: Vector;
	public var PointAttractorRadiusSq: ucpp.num.Float32;
	public var OrbitOffsetBase: Vector;
	public var OrbitOffsetRange: Vector;
	public var InvMaxSize: Vector2D;
	public var InvRotationRateScale: ucpp.num.Float32;
	public var MaxLifetime: ucpp.num.Float32;
	public var MaxParticleCount: ucpp.num.Int32;
	public var ScreenAlignment: TEnumAsByte<EParticleScreenAlignment>;
	public var LockAxisFlag: TEnumAsByte<EParticleAxisLock>;
	public var bEnableCollision: Bool;
	public var CollisionMode: TEnumAsByte<EParticleCollisionMode>;
	public var bRemoveHMDRoll: Bool;
	public var MinFacingCameraBlendDistance: ucpp.num.Float32;
	public var MaxFacingCameraBlendDistance: ucpp.num.Float32;
	public var DynamicColor: RawDistributionVector;
	public var DynamicAlpha: RawDistributionFloat;
	public var DynamicColorScale: RawDistributionVector;
	public var DynamicAlphaScale: RawDistributionFloat;

	@:native("FGPUSpriteEmitterInfo") public function new();
}