// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("AAIController")
@:include("AIController.h")
extern class AAIController extends AController {
	public var bStartAILogicOnPossess: Bool;
	public var bStopAILogicOnUnposses: Bool;
	public var bLOSflag: Bool;
	public var bSkipExtraLOSChecks: Bool;
	public var bAllowStrafe: Bool;
	public var bWantsPlayerState: Bool;
	public var bSetControlRotationFromPawnOrientation: Bool;
	public var PathFollowingComponent: TObjectPtr<UPathFollowingComponent>;
	public var BrainComponent: TObjectPtr<UBrainComponent>;
	public var PerceptionComponent: TObjectPtr<UAIPerceptionComponent>;
	public var ActionsComp: TObjectPtr<UPawnActionsComponent>;
	public var Blackboard: TObjectPtr<UBlackboardComponent>;
	public var CachedGameplayTasksComponent: TObjectPtr<UGameplayTasksComponent>;
	public var DefaultNavigationFilterClass: TSubclassOf<UNavigationQueryFilter>;
	public var ReceiveMoveCompleted: HaxeMulticastSparseDelegateProperty<(FAIRequestID, EPathFollowingResult) -> Void>;

	public function UseBlackboard(BlackboardAsset: cpp.Star<UBlackboardData>, BlackboardComponent: cpp.Reference<cpp.Star<UBlackboardComponent>>): Bool;
	public function UnclaimTaskResource(ResourceClass: TSubclassOf<UGameplayTaskResource>): Void;
	public function SetPathFollowingComponent(NewPFComponent: cpp.Star<UPathFollowingComponent>): Void;
	public function SetMoveBlockDetection(bEnable: Bool): Void;
	public function RunBehaviorTree(BTAsset: cpp.Star<UBehaviorTree>): Bool;
	public function OnUsingBlackBoard(BlackboardComp: cpp.Star<UBlackboardComponent>, BlackboardAsset: cpp.Star<UBlackboardData>): Void;
	public function OnGameplayTaskResourcesClaimed(NewlyClaimed: FGameplayResourceSet, FreshlyReleased: FGameplayResourceSet): Void;
	public function MoveToLocation(Dest: FVector, AcceptanceRadius: cpp.Float32, bStopOnOverlap: Bool, bUsePathfinding: Bool, bProjectDestinationToNavigation: Bool, bCanStrafe: Bool, FilterClass: TSubclassOf<UNavigationQueryFilter>, bAllowPartialPath: Bool): EPathFollowingRequestResult;
	public function MoveToActor(Goal: cpp.Star<AActor>, AcceptanceRadius: cpp.Float32, bStopOnOverlap: Bool, bUsePathfinding: Bool, bCanStrafe: Bool, FilterClass: TSubclassOf<UNavigationQueryFilter>, bAllowPartialPath: Bool): EPathFollowingRequestResult;
	public function K2_SetFocus(NewFocus: cpp.Star<AActor>): Void;
	public function K2_SetFocalPoint(FP: FVector): Void;
	public function K2_ClearFocus(): Void;
	public function HasPartialPath(): Bool;
	public function GetPathFollowingComponent(): cpp.Star<UPathFollowingComponent>;
	public function GetMoveStatus(): EPathFollowingStatus;
	public function GetImmediateMoveDestination(): FVector;
	public function GetFocusActor(): cpp.Star<AActor>;
	public function GetFocalPointOnActor(Actor: cpp.Star<AActor>): FVector;
	public function GetFocalPoint(): FVector;
	public function GetAIPerceptionComponent(): cpp.Star<UAIPerceptionComponent>;
	public function ClaimTaskResource(ResourceClass: TSubclassOf<UGameplayTaskResource>): Void;
}
