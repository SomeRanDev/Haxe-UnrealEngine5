// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPropertyEditorTestObject")
@:include("Editor/PropertyEditorTestObject.h")
@:structAccess
extern class PropertyEditorTestObject extends Object {
	public var Int8Property: cpp.Int8;
	public var Int16Property: cpp.Int16;
	public var Int32Property: cpp.Int32;
	public var Int64Property: cpp.Int64;
	public var ByteProperty: cpp.UInt8;
	public var UnsignedInt16Property: cpp.UInt16;
	public var UnsignedInt32Property: cpp.UInt32;
	public var UnsignedInt64Property: cpp.UInt64;
	public var FloatProperty: cpp.Float32;
	public var DoubleProperty: cpp.Float64;
	public var NameProperty: FName;
	public var BoolProperty: Bool;
	public var StringProperty: FString;
	public var TextProperty: FText;
	public var IntPointProperty: IntPoint;
	public var Vector3Property: Vector;
	public var Vector2Property: Vector2D;
	public var Vector4Property: Vector4;
	public var RotatorProperty: Rotator;
	public var ObjectProperty: cpp.Star<Object>;
	public var LinearColorProperty: LinearColor;
	public var ColorProperty: Color;
	public var EnumByteProperty: EPropertyEditorTestEnum;
	public var EnumProperty: EPropertyEditorTestEditColor;
	public var EnumUnderscores: EPropertyEditorTestUnderscores;
	public var MatrixProperty: Matrix;
	public var TransformProperty: Transform;
	public var ClassProperty: TSubclassOf<Object>;
	public var ClassPropertyWithAllowed: TSubclassOf<Object>;
	public var ClassPropertyWithDisallowed: TSubclassOf<Object>;
	public var SubclassOfTexture: TSubclassOf<Texture>;
	public var SubclassOfWithAllowed: TSubclassOf<Texture>;
	public var SubclassOfWithDisallowed: TSubclassOf<Texture>;
	public var AssetPointerWithAllowedAndWhitespace: TSoftObjectPtr<Object>;
	public var IntProperty32Array: TArray<cpp.Int32>;
	public var BytePropertyArray: TArray<cpp.UInt8>;
	public var FloatPropertyArray: TArray<cpp.Float32>;
	public var NamePropertyArray: TArray<FName>;
	public var BoolPropertyArray: TArray<Bool>;
	public var StringPropertyArray: TArray<FString>;
	public var TextPropertyArray: TArray<FText>;
	public var Vector3PropertyArray: TArray<Vector>;
	public var Vector2PropertyArray: TArray<Vector2D>;
	public var Vector4PropertyArray: TArray<Vector4>;
	public var RotatorPropertyArray: TArray<Rotator>;
	public var ObjectPropertyArray: TArray<cpp.Star<Object>>;
	public var ActorPropertyArray: TArray<cpp.Star<Actor>>;
	public var LinearColorPropertyArray: TArray<LinearColor>;
	public var ColorPropertyArray: TArray<Color>;
	public var EnumPropertyArray: TArray<EPropertyEditorTestEnum>;
	public var StructPropertyArray: TArray<PropertyEditorTestBasicStruct>;
	public var StructPropertyArrayWithTitle: TArray<PropertyEditorTestBasicStruct>;
	public var StructPropertyArrayWithFormattedTitle: TArray<PropertyEditorTestBasicStruct>;
	public var StructPropertyArrayWithTitleError: TArray<PropertyEditorTestBasicStruct>;
	public var StructPropertyArrayWithFormattedTitleError: TArray<PropertyEditorTestBasicStruct>;
	public var InstancedStructArray: TArray<PropertyEditorTestInstancedStruct>;
	public var InstancedUObjectArray: TArray<cpp.Star<PropertyEditorTestInstancedObject>>;
	public var FixedArrayOfInts: TArray<cpp.Int32>;
	public var StaticArrayOfInts: cpp.Int32;
	public var StaticArrayOfIntsWithEnumLabels: cpp.Int32;
	public var FloatRange: FloatRange;
	public var FloatPropertyWithClampedRange: cpp.Float32;
	public var IntPropertyWithClampedRange: cpp.Int32;
	public var IntThatCannotBeChanged: cpp.Int32;
	public var StringThatCannotBeChanged: FString;
	public var ObjectThatCannotBeChanged: cpp.Star<PrimitiveComp>;
	public var EnumBitflags: cpp.Int32;
	public var StringPasswordProperty: FString;
	public var TextPasswordProperty: FText;
	public var ThisIsBrokenIfItsVisibleInADetailsView: PropertyEditorTestBasicStruct;
	public var StructWithMultipleInstances1: PropertyEditorTestBasicStruct;
	public var bEditConditionStructWithMultipleInstances2: Bool;
	public var StructWithMultipleInstances2: PropertyEditorTestBasicStruct;
	public var RichCurve: RichCurve;
	public var AssetReferenceCustomStruct: SoftObjectPath;
	public var AssetReferenceCustomStructWithThumbnail: SoftObjectPath;
	public var ExactlyPointLightActorReference: SoftObjectPath;
	public var LightActorReference: SoftObjectPath;
	public var ExactPointOrSpotLightActorReference: SoftObjectPath;
	public var LightOrStaticMeshActorReference: SoftObjectPath;
	public var NotLightActorReference: SoftObjectPath;
	public var MaterialOrTextureAssetReference: SoftObjectPath;
	public var ActorWithMetaClass: SoftObjectPath;
	public var DisabledByCanEditChange: SoftObjectPath;
	public var bEditCondition: Bool;
	public var SimplePropertyWithEditCondition: cpp.Int32;
	public var bEditConditionAssetReferenceCustomStructWithEditCondition: Bool;
	public var AssetReferenceCustomStructWithEditCondition: SoftObjectPath;
	public var ArrayOfStructs: TArray<PropertyEditorTestBasicStruct>;
	public var Struct: PropertyEditTestTextStruct;
	public var EditInlineNewStaticMeshComponent: cpp.Star<StaticMeshComp>;
	public var ArrayOfEditInlineNewSMCs: TArray<cpp.Star<StaticMeshComp>>;
	public var TextureProp: cpp.Star<Texture>;
	public var StaticMeshProp: cpp.Star<StaticMesh>;
	public var AnyMaterialInterface: cpp.Star<MaterialInterface>;
	public var MaterialNoThumbnail: cpp.Star<MaterialInterface>;
	public var OnlyActorsAllowed: cpp.Star<Actor>;
	public var Int32Set: TSet<cpp.Int32>;
	public var FloatSet: TSet<cpp.Float32>;
	public var StringSet: TSet<FString>;
	public var ObjectSet: TSet<cpp.Star<Object>>;
	public var ActorSet: TSet<cpp.Star<Actor>>;
	public var EditColorSet: TSet<EPropertyEditorTestEditColor>;
	public var NameSet: TSet<FName>;
	public var Int32ToStringMap: TMap<cpp.Int32, FString>;
	public var StringToColorMap: TMap<FString, LinearColor>;
	public var Int32ToStructMap: TMap<cpp.Int32, PropertyEditorTestBasicStruct>;
	public var StringToFloatMap: TMap<FString, cpp.Float32>;
	public var StringToObjectMap: TMap<FString, cpp.Star<Object>>;
	public var StringToActorMap: TMap<FString, cpp.Star<Actor>>;
	public var ObjectToInt32Map: TMap<cpp.Star<Object>, cpp.Int32>;
	public var ObjectToColorMap: TMap<cpp.Star<Object>, LinearColor>;
	public var IntToEnumMap: TMap<cpp.Int32, EPropertyEditorTestEnum>;
	public var NameToNameMap: TMap<FName, FName>;
	public var NameToObjectMap: TMap<FName, cpp.Star<Object>>;
	public var NameToCustomMap: TMap<FName, PropertyEditorTestBasicStruct>;
	public var NameToColorMap: TMap<FName, LinearColor>;
	public var IntToCustomMap: TMap<cpp.Int32, PropertyEditorTestBasicStruct>;
	public var IntToSubStructMap: TMap<cpp.Int32, PropertyEditorTestSubStruct>;
	public var LinearColorSet: TSet<LinearColor>;
	public var VectorSet: TSet<Vector>;
	public var LinearColorToStringMap: TMap<LinearColor, FString>;
	public var VectorToFloatMap: TMap<Vector, cpp.Float32>;
	public var LinearColorToVectorMap: TMap<LinearColor, Vector>;
	public var BlendableInterface: BlendableInterface;
	public var AnimClassInterface: AnimClassInterface;
	public var LightPropagationVolumeBlendable: BlendableInterface;
	public var TextureOrBlendableInterface: cpp.Star<Object>;
	public var bSubcategory: Bool;
	public var bSubcategoryAdvanced: Bool;
	public var bSubcategoryFooSimple: Bool;
	public var bSubcategoryFooAdvanced: Bool;
	public var bSubcategoryBarSimple: Bool;
	public var bSubcategoryBarAdvanced: Bool;
	public var bSubcategoryLast: Bool;
	public var bEnablesNext: Bool;
	public var bEnabledByPrevious: Bool;
	public var EnumEditCondition: EPropertyEditorTestEditColor;
	public var bEnabledWhenBlue: Bool;
	public var bEnabledWhenPink: Bool;
	public var EnumAsByteEditCondition: EPropertyEditorTestEnum;
	public var bEnabledWhenEnumIs2: Bool;
	public var bEnabledWhenEnumIs4: Bool;
	public var IntegerEditCondition: cpp.Int32;
	public var bEnabledWhenIntGreaterOrEqual5: Bool;
	public var bEnabledWhenIntLessOrEqual10: Bool;
	public var FloatEditCondition: cpp.Float32;
	public var bEnabledWhenFloatGreaterThan5: Bool;
	public var bEnabledWhenFloatLessThan10: Bool;
	public var bEditConditionForArrays: Bool;
	public var ArrayWithEditCondition: TArray<cpp.Star<Texture2D>>;
	public var ArrayOfStructsWithEditCondition: TArray<PropertyEditorTestBasicStruct>;
	public var bEditConditionForFixedArray: Bool;
	public var FixedArrayWithEditCondition: FString;
	public var EditConditionFlags: cpp.Int64;
	public var bEnabledWhenFlagsHasTwoOrFour: Bool;
	public var bDisabledWhenFlagsIsOdd: Bool;
	public var InlineProperty: EComponentMobility;
	public var PropertyThatHides: EComponentMobility;
	public var bVisibleWhenStatic: Bool;
	public var VisibleWhenStationary: cpp.Int32;
	public var DateTime: DateTime;
	public var Timespan: Timespan;
	public var Guid: Guid;
	public var PerPlatformFloat: PerPlatformFloat;
	public var PerPlatformInt: PerPlatformInt;
	public var bInlineEditConditionWithoutMetaToggle: Bool;
	public var InlineEditConditionWithoutMeta: cpp.Float32;
	public var bInlineEditConditionWithMetaToggle: Bool;
	public var InlineEditConditionWithMeta: cpp.Float32;
	public var bInlineEditConditionNotEditable: Bool;
	public var HasNonEditableInlineCondition: cpp.Float32;
	public var bSharedEditCondition: Bool;
	public var UsesSharedEditCondition1: cpp.Float32;
	public var UsesSharedEditCondition2: cpp.Float32;
	public var StructWithInlineCondition: PropertyEditorTestEditCondition;
	public var ArrayOfStructsWithInlineCondition: TArray<PropertyEditorTestEditCondition>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstPropertyEditorTestObject(PropertyEditorTestObject) from PropertyEditorTestObject {
	public extern var Int8Property(get, never): cpp.Int8;
	public inline extern function get_Int8Property(): cpp.Int8 return this.Int8Property;
	public extern var Int16Property(get, never): cpp.Int16;
	public inline extern function get_Int16Property(): cpp.Int16 return this.Int16Property;
	public extern var Int32Property(get, never): cpp.Int32;
	public inline extern function get_Int32Property(): cpp.Int32 return this.Int32Property;
	public extern var Int64Property(get, never): cpp.Int64;
	public inline extern function get_Int64Property(): cpp.Int64 return this.Int64Property;
	public extern var ByteProperty(get, never): cpp.UInt8;
	public inline extern function get_ByteProperty(): cpp.UInt8 return this.ByteProperty;
	public extern var UnsignedInt16Property(get, never): cpp.UInt16;
	public inline extern function get_UnsignedInt16Property(): cpp.UInt16 return this.UnsignedInt16Property;
	public extern var UnsignedInt32Property(get, never): cpp.UInt32;
	public inline extern function get_UnsignedInt32Property(): cpp.UInt32 return this.UnsignedInt32Property;
	public extern var UnsignedInt64Property(get, never): cpp.UInt64;
	public inline extern function get_UnsignedInt64Property(): cpp.UInt64 return this.UnsignedInt64Property;
	public extern var FloatProperty(get, never): cpp.Float32;
	public inline extern function get_FloatProperty(): cpp.Float32 return this.FloatProperty;
	public extern var DoubleProperty(get, never): cpp.Float64;
	public inline extern function get_DoubleProperty(): cpp.Float64 return this.DoubleProperty;
	public extern var NameProperty(get, never): FName;
	public inline extern function get_NameProperty(): FName return this.NameProperty;
	public extern var BoolProperty(get, never): Bool;
	public inline extern function get_BoolProperty(): Bool return this.BoolProperty;
	public extern var StringProperty(get, never): FString;
	public inline extern function get_StringProperty(): FString return this.StringProperty;
	public extern var TextProperty(get, never): FText;
	public inline extern function get_TextProperty(): FText return this.TextProperty;
	public extern var IntPointProperty(get, never): IntPoint;
	public inline extern function get_IntPointProperty(): IntPoint return this.IntPointProperty;
	public extern var Vector3Property(get, never): Vector;
	public inline extern function get_Vector3Property(): Vector return this.Vector3Property;
	public extern var Vector2Property(get, never): Vector2D;
	public inline extern function get_Vector2Property(): Vector2D return this.Vector2Property;
	public extern var Vector4Property(get, never): Vector4;
	public inline extern function get_Vector4Property(): Vector4 return this.Vector4Property;
	public extern var RotatorProperty(get, never): Rotator;
	public inline extern function get_RotatorProperty(): Rotator return this.RotatorProperty;
	public extern var ObjectProperty(get, never): cpp.Star<Object.ConstObject>;
	public inline extern function get_ObjectProperty(): cpp.Star<Object.ConstObject> return this.ObjectProperty;
	public extern var LinearColorProperty(get, never): LinearColor;
	public inline extern function get_LinearColorProperty(): LinearColor return this.LinearColorProperty;
	public extern var ColorProperty(get, never): Color;
	public inline extern function get_ColorProperty(): Color return this.ColorProperty;
	public extern var EnumByteProperty(get, never): EPropertyEditorTestEnum;
	public inline extern function get_EnumByteProperty(): EPropertyEditorTestEnum return this.EnumByteProperty;
	public extern var EnumProperty(get, never): EPropertyEditorTestEditColor;
	public inline extern function get_EnumProperty(): EPropertyEditorTestEditColor return this.EnumProperty;
	public extern var EnumUnderscores(get, never): EPropertyEditorTestUnderscores;
	public inline extern function get_EnumUnderscores(): EPropertyEditorTestUnderscores return this.EnumUnderscores;
	public extern var MatrixProperty(get, never): Matrix;
	public inline extern function get_MatrixProperty(): Matrix return this.MatrixProperty;
	public extern var TransformProperty(get, never): Transform;
	public inline extern function get_TransformProperty(): Transform return this.TransformProperty;
	public extern var ClassProperty(get, never): TSubclassOf<Object.ConstObject>;
	public inline extern function get_ClassProperty(): TSubclassOf<Object.ConstObject> return this.ClassProperty;
	public extern var ClassPropertyWithAllowed(get, never): TSubclassOf<Object.ConstObject>;
	public inline extern function get_ClassPropertyWithAllowed(): TSubclassOf<Object.ConstObject> return this.ClassPropertyWithAllowed;
	public extern var ClassPropertyWithDisallowed(get, never): TSubclassOf<Object.ConstObject>;
	public inline extern function get_ClassPropertyWithDisallowed(): TSubclassOf<Object.ConstObject> return this.ClassPropertyWithDisallowed;
	public extern var SubclassOfTexture(get, never): TSubclassOf<Texture.ConstTexture>;
	public inline extern function get_SubclassOfTexture(): TSubclassOf<Texture.ConstTexture> return this.SubclassOfTexture;
	public extern var SubclassOfWithAllowed(get, never): TSubclassOf<Texture.ConstTexture>;
	public inline extern function get_SubclassOfWithAllowed(): TSubclassOf<Texture.ConstTexture> return this.SubclassOfWithAllowed;
	public extern var SubclassOfWithDisallowed(get, never): TSubclassOf<Texture.ConstTexture>;
	public inline extern function get_SubclassOfWithDisallowed(): TSubclassOf<Texture.ConstTexture> return this.SubclassOfWithDisallowed;
	public extern var AssetPointerWithAllowedAndWhitespace(get, never): TSoftObjectPtr<Object.ConstObject>;
	public inline extern function get_AssetPointerWithAllowedAndWhitespace(): TSoftObjectPtr<Object.ConstObject> return this.AssetPointerWithAllowedAndWhitespace;
	public extern var IntProperty32Array(get, never): TArray<cpp.Int32>;
	public inline extern function get_IntProperty32Array(): TArray<cpp.Int32> return this.IntProperty32Array;
	public extern var BytePropertyArray(get, never): TArray<cpp.UInt8>;
	public inline extern function get_BytePropertyArray(): TArray<cpp.UInt8> return this.BytePropertyArray;
	public extern var FloatPropertyArray(get, never): TArray<cpp.Float32>;
	public inline extern function get_FloatPropertyArray(): TArray<cpp.Float32> return this.FloatPropertyArray;
	public extern var NamePropertyArray(get, never): TArray<FName>;
	public inline extern function get_NamePropertyArray(): TArray<FName> return this.NamePropertyArray;
	public extern var BoolPropertyArray(get, never): TArray<Bool>;
	public inline extern function get_BoolPropertyArray(): TArray<Bool> return this.BoolPropertyArray;
	public extern var StringPropertyArray(get, never): TArray<FString>;
	public inline extern function get_StringPropertyArray(): TArray<FString> return this.StringPropertyArray;
	public extern var TextPropertyArray(get, never): TArray<FText>;
	public inline extern function get_TextPropertyArray(): TArray<FText> return this.TextPropertyArray;
	public extern var Vector3PropertyArray(get, never): TArray<Vector>;
	public inline extern function get_Vector3PropertyArray(): TArray<Vector> return this.Vector3PropertyArray;
	public extern var Vector2PropertyArray(get, never): TArray<Vector2D>;
	public inline extern function get_Vector2PropertyArray(): TArray<Vector2D> return this.Vector2PropertyArray;
	public extern var Vector4PropertyArray(get, never): TArray<Vector4>;
	public inline extern function get_Vector4PropertyArray(): TArray<Vector4> return this.Vector4PropertyArray;
	public extern var RotatorPropertyArray(get, never): TArray<Rotator>;
	public inline extern function get_RotatorPropertyArray(): TArray<Rotator> return this.RotatorPropertyArray;
	public extern var ObjectPropertyArray(get, never): TArray<cpp.Star<Object.ConstObject>>;
	public inline extern function get_ObjectPropertyArray(): TArray<cpp.Star<Object.ConstObject>> return this.ObjectPropertyArray;
	public extern var ActorPropertyArray(get, never): TArray<cpp.Star<Actor.ConstActor>>;
	public inline extern function get_ActorPropertyArray(): TArray<cpp.Star<Actor.ConstActor>> return this.ActorPropertyArray;
	public extern var LinearColorPropertyArray(get, never): TArray<LinearColor>;
	public inline extern function get_LinearColorPropertyArray(): TArray<LinearColor> return this.LinearColorPropertyArray;
	public extern var ColorPropertyArray(get, never): TArray<Color>;
	public inline extern function get_ColorPropertyArray(): TArray<Color> return this.ColorPropertyArray;
	public extern var EnumPropertyArray(get, never): TArray<EPropertyEditorTestEnum>;
	public inline extern function get_EnumPropertyArray(): TArray<EPropertyEditorTestEnum> return this.EnumPropertyArray;
	public extern var StructPropertyArray(get, never): TArray<PropertyEditorTestBasicStruct>;
	public inline extern function get_StructPropertyArray(): TArray<PropertyEditorTestBasicStruct> return this.StructPropertyArray;
	public extern var StructPropertyArrayWithTitle(get, never): TArray<PropertyEditorTestBasicStruct>;
	public inline extern function get_StructPropertyArrayWithTitle(): TArray<PropertyEditorTestBasicStruct> return this.StructPropertyArrayWithTitle;
	public extern var StructPropertyArrayWithFormattedTitle(get, never): TArray<PropertyEditorTestBasicStruct>;
	public inline extern function get_StructPropertyArrayWithFormattedTitle(): TArray<PropertyEditorTestBasicStruct> return this.StructPropertyArrayWithFormattedTitle;
	public extern var StructPropertyArrayWithTitleError(get, never): TArray<PropertyEditorTestBasicStruct>;
	public inline extern function get_StructPropertyArrayWithTitleError(): TArray<PropertyEditorTestBasicStruct> return this.StructPropertyArrayWithTitleError;
	public extern var StructPropertyArrayWithFormattedTitleError(get, never): TArray<PropertyEditorTestBasicStruct>;
	public inline extern function get_StructPropertyArrayWithFormattedTitleError(): TArray<PropertyEditorTestBasicStruct> return this.StructPropertyArrayWithFormattedTitleError;
	public extern var InstancedStructArray(get, never): TArray<PropertyEditorTestInstancedStruct>;
	public inline extern function get_InstancedStructArray(): TArray<PropertyEditorTestInstancedStruct> return this.InstancedStructArray;
	public extern var InstancedUObjectArray(get, never): TArray<cpp.Star<PropertyEditorTestInstancedObject.ConstPropertyEditorTestInstancedObject>>;
	public inline extern function get_InstancedUObjectArray(): TArray<cpp.Star<PropertyEditorTestInstancedObject.ConstPropertyEditorTestInstancedObject>> return this.InstancedUObjectArray;
	public extern var FixedArrayOfInts(get, never): TArray<cpp.Int32>;
	public inline extern function get_FixedArrayOfInts(): TArray<cpp.Int32> return this.FixedArrayOfInts;
	public extern var StaticArrayOfInts(get, never): cpp.Int32;
	public inline extern function get_StaticArrayOfInts(): cpp.Int32 return this.StaticArrayOfInts;
	public extern var StaticArrayOfIntsWithEnumLabels(get, never): cpp.Int32;
	public inline extern function get_StaticArrayOfIntsWithEnumLabels(): cpp.Int32 return this.StaticArrayOfIntsWithEnumLabels;
	public extern var FloatRange(get, never): FloatRange;
	public inline extern function get_FloatRange(): FloatRange return this.FloatRange;
	public extern var FloatPropertyWithClampedRange(get, never): cpp.Float32;
	public inline extern function get_FloatPropertyWithClampedRange(): cpp.Float32 return this.FloatPropertyWithClampedRange;
	public extern var IntPropertyWithClampedRange(get, never): cpp.Int32;
	public inline extern function get_IntPropertyWithClampedRange(): cpp.Int32 return this.IntPropertyWithClampedRange;
	public extern var IntThatCannotBeChanged(get, never): cpp.Int32;
	public inline extern function get_IntThatCannotBeChanged(): cpp.Int32 return this.IntThatCannotBeChanged;
	public extern var StringThatCannotBeChanged(get, never): FString;
	public inline extern function get_StringThatCannotBeChanged(): FString return this.StringThatCannotBeChanged;
	public extern var ObjectThatCannotBeChanged(get, never): cpp.Star<PrimitiveComp.ConstPrimitiveComp>;
	public inline extern function get_ObjectThatCannotBeChanged(): cpp.Star<PrimitiveComp.ConstPrimitiveComp> return this.ObjectThatCannotBeChanged;
	public extern var EnumBitflags(get, never): cpp.Int32;
	public inline extern function get_EnumBitflags(): cpp.Int32 return this.EnumBitflags;
	public extern var StringPasswordProperty(get, never): FString;
	public inline extern function get_StringPasswordProperty(): FString return this.StringPasswordProperty;
	public extern var TextPasswordProperty(get, never): FText;
	public inline extern function get_TextPasswordProperty(): FText return this.TextPasswordProperty;
	public extern var ThisIsBrokenIfItsVisibleInADetailsView(get, never): PropertyEditorTestBasicStruct;
	public inline extern function get_ThisIsBrokenIfItsVisibleInADetailsView(): PropertyEditorTestBasicStruct return this.ThisIsBrokenIfItsVisibleInADetailsView;
	public extern var StructWithMultipleInstances1(get, never): PropertyEditorTestBasicStruct;
	public inline extern function get_StructWithMultipleInstances1(): PropertyEditorTestBasicStruct return this.StructWithMultipleInstances1;
	public extern var bEditConditionStructWithMultipleInstances2(get, never): Bool;
	public inline extern function get_bEditConditionStructWithMultipleInstances2(): Bool return this.bEditConditionStructWithMultipleInstances2;
	public extern var StructWithMultipleInstances2(get, never): PropertyEditorTestBasicStruct;
	public inline extern function get_StructWithMultipleInstances2(): PropertyEditorTestBasicStruct return this.StructWithMultipleInstances2;
	public extern var RichCurve(get, never): RichCurve;
	public inline extern function get_RichCurve(): RichCurve return this.RichCurve;
	public extern var AssetReferenceCustomStruct(get, never): SoftObjectPath;
	public inline extern function get_AssetReferenceCustomStruct(): SoftObjectPath return this.AssetReferenceCustomStruct;
	public extern var AssetReferenceCustomStructWithThumbnail(get, never): SoftObjectPath;
	public inline extern function get_AssetReferenceCustomStructWithThumbnail(): SoftObjectPath return this.AssetReferenceCustomStructWithThumbnail;
	public extern var ExactlyPointLightActorReference(get, never): SoftObjectPath;
	public inline extern function get_ExactlyPointLightActorReference(): SoftObjectPath return this.ExactlyPointLightActorReference;
	public extern var LightActorReference(get, never): SoftObjectPath;
	public inline extern function get_LightActorReference(): SoftObjectPath return this.LightActorReference;
	public extern var ExactPointOrSpotLightActorReference(get, never): SoftObjectPath;
	public inline extern function get_ExactPointOrSpotLightActorReference(): SoftObjectPath return this.ExactPointOrSpotLightActorReference;
	public extern var LightOrStaticMeshActorReference(get, never): SoftObjectPath;
	public inline extern function get_LightOrStaticMeshActorReference(): SoftObjectPath return this.LightOrStaticMeshActorReference;
	public extern var NotLightActorReference(get, never): SoftObjectPath;
	public inline extern function get_NotLightActorReference(): SoftObjectPath return this.NotLightActorReference;
	public extern var MaterialOrTextureAssetReference(get, never): SoftObjectPath;
	public inline extern function get_MaterialOrTextureAssetReference(): SoftObjectPath return this.MaterialOrTextureAssetReference;
	public extern var ActorWithMetaClass(get, never): SoftObjectPath;
	public inline extern function get_ActorWithMetaClass(): SoftObjectPath return this.ActorWithMetaClass;
	public extern var DisabledByCanEditChange(get, never): SoftObjectPath;
	public inline extern function get_DisabledByCanEditChange(): SoftObjectPath return this.DisabledByCanEditChange;
	public extern var bEditCondition(get, never): Bool;
	public inline extern function get_bEditCondition(): Bool return this.bEditCondition;
	public extern var SimplePropertyWithEditCondition(get, never): cpp.Int32;
	public inline extern function get_SimplePropertyWithEditCondition(): cpp.Int32 return this.SimplePropertyWithEditCondition;
	public extern var bEditConditionAssetReferenceCustomStructWithEditCondition(get, never): Bool;
	public inline extern function get_bEditConditionAssetReferenceCustomStructWithEditCondition(): Bool return this.bEditConditionAssetReferenceCustomStructWithEditCondition;
	public extern var AssetReferenceCustomStructWithEditCondition(get, never): SoftObjectPath;
	public inline extern function get_AssetReferenceCustomStructWithEditCondition(): SoftObjectPath return this.AssetReferenceCustomStructWithEditCondition;
	public extern var ArrayOfStructs(get, never): TArray<PropertyEditorTestBasicStruct>;
	public inline extern function get_ArrayOfStructs(): TArray<PropertyEditorTestBasicStruct> return this.ArrayOfStructs;
	public extern var Struct(get, never): PropertyEditTestTextStruct;
	public inline extern function get_Struct(): PropertyEditTestTextStruct return this.Struct;
	public extern var EditInlineNewStaticMeshComponent(get, never): cpp.Star<StaticMeshComp.ConstStaticMeshComp>;
	public inline extern function get_EditInlineNewStaticMeshComponent(): cpp.Star<StaticMeshComp.ConstStaticMeshComp> return this.EditInlineNewStaticMeshComponent;
	public extern var ArrayOfEditInlineNewSMCs(get, never): TArray<cpp.Star<StaticMeshComp.ConstStaticMeshComp>>;
	public inline extern function get_ArrayOfEditInlineNewSMCs(): TArray<cpp.Star<StaticMeshComp.ConstStaticMeshComp>> return this.ArrayOfEditInlineNewSMCs;
	public extern var TextureProp(get, never): cpp.Star<Texture.ConstTexture>;
	public inline extern function get_TextureProp(): cpp.Star<Texture.ConstTexture> return this.TextureProp;
	public extern var StaticMeshProp(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_StaticMeshProp(): cpp.Star<StaticMesh.ConstStaticMesh> return this.StaticMeshProp;
	public extern var AnyMaterialInterface(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_AnyMaterialInterface(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.AnyMaterialInterface;
	public extern var MaterialNoThumbnail(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_MaterialNoThumbnail(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.MaterialNoThumbnail;
	public extern var OnlyActorsAllowed(get, never): cpp.Star<Actor.ConstActor>;
	public inline extern function get_OnlyActorsAllowed(): cpp.Star<Actor.ConstActor> return this.OnlyActorsAllowed;
	public extern var Int32Set(get, never): TSet<cpp.Int32>;
	public inline extern function get_Int32Set(): TSet<cpp.Int32> return this.Int32Set;
	public extern var FloatSet(get, never): TSet<cpp.Float32>;
	public inline extern function get_FloatSet(): TSet<cpp.Float32> return this.FloatSet;
	public extern var StringSet(get, never): TSet<FString>;
	public inline extern function get_StringSet(): TSet<FString> return this.StringSet;
	public extern var ObjectSet(get, never): TSet<cpp.Star<Object.ConstObject>>;
	public inline extern function get_ObjectSet(): TSet<cpp.Star<Object.ConstObject>> return this.ObjectSet;
	public extern var ActorSet(get, never): TSet<cpp.Star<Actor.ConstActor>>;
	public inline extern function get_ActorSet(): TSet<cpp.Star<Actor.ConstActor>> return this.ActorSet;
	public extern var EditColorSet(get, never): TSet<EPropertyEditorTestEditColor>;
	public inline extern function get_EditColorSet(): TSet<EPropertyEditorTestEditColor> return this.EditColorSet;
	public extern var NameSet(get, never): TSet<FName>;
	public inline extern function get_NameSet(): TSet<FName> return this.NameSet;
	public extern var Int32ToStringMap(get, never): TMap<cpp.Int32, FString>;
	public inline extern function get_Int32ToStringMap(): TMap<cpp.Int32, FString> return this.Int32ToStringMap;
	public extern var StringToColorMap(get, never): TMap<FString, LinearColor>;
	public inline extern function get_StringToColorMap(): TMap<FString, LinearColor> return this.StringToColorMap;
	public extern var Int32ToStructMap(get, never): TMap<cpp.Int32, PropertyEditorTestBasicStruct>;
	public inline extern function get_Int32ToStructMap(): TMap<cpp.Int32, PropertyEditorTestBasicStruct> return this.Int32ToStructMap;
	public extern var StringToFloatMap(get, never): TMap<FString, cpp.Float32>;
	public inline extern function get_StringToFloatMap(): TMap<FString, cpp.Float32> return this.StringToFloatMap;
	public extern var StringToObjectMap(get, never): TMap<FString, cpp.Star<Object.ConstObject>>;
	public inline extern function get_StringToObjectMap(): TMap<FString, cpp.Star<Object.ConstObject>> return this.StringToObjectMap;
	public extern var StringToActorMap(get, never): TMap<FString, cpp.Star<Actor.ConstActor>>;
	public inline extern function get_StringToActorMap(): TMap<FString, cpp.Star<Actor.ConstActor>> return this.StringToActorMap;
	public extern var ObjectToInt32Map(get, never): TMap<cpp.Star<Object.ConstObject>, cpp.Int32>;
	public inline extern function get_ObjectToInt32Map(): TMap<cpp.Star<Object.ConstObject>, cpp.Int32> return this.ObjectToInt32Map;
	public extern var ObjectToColorMap(get, never): TMap<cpp.Star<Object.ConstObject>, LinearColor>;
	public inline extern function get_ObjectToColorMap(): TMap<cpp.Star<Object.ConstObject>, LinearColor> return this.ObjectToColorMap;
	public extern var IntToEnumMap(get, never): TMap<cpp.Int32, EPropertyEditorTestEnum>;
	public inline extern function get_IntToEnumMap(): TMap<cpp.Int32, EPropertyEditorTestEnum> return this.IntToEnumMap;
	public extern var NameToNameMap(get, never): TMap<FName, FName>;
	public inline extern function get_NameToNameMap(): TMap<FName, FName> return this.NameToNameMap;
	public extern var NameToObjectMap(get, never): TMap<FName, cpp.Star<Object.ConstObject>>;
	public inline extern function get_NameToObjectMap(): TMap<FName, cpp.Star<Object.ConstObject>> return this.NameToObjectMap;
	public extern var NameToCustomMap(get, never): TMap<FName, PropertyEditorTestBasicStruct>;
	public inline extern function get_NameToCustomMap(): TMap<FName, PropertyEditorTestBasicStruct> return this.NameToCustomMap;
	public extern var NameToColorMap(get, never): TMap<FName, LinearColor>;
	public inline extern function get_NameToColorMap(): TMap<FName, LinearColor> return this.NameToColorMap;
	public extern var IntToCustomMap(get, never): TMap<cpp.Int32, PropertyEditorTestBasicStruct>;
	public inline extern function get_IntToCustomMap(): TMap<cpp.Int32, PropertyEditorTestBasicStruct> return this.IntToCustomMap;
	public extern var IntToSubStructMap(get, never): TMap<cpp.Int32, PropertyEditorTestSubStruct>;
	public inline extern function get_IntToSubStructMap(): TMap<cpp.Int32, PropertyEditorTestSubStruct> return this.IntToSubStructMap;
	public extern var LinearColorSet(get, never): TSet<LinearColor>;
	public inline extern function get_LinearColorSet(): TSet<LinearColor> return this.LinearColorSet;
	public extern var VectorSet(get, never): TSet<Vector>;
	public inline extern function get_VectorSet(): TSet<Vector> return this.VectorSet;
	public extern var LinearColorToStringMap(get, never): TMap<LinearColor, FString>;
	public inline extern function get_LinearColorToStringMap(): TMap<LinearColor, FString> return this.LinearColorToStringMap;
	public extern var VectorToFloatMap(get, never): TMap<Vector, cpp.Float32>;
	public inline extern function get_VectorToFloatMap(): TMap<Vector, cpp.Float32> return this.VectorToFloatMap;
	public extern var LinearColorToVectorMap(get, never): TMap<LinearColor, Vector>;
	public inline extern function get_LinearColorToVectorMap(): TMap<LinearColor, Vector> return this.LinearColorToVectorMap;
	public extern var BlendableInterface(get, never): BlendableInterface.ConstBlendableInterface;
	public inline extern function get_BlendableInterface(): BlendableInterface.ConstBlendableInterface return this.BlendableInterface;
	public extern var AnimClassInterface(get, never): AnimClassInterface.ConstAnimClassInterface;
	public inline extern function get_AnimClassInterface(): AnimClassInterface.ConstAnimClassInterface return this.AnimClassInterface;
	public extern var LightPropagationVolumeBlendable(get, never): BlendableInterface.ConstBlendableInterface;
	public inline extern function get_LightPropagationVolumeBlendable(): BlendableInterface.ConstBlendableInterface return this.LightPropagationVolumeBlendable;
	public extern var TextureOrBlendableInterface(get, never): cpp.Star<Object.ConstObject>;
	public inline extern function get_TextureOrBlendableInterface(): cpp.Star<Object.ConstObject> return this.TextureOrBlendableInterface;
	public extern var bSubcategory(get, never): Bool;
	public inline extern function get_bSubcategory(): Bool return this.bSubcategory;
	public extern var bSubcategoryAdvanced(get, never): Bool;
	public inline extern function get_bSubcategoryAdvanced(): Bool return this.bSubcategoryAdvanced;
	public extern var bSubcategoryFooSimple(get, never): Bool;
	public inline extern function get_bSubcategoryFooSimple(): Bool return this.bSubcategoryFooSimple;
	public extern var bSubcategoryFooAdvanced(get, never): Bool;
	public inline extern function get_bSubcategoryFooAdvanced(): Bool return this.bSubcategoryFooAdvanced;
	public extern var bSubcategoryBarSimple(get, never): Bool;
	public inline extern function get_bSubcategoryBarSimple(): Bool return this.bSubcategoryBarSimple;
	public extern var bSubcategoryBarAdvanced(get, never): Bool;
	public inline extern function get_bSubcategoryBarAdvanced(): Bool return this.bSubcategoryBarAdvanced;
	public extern var bSubcategoryLast(get, never): Bool;
	public inline extern function get_bSubcategoryLast(): Bool return this.bSubcategoryLast;
	public extern var bEnablesNext(get, never): Bool;
	public inline extern function get_bEnablesNext(): Bool return this.bEnablesNext;
	public extern var bEnabledByPrevious(get, never): Bool;
	public inline extern function get_bEnabledByPrevious(): Bool return this.bEnabledByPrevious;
	public extern var EnumEditCondition(get, never): EPropertyEditorTestEditColor;
	public inline extern function get_EnumEditCondition(): EPropertyEditorTestEditColor return this.EnumEditCondition;
	public extern var bEnabledWhenBlue(get, never): Bool;
	public inline extern function get_bEnabledWhenBlue(): Bool return this.bEnabledWhenBlue;
	public extern var bEnabledWhenPink(get, never): Bool;
	public inline extern function get_bEnabledWhenPink(): Bool return this.bEnabledWhenPink;
	public extern var EnumAsByteEditCondition(get, never): EPropertyEditorTestEnum;
	public inline extern function get_EnumAsByteEditCondition(): EPropertyEditorTestEnum return this.EnumAsByteEditCondition;
	public extern var bEnabledWhenEnumIs2(get, never): Bool;
	public inline extern function get_bEnabledWhenEnumIs2(): Bool return this.bEnabledWhenEnumIs2;
	public extern var bEnabledWhenEnumIs4(get, never): Bool;
	public inline extern function get_bEnabledWhenEnumIs4(): Bool return this.bEnabledWhenEnumIs4;
	public extern var IntegerEditCondition(get, never): cpp.Int32;
	public inline extern function get_IntegerEditCondition(): cpp.Int32 return this.IntegerEditCondition;
	public extern var bEnabledWhenIntGreaterOrEqual5(get, never): Bool;
	public inline extern function get_bEnabledWhenIntGreaterOrEqual5(): Bool return this.bEnabledWhenIntGreaterOrEqual5;
	public extern var bEnabledWhenIntLessOrEqual10(get, never): Bool;
	public inline extern function get_bEnabledWhenIntLessOrEqual10(): Bool return this.bEnabledWhenIntLessOrEqual10;
	public extern var FloatEditCondition(get, never): cpp.Float32;
	public inline extern function get_FloatEditCondition(): cpp.Float32 return this.FloatEditCondition;
	public extern var bEnabledWhenFloatGreaterThan5(get, never): Bool;
	public inline extern function get_bEnabledWhenFloatGreaterThan5(): Bool return this.bEnabledWhenFloatGreaterThan5;
	public extern var bEnabledWhenFloatLessThan10(get, never): Bool;
	public inline extern function get_bEnabledWhenFloatLessThan10(): Bool return this.bEnabledWhenFloatLessThan10;
	public extern var bEditConditionForArrays(get, never): Bool;
	public inline extern function get_bEditConditionForArrays(): Bool return this.bEditConditionForArrays;
	public extern var ArrayWithEditCondition(get, never): TArray<cpp.Star<Texture2D.ConstTexture2D>>;
	public inline extern function get_ArrayWithEditCondition(): TArray<cpp.Star<Texture2D.ConstTexture2D>> return this.ArrayWithEditCondition;
	public extern var ArrayOfStructsWithEditCondition(get, never): TArray<PropertyEditorTestBasicStruct>;
	public inline extern function get_ArrayOfStructsWithEditCondition(): TArray<PropertyEditorTestBasicStruct> return this.ArrayOfStructsWithEditCondition;
	public extern var bEditConditionForFixedArray(get, never): Bool;
	public inline extern function get_bEditConditionForFixedArray(): Bool return this.bEditConditionForFixedArray;
	public extern var FixedArrayWithEditCondition(get, never): FString;
	public inline extern function get_FixedArrayWithEditCondition(): FString return this.FixedArrayWithEditCondition;
	public extern var EditConditionFlags(get, never): cpp.Int64;
	public inline extern function get_EditConditionFlags(): cpp.Int64 return this.EditConditionFlags;
	public extern var bEnabledWhenFlagsHasTwoOrFour(get, never): Bool;
	public inline extern function get_bEnabledWhenFlagsHasTwoOrFour(): Bool return this.bEnabledWhenFlagsHasTwoOrFour;
	public extern var bDisabledWhenFlagsIsOdd(get, never): Bool;
	public inline extern function get_bDisabledWhenFlagsIsOdd(): Bool return this.bDisabledWhenFlagsIsOdd;
	public extern var InlineProperty(get, never): EComponentMobility;
	public inline extern function get_InlineProperty(): EComponentMobility return this.InlineProperty;
	public extern var PropertyThatHides(get, never): EComponentMobility;
	public inline extern function get_PropertyThatHides(): EComponentMobility return this.PropertyThatHides;
	public extern var bVisibleWhenStatic(get, never): Bool;
	public inline extern function get_bVisibleWhenStatic(): Bool return this.bVisibleWhenStatic;
	public extern var VisibleWhenStationary(get, never): cpp.Int32;
	public inline extern function get_VisibleWhenStationary(): cpp.Int32 return this.VisibleWhenStationary;
	public extern var DateTime(get, never): DateTime;
	public inline extern function get_DateTime(): DateTime return this.DateTime;
	public extern var Timespan(get, never): Timespan;
	public inline extern function get_Timespan(): Timespan return this.Timespan;
	public extern var Guid(get, never): Guid;
	public inline extern function get_Guid(): Guid return this.Guid;
	public extern var PerPlatformFloat(get, never): PerPlatformFloat;
	public inline extern function get_PerPlatformFloat(): PerPlatformFloat return this.PerPlatformFloat;
	public extern var PerPlatformInt(get, never): PerPlatformInt;
	public inline extern function get_PerPlatformInt(): PerPlatformInt return this.PerPlatformInt;
	public extern var bInlineEditConditionWithoutMetaToggle(get, never): Bool;
	public inline extern function get_bInlineEditConditionWithoutMetaToggle(): Bool return this.bInlineEditConditionWithoutMetaToggle;
	public extern var InlineEditConditionWithoutMeta(get, never): cpp.Float32;
	public inline extern function get_InlineEditConditionWithoutMeta(): cpp.Float32 return this.InlineEditConditionWithoutMeta;
	public extern var bInlineEditConditionWithMetaToggle(get, never): Bool;
	public inline extern function get_bInlineEditConditionWithMetaToggle(): Bool return this.bInlineEditConditionWithMetaToggle;
	public extern var InlineEditConditionWithMeta(get, never): cpp.Float32;
	public inline extern function get_InlineEditConditionWithMeta(): cpp.Float32 return this.InlineEditConditionWithMeta;
	public extern var bInlineEditConditionNotEditable(get, never): Bool;
	public inline extern function get_bInlineEditConditionNotEditable(): Bool return this.bInlineEditConditionNotEditable;
	public extern var HasNonEditableInlineCondition(get, never): cpp.Float32;
	public inline extern function get_HasNonEditableInlineCondition(): cpp.Float32 return this.HasNonEditableInlineCondition;
	public extern var bSharedEditCondition(get, never): Bool;
	public inline extern function get_bSharedEditCondition(): Bool return this.bSharedEditCondition;
	public extern var UsesSharedEditCondition1(get, never): cpp.Float32;
	public inline extern function get_UsesSharedEditCondition1(): cpp.Float32 return this.UsesSharedEditCondition1;
	public extern var UsesSharedEditCondition2(get, never): cpp.Float32;
	public inline extern function get_UsesSharedEditCondition2(): cpp.Float32 return this.UsesSharedEditCondition2;
	public extern var StructWithInlineCondition(get, never): PropertyEditorTestEditCondition;
	public inline extern function get_StructWithInlineCondition(): PropertyEditorTestEditCondition return this.StructWithInlineCondition;
	public extern var ArrayOfStructsWithInlineCondition(get, never): TArray<PropertyEditorTestEditCondition>;
	public inline extern function get_ArrayOfStructsWithInlineCondition(): TArray<PropertyEditorTestEditCondition> return this.ArrayOfStructsWithInlineCondition;
}

@:forward
@:nativeGen
@:native("PropertyEditorTestObject*")
abstract PropertyEditorTestObjectPtr(cpp.Star<PropertyEditorTestObject>) from cpp.Star<PropertyEditorTestObject> to cpp.Star<PropertyEditorTestObject>{
	@:from
	public static extern inline function fromValue(v: PropertyEditorTestObject): PropertyEditorTestObjectPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PropertyEditorTestObject {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}