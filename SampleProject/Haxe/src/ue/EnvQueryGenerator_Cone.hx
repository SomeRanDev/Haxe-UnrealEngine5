// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UEnvQueryGenerator_Cone")
@:include("EnvironmentQuery/Generators/EnvQueryGenerator_Cone.h")
@:structAccess
extern class EnvQueryGenerator_Cone extends EnvQueryGenerator_ProjectedPoints {
	public var AlignedPointsDistance: AIDataProviderFloatValue;
	public var ConeDegrees: AIDataProviderFloatValue;
	public var AngleStep: AIDataProviderFloatValue;
	public var Range: AIDataProviderFloatValue;
	public var CenterActor: TSubclassOf<EnvQueryContext>;
	public var bIncludeContextLocation: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstEnvQueryGenerator_Cone(EnvQueryGenerator_Cone) from EnvQueryGenerator_Cone {
	public extern var AlignedPointsDistance(get, never): AIDataProviderFloatValue;
	public inline extern function get_AlignedPointsDistance(): AIDataProviderFloatValue return this.AlignedPointsDistance;
	public extern var ConeDegrees(get, never): AIDataProviderFloatValue;
	public inline extern function get_ConeDegrees(): AIDataProviderFloatValue return this.ConeDegrees;
	public extern var AngleStep(get, never): AIDataProviderFloatValue;
	public inline extern function get_AngleStep(): AIDataProviderFloatValue return this.AngleStep;
	public extern var Range(get, never): AIDataProviderFloatValue;
	public inline extern function get_Range(): AIDataProviderFloatValue return this.Range;
	public extern var CenterActor(get, never): TSubclassOf<EnvQueryContext.ConstEnvQueryContext>;
	public inline extern function get_CenterActor(): TSubclassOf<EnvQueryContext.ConstEnvQueryContext> return this.CenterActor;
	public extern var bIncludeContextLocation(get, never): Bool;
	public inline extern function get_bIncludeContextLocation(): Bool return this.bIncludeContextLocation;
}

@:forward
@:nativeGen
@:native("EnvQueryGenerator_Cone*")
abstract EnvQueryGenerator_ConePtr(cpp.Star<EnvQueryGenerator_Cone>) from cpp.Star<EnvQueryGenerator_Cone> to cpp.Star<EnvQueryGenerator_Cone>{
	@:from
	public static extern inline function fromValue(v: EnvQueryGenerator_Cone): EnvQueryGenerator_ConePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): EnvQueryGenerator_Cone {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}