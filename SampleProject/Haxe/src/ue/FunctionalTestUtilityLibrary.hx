// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFunctionalTestUtilityLibrary")
@:include("FunctionalTestUtilityLibrary.h")
@:valueType
extern class FunctionalTestUtilityLibrary extends BlueprintFunctionLibrary {
	public function TraceChannelTestUtil(WorldContextObject: ucpp.Ptr<Object>, BatchOptions: ucpp.Ref<TraceChannelTestBatchOptions>, Start: Vector, End: Vector, SphereCapsuleRadius: ucpp.num.Float32, CapsuleHalfHeight: ucpp.num.Float32, BoxHalfSize: Vector, Orientation: Rotator, TraceChannel: TEnumAsByte<ETraceTypeQuery>, ObjectTypes: TArray<TEnumAsByte<EObjectTypeQuery>>, ProfileName: FName, bTraceComplex: Bool, ActorsToIgnore: ucpp.Ref<TArray<ucpp.Ptr<Actor>>>, bIgnoreSelf: Bool, DrawDebugType: TEnumAsByte<EDrawDebugTrace>, TraceColor: LinearColor, TraceHitColor: LinearColor, DrawTime: ucpp.num.Float32): ucpp.Ptr<TraceQueryTestResults>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstFunctionalTestUtilityLibrary(FunctionalTestUtilityLibrary) from FunctionalTestUtilityLibrary {
}

@:forward
@:nativeGen
@:native("FunctionalTestUtilityLibrary*")
abstract FunctionalTestUtilityLibraryPtr(ucpp.Ptr<FunctionalTestUtilityLibrary>) from ucpp.Ptr<FunctionalTestUtilityLibrary> to ucpp.Ptr<FunctionalTestUtilityLibrary>{
	@:from
	public static extern inline function fromValue(v: FunctionalTestUtilityLibrary): FunctionalTestUtilityLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): FunctionalTestUtilityLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}