// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UWorldPartition")
@:include("WorldPartition/WorldPartition.h")
@:valueType
extern class WorldPartition extends Object {
	public var ActorDescContainer: ucpp.Ptr<ActorDescContainer>;
	public var RuntimeHash: ucpp.Ptr<WorldPartitionRuntimeHash>;
	public var World: ucpp.Ptr<World>;
	public var bEnableStreaming: Bool;
	private var StreamingPolicy: ucpp.Ptr<WorldPartitionStreamingPolicy>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstWorldPartition(WorldPartition) from WorldPartition {
	public extern var ActorDescContainer(get, never): ucpp.Ptr<ActorDescContainer.ConstActorDescContainer>;
	public inline extern function get_ActorDescContainer(): ucpp.Ptr<ActorDescContainer.ConstActorDescContainer> return this.ActorDescContainer;
	public extern var RuntimeHash(get, never): ucpp.Ptr<WorldPartitionRuntimeHash.ConstWorldPartitionRuntimeHash>;
	public inline extern function get_RuntimeHash(): ucpp.Ptr<WorldPartitionRuntimeHash.ConstWorldPartitionRuntimeHash> return this.RuntimeHash;
	public extern var World(get, never): ucpp.Ptr<World.ConstWorld>;
	public inline extern function get_World(): ucpp.Ptr<World.ConstWorld> return this.World;
	public extern var bEnableStreaming(get, never): Bool;
	public inline extern function get_bEnableStreaming(): Bool return this.bEnableStreaming;
}

@:forward
@:nativeGen
@:native("WorldPartition*")
abstract WorldPartitionPtr(ucpp.Ptr<WorldPartition>) from ucpp.Ptr<WorldPartition> to ucpp.Ptr<WorldPartition>{
	@:from
	public static extern inline function fromValue(v: WorldPartition): WorldPartitionPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): WorldPartition {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}