// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterpGroup")
@:include("Matinee/InterpGroup.h")
@:structAccess
extern class InterpGroup extends Object {
	public var InterpTracks: TArray<cpp.Star<InterpTrack>>;
	public var GroupName: FName;
	public var GroupColor: Color;
	public var bCollapsed: Bool;
	public var bVisible: Bool;
	public var bIsFolder: Bool;
	public var bIsParented: Bool;
	private var bIsSelected: Bool;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstInterpGroup(InterpGroup) from InterpGroup {
	public extern var InterpTracks(get, never): TArray<cpp.Star<InterpTrack.ConstInterpTrack>>;
	public inline extern function get_InterpTracks(): TArray<cpp.Star<InterpTrack.ConstInterpTrack>> return this.InterpTracks;
	public extern var GroupName(get, never): FName;
	public inline extern function get_GroupName(): FName return this.GroupName;
	public extern var GroupColor(get, never): Color;
	public inline extern function get_GroupColor(): Color return this.GroupColor;
	public extern var bCollapsed(get, never): Bool;
	public inline extern function get_bCollapsed(): Bool return this.bCollapsed;
	public extern var bVisible(get, never): Bool;
	public inline extern function get_bVisible(): Bool return this.bVisible;
	public extern var bIsFolder(get, never): Bool;
	public inline extern function get_bIsFolder(): Bool return this.bIsFolder;
	public extern var bIsParented(get, never): Bool;
	public inline extern function get_bIsParented(): Bool return this.bIsParented;
}

@:forward
@:nativeGen
@:native("InterpGroup*")
abstract InterpGroupPtr(cpp.Star<InterpGroup>) from cpp.Star<InterpGroup> to cpp.Star<InterpGroup>{
	@:from
	public static extern inline function fromValue(v: InterpGroup): InterpGroupPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterpGroup {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}