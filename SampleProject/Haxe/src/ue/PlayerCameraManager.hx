// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("APlayerCameraManager")
@:include("Camera/PlayerCameraManager.h")
@:valueType
extern class PlayerCameraManager extends Actor {
	public var PCOwner: ucpp.Ptr<PlayerController>;
	private var TransformComponent: ucpp.Ptr<SceneComp>;
	public var DefaultFOV: ucpp.num.Float32;
	public var DefaultOrthoWidth: ucpp.num.Float32;
	public var DefaultAspectRatio: ucpp.num.Float32;
	public var CameraCache: CameraCacheEntry;
	public var LastFrameCameraCache: CameraCacheEntry;
	public var ViewTarget: TViewTarget;
	public var PendingViewTarget: TViewTarget;
	private var CameraCachePrivate: CameraCacheEntry;
	private var LastFrameCameraCachePrivate: CameraCacheEntry;
	@:protected public var ModifierList: TArray<ucpp.Ptr<CameraModifier>>;
	public var DefaultModifiers: TArray<TSubclassOf<CameraModifier>>;
	public var FreeCamDistance: ucpp.num.Float32;
	public var FreeCamOffset: Vector;
	public var ViewTargetOffset: Vector;
	public var OnAudioFadeChangeEvent: HaxeMulticastSparseDelegateProperty<(Bool, ucpp.num.Float32) -> Void>;
	@:protected public var CameraLensEffects: TArray<CameraLensEffectInterface>;
	@:protected public var CachedCameraShakeMod: ucpp.Ptr<CameraModifier_CameraShake>;
	@:protected public var PostProcessBlendCache: TArray<PostProcessSettings>;
	@:protected public var AnimCameraActor: ucpp.Ptr<CameraActor>;
	public var bIsOrthographic: Bool;
	public var bDefaultConstrainAspectRatio: Bool;
	public var bClientSimulatingViewTarget: Bool;
	public var bUseClientSideCameraUpdates: Bool;
	public var bGameCameraCutThisFrame: Bool;
	public var ViewPitchMin: ucpp.num.Float32;
	public var ViewPitchMax: ucpp.num.Float32;
	public var ViewYawMin: ucpp.num.Float32;
	public var ViewYawMax: ucpp.num.Float32;
	public var ViewRollMin: ucpp.num.Float32;
	public var ViewRollMax: ucpp.num.Float32;
	private var ServerUpdateCameraTimeout: ucpp.num.Float32;

	@:protected public function SwapPendingViewTargetWhenUsingClientSideCameraUpdates(): Void;
	public function StopCameraShake(ShakeInstance: ucpp.Ptr<CameraShakeBase>, bImmediately: Bool): Void;
	public function StopCameraFade(): Void;
	public function StopAllInstancesOfCameraShakeFromSource(Shake: TSubclassOf<CameraShakeBase>, SourceComponent: ucpp.Ptr<CameraShakeSourceComp>, bImmediately: Bool): Void;
	public function StopAllInstancesOfCameraShake(Shake: TSubclassOf<CameraShakeBase>, bImmediately: Bool): Void;
	public function StopAllCameraShakesFromSource(SourceComponent: ucpp.Ptr<CameraShakeSourceComp>, bImmediately: Bool): Void;
	public function StopAllCameraShakes(bImmediately: Bool): Void;
	public function StartCameraShakeFromSource(ShakeClass: TSubclassOf<CameraShakeBase>, SourceComponent: ucpp.Ptr<CameraShakeSourceComp>, Scale: ucpp.num.Float32, PlaySpace: ECameraShakePlaySpace, UserPlaySpaceRot: Rotator): ucpp.Ptr<CameraShakeBase>;
	public function StartCameraShake(ShakeClass: TSubclassOf<CameraShakeBase>, Scale: ucpp.num.Float32, PlaySpace: ECameraShakePlaySpace, UserPlaySpaceRot: Rotator): ucpp.Ptr<CameraShakeBase>;
	public function StartCameraFade(FromAlpha: ucpp.num.Float32, ToAlpha: ucpp.num.Float32, Duration: ucpp.num.Float32, Color: LinearColor, bShouldFadeAudio: Bool, bHoldWhenFinished: Bool): Void;
	public function SetManualCameraFade(InFadeAmount: ucpp.num.Float32, Color: LinearColor, bInFadeAudio: Bool): Void;
	public function SetGameCameraCutThisFrame(): Void;
	public function RemoveGenericCameraLensEffect(Emitter: CameraLensEffectInterface): Void;
	public function RemoveCameraModifier(ModifierToRemove: ucpp.Ptr<CameraModifier>): Bool;
	public function RemoveCameraLensEffect(Emitter: ucpp.Ptr<EmitterCameraLensEffectBase>): Void;
	public function PhotographyCameraModify(NewCameraLocation: Vector, PreviousCameraLocation: Vector, OriginalCameraLocation: Vector, ResultCameraLocation: ucpp.Ref<Vector>): Void;
	public function OnPhotographySessionStart(): Void;
	public function OnPhotographySessionEnd(): Void;
	public function OnPhotographyMultiPartCaptureStart(): Void;
	public function OnPhotographyMultiPartCaptureEnd(): Void;
	public function GetOwningPlayerController(): ucpp.Ptr<PlayerController>;
	public function GetFOVAngle(): ucpp.num.Float32;
	public function GetCameraRotation(): Rotator;
	public function GetCameraLocation(): Vector;
	public function FindCameraModifierByClass(ModifierClass: TSubclassOf<CameraModifier>): ucpp.Ptr<CameraModifier>;
	public function ClearCameraLensEffects(): Void;
	public function BlueprintUpdateCamera(CameraTarget: ucpp.Ptr<Actor>, NewCameraLocation: ucpp.Ref<Vector>, NewCameraRotation: ucpp.Ref<Rotator>, NewCameraFOV: ucpp.Ref<ucpp.num.Float32>): Bool;
	public function AddNewCameraModifier(ModifierClass: TSubclassOf<CameraModifier>): ucpp.Ptr<CameraModifier>;
	public function AddGenericCameraLensEffect(LensEffectEmitterClass: TSubclassOf<Actor>): CameraLensEffectInterface;
	public function AddCameraLensEffect(LensEffectEmitterClass: TSubclassOf<EmitterCameraLensEffectBase>): ucpp.Ptr<EmitterCameraLensEffectBase>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetOwningPlayerController, GetFOVAngle, GetCameraRotation, GetCameraLocation)
@:nativeGen
abstract ConstPlayerCameraManager(PlayerCameraManager) from PlayerCameraManager {
	public extern var PCOwner(get, never): ucpp.Ptr<PlayerController.ConstPlayerController>;
	public inline extern function get_PCOwner(): ucpp.Ptr<PlayerController.ConstPlayerController> return this.PCOwner;
	public extern var DefaultFOV(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultFOV(): ucpp.num.Float32 return this.DefaultFOV;
	public extern var DefaultOrthoWidth(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultOrthoWidth(): ucpp.num.Float32 return this.DefaultOrthoWidth;
	public extern var DefaultAspectRatio(get, never): ucpp.num.Float32;
	public inline extern function get_DefaultAspectRatio(): ucpp.num.Float32 return this.DefaultAspectRatio;
	public extern var CameraCache(get, never): CameraCacheEntry;
	public inline extern function get_CameraCache(): CameraCacheEntry return this.CameraCache;
	public extern var LastFrameCameraCache(get, never): CameraCacheEntry;
	public inline extern function get_LastFrameCameraCache(): CameraCacheEntry return this.LastFrameCameraCache;
	public extern var ViewTarget(get, never): TViewTarget;
	public inline extern function get_ViewTarget(): TViewTarget return this.ViewTarget;
	public extern var PendingViewTarget(get, never): TViewTarget;
	public inline extern function get_PendingViewTarget(): TViewTarget return this.PendingViewTarget;
	public extern var DefaultModifiers(get, never): TArray<TSubclassOf<CameraModifier.ConstCameraModifier>>;
	public inline extern function get_DefaultModifiers(): TArray<TSubclassOf<CameraModifier.ConstCameraModifier>> return this.DefaultModifiers;
	public extern var FreeCamDistance(get, never): ucpp.num.Float32;
	public inline extern function get_FreeCamDistance(): ucpp.num.Float32 return this.FreeCamDistance;
	public extern var FreeCamOffset(get, never): Vector;
	public inline extern function get_FreeCamOffset(): Vector return this.FreeCamOffset;
	public extern var ViewTargetOffset(get, never): Vector;
	public inline extern function get_ViewTargetOffset(): Vector return this.ViewTargetOffset;
	public extern var OnAudioFadeChangeEvent(get, never): HaxeMulticastSparseDelegateProperty<(Bool, ucpp.num.Float32) -> Void>;
	public inline extern function get_OnAudioFadeChangeEvent(): HaxeMulticastSparseDelegateProperty<(Bool, ucpp.num.Float32) -> Void> return this.OnAudioFadeChangeEvent;
	public extern var bIsOrthographic(get, never): Bool;
	public inline extern function get_bIsOrthographic(): Bool return this.bIsOrthographic;
	public extern var bDefaultConstrainAspectRatio(get, never): Bool;
	public inline extern function get_bDefaultConstrainAspectRatio(): Bool return this.bDefaultConstrainAspectRatio;
	public extern var bClientSimulatingViewTarget(get, never): Bool;
	public inline extern function get_bClientSimulatingViewTarget(): Bool return this.bClientSimulatingViewTarget;
	public extern var bUseClientSideCameraUpdates(get, never): Bool;
	public inline extern function get_bUseClientSideCameraUpdates(): Bool return this.bUseClientSideCameraUpdates;
	public extern var bGameCameraCutThisFrame(get, never): Bool;
	public inline extern function get_bGameCameraCutThisFrame(): Bool return this.bGameCameraCutThisFrame;
	public extern var ViewPitchMin(get, never): ucpp.num.Float32;
	public inline extern function get_ViewPitchMin(): ucpp.num.Float32 return this.ViewPitchMin;
	public extern var ViewPitchMax(get, never): ucpp.num.Float32;
	public inline extern function get_ViewPitchMax(): ucpp.num.Float32 return this.ViewPitchMax;
	public extern var ViewYawMin(get, never): ucpp.num.Float32;
	public inline extern function get_ViewYawMin(): ucpp.num.Float32 return this.ViewYawMin;
	public extern var ViewYawMax(get, never): ucpp.num.Float32;
	public inline extern function get_ViewYawMax(): ucpp.num.Float32 return this.ViewYawMax;
	public extern var ViewRollMin(get, never): ucpp.num.Float32;
	public inline extern function get_ViewRollMin(): ucpp.num.Float32 return this.ViewRollMin;
	public extern var ViewRollMax(get, never): ucpp.num.Float32;
	public inline extern function get_ViewRollMax(): ucpp.num.Float32 return this.ViewRollMax;
}

@:forward
@:nativeGen
@:native("PlayerCameraManager*")
abstract PlayerCameraManagerPtr(ucpp.Ptr<PlayerCameraManager>) from ucpp.Ptr<PlayerCameraManager> to ucpp.Ptr<PlayerCameraManager>{
	@:from
	public static extern inline function fromValue(v: PlayerCameraManager): PlayerCameraManagerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PlayerCameraManager {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}