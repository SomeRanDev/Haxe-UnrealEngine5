// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UCollisionProfile")
@:include("Engine/CollisionProfile.h")
@:structAccess
extern class CollisionProfile extends DeveloperSettings {
	public var Profiles: TArray<CollisionResponseTemplate>;
	public var DefaultChannelResponses: TArray<CustomChannelSetup>;
	public var EditProfiles: TArray<CustomProfile>;
	public var ProfileRedirects: TArray<Redirector>;
	public var CollisionChannelRedirects: TArray<Redirector>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstCollisionProfile(CollisionProfile) from CollisionProfile {
	public extern var Profiles(get, never): TArray<CollisionResponseTemplate>;
	public inline extern function get_Profiles(): TArray<CollisionResponseTemplate> return this.Profiles;
	public extern var DefaultChannelResponses(get, never): TArray<CustomChannelSetup>;
	public inline extern function get_DefaultChannelResponses(): TArray<CustomChannelSetup> return this.DefaultChannelResponses;
	public extern var EditProfiles(get, never): TArray<CustomProfile>;
	public inline extern function get_EditProfiles(): TArray<CustomProfile> return this.EditProfiles;
	public extern var ProfileRedirects(get, never): TArray<Redirector>;
	public inline extern function get_ProfileRedirects(): TArray<Redirector> return this.ProfileRedirects;
	public extern var CollisionChannelRedirects(get, never): TArray<Redirector>;
	public inline extern function get_CollisionChannelRedirects(): TArray<Redirector> return this.CollisionChannelRedirects;
}

@:forward
@:nativeGen
@:native("CollisionProfile*")
abstract CollisionProfilePtr(cpp.Star<CollisionProfile>) from cpp.Star<CollisionProfile> to cpp.Star<CollisionProfile>{
	@:from
	public static extern inline function fromValue(v: CollisionProfile): CollisionProfilePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): CollisionProfile {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}