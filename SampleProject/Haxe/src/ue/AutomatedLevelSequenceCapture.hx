// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAutomatedLevelSequenceCapture")
@:include("AutomatedLevelSequenceCapture.h")
@:valueType
extern class AutomatedLevelSequenceCapture extends MovieSceneCapture {
	public var LevelSequenceAsset: SoftObjectPath;
	public var ShotName: FString;
	public var bUseCustomStartFrame: Bool;
	public var CustomStartFrame: FrameNumber;
	public var bUseCustomEndFrame: Bool;
	public var CustomEndFrame: FrameNumber;
	public var WarmUpFrameCount: ucpp.num.Int32;
	public var DelayBeforeWarmUp: ucpp.num.Float32;
	public var DelayBeforeShotWarmUp: ucpp.num.Float32;
	public var DelayEveryFrame: ucpp.num.Float32;
	public var BurnInOptions: ucpp.Ptr<LevelSequenceBurnInOptions>;
	public var bWriteEditDecisionList: Bool;
	public var bWriteFinalCutProXML: Bool;
	private var LevelSequenceActor: TWeakObjectPtr<LevelSequenceActor>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAutomatedLevelSequenceCapture(AutomatedLevelSequenceCapture) from AutomatedLevelSequenceCapture {
	public extern var LevelSequenceAsset(get, never): SoftObjectPath;
	public inline extern function get_LevelSequenceAsset(): SoftObjectPath return this.LevelSequenceAsset;
	public extern var ShotName(get, never): FString;
	public inline extern function get_ShotName(): FString return this.ShotName;
	public extern var bUseCustomStartFrame(get, never): Bool;
	public inline extern function get_bUseCustomStartFrame(): Bool return this.bUseCustomStartFrame;
	public extern var CustomStartFrame(get, never): FrameNumber;
	public inline extern function get_CustomStartFrame(): FrameNumber return this.CustomStartFrame;
	public extern var bUseCustomEndFrame(get, never): Bool;
	public inline extern function get_bUseCustomEndFrame(): Bool return this.bUseCustomEndFrame;
	public extern var CustomEndFrame(get, never): FrameNumber;
	public inline extern function get_CustomEndFrame(): FrameNumber return this.CustomEndFrame;
	public extern var WarmUpFrameCount(get, never): ucpp.num.Int32;
	public inline extern function get_WarmUpFrameCount(): ucpp.num.Int32 return this.WarmUpFrameCount;
	public extern var DelayBeforeWarmUp(get, never): ucpp.num.Float32;
	public inline extern function get_DelayBeforeWarmUp(): ucpp.num.Float32 return this.DelayBeforeWarmUp;
	public extern var DelayBeforeShotWarmUp(get, never): ucpp.num.Float32;
	public inline extern function get_DelayBeforeShotWarmUp(): ucpp.num.Float32 return this.DelayBeforeShotWarmUp;
	public extern var DelayEveryFrame(get, never): ucpp.num.Float32;
	public inline extern function get_DelayEveryFrame(): ucpp.num.Float32 return this.DelayEveryFrame;
	public extern var BurnInOptions(get, never): ucpp.Ptr<LevelSequenceBurnInOptions.ConstLevelSequenceBurnInOptions>;
	public inline extern function get_BurnInOptions(): ucpp.Ptr<LevelSequenceBurnInOptions.ConstLevelSequenceBurnInOptions> return this.BurnInOptions;
	public extern var bWriteEditDecisionList(get, never): Bool;
	public inline extern function get_bWriteEditDecisionList(): Bool return this.bWriteEditDecisionList;
	public extern var bWriteFinalCutProXML(get, never): Bool;
	public inline extern function get_bWriteFinalCutProXML(): Bool return this.bWriteFinalCutProXML;
}

@:forward
@:nativeGen
@:native("AutomatedLevelSequenceCapture*")
abstract AutomatedLevelSequenceCapturePtr(ucpp.Ptr<AutomatedLevelSequenceCapture>) from ucpp.Ptr<AutomatedLevelSequenceCapture> to ucpp.Ptr<AutomatedLevelSequenceCapture>{
	@:from
	public static extern inline function fromValue(v: AutomatedLevelSequenceCapture): AutomatedLevelSequenceCapturePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AutomatedLevelSequenceCapture {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}