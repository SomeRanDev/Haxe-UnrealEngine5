// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInterchangeAssetImportData")
@:include("InterchangeAssetImportData.h")
@:valueType
extern class InterchangeAssetImportData extends AssetImportData {
	public var NodeContainer: ucpp.Ptr<InterchangeBaseNodeContainer>;
	public var NodeUniqueID: FString;
	public var Pipelines: TArray<ucpp.Ptr<Object>>;

	public function ScriptGetFirstFilename(): FString;
	public function ScriptExtractFilenames(): TArray<FString>;
	public function ScriptExtractDisplayLabels(): TArray<FString>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(ScriptGetFirstFilename, ScriptExtractFilenames, ScriptExtractDisplayLabels)
@:nativeGen
abstract ConstInterchangeAssetImportData(InterchangeAssetImportData) from InterchangeAssetImportData {
	public extern var NodeContainer(get, never): ucpp.Ptr<InterchangeBaseNodeContainer.ConstInterchangeBaseNodeContainer>;
	public inline extern function get_NodeContainer(): ucpp.Ptr<InterchangeBaseNodeContainer.ConstInterchangeBaseNodeContainer> return this.NodeContainer;
	public extern var NodeUniqueID(get, never): FString;
	public inline extern function get_NodeUniqueID(): FString return this.NodeUniqueID;
	public extern var Pipelines(get, never): TArray<ucpp.Ptr<Object.ConstObject>>;
	public inline extern function get_Pipelines(): TArray<ucpp.Ptr<Object.ConstObject>> return this.Pipelines;
}

@:forward
@:nativeGen
@:native("InterchangeAssetImportData*")
abstract InterchangeAssetImportDataPtr(ucpp.Ptr<InterchangeAssetImportData>) from ucpp.Ptr<InterchangeAssetImportData> to ucpp.Ptr<InterchangeAssetImportData>{
	@:from
	public static extern inline function fromValue(v: InterchangeAssetImportData): InterchangeAssetImportDataPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): InterchangeAssetImportData {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}