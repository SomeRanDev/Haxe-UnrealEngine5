// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTurnBasedBlueprintLibrary")
@:include("TurnBasedBlueprintLibrary.h")
@:valueType
extern class TurnBasedBlueprintLibrary extends BlueprintFunctionLibrary {
	public function RegisterTurnBasedMatchInterfaceObject(WorldContextObject: ucpp.Ptr<Object>, PlayerController: ucpp.Ptr<PlayerController>, Object: ucpp.Ptr<Object>): Void;
	public function GetPlayerDisplayName(WorldContextObject: ucpp.Ptr<Object>, PlayerController: ucpp.Ptr<PlayerController>, MatchID: FString, PlayerIndex: ucpp.num.Int32, PlayerDisplayName: ucpp.Ref<FString>): Void;
	public function GetMyPlayerIndex(WorldContextObject: ucpp.Ptr<Object>, PlayerController: ucpp.Ptr<PlayerController>, MatchID: FString, PlayerIndex: ucpp.Ref<ucpp.num.Int32>): Void;
	public function GetIsMyTurn(WorldContextObject: ucpp.Ptr<Object>, PlayerController: ucpp.Ptr<PlayerController>, MatchID: FString, bIsMyTurn: ucpp.Ref<Bool>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstTurnBasedBlueprintLibrary(TurnBasedBlueprintLibrary) from TurnBasedBlueprintLibrary {
}

@:forward
@:nativeGen
@:native("TurnBasedBlueprintLibrary*")
abstract TurnBasedBlueprintLibraryPtr(ucpp.Ptr<TurnBasedBlueprintLibrary>) from ucpp.Ptr<TurnBasedBlueprintLibrary> to ucpp.Ptr<TurnBasedBlueprintLibrary>{
	@:from
	public static extern inline function fromValue(v: TurnBasedBlueprintLibrary): TurnBasedBlueprintLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TurnBasedBlueprintLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}