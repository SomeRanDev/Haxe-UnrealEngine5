// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UInputSettings")
@:include("GameFramework/InputSettings.h")
extern class InputSettings extends Object {
	public var AxisConfig: TArray<InputAxisConfigEntry>;
	public var bAltEnterTogglesFullscreen: Bool;
	public var bF11TogglesFullscreen: Bool;
	public var bUseMouseForTouch: Bool;
	public var bEnableMouseSmoothing: Bool;
	public var bEnableFOVScaling: Bool;
	public var bCaptureMouseOnLaunch: Bool;
	public var bDefaultViewportMouseLock_DEPRECATED: Bool;
	public var bEnableLegacyInputScales: Bool;
	public var bAlwaysShowTouchInterface: Bool;
	public var bShowConsoleOnFourFingerTap: Bool;
	public var bEnableGestureRecognizer: Bool;
	public var bUseAutocorrect: Bool;
	public var ExcludedAutocorrectOS: TArray<FString>;
	public var ExcludedAutocorrectCultures: TArray<FString>;
	public var ExcludedAutocorrectDeviceModels: TArray<FString>;
	public var DefaultViewportMouseCaptureMode: EMouseCaptureMode;
	public var DefaultViewportMouseLockMode: EMouseLockMode;
	public var FOVScale: cpp.Float32;
	public var DoubleClickTime: cpp.Float32;
	public var ActionMappings: TArray<InputActionKeyMapping>;
	public var AxisMappings: TArray<InputAxisKeyMapping>;
	public var SpeechMappings: TArray<InputActionSpeechMapping>;
	public var DefaultPlayerInputClass: TSoftClassPtr<Class>;
	public var DefaultInputComponentClass: TSoftClassPtr<Class>;
	public var DefaultTouchInterface: SoftObjectPath;
	public var ConsoleKey_DEPRECATED: Key;
	public var ConsoleKeys: TArray<Key>;

	public function SaveKeyMappings(): Void;
	public function RemoveAxisMapping(KeyMapping: cpp.Reference<InputAxisKeyMapping>, bForceRebuildKeymaps: Bool): Void;
	public function RemoveActionMapping(KeyMapping: cpp.Reference<InputActionKeyMapping>, bForceRebuildKeymaps: Bool): Void;
	public function GetInputSettings(): cpp.Reference<cpp.Star<InputSettings>>;
	public function GetAxisNames(AxisNames: cpp.Reference<TArray<FName>>): Void;
	public function GetAxisMappingByName(InAxisName: FName, OutMappings: cpp.Reference<TArray<InputAxisKeyMapping>>): Void;
	public function GetActionNames(ActionNames: cpp.Reference<TArray<FName>>): Void;
	public function GetActionMappingByName(InActionName: FName, OutMappings: cpp.Reference<TArray<InputActionKeyMapping>>): Void;
	public function ForceRebuildKeymaps(): Void;
	public function AddAxisMapping(KeyMapping: cpp.Reference<InputAxisKeyMapping>, bForceRebuildKeymaps: Bool): Void;
	public function AddActionMapping(KeyMapping: cpp.Reference<InputActionKeyMapping>, bForceRebuildKeymaps: Bool): Void;
}

@:forward(GetAxisNames, GetAxisMappingByName, GetActionNames, GetActionMappingByName)
@:nativeGen
abstract ConstInputSettings(InputSettings) from InputSettings {
	public extern var AxisConfig(get, never): TArray<InputAxisConfigEntry>;
	public inline extern function get_AxisConfig(): TArray<InputAxisConfigEntry> return this.AxisConfig;
	public extern var bAltEnterTogglesFullscreen(get, never): Bool;
	public inline extern function get_bAltEnterTogglesFullscreen(): Bool return this.bAltEnterTogglesFullscreen;
	public extern var bF11TogglesFullscreen(get, never): Bool;
	public inline extern function get_bF11TogglesFullscreen(): Bool return this.bF11TogglesFullscreen;
	public extern var bUseMouseForTouch(get, never): Bool;
	public inline extern function get_bUseMouseForTouch(): Bool return this.bUseMouseForTouch;
	public extern var bEnableMouseSmoothing(get, never): Bool;
	public inline extern function get_bEnableMouseSmoothing(): Bool return this.bEnableMouseSmoothing;
	public extern var bEnableFOVScaling(get, never): Bool;
	public inline extern function get_bEnableFOVScaling(): Bool return this.bEnableFOVScaling;
	public extern var bCaptureMouseOnLaunch(get, never): Bool;
	public inline extern function get_bCaptureMouseOnLaunch(): Bool return this.bCaptureMouseOnLaunch;
	public extern var bDefaultViewportMouseLock_DEPRECATED(get, never): Bool;
	public inline extern function get_bDefaultViewportMouseLock_DEPRECATED(): Bool return this.bDefaultViewportMouseLock_DEPRECATED;
	public extern var bEnableLegacyInputScales(get, never): Bool;
	public inline extern function get_bEnableLegacyInputScales(): Bool return this.bEnableLegacyInputScales;
	public extern var bAlwaysShowTouchInterface(get, never): Bool;
	public inline extern function get_bAlwaysShowTouchInterface(): Bool return this.bAlwaysShowTouchInterface;
	public extern var bShowConsoleOnFourFingerTap(get, never): Bool;
	public inline extern function get_bShowConsoleOnFourFingerTap(): Bool return this.bShowConsoleOnFourFingerTap;
	public extern var bEnableGestureRecognizer(get, never): Bool;
	public inline extern function get_bEnableGestureRecognizer(): Bool return this.bEnableGestureRecognizer;
	public extern var bUseAutocorrect(get, never): Bool;
	public inline extern function get_bUseAutocorrect(): Bool return this.bUseAutocorrect;
	public extern var ExcludedAutocorrectOS(get, never): TArray<FString>;
	public inline extern function get_ExcludedAutocorrectOS(): TArray<FString> return this.ExcludedAutocorrectOS;
	public extern var ExcludedAutocorrectCultures(get, never): TArray<FString>;
	public inline extern function get_ExcludedAutocorrectCultures(): TArray<FString> return this.ExcludedAutocorrectCultures;
	public extern var ExcludedAutocorrectDeviceModels(get, never): TArray<FString>;
	public inline extern function get_ExcludedAutocorrectDeviceModels(): TArray<FString> return this.ExcludedAutocorrectDeviceModels;
	public extern var DefaultViewportMouseCaptureMode(get, never): EMouseCaptureMode;
	public inline extern function get_DefaultViewportMouseCaptureMode(): EMouseCaptureMode return this.DefaultViewportMouseCaptureMode;
	public extern var DefaultViewportMouseLockMode(get, never): EMouseLockMode;
	public inline extern function get_DefaultViewportMouseLockMode(): EMouseLockMode return this.DefaultViewportMouseLockMode;
	public extern var FOVScale(get, never): cpp.Float32;
	public inline extern function get_FOVScale(): cpp.Float32 return this.FOVScale;
	public extern var DoubleClickTime(get, never): cpp.Float32;
	public inline extern function get_DoubleClickTime(): cpp.Float32 return this.DoubleClickTime;
	public extern var ActionMappings(get, never): TArray<InputActionKeyMapping>;
	public inline extern function get_ActionMappings(): TArray<InputActionKeyMapping> return this.ActionMappings;
	public extern var AxisMappings(get, never): TArray<InputAxisKeyMapping>;
	public inline extern function get_AxisMappings(): TArray<InputAxisKeyMapping> return this.AxisMappings;
	public extern var SpeechMappings(get, never): TArray<InputActionSpeechMapping>;
	public inline extern function get_SpeechMappings(): TArray<InputActionSpeechMapping> return this.SpeechMappings;
	public extern var DefaultPlayerInputClass(get, never): TSoftClassPtr<Class.ConstClass>;
	public inline extern function get_DefaultPlayerInputClass(): TSoftClassPtr<Class.ConstClass> return this.DefaultPlayerInputClass;
	public extern var DefaultInputComponentClass(get, never): TSoftClassPtr<Class.ConstClass>;
	public inline extern function get_DefaultInputComponentClass(): TSoftClassPtr<Class.ConstClass> return this.DefaultInputComponentClass;
	public extern var DefaultTouchInterface(get, never): SoftObjectPath;
	public inline extern function get_DefaultTouchInterface(): SoftObjectPath return this.DefaultTouchInterface;
	public extern var ConsoleKey_DEPRECATED(get, never): Key;
	public inline extern function get_ConsoleKey_DEPRECATED(): Key return this.ConsoleKey_DEPRECATED;
	public extern var ConsoleKeys(get, never): TArray<Key>;
	public inline extern function get_ConsoleKeys(): TArray<Key> return this.ConsoleKeys;
}