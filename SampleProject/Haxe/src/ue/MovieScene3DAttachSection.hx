// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMovieScene3DAttachSection")
@:include("Sections/MovieScene3DAttachSection.h")
@:structAccess
extern class MovieScene3DAttachSection extends MovieScene3DConstraintSection {
	public var AttachSocketName: FName;
	public var AttachComponentName: FName;
	public var bFullRevertOnDetach: Bool;
	public var ReAttachOnDetach: TSoftObjectPtr<SceneComp>;
	public var AttachmentLocationRule: EAttachmentRule;
	public var AttachmentRotationRule: EAttachmentRule;
	public var AttachmentScaleRule: EAttachmentRule;
	public var DetachmentLocationRule: EDetachmentRule;
	public var DetachmentRotationRule: EDetachmentRule;
	public var DetachmentScaleRule: EDetachmentRule;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstMovieScene3DAttachSection(MovieScene3DAttachSection) from MovieScene3DAttachSection {
	public extern var AttachSocketName(get, never): FName;
	public inline extern function get_AttachSocketName(): FName return this.AttachSocketName;
	public extern var AttachComponentName(get, never): FName;
	public inline extern function get_AttachComponentName(): FName return this.AttachComponentName;
	public extern var bFullRevertOnDetach(get, never): Bool;
	public inline extern function get_bFullRevertOnDetach(): Bool return this.bFullRevertOnDetach;
	public extern var ReAttachOnDetach(get, never): TSoftObjectPtr<SceneComp.ConstSceneComp>;
	public inline extern function get_ReAttachOnDetach(): TSoftObjectPtr<SceneComp.ConstSceneComp> return this.ReAttachOnDetach;
	public extern var AttachmentLocationRule(get, never): EAttachmentRule;
	public inline extern function get_AttachmentLocationRule(): EAttachmentRule return this.AttachmentLocationRule;
	public extern var AttachmentRotationRule(get, never): EAttachmentRule;
	public inline extern function get_AttachmentRotationRule(): EAttachmentRule return this.AttachmentRotationRule;
	public extern var AttachmentScaleRule(get, never): EAttachmentRule;
	public inline extern function get_AttachmentScaleRule(): EAttachmentRule return this.AttachmentScaleRule;
	public extern var DetachmentLocationRule(get, never): EDetachmentRule;
	public inline extern function get_DetachmentLocationRule(): EDetachmentRule return this.DetachmentLocationRule;
	public extern var DetachmentRotationRule(get, never): EDetachmentRule;
	public inline extern function get_DetachmentRotationRule(): EDetachmentRule return this.DetachmentRotationRule;
	public extern var DetachmentScaleRule(get, never): EDetachmentRule;
	public inline extern function get_DetachmentScaleRule(): EDetachmentRule return this.DetachmentScaleRule;
}

@:forward
@:nativeGen
@:native("MovieScene3DAttachSection*")
abstract MovieScene3DAttachSectionPtr(cpp.Star<MovieScene3DAttachSection>) from cpp.Star<MovieScene3DAttachSection> to cpp.Star<MovieScene3DAttachSection>{
	@:from
	public static extern inline function fromValue(v: MovieScene3DAttachSection): MovieScene3DAttachSectionPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MovieScene3DAttachSection {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}