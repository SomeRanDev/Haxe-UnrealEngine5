// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UBorder")
@:include("Components/Border.h")
extern class UBorder extends UContentWidget {
	public var HorizontalAlignment: EHorizontalAlignment;
	public var VerticalAlignment: EVerticalAlignment;
	public var bShowEffectWhenDisabled: Bool;
	public var ContentColorAndOpacity: FLinearColor;
	public var ContentColorAndOpacityDelegate: HaxeDelegateProperty<() -> Void>;
	public var Padding: FMargin;
	public var Background: FSlateBrush;
	public var BackgroundDelegate: HaxeDelegateProperty<() -> Void>;
	public var BrushColor: FLinearColor;
	public var BrushColorDelegate: HaxeDelegateProperty<() -> Void>;
	public var DesiredSizeScale: FVector2D;
	public var bFlipForRightToLeftFlowDirection: Bool;
	public var OnMouseButtonDownEvent: HaxeDelegateProperty<(FGeometry, FPointerEvent) -> Void>;
	public var OnMouseButtonUpEvent: HaxeDelegateProperty<(FGeometry, FPointerEvent) -> Void>;
	public var OnMouseMoveEvent: HaxeDelegateProperty<(FGeometry, FPointerEvent) -> Void>;
	public var OnMouseDoubleClickEvent: HaxeDelegateProperty<(FGeometry, FPointerEvent) -> Void>;
	public var Brush_DEPRECATED: TObjectPtr<USlateBrushAsset>;

	public function SetVerticalAlignment(InVerticalAlignment: EVerticalAlignment): Void;
	public function SetPadding(InPadding: FMargin): Void;
	public function SetHorizontalAlignment(InHorizontalAlignment: EHorizontalAlignment): Void;
	public function SetDesiredSizeScale(InScale: FVector2D): Void;
	public function SetContentColorAndOpacity(InContentColorAndOpacity: FLinearColor): Void;
	public function SetBrushFromTexture(Texture: cpp.Star<UTexture2D>): Void;
	public function SetBrushFromMaterial(Material: cpp.Star<UMaterialInterface>): Void;
	public function SetBrushFromAsset(Asset: cpp.Star<USlateBrushAsset>): Void;
	public function SetBrushColor(InBrushColor: FLinearColor): Void;
	public function SetBrush(InBrush: FSlateBrush): Void;
	public function GetDynamicMaterial(): cpp.Star<UMaterialInstanceDynamic>;
}
