// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UShaderCookerStats")
@:include("ShaderCookerStats.h")
@:structAccess
extern class ShaderCookerStats extends Object {
	public var Name: FString;
	public var Platform: FString;
	public var Category: FString;
	public var Compiled: cpp.Int32;
	public var Cooked: cpp.Int32;
	public var Permutations: cpp.Int32;
	public var CompileTime: cpp.Float32;
	public var Path: FString;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstShaderCookerStats(ShaderCookerStats) from ShaderCookerStats {
	public extern var Name(get, never): FString;
	public inline extern function get_Name(): FString return this.Name;
	public extern var Platform(get, never): FString;
	public inline extern function get_Platform(): FString return this.Platform;
	public extern var Category(get, never): FString;
	public inline extern function get_Category(): FString return this.Category;
	public extern var Compiled(get, never): cpp.Int32;
	public inline extern function get_Compiled(): cpp.Int32 return this.Compiled;
	public extern var Cooked(get, never): cpp.Int32;
	public inline extern function get_Cooked(): cpp.Int32 return this.Cooked;
	public extern var Permutations(get, never): cpp.Int32;
	public inline extern function get_Permutations(): cpp.Int32 return this.Permutations;
	public extern var CompileTime(get, never): cpp.Float32;
	public inline extern function get_CompileTime(): cpp.Float32 return this.CompileTime;
	public extern var Path(get, never): FString;
	public inline extern function get_Path(): FString return this.Path;
}

@:forward
@:nativeGen
@:native("ShaderCookerStats*")
abstract ShaderCookerStatsPtr(cpp.Star<ShaderCookerStats>) from cpp.Star<ShaderCookerStats> to cpp.Star<ShaderCookerStats>{
	@:from
	public static extern inline function fromValue(v: ShaderCookerStats): ShaderCookerStatsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ShaderCookerStats {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}