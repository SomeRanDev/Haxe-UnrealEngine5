// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UTimelineTemplate")
@:include("Engine/TimelineTemplate.h")
@:valueType
extern class TimelineTemplate extends Object {
	public var TimelineLength: ucpp.num.Float32;
	public var LengthMode: TEnumAsByte<ETimelineLengthMode>;
	public var bAutoPlay: Bool;
	public var bLoop: Bool;
	public var bReplicated: Bool;
	public var bIgnoreTimeDilation: Bool;
	public var EventTracks: TArray<TTEventTrack>;
	public var FloatTracks: TArray<TTFloatTrack>;
	public var VectorTracks: TArray<TTVectorTrack>;
	public var LinearColorTracks: TArray<TTLinearColorTrack>;
	public var MetaDataArray: TArray<BPVariableMetaDataEntry>;
	public var TimelineGuid: Guid;
	public var TimelineTickGroup: TEnumAsByte<ETickingGroup>;
	private var VariableName: FName;
	private var DirectionPropertyName: FName;
	private var UpdateFunctionName: FName;
	private var FinishedFunctionName: FName;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstTimelineTemplate(TimelineTemplate) from TimelineTemplate {
	public extern var TimelineLength(get, never): ucpp.num.Float32;
	public inline extern function get_TimelineLength(): ucpp.num.Float32 return this.TimelineLength;
	public extern var LengthMode(get, never): TEnumAsByte<ETimelineLengthMode>;
	public inline extern function get_LengthMode(): TEnumAsByte<ETimelineLengthMode> return this.LengthMode;
	public extern var bAutoPlay(get, never): Bool;
	public inline extern function get_bAutoPlay(): Bool return this.bAutoPlay;
	public extern var bLoop(get, never): Bool;
	public inline extern function get_bLoop(): Bool return this.bLoop;
	public extern var bReplicated(get, never): Bool;
	public inline extern function get_bReplicated(): Bool return this.bReplicated;
	public extern var bIgnoreTimeDilation(get, never): Bool;
	public inline extern function get_bIgnoreTimeDilation(): Bool return this.bIgnoreTimeDilation;
	public extern var EventTracks(get, never): TArray<TTEventTrack>;
	public inline extern function get_EventTracks(): TArray<TTEventTrack> return this.EventTracks;
	public extern var FloatTracks(get, never): TArray<TTFloatTrack>;
	public inline extern function get_FloatTracks(): TArray<TTFloatTrack> return this.FloatTracks;
	public extern var VectorTracks(get, never): TArray<TTVectorTrack>;
	public inline extern function get_VectorTracks(): TArray<TTVectorTrack> return this.VectorTracks;
	public extern var LinearColorTracks(get, never): TArray<TTLinearColorTrack>;
	public inline extern function get_LinearColorTracks(): TArray<TTLinearColorTrack> return this.LinearColorTracks;
	public extern var MetaDataArray(get, never): TArray<BPVariableMetaDataEntry>;
	public inline extern function get_MetaDataArray(): TArray<BPVariableMetaDataEntry> return this.MetaDataArray;
	public extern var TimelineGuid(get, never): Guid;
	public inline extern function get_TimelineGuid(): Guid return this.TimelineGuid;
	public extern var TimelineTickGroup(get, never): TEnumAsByte<ETickingGroup>;
	public inline extern function get_TimelineTickGroup(): TEnumAsByte<ETickingGroup> return this.TimelineTickGroup;
}

@:forward
@:nativeGen
@:native("TimelineTemplate*")
abstract TimelineTemplatePtr(ucpp.Ptr<TimelineTemplate>) from ucpp.Ptr<TimelineTemplate> to ucpp.Ptr<TimelineTemplate>{
	@:from
	public static extern inline function fromValue(v: TimelineTemplate): TimelineTemplatePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): TimelineTemplate {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}