// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UContentBrowserFolderContext")
@:include("ContentBrowserMenuContexts.h")
@:valueType
extern class ContentBrowserFolderContext extends ContentBrowserMenuContext {
	public var bCanBeModified: Bool;
	public var bNoFolderOnDisk: Bool;
	public var NumAssetPaths: ucpp.num.Int32;
	public var NumClassPaths: ucpp.num.Int32;
	public var SelectedPackagePaths: TArray<FString>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstContentBrowserFolderContext(ContentBrowserFolderContext) from ContentBrowserFolderContext {
	public extern var bCanBeModified(get, never): Bool;
	public inline extern function get_bCanBeModified(): Bool return this.bCanBeModified;
	public extern var bNoFolderOnDisk(get, never): Bool;
	public inline extern function get_bNoFolderOnDisk(): Bool return this.bNoFolderOnDisk;
	public extern var NumAssetPaths(get, never): ucpp.num.Int32;
	public inline extern function get_NumAssetPaths(): ucpp.num.Int32 return this.NumAssetPaths;
	public extern var NumClassPaths(get, never): ucpp.num.Int32;
	public inline extern function get_NumClassPaths(): ucpp.num.Int32 return this.NumClassPaths;
	public extern var SelectedPackagePaths(get, never): TArray<FString>;
	public inline extern function get_SelectedPackagePaths(): TArray<FString> return this.SelectedPackagePaths;
}

@:forward
@:nativeGen
@:native("ContentBrowserFolderContext*")
abstract ContentBrowserFolderContextPtr(ucpp.Ptr<ContentBrowserFolderContext>) from ucpp.Ptr<ContentBrowserFolderContext> to ucpp.Ptr<ContentBrowserFolderContext>{
	@:from
	public static extern inline function fromValue(v: ContentBrowserFolderContext): ContentBrowserFolderContextPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ContentBrowserFolderContext {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}