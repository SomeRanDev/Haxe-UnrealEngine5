// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UFoliageType")
@:include("FoliageType.h")
@:valueType
extern class FoliageType extends Object {
	public var UpdateGuid: Guid;
	public var Density: ucpp.num.Float32;
	public var DensityAdjustmentFactor: ucpp.num.Float32;
	public var Radius: ucpp.num.Float32;
	public var bSingleInstanceModeOverrideRadius: Bool;
	public var SingleInstanceModeRadius: ucpp.num.Float32;
	public var Scaling: EFoliageScaling;
	public var ScaleX: FloatInterval;
	public var ScaleY: FloatInterval;
	public var ScaleZ: FloatInterval;
	public var VertexColorMaskByChannel: FoliageVertexColorChannelMask;
	public var ZOffset: FloatInterval;
	public var AlignToNormal: Bool;
	public var AverageNormal: Bool;
	public var AverageNormalSingleComponent: Bool;
	public var AlignMaxAngle: ucpp.num.Float32;
	public var RandomYaw: Bool;
	public var RandomPitchAngle: ucpp.num.Float32;
	public var GroundSlopeAngle: FloatInterval;
	public var Height: FloatInterval;
	public var LandscapeLayers: TArray<FName>;
	public var MinimumLayerWeight: ucpp.num.Float32;
	public var ExclusionLandscapeLayers: TArray<FName>;
	public var MinimumExclusionLayerWeight: ucpp.num.Float32;
	public var CollisionWithWorld: Bool;
	public var CollisionScale: Vector;
	public var AverageNormalSampleCount: ucpp.num.Int32;
	public var MeshBounds: BoxSphereBounds;
	public var LowBoundOriginRadius: Vector;
	public var Mobility: TEnumAsByte<EComponentMobility>;
	public var CullDistance: Int32Interval;
	public var CastShadow: Bool;
	public var bAffectDynamicIndirectLighting: Bool;
	public var bAffectDistanceFieldLighting: Bool;
	public var bCastDynamicShadow: Bool;
	public var bCastStaticShadow: Bool;
	public var bCastContactShadow: Bool;
	public var bCastShadowAsTwoSided: Bool;
	public var bReceivesDecals: Bool;
	public var bOverrideLightMapRes: Bool;
	public var OverriddenLightMapRes: ucpp.num.Int32;
	public var LightmapType: ELightmapType;
	public var bUseAsOccluder: Bool;
	public var bVisibleInRayTracing: Bool;
	public var bEvaluateWorldPositionOffset: Bool;
	public var WorldPositionOffsetDisableDistance: ucpp.num.Int32;
	public var BodyInstance: BodyInstance;
	public var CustomNavigableGeometry: TEnumAsByte<EHasCustomNavigableGeometry>;
	public var LightingChannels: LightingChannels;
	public var bRenderCustomDepth: Bool;
	public var CustomDepthStencilWriteMask: ERendererStencilMask;
	public var CustomDepthStencilValue: ucpp.num.Int32;
	public var TranslucencySortPriority: ucpp.num.Int32;
	public var CollisionRadius: ucpp.num.Float32;
	public var ShadeRadius: ucpp.num.Float32;
	public var NumSteps: ucpp.num.Int32;
	public var InitialSeedDensity: ucpp.num.Float32;
	public var AverageSpreadDistance: ucpp.num.Float32;
	public var SpreadVariance: ucpp.num.Float32;
	public var SeedsPerStep: ucpp.num.Int32;
	public var DistributionSeed: ucpp.num.Int32;
	public var MaxInitialSeedOffset: ucpp.num.Float32;
	public var bCanGrowInShade: Bool;
	public var bSpawnsInShade: Bool;
	public var MaxInitialAge: ucpp.num.Float32;
	public var MaxAge: ucpp.num.Float32;
	public var OverlapPriority: ucpp.num.Float32;
	public var ProceduralScale: FloatInterval;
	public var ScaleCurve: RuntimeFloatCurve;
	public var DensityFalloff: FoliageDensityFalloff;
	public var ChangeCount: ucpp.num.Int32;
	public var ReapplyDensity: Bool;
	public var ReapplyRadius: Bool;
	public var ReapplyAlignToNormal: Bool;
	public var ReapplyRandomYaw: Bool;
	public var ReapplyScaling: Bool;
	public var ReapplyScaleX: Bool;
	public var ReapplyScaleY: Bool;
	public var ReapplyScaleZ: Bool;
	public var ReapplyRandomPitchAngle: Bool;
	public var ReapplyGroundSlope: Bool;
	public var ReapplyHeight: Bool;
	public var ReapplyLandscapeLayers: Bool;
	public var ReapplyZOffset: Bool;
	public var ReapplyCollisionWithWorld: Bool;
	public var ReapplyVertexColorMask: Bool;
	public var bEnableDensityScaling: Bool;
	public var bEnableDiscardOnLoad: Bool;
	public var bEnableCullDistanceScaling: Bool;
	public var RuntimeVirtualTextures: TArray<ucpp.Ptr<RuntimeVirtualTexture>>;
	public var VirtualTextureCullMips: ucpp.num.Int32;
	public var VirtualTextureRenderPassType: ERuntimeVirtualTextureMainPassType;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstFoliageType(FoliageType) from FoliageType {
	public extern var UpdateGuid(get, never): Guid;
	public inline extern function get_UpdateGuid(): Guid return this.UpdateGuid;
	public extern var Density(get, never): ucpp.num.Float32;
	public inline extern function get_Density(): ucpp.num.Float32 return this.Density;
	public extern var DensityAdjustmentFactor(get, never): ucpp.num.Float32;
	public inline extern function get_DensityAdjustmentFactor(): ucpp.num.Float32 return this.DensityAdjustmentFactor;
	public extern var Radius(get, never): ucpp.num.Float32;
	public inline extern function get_Radius(): ucpp.num.Float32 return this.Radius;
	public extern var bSingleInstanceModeOverrideRadius(get, never): Bool;
	public inline extern function get_bSingleInstanceModeOverrideRadius(): Bool return this.bSingleInstanceModeOverrideRadius;
	public extern var SingleInstanceModeRadius(get, never): ucpp.num.Float32;
	public inline extern function get_SingleInstanceModeRadius(): ucpp.num.Float32 return this.SingleInstanceModeRadius;
	public extern var Scaling(get, never): EFoliageScaling;
	public inline extern function get_Scaling(): EFoliageScaling return this.Scaling;
	public extern var ScaleX(get, never): FloatInterval;
	public inline extern function get_ScaleX(): FloatInterval return this.ScaleX;
	public extern var ScaleY(get, never): FloatInterval;
	public inline extern function get_ScaleY(): FloatInterval return this.ScaleY;
	public extern var ScaleZ(get, never): FloatInterval;
	public inline extern function get_ScaleZ(): FloatInterval return this.ScaleZ;
	public extern var VertexColorMaskByChannel(get, never): FoliageVertexColorChannelMask;
	public inline extern function get_VertexColorMaskByChannel(): FoliageVertexColorChannelMask return this.VertexColorMaskByChannel;
	public extern var ZOffset(get, never): FloatInterval;
	public inline extern function get_ZOffset(): FloatInterval return this.ZOffset;
	public extern var AlignToNormal(get, never): Bool;
	public inline extern function get_AlignToNormal(): Bool return this.AlignToNormal;
	public extern var AverageNormal(get, never): Bool;
	public inline extern function get_AverageNormal(): Bool return this.AverageNormal;
	public extern var AverageNormalSingleComponent(get, never): Bool;
	public inline extern function get_AverageNormalSingleComponent(): Bool return this.AverageNormalSingleComponent;
	public extern var AlignMaxAngle(get, never): ucpp.num.Float32;
	public inline extern function get_AlignMaxAngle(): ucpp.num.Float32 return this.AlignMaxAngle;
	public extern var RandomYaw(get, never): Bool;
	public inline extern function get_RandomYaw(): Bool return this.RandomYaw;
	public extern var RandomPitchAngle(get, never): ucpp.num.Float32;
	public inline extern function get_RandomPitchAngle(): ucpp.num.Float32 return this.RandomPitchAngle;
	public extern var GroundSlopeAngle(get, never): FloatInterval;
	public inline extern function get_GroundSlopeAngle(): FloatInterval return this.GroundSlopeAngle;
	public extern var Height(get, never): FloatInterval;
	public inline extern function get_Height(): FloatInterval return this.Height;
	public extern var LandscapeLayers(get, never): TArray<FName>;
	public inline extern function get_LandscapeLayers(): TArray<FName> return this.LandscapeLayers;
	public extern var MinimumLayerWeight(get, never): ucpp.num.Float32;
	public inline extern function get_MinimumLayerWeight(): ucpp.num.Float32 return this.MinimumLayerWeight;
	public extern var ExclusionLandscapeLayers(get, never): TArray<FName>;
	public inline extern function get_ExclusionLandscapeLayers(): TArray<FName> return this.ExclusionLandscapeLayers;
	public extern var MinimumExclusionLayerWeight(get, never): ucpp.num.Float32;
	public inline extern function get_MinimumExclusionLayerWeight(): ucpp.num.Float32 return this.MinimumExclusionLayerWeight;
	public extern var CollisionWithWorld(get, never): Bool;
	public inline extern function get_CollisionWithWorld(): Bool return this.CollisionWithWorld;
	public extern var CollisionScale(get, never): Vector;
	public inline extern function get_CollisionScale(): Vector return this.CollisionScale;
	public extern var AverageNormalSampleCount(get, never): ucpp.num.Int32;
	public inline extern function get_AverageNormalSampleCount(): ucpp.num.Int32 return this.AverageNormalSampleCount;
	public extern var MeshBounds(get, never): BoxSphereBounds;
	public inline extern function get_MeshBounds(): BoxSphereBounds return this.MeshBounds;
	public extern var LowBoundOriginRadius(get, never): Vector;
	public inline extern function get_LowBoundOriginRadius(): Vector return this.LowBoundOriginRadius;
	public extern var Mobility(get, never): TEnumAsByte<EComponentMobility>;
	public inline extern function get_Mobility(): TEnumAsByte<EComponentMobility> return this.Mobility;
	public extern var CullDistance(get, never): Int32Interval;
	public inline extern function get_CullDistance(): Int32Interval return this.CullDistance;
	public extern var CastShadow(get, never): Bool;
	public inline extern function get_CastShadow(): Bool return this.CastShadow;
	public extern var bAffectDynamicIndirectLighting(get, never): Bool;
	public inline extern function get_bAffectDynamicIndirectLighting(): Bool return this.bAffectDynamicIndirectLighting;
	public extern var bAffectDistanceFieldLighting(get, never): Bool;
	public inline extern function get_bAffectDistanceFieldLighting(): Bool return this.bAffectDistanceFieldLighting;
	public extern var bCastDynamicShadow(get, never): Bool;
	public inline extern function get_bCastDynamicShadow(): Bool return this.bCastDynamicShadow;
	public extern var bCastStaticShadow(get, never): Bool;
	public inline extern function get_bCastStaticShadow(): Bool return this.bCastStaticShadow;
	public extern var bCastContactShadow(get, never): Bool;
	public inline extern function get_bCastContactShadow(): Bool return this.bCastContactShadow;
	public extern var bCastShadowAsTwoSided(get, never): Bool;
	public inline extern function get_bCastShadowAsTwoSided(): Bool return this.bCastShadowAsTwoSided;
	public extern var bReceivesDecals(get, never): Bool;
	public inline extern function get_bReceivesDecals(): Bool return this.bReceivesDecals;
	public extern var bOverrideLightMapRes(get, never): Bool;
	public inline extern function get_bOverrideLightMapRes(): Bool return this.bOverrideLightMapRes;
	public extern var OverriddenLightMapRes(get, never): ucpp.num.Int32;
	public inline extern function get_OverriddenLightMapRes(): ucpp.num.Int32 return this.OverriddenLightMapRes;
	public extern var LightmapType(get, never): ELightmapType;
	public inline extern function get_LightmapType(): ELightmapType return this.LightmapType;
	public extern var bUseAsOccluder(get, never): Bool;
	public inline extern function get_bUseAsOccluder(): Bool return this.bUseAsOccluder;
	public extern var bVisibleInRayTracing(get, never): Bool;
	public inline extern function get_bVisibleInRayTracing(): Bool return this.bVisibleInRayTracing;
	public extern var bEvaluateWorldPositionOffset(get, never): Bool;
	public inline extern function get_bEvaluateWorldPositionOffset(): Bool return this.bEvaluateWorldPositionOffset;
	public extern var WorldPositionOffsetDisableDistance(get, never): ucpp.num.Int32;
	public inline extern function get_WorldPositionOffsetDisableDistance(): ucpp.num.Int32 return this.WorldPositionOffsetDisableDistance;
	public extern var BodyInstance(get, never): BodyInstance;
	public inline extern function get_BodyInstance(): BodyInstance return this.BodyInstance;
	public extern var CustomNavigableGeometry(get, never): TEnumAsByte<EHasCustomNavigableGeometry>;
	public inline extern function get_CustomNavigableGeometry(): TEnumAsByte<EHasCustomNavigableGeometry> return this.CustomNavigableGeometry;
	public extern var LightingChannels(get, never): LightingChannels;
	public inline extern function get_LightingChannels(): LightingChannels return this.LightingChannels;
	public extern var bRenderCustomDepth(get, never): Bool;
	public inline extern function get_bRenderCustomDepth(): Bool return this.bRenderCustomDepth;
	public extern var CustomDepthStencilWriteMask(get, never): ERendererStencilMask;
	public inline extern function get_CustomDepthStencilWriteMask(): ERendererStencilMask return this.CustomDepthStencilWriteMask;
	public extern var CustomDepthStencilValue(get, never): ucpp.num.Int32;
	public inline extern function get_CustomDepthStencilValue(): ucpp.num.Int32 return this.CustomDepthStencilValue;
	public extern var TranslucencySortPriority(get, never): ucpp.num.Int32;
	public inline extern function get_TranslucencySortPriority(): ucpp.num.Int32 return this.TranslucencySortPriority;
	public extern var CollisionRadius(get, never): ucpp.num.Float32;
	public inline extern function get_CollisionRadius(): ucpp.num.Float32 return this.CollisionRadius;
	public extern var ShadeRadius(get, never): ucpp.num.Float32;
	public inline extern function get_ShadeRadius(): ucpp.num.Float32 return this.ShadeRadius;
	public extern var NumSteps(get, never): ucpp.num.Int32;
	public inline extern function get_NumSteps(): ucpp.num.Int32 return this.NumSteps;
	public extern var InitialSeedDensity(get, never): ucpp.num.Float32;
	public inline extern function get_InitialSeedDensity(): ucpp.num.Float32 return this.InitialSeedDensity;
	public extern var AverageSpreadDistance(get, never): ucpp.num.Float32;
	public inline extern function get_AverageSpreadDistance(): ucpp.num.Float32 return this.AverageSpreadDistance;
	public extern var SpreadVariance(get, never): ucpp.num.Float32;
	public inline extern function get_SpreadVariance(): ucpp.num.Float32 return this.SpreadVariance;
	public extern var SeedsPerStep(get, never): ucpp.num.Int32;
	public inline extern function get_SeedsPerStep(): ucpp.num.Int32 return this.SeedsPerStep;
	public extern var DistributionSeed(get, never): ucpp.num.Int32;
	public inline extern function get_DistributionSeed(): ucpp.num.Int32 return this.DistributionSeed;
	public extern var MaxInitialSeedOffset(get, never): ucpp.num.Float32;
	public inline extern function get_MaxInitialSeedOffset(): ucpp.num.Float32 return this.MaxInitialSeedOffset;
	public extern var bCanGrowInShade(get, never): Bool;
	public inline extern function get_bCanGrowInShade(): Bool return this.bCanGrowInShade;
	public extern var bSpawnsInShade(get, never): Bool;
	public inline extern function get_bSpawnsInShade(): Bool return this.bSpawnsInShade;
	public extern var MaxInitialAge(get, never): ucpp.num.Float32;
	public inline extern function get_MaxInitialAge(): ucpp.num.Float32 return this.MaxInitialAge;
	public extern var MaxAge(get, never): ucpp.num.Float32;
	public inline extern function get_MaxAge(): ucpp.num.Float32 return this.MaxAge;
	public extern var OverlapPriority(get, never): ucpp.num.Float32;
	public inline extern function get_OverlapPriority(): ucpp.num.Float32 return this.OverlapPriority;
	public extern var ProceduralScale(get, never): FloatInterval;
	public inline extern function get_ProceduralScale(): FloatInterval return this.ProceduralScale;
	public extern var ScaleCurve(get, never): RuntimeFloatCurve;
	public inline extern function get_ScaleCurve(): RuntimeFloatCurve return this.ScaleCurve;
	public extern var DensityFalloff(get, never): FoliageDensityFalloff;
	public inline extern function get_DensityFalloff(): FoliageDensityFalloff return this.DensityFalloff;
	public extern var ChangeCount(get, never): ucpp.num.Int32;
	public inline extern function get_ChangeCount(): ucpp.num.Int32 return this.ChangeCount;
	public extern var ReapplyDensity(get, never): Bool;
	public inline extern function get_ReapplyDensity(): Bool return this.ReapplyDensity;
	public extern var ReapplyRadius(get, never): Bool;
	public inline extern function get_ReapplyRadius(): Bool return this.ReapplyRadius;
	public extern var ReapplyAlignToNormal(get, never): Bool;
	public inline extern function get_ReapplyAlignToNormal(): Bool return this.ReapplyAlignToNormal;
	public extern var ReapplyRandomYaw(get, never): Bool;
	public inline extern function get_ReapplyRandomYaw(): Bool return this.ReapplyRandomYaw;
	public extern var ReapplyScaling(get, never): Bool;
	public inline extern function get_ReapplyScaling(): Bool return this.ReapplyScaling;
	public extern var ReapplyScaleX(get, never): Bool;
	public inline extern function get_ReapplyScaleX(): Bool return this.ReapplyScaleX;
	public extern var ReapplyScaleY(get, never): Bool;
	public inline extern function get_ReapplyScaleY(): Bool return this.ReapplyScaleY;
	public extern var ReapplyScaleZ(get, never): Bool;
	public inline extern function get_ReapplyScaleZ(): Bool return this.ReapplyScaleZ;
	public extern var ReapplyRandomPitchAngle(get, never): Bool;
	public inline extern function get_ReapplyRandomPitchAngle(): Bool return this.ReapplyRandomPitchAngle;
	public extern var ReapplyGroundSlope(get, never): Bool;
	public inline extern function get_ReapplyGroundSlope(): Bool return this.ReapplyGroundSlope;
	public extern var ReapplyHeight(get, never): Bool;
	public inline extern function get_ReapplyHeight(): Bool return this.ReapplyHeight;
	public extern var ReapplyLandscapeLayers(get, never): Bool;
	public inline extern function get_ReapplyLandscapeLayers(): Bool return this.ReapplyLandscapeLayers;
	public extern var ReapplyZOffset(get, never): Bool;
	public inline extern function get_ReapplyZOffset(): Bool return this.ReapplyZOffset;
	public extern var ReapplyCollisionWithWorld(get, never): Bool;
	public inline extern function get_ReapplyCollisionWithWorld(): Bool return this.ReapplyCollisionWithWorld;
	public extern var ReapplyVertexColorMask(get, never): Bool;
	public inline extern function get_ReapplyVertexColorMask(): Bool return this.ReapplyVertexColorMask;
	public extern var bEnableDensityScaling(get, never): Bool;
	public inline extern function get_bEnableDensityScaling(): Bool return this.bEnableDensityScaling;
	public extern var bEnableDiscardOnLoad(get, never): Bool;
	public inline extern function get_bEnableDiscardOnLoad(): Bool return this.bEnableDiscardOnLoad;
	public extern var bEnableCullDistanceScaling(get, never): Bool;
	public inline extern function get_bEnableCullDistanceScaling(): Bool return this.bEnableCullDistanceScaling;
	public extern var RuntimeVirtualTextures(get, never): TArray<ucpp.Ptr<RuntimeVirtualTexture.ConstRuntimeVirtualTexture>>;
	public inline extern function get_RuntimeVirtualTextures(): TArray<ucpp.Ptr<RuntimeVirtualTexture.ConstRuntimeVirtualTexture>> return this.RuntimeVirtualTextures;
	public extern var VirtualTextureCullMips(get, never): ucpp.num.Int32;
	public inline extern function get_VirtualTextureCullMips(): ucpp.num.Int32 return this.VirtualTextureCullMips;
	public extern var VirtualTextureRenderPassType(get, never): ERuntimeVirtualTextureMainPassType;
	public inline extern function get_VirtualTextureRenderPassType(): ERuntimeVirtualTextureMainPassType return this.VirtualTextureRenderPassType;
}

@:forward
@:nativeGen
@:native("FoliageType*")
abstract FoliageTypePtr(ucpp.Ptr<FoliageType>) from ucpp.Ptr<FoliageType> to ucpp.Ptr<FoliageType>{
	@:from
	public static extern inline function fromValue(v: FoliageType): FoliageTypePtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): FoliageType {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}