// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGroomBlueprintLibrary")
@:include("GroomBlueprintLibrary.h")
@:structAccess
extern class GroomBlueprintLibrary extends BlueprintFunctionLibrary {
	public function CreateNewGroomBindingAssetWithPath(InDesiredPackagePath: FString, InGroomAsset: cpp.Star<GroomAsset>, InSkeletalMesh: cpp.Star<SkeletalMesh>, InNumInterpolationPoints: cpp.Int32, InSourceSkeletalMeshForTransfer: cpp.Star<SkeletalMesh>, InMatchingSection: cpp.Int32): cpp.Star<GroomBindingAsset>;
	public function CreateNewGroomBindingAsset(InGroomAsset: cpp.Star<GroomAsset>, InSkeletalMesh: cpp.Star<SkeletalMesh>, InNumInterpolationPoints: cpp.Int32, InSourceSkeletalMeshForTransfer: cpp.Star<SkeletalMesh>, InMatchingSection: cpp.Int32): cpp.Star<GroomBindingAsset>;
	public function CreateNewGeometryCacheGroomBindingAssetWithPath(DesiredPackagePath: FString, GroomAsset: cpp.Star<GroomAsset>, GeometryCache: cpp.Star<GeometryCache>, NumInterpolationPoints: cpp.Int32, SourceGeometryCacheForTransfer: cpp.Star<GeometryCache>, MatchingSection: cpp.Int32): cpp.Star<GroomBindingAsset>;
	public function CreateNewGeometryCacheGroomBindingAsset(GroomAsset: cpp.Star<GroomAsset>, GeometryCache: cpp.Star<GeometryCache>, NumInterpolationPoints: cpp.Int32, SourceGeometryCacheForTransfer: cpp.Star<GeometryCache>, MatchingSection: cpp.Int32): cpp.Star<GroomBindingAsset>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstGroomBlueprintLibrary(GroomBlueprintLibrary) from GroomBlueprintLibrary {
}

@:forward
@:nativeGen
@:native("GroomBlueprintLibrary*")
abstract GroomBlueprintLibraryPtr(cpp.Star<GroomBlueprintLibrary>) from cpp.Star<GroomBlueprintLibrary> to cpp.Star<GroomBlueprintLibrary>{
	@:from
	public static extern inline function fromValue(v: GroomBlueprintLibrary): GroomBlueprintLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GroomBlueprintLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}