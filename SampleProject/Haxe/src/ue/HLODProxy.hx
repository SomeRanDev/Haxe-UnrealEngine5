// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UHLODProxy")
@:include("Engine/HLODProxy.h")
@:structAccess
extern class HLODProxy extends Object {
	public var OwningMap: TSoftObjectPtr<World>;
	public var ProxyMeshes: TArray<HLODProxyMesh>;
	public var HLODActors: TMap<cpp.Star<HLODProxyDesc>, HLODProxyMesh>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstHLODProxy(HLODProxy) from HLODProxy {
	public extern var OwningMap(get, never): TSoftObjectPtr<World.ConstWorld>;
	public inline extern function get_OwningMap(): TSoftObjectPtr<World.ConstWorld> return this.OwningMap;
	public extern var ProxyMeshes(get, never): TArray<HLODProxyMesh>;
	public inline extern function get_ProxyMeshes(): TArray<HLODProxyMesh> return this.ProxyMeshes;
	public extern var HLODActors(get, never): TMap<cpp.Star<HLODProxyDesc.ConstHLODProxyDesc>, HLODProxyMesh>;
	public inline extern function get_HLODActors(): TMap<cpp.Star<HLODProxyDesc.ConstHLODProxyDesc>, HLODProxyMesh> return this.HLODActors;
}

@:forward
@:nativeGen
@:native("HLODProxy*")
abstract HLODProxyPtr(cpp.Star<HLODProxy>) from cpp.Star<HLODProxy> to cpp.Star<HLODProxy>{
	@:from
	public static extern inline function fromValue(v: HLODProxy): HLODProxyPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): HLODProxy {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}