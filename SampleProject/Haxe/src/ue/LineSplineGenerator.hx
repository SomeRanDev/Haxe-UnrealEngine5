// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ULineSplineGenerator")
@:include("SplineGeneratorPanel.h")
@:valueType
extern class LineSplineGenerator extends SplineGeneratorBase {
	public var NumberOfPoints: ucpp.num.Int32;
	public var Length: ucpp.num.Float64;
	public var bEnableUpToNextPoint: Bool;
	public var bUpToNextPoint: Bool;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstLineSplineGenerator(LineSplineGenerator) from LineSplineGenerator {
	public extern var NumberOfPoints(get, never): ucpp.num.Int32;
	public inline extern function get_NumberOfPoints(): ucpp.num.Int32 return this.NumberOfPoints;
	public extern var Length(get, never): ucpp.num.Float64;
	public inline extern function get_Length(): ucpp.num.Float64 return this.Length;
	public extern var bEnableUpToNextPoint(get, never): Bool;
	public inline extern function get_bEnableUpToNextPoint(): Bool return this.bEnableUpToNextPoint;
	public extern var bUpToNextPoint(get, never): Bool;
	public inline extern function get_bUpToNextPoint(): Bool return this.bUpToNextPoint;
}

@:forward
@:nativeGen
@:native("LineSplineGenerator*")
abstract LineSplineGeneratorPtr(ucpp.Ptr<LineSplineGenerator>) from ucpp.Ptr<LineSplineGenerator> to ucpp.Ptr<LineSplineGenerator>{
	@:from
	public static extern inline function fromValue(v: LineSplineGenerator): LineSplineGeneratorPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LineSplineGenerator {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}