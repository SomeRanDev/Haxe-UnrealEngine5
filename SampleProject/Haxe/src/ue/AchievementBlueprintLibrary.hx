// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UAchievementBlueprintLibrary")
@:include("AchievementBlueprintLibrary.h")
@:valueType
extern class AchievementBlueprintLibrary extends BlueprintFunctionLibrary {
	public function GetCachedAchievementProgress(WorldContextObject: ucpp.Ptr<Object>, PlayerController: ucpp.Ptr<PlayerController>, AchievementID: FName, bFoundID: ucpp.Ref<Bool>, Progress: ucpp.Ref<ucpp.num.Float32>): Void;
	public function GetCachedAchievementDescription(WorldContextObject: ucpp.Ptr<Object>, PlayerController: ucpp.Ptr<PlayerController>, AchievementID: FName, bFoundID: ucpp.Ref<Bool>, Title: ucpp.Ref<FText>, LockedDescription: ucpp.Ref<FText>, UnlockedDescription: ucpp.Ref<FText>, bHidden: ucpp.Ref<Bool>): Void;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstAchievementBlueprintLibrary(AchievementBlueprintLibrary) from AchievementBlueprintLibrary {
}

@:forward
@:nativeGen
@:native("AchievementBlueprintLibrary*")
abstract AchievementBlueprintLibraryPtr(ucpp.Ptr<AchievementBlueprintLibrary>) from ucpp.Ptr<AchievementBlueprintLibrary> to ucpp.Ptr<AchievementBlueprintLibrary>{
	@:from
	public static extern inline function fromValue(v: AchievementBlueprintLibrary): AchievementBlueprintLibraryPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): AchievementBlueprintLibrary {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}