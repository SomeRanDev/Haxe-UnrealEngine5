// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPaperSprite")
@:include("PaperSprite.h")
extern class UPaperSprite extends UObject {
	public var OriginInSourceImageBeforeTrimming: FVector2D;
	public var SourceImageDimensionBeforeTrimming: FVector2D;
	public var bTrimmedInSourceImage: Bool;
	public var bRotatedInSourceImage: Bool;
	public var SourceTextureDimension: FVector2D;
	public var SourceUV: FVector2D;
	public var SourceDimension: FVector2D;
	public var SourceTexture: TSoftObjectPtr<UTexture2D>;
	public var SourceTextureCacheNeverSerialized: TObjectPtr<UTexture2D>;
	public var AdditionalSourceTextures: TArray<TObjectPtr<UTexture>>;
	public var BakedSourceUV: FVector2D;
	public var BakedSourceDimension: FVector2D;
	public var BakedSourceTexture: TObjectPtr<UTexture2D>;
	public var DefaultMaterial: TObjectPtr<UMaterialInterface>;
	public var AlternateMaterial: TObjectPtr<UMaterialInterface>;
	public var Sockets: TArray<FPaperSpriteSocket>;
	public var SpriteCollisionDomain: ESpriteCollisionMode;
	public var PixelsPerUnrealUnit: cpp.Float32;
	public var BodySetup: TObjectPtr<UBodySetup>;
	public var PivotMode: ESpritePivotMode;
	public var CustomPivotPoint: FVector2D;
	public var bSnapPivotToPixelGrid: Bool;
	public var CollisionGeometry: FSpriteGeometryCollection;
	public var CollisionThickness: cpp.Float32;
	public var RenderGeometry: FSpriteGeometryCollection;
	public var AtlasGroup: TObjectPtr<UPaperSpriteAtlas>;
	public var AlternateMaterialSplitIndex: cpp.Int32;
	public var BakedRenderData: TArray<FVector4>;
}
