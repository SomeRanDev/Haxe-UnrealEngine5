// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPrimitiveStats")
@:include("PrimitiveStats.h")
@:valueType
extern class PrimitiveStats extends Object {
	public var Object: TWeakObjectPtr<Object>;
	public var Actors: TArray<TWeakObjectPtr<Actor>>;
	public var Type: FString;
	public var Count: ucpp.num.Int32;
	public var Sections: ucpp.num.Int32;
	public var HWInstances: ucpp.num.Int32;
	public var InstSections: ucpp.num.Int32;
	public var Triangles: ucpp.num.Int32;
	public var InstTriangles: ucpp.num.Int32;
	public var ResourceSize: ucpp.num.Float32;
	public var VertexColorMem: ucpp.num.Float32;
	public var InstVertexColorMem: ucpp.num.Float32;
	public var LightsLM: ucpp.num.Int32;
	public var LightsOther: ucpp.num.Float32;
	public var LightsTotal: ucpp.num.Float32;
	public var ObjLightCost: ucpp.num.Float32;
	public var LightMapData: ucpp.num.Float32;
	public var LMSMResolution: ucpp.num.Float32;
	public var RadiusMin: ucpp.num.Float64;
	public var RadiusMax: ucpp.num.Float64;
	public var RadiusAvg: ucpp.num.Float64;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstPrimitiveStats(PrimitiveStats) from PrimitiveStats {
	public extern var Object(get, never): TWeakObjectPtr<Object.ConstObject>;
	public inline extern function get_Object(): TWeakObjectPtr<Object.ConstObject> return this.Object;
	public extern var Actors(get, never): TArray<TWeakObjectPtr<Actor.ConstActor>>;
	public inline extern function get_Actors(): TArray<TWeakObjectPtr<Actor.ConstActor>> return this.Actors;
	public extern var Type(get, never): FString;
	public inline extern function get_Type(): FString return this.Type;
	public extern var Count(get, never): ucpp.num.Int32;
	public inline extern function get_Count(): ucpp.num.Int32 return this.Count;
	public extern var Sections(get, never): ucpp.num.Int32;
	public inline extern function get_Sections(): ucpp.num.Int32 return this.Sections;
	public extern var HWInstances(get, never): ucpp.num.Int32;
	public inline extern function get_HWInstances(): ucpp.num.Int32 return this.HWInstances;
	public extern var InstSections(get, never): ucpp.num.Int32;
	public inline extern function get_InstSections(): ucpp.num.Int32 return this.InstSections;
	public extern var Triangles(get, never): ucpp.num.Int32;
	public inline extern function get_Triangles(): ucpp.num.Int32 return this.Triangles;
	public extern var InstTriangles(get, never): ucpp.num.Int32;
	public inline extern function get_InstTriangles(): ucpp.num.Int32 return this.InstTriangles;
	public extern var ResourceSize(get, never): ucpp.num.Float32;
	public inline extern function get_ResourceSize(): ucpp.num.Float32 return this.ResourceSize;
	public extern var VertexColorMem(get, never): ucpp.num.Float32;
	public inline extern function get_VertexColorMem(): ucpp.num.Float32 return this.VertexColorMem;
	public extern var InstVertexColorMem(get, never): ucpp.num.Float32;
	public inline extern function get_InstVertexColorMem(): ucpp.num.Float32 return this.InstVertexColorMem;
	public extern var LightsLM(get, never): ucpp.num.Int32;
	public inline extern function get_LightsLM(): ucpp.num.Int32 return this.LightsLM;
	public extern var LightsOther(get, never): ucpp.num.Float32;
	public inline extern function get_LightsOther(): ucpp.num.Float32 return this.LightsOther;
	public extern var LightsTotal(get, never): ucpp.num.Float32;
	public inline extern function get_LightsTotal(): ucpp.num.Float32 return this.LightsTotal;
	public extern var ObjLightCost(get, never): ucpp.num.Float32;
	public inline extern function get_ObjLightCost(): ucpp.num.Float32 return this.ObjLightCost;
	public extern var LightMapData(get, never): ucpp.num.Float32;
	public inline extern function get_LightMapData(): ucpp.num.Float32 return this.LightMapData;
	public extern var LMSMResolution(get, never): ucpp.num.Float32;
	public inline extern function get_LMSMResolution(): ucpp.num.Float32 return this.LMSMResolution;
	public extern var RadiusMin(get, never): ucpp.num.Float64;
	public inline extern function get_RadiusMin(): ucpp.num.Float64 return this.RadiusMin;
	public extern var RadiusMax(get, never): ucpp.num.Float64;
	public inline extern function get_RadiusMax(): ucpp.num.Float64 return this.RadiusMax;
	public extern var RadiusAvg(get, never): ucpp.num.Float64;
	public inline extern function get_RadiusAvg(): ucpp.num.Float64 return this.RadiusAvg;
}

@:forward
@:nativeGen
@:native("PrimitiveStats*")
abstract PrimitiveStatsPtr(ucpp.Ptr<PrimitiveStats>) from ucpp.Ptr<PrimitiveStats> to ucpp.Ptr<PrimitiveStats>{
	@:from
	public static extern inline function fromValue(v: PrimitiveStats): PrimitiveStatsPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PrimitiveStats {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}