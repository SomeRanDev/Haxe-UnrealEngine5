// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMultiLineEditableText")
@:include("Components/MultiLineEditableText.h")
@:valueType
extern class MultiLineEditableText extends TextLayoutWidget {
	public function GetText(): FText;
	public function SetText(input: FText): Void;
	public function GetHintText(): FText;
	public function SetHintText(input: FText): Void;
	public var HintTextDelegate: HaxeDelegateProperty<() -> Void>;
	public var WidgetStyle: TextBlockStyle;
	public var bIsReadOnly: Bool;
	public var SelectAllTextWhenFocused: Bool;
	public var ClearTextSelectionOnFocusLoss: Bool;
	public var RevertTextOnEscape: Bool;
	public var ClearKeyboardFocusOnCommit: Bool;
	public var AllowContextMenu: Bool;
	public var VirtualKeyboardOptions: VirtualKeyboardOptions;
	public var VirtualKeyboardDismissAction: EVirtualKeyboardDismissAction;
	public var OnTextChanged: HaxeMulticastSparseDelegateProperty<(ucpp.Ref<FText>) -> Void>;
	public var OnTextCommitted: HaxeMulticastSparseDelegateProperty<(ucpp.Ref<FText>, TEnumAsByte<ETextCommit>) -> Void>;

	public function SetWidgetStyle(InWidgetStyle: ucpp.Ref<TextBlockStyle>): Void;
	public function SetIsReadOnly(bReadOnly: Bool): Void;
	public function SetFontOutlineMaterial(InMaterial: ucpp.Ptr<MaterialInterface>): Void;
	public function SetFontMaterial(InMaterial: ucpp.Ptr<MaterialInterface>): Void;
	public function SetFont(InFontInfo: SlateFontInfo): Void;
	public function OnMultiLineEditableTextCommittedEvent__DelegateSignature(Text: ucpp.Ref<FText>, CommitMethod: TEnumAsByte<ETextCommit>): Void;
	public function OnMultiLineEditableTextChangedEvent__DelegateSignature(Text: ucpp.Ref<FText>): Void;
	public function GetFont(): SlateFontInfo;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(GetFont)
@:nativeGen
abstract ConstMultiLineEditableText(MultiLineEditableText) from MultiLineEditableText {
	public extern var HintTextDelegate(get, never): HaxeDelegateProperty<() -> Void>;
	public inline extern function get_HintTextDelegate(): HaxeDelegateProperty<() -> Void> return this.HintTextDelegate;
	public extern var WidgetStyle(get, never): TextBlockStyle;
	public inline extern function get_WidgetStyle(): TextBlockStyle return this.WidgetStyle;
	public extern var bIsReadOnly(get, never): Bool;
	public inline extern function get_bIsReadOnly(): Bool return this.bIsReadOnly;
	public extern var SelectAllTextWhenFocused(get, never): Bool;
	public inline extern function get_SelectAllTextWhenFocused(): Bool return this.SelectAllTextWhenFocused;
	public extern var ClearTextSelectionOnFocusLoss(get, never): Bool;
	public inline extern function get_ClearTextSelectionOnFocusLoss(): Bool return this.ClearTextSelectionOnFocusLoss;
	public extern var RevertTextOnEscape(get, never): Bool;
	public inline extern function get_RevertTextOnEscape(): Bool return this.RevertTextOnEscape;
	public extern var ClearKeyboardFocusOnCommit(get, never): Bool;
	public inline extern function get_ClearKeyboardFocusOnCommit(): Bool return this.ClearKeyboardFocusOnCommit;
	public extern var AllowContextMenu(get, never): Bool;
	public inline extern function get_AllowContextMenu(): Bool return this.AllowContextMenu;
	public extern var VirtualKeyboardOptions(get, never): VirtualKeyboardOptions;
	public inline extern function get_VirtualKeyboardOptions(): VirtualKeyboardOptions return this.VirtualKeyboardOptions;
	public extern var VirtualKeyboardDismissAction(get, never): EVirtualKeyboardDismissAction;
	public inline extern function get_VirtualKeyboardDismissAction(): EVirtualKeyboardDismissAction return this.VirtualKeyboardDismissAction;
	public extern var OnTextChanged(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<FText>) -> Void>;
	public inline extern function get_OnTextChanged(): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<FText>) -> Void> return this.OnTextChanged;
	public extern var OnTextCommitted(get, never): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<FText>, TEnumAsByte<ETextCommit>) -> Void>;
	public inline extern function get_OnTextCommitted(): HaxeMulticastSparseDelegateProperty<(ucpp.Ref<FText>, TEnumAsByte<ETextCommit>) -> Void> return this.OnTextCommitted;
}

@:forward
@:nativeGen
@:native("MultiLineEditableText*")
abstract MultiLineEditableTextPtr(ucpp.Ptr<MultiLineEditableText>) from ucpp.Ptr<MultiLineEditableText> to ucpp.Ptr<MultiLineEditableText>{
	@:from
	public static extern inline function fromValue(v: MultiLineEditableText): MultiLineEditableTextPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MultiLineEditableText {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}