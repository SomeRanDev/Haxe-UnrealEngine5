// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UCurveEditorBakeFilter")
@:include("Filters/CurveEditorBakeFilter.h")
@:structAccess
extern class CurveEditorBakeFilter extends CurveEditorFilterBase {
	public var bUseFrameBake: Bool;
	public var BakeIntervalInFrames: FrameNumber;
	public var BakeIntervalInSeconds: cpp.Float32;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstCurveEditorBakeFilter(CurveEditorBakeFilter) from CurveEditorBakeFilter {
	public extern var bUseFrameBake(get, never): Bool;
	public inline extern function get_bUseFrameBake(): Bool return this.bUseFrameBake;
	public extern var BakeIntervalInFrames(get, never): FrameNumber;
	public inline extern function get_BakeIntervalInFrames(): FrameNumber return this.BakeIntervalInFrames;
	public extern var BakeIntervalInSeconds(get, never): cpp.Float32;
	public inline extern function get_BakeIntervalInSeconds(): cpp.Float32 return this.BakeIntervalInSeconds;
}

@:forward
@:nativeGen
@:native("CurveEditorBakeFilter*")
abstract CurveEditorBakeFilterPtr(cpp.Star<CurveEditorBakeFilter>) from cpp.Star<CurveEditorBakeFilter> to cpp.Star<CurveEditorBakeFilter>{
	@:from
	public static extern inline function fromValue(v: CurveEditorBakeFilter): CurveEditorBakeFilterPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): CurveEditorBakeFilter {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}