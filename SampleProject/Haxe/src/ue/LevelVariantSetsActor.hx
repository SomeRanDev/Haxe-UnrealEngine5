// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("ALevelVariantSetsActor")
@:include("LevelVariantSetsActor.h")
@:valueType
extern class LevelVariantSetsActor extends Actor {
	public var LevelVariantSets: SoftObjectPath;
	private var DirectorInstances: TMap<TSubclassOf<Object>, ucpp.Ptr<LevelVariantSetsFunctionDirector>>;

	public function SwitchOnVariantByName(VariantSetName: FString, VariantName: FString): Bool;
	public function SwitchOnVariantByIndex(VariantSetIndex: ucpp.num.Int32, VariantIndex: ucpp.num.Int32): Bool;
	public function SetLevelVariantSets(InVariantSets: ucpp.Ptr<LevelVariantSets>): Void;
	public function GetLevelVariantSets(bLoad: Bool): ucpp.Ptr<LevelVariantSets>;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstLevelVariantSetsActor(LevelVariantSetsActor) from LevelVariantSetsActor {
	public extern var LevelVariantSets(get, never): SoftObjectPath;
	public inline extern function get_LevelVariantSets(): SoftObjectPath return this.LevelVariantSets;
}

@:forward
@:nativeGen
@:native("LevelVariantSetsActor*")
abstract LevelVariantSetsActorPtr(ucpp.Ptr<LevelVariantSetsActor>) from ucpp.Ptr<LevelVariantSetsActor> to ucpp.Ptr<LevelVariantSetsActor>{
	@:from
	public static extern inline function fromValue(v: LevelVariantSetsActor): LevelVariantSetsActorPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): LevelVariantSetsActor {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}