// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("FSoundAttenuationSettings")
@:include("Sound/SoundAttenuation.h")
@:valueType
extern class SoundAttenuationSettings extends BaseAttenuationSettings {
	public var bAttenuate: Bool;
	public var bSpatialize: Bool;
	public var bAttenuateWithLPF: Bool;
	public var bEnableListenerFocus: Bool;
	public var bEnableFocusInterpolation: Bool;
	public var bEnableOcclusion: Bool;
	public var bUseComplexCollisionForOcclusion: Bool;
	public var bEnableReverbSend: Bool;
	public var bEnablePriorityAttenuation: Bool;
	public var bApplyNormalizationToStereoSounds: Bool;
	public var bEnableLogFrequencyScaling: Bool;
	public var bEnableSubmixSends: Bool;
	public var bEnableSourceDataOverride: Bool;
	public var bEnableSendToAudioLink: Bool;
	public var SpatializationAlgorithm: TEnumAsByte<ESoundSpatializationAlgorithm>;
	public var AudioLinkSettingsOverride: ucpp.Ptr<AudioLinkSettingsAbstract>;
	public var BinauralRadius: ucpp.num.Float32;
	public var CustomLowpassAirAbsorptionCurve: RuntimeFloatCurve;
	public var CustomHighpassAirAbsorptionCurve: RuntimeFloatCurve;
	public var AbsorptionMethod: EAirAbsorptionMethod;
	public var OcclusionTraceChannel: TEnumAsByte<ECollisionChannel>;
	public var ReverbSendMethod: EReverbSendMethod;
	public var PriorityAttenuationMethod: EPriorityAttenuationMethod;
	public var OmniRadius: ucpp.num.Float32;
	public var StereoSpread: ucpp.num.Float32;
	public var LPFRadiusMin: ucpp.num.Float32;
	public var LPFRadiusMax: ucpp.num.Float32;
	public var LPFFrequencyAtMin: ucpp.num.Float32;
	public var LPFFrequencyAtMax: ucpp.num.Float32;
	public var HPFFrequencyAtMin: ucpp.num.Float32;
	public var HPFFrequencyAtMax: ucpp.num.Float32;
	public var FocusAzimuth: ucpp.num.Float32;
	public var NonFocusAzimuth: ucpp.num.Float32;
	public var FocusDistanceScale: ucpp.num.Float32;
	public var NonFocusDistanceScale: ucpp.num.Float32;
	public var FocusPriorityScale: ucpp.num.Float32;
	public var NonFocusPriorityScale: ucpp.num.Float32;
	public var FocusVolumeAttenuation: ucpp.num.Float32;
	public var NonFocusVolumeAttenuation: ucpp.num.Float32;
	public var FocusAttackInterpSpeed: ucpp.num.Float32;
	public var FocusReleaseInterpSpeed: ucpp.num.Float32;
	public var OcclusionLowPassFilterFrequency: ucpp.num.Float32;
	public var OcclusionVolumeAttenuation: ucpp.num.Float32;
	public var OcclusionInterpolationTime: ucpp.num.Float32;
	public var ReverbWetLevelMin: ucpp.num.Float32;
	public var ReverbWetLevelMax: ucpp.num.Float32;
	public var ReverbDistanceMin: ucpp.num.Float32;
	public var ReverbDistanceMax: ucpp.num.Float32;
	public var ManualReverbSendLevel: ucpp.num.Float32;
	public var PriorityAttenuationMin: ucpp.num.Float32;
	public var PriorityAttenuationMax: ucpp.num.Float32;
	public var PriorityAttenuationDistanceMin: ucpp.num.Float32;
	public var PriorityAttenuationDistanceMax: ucpp.num.Float32;
	public var ManualPriorityAttenuation: ucpp.num.Float32;
	public var CustomReverbSendCurve: RuntimeFloatCurve;
	public var SubmixSendSettings: TArray<AttenuationSubmixSendSettings>;
	public var CustomPriorityAttenuationCurve: RuntimeFloatCurve;
	public var PluginSettings: SoundAttenuationPluginSettings;

	@:native("FSoundAttenuationSettings") public function new();
}