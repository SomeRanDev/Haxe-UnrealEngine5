// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("URigVMController")
@:include("RigVMModel/RigVMController.h")
@:valueType
extern class RigVMController extends Object {
	private var ModifiedEventDynamic: HaxeMulticastSparseDelegateProperty<(ERigVMGraphNotifType, ucpp.Ptr<RigVMGraph>, ucpp.Ptr<Object>) -> Void>;
	private var Graphs: TArray<ucpp.Ptr<RigVMGraph>>;
	private var ActionStack: ucpp.Ptr<RigVMActionStack>;

	public function UpgradeNodes(InNodeNames: ucpp.Ref<TArray<FName>>, bRecursive: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): TArray<ucpp.Ptr<RigVMNode>>;
	public function UnresolveTemplateNodes(InNodeNames: ucpp.Ref<TArray<FName>>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function Undo(): Bool;
	public function UnbindPinFromVariable(InPinPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetUnitNodeDefaults(InNode: ucpp.Ptr<RigVMUnitNode>, InDefaults: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetRerouteCompactnessByName(InNodeName: ucpp.Ref<FName>, bShowAsFullNode: Bool, bSetupUndoRedo: Bool): Bool;
	public function SetRerouteCompactness(InNode: ucpp.Ptr<RigVMNode>, bShowAsFullNode: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetRemappedVariable(InFunctionRefNode: ucpp.Ptr<RigVMFunctionReferenceNode>, InInnerVariableName: ucpp.Ref<FName>, InOuterVariableName: ucpp.Ref<FName>, bSetupUndoRedo: Bool): Bool;
	public function SetPinIsWatched(InPinPath: FString, bIsWatched: Bool, bSetupUndoRedo: Bool): Bool;
	public function SetPinExpansion(InPinPath: FString, bIsExpanded: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetPinDefaultValue(InPinPath: FString, InDefaultValue: FString, bResizeArrays: Bool, bSetupUndoRedo: Bool, bMergeUndoAction: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetNodeSizeByName(InNodeName: ucpp.Ref<FName>, InSize: ucpp.Ref<Vector2D>, bSetupUndoRedo: Bool, bMergeUndoAction: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetNodeSize(InNode: ucpp.Ptr<RigVMNode>, InSize: ucpp.Ref<Vector2D>, bSetupUndoRedo: Bool, bMergeUndoAction: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetNodeSelection(InNodeNames: ucpp.Ref<TArray<FName>>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetNodePositionByName(InNodeName: ucpp.Ref<FName>, InPosition: ucpp.Ref<Vector2D>, bSetupUndoRedo: Bool, bMergeUndoAction: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetNodePosition(InNode: ucpp.Ptr<RigVMNode>, InPosition: ucpp.Ref<Vector2D>, bSetupUndoRedo: Bool, bMergeUndoAction: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetNodeKeywordsByName(InNodeName: ucpp.Ref<FName>, InKeywords: FString, bSetupUndoRedo: Bool, bMergeUndoAction: Bool): Bool;
	public function SetNodeKeywords(InNode: ucpp.Ptr<RigVMCollapseNode>, InKeywords: FString, bSetupUndoRedo: Bool, bMergeUndoAction: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetNodeDescriptionByName(InNodeName: ucpp.Ref<FName>, InDescription: FString, bSetupUndoRedo: Bool, bMergeUndoAction: Bool): Bool;
	public function SetNodeDescription(InNode: ucpp.Ptr<RigVMCollapseNode>, InDescription: FString, bSetupUndoRedo: Bool, bMergeUndoAction: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetNodeColorByName(InNodeName: ucpp.Ref<FName>, InColor: ucpp.Ref<LinearColor>, bSetupUndoRedo: Bool, bMergeUndoAction: Bool): Bool;
	public function SetNodeColor(InNode: ucpp.Ptr<RigVMNode>, InColor: ucpp.Ref<LinearColor>, bSetupUndoRedo: Bool, bMergeUndoAction: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetNodeCategoryByName(InNodeName: ucpp.Ref<FName>, InCategory: FString, bSetupUndoRedo: Bool, bMergeUndoAction: Bool): Bool;
	public function SetNodeCategory(InNode: ucpp.Ptr<RigVMCollapseNode>, InCategory: FString, bSetupUndoRedo: Bool, bMergeUndoAction: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetLocalVariableTypeFromObjectPath(InVariableName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObjectPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetLocalVariableType(InVariableName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObject: ucpp.Ptr<Object>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetLocalVariableDefaultValue(InVariableName: ucpp.Ref<FName>, InDefaultValue: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetIsRunningUnitTest(bIsRunning: Bool): Void;
	public function SetGraph(InGraph: ucpp.Ptr<RigVMGraph>): Void;
	public function SetExposedPinIndex(InPinName: ucpp.Ref<FName>, InNewIndex: ucpp.num.Int32, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetCommentTextByName(InNodeName: ucpp.Ref<FName>, InCommentText: FString, InCommentFontSize: ucpp.Ref<ucpp.num.Int32>, bInCommentBubbleVisible: ucpp.Ref<Bool>, bInCommentColorBubble: ucpp.Ref<Bool>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetCommentText(InNode: ucpp.Ptr<RigVMNode>, InCommentText: FString, InCommentFontSize: ucpp.Ref<ucpp.num.Int32>, bInCommentBubbleVisible: ucpp.Ref<Bool>, bInCommentColorBubble: ucpp.Ref<Bool>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SetArrayPinSize(InArrayPinPath: FString, InSize: ucpp.num.Int32, InDefaultValue: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function SelectNodeByName(InNodeName: ucpp.Ref<FName>, bSelect: Bool, bSetupUndoRedo: Bool): Bool;
	public function SelectNode(InNode: ucpp.Ptr<RigVMNode>, bSelect: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function ResolveWildCardPin(InPinPath: FString, InCPPType: FString, InCPPTypeObjectPath: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function ResetPinDefaultValue(InPinPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function ReplaceParameterNodeWithVariable(InNodeName: ucpp.Ref<FName>, InVariableName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObject: ucpp.Ptr<Object>, bSetupUndoRedo: Bool): ucpp.Ptr<RigVMVariableNode>;
	public function RenameVariable(InOldName: ucpp.Ref<FName>, InNewName: ucpp.Ref<FName>, bSetupUndoRedo: Bool): Bool;
	public function RenameParameter(InOldName: ucpp.Ref<FName>, InNewName: ucpp.Ref<FName>, bSetupUndoRedo: Bool): Bool;
	public function RenameNode(InNode: ucpp.Ptr<RigVMNode>, InNewName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function RenameLocalVariable(InVariableName: ucpp.Ref<FName>, InNewVariableName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function RenameFunction(InOldFunctionName: ucpp.Ref<FName>, InNewFunctionName: ucpp.Ref<FName>, bSetupUndoRedo: Bool): Bool;
	public function RenameExposedPin(InOldPinName: ucpp.Ref<FName>, InNewPinName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function RemoveNodeByName(InNodeName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bRecursive: Bool, bPrintPythonCommand: Bool, bRelinkPins: Bool): Bool;
	public function RemoveNode(InNode: ucpp.Ptr<RigVMNode>, bSetupUndoRedo: Bool, bRecursive: Bool, bPrintPythonCommand: Bool, bRelinkPins: Bool): Bool;
	public function RemoveLocalVariable(InVariableName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function RemoveInjectedNode(InPinPath: FString, bAsInput: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function RemoveFunctionFromLibrary(InFunctionName: ucpp.Ref<FName>, bSetupUndoRedo: Bool): Bool;
	public function RemoveExposedPin(InPinName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function RemoveArrayPin(InArrayElementPinPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function RemoveAggregatePin(InPinPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function RefreshVariableNode(InNodeName: ucpp.Ref<FName>, InVariableName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObject: ucpp.Ptr<Object>, bSetupUndoRedo: Bool, bSetupOrphanPins: Bool): Void;
	public function Redo(): Bool;
	public function PushGraph(InGraph: ucpp.Ptr<RigVMGraph>, bSetupUndoRedo: Bool): Void;
	public function PromotePinToVariable(InPinPath: FString, bCreateVariableNode: Bool, InNodePosition: ucpp.Ref<Vector2D>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function PromoteFunctionReferenceNodeToCollapseNode(InNodeName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool, bRemoveFunctionDefinition: Bool): FName;
	public function PromoteCollapseNodeToFunctionReferenceNode(InNodeName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool, InExistingFunctionDefinitionPath: FString): FName;
	public function PopGraph(bSetupUndoRedo: Bool): ucpp.Ptr<RigVMGraph>;
	public function PerformUserWorkflow(InWorkflow: ucpp.Ref<RigVMUserWorkflow>, InOptions: ucpp.Ptr<RigVMUserWorkflowOptions.ConstRigVMUserWorkflowOptions>, bSetupUndoRedo: Bool): Bool;
	public function OpenUndoBracket(InTitle: FString): Bool;
	public function MarkFunctionAsPublic(InFunctionName: ucpp.Ref<FName>, bInIsPublic: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function MakeVariableNodeFromBinding(InPinPath: FString, InNodePosition: ucpp.Ref<Vector2D>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function MakeOptionsForWorkflow(InSubject: ucpp.Ptr<Object>, InWorkflow: ucpp.Ref<RigVMUserWorkflow>): ucpp.Ptr<RigVMUserWorkflowOptions>;
	public function MakeBindingsFromVariableNode(InNodeName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function LocalizeFunctions(InFunctionDefinitions: TArray<RigVMGraphFunctionIdentifier>, bLocalizeDependentPrivateFunctions: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): TMap<RigVMGraphFunctionIdentifier, ucpp.Ptr<RigVMLibraryNode>>;
	public function LocalizeFunctionFromPath(InHostPath: FString, InFunctionName: ucpp.Ref<FName>, bLocalizeDependentPrivateFunctions: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMLibraryNode>;
	public function LocalizeFunction(InFunctionDefinition: ucpp.Ref<RigVMGraphFunctionIdentifier>, bLocalizeDependentPrivateFunctions: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMLibraryNode>;
	public function IsReportingEnabled(): Bool;
	public function IsFunctionPublic(InFunctionName: ucpp.Ref<FName>): Bool;
	public function InsertArrayPin(InArrayPinPath: FString, InIndex: ucpp.num.Int32, InDefaultValue: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): FString;
	public function ImportNodesFromText(InText: FString, bSetupUndoRedo: Bool, bPrintPythonCommands: Bool): TArray<FName>;
	public function GetUnitStructsForTemplate(InNotation: ucpp.Ref<FName>): TArray<ucpp.Ptr<ScriptStruct>>;
	public function GetTopLevelGraph(): ucpp.Ptr<RigVMGraph>;
	public function GetTemplateForUnitStruct(InFunction: ucpp.Ptr<ScriptStruct>, InMethodName: FString): FString;
	public function GetRegisteredUnitStructs(): TArray<ucpp.Ptr<ScriptStruct>>;
	public function GetRegisteredTemplates(): TArray<FString>;
	public function GetPinDefaultValue(InPinPath: FString): FString;
	public function GetGraph(): ucpp.Ptr<RigVMGraph>;
	public function GeneratePythonCommands(): TArray<FString>;
	public function ExportSelectedNodesToText(): FString;
	public function ExportNodesToText(InNodeNames: ucpp.Ref<TArray<FName>>): FString;
	public function ExpandLibraryNode(InNodeName: ucpp.Ref<FName>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): TArray<ucpp.Ptr<RigVMNode>>;
	public function EnableReporting(bEnabled: Bool): Void;
	public function EjectNodeFromPin(InPinPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMNode>;
	public function DuplicateArrayPin(InArrayElementPinPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): FString;
	public function CollapseNodes(InNodeNames: ucpp.Ref<TArray<FName>>, InCollapseNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool, bIsAggregate: Bool): ucpp.Ptr<RigVMCollapseNode>;
	public function CloseUndoBracket(): Bool;
	public function ClearNodeSelection(bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function ClearArrayPin(InArrayPinPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function ChangeExposedPinType(InPinName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObjectPath: ucpp.Ref<FName>, bSetupUndoRedo: ucpp.Ref<Bool>, bSetupOrphanPins: Bool, bPrintPythonCommand: Bool): Bool;
	public function CanImportNodesFromText(InText: FString): Bool;
	public function CancelUndoBracket(): Bool;
	public function BreakLink(InOutputPinPath: FString, InInputPinPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function BreakAllLinks(InPinPath: FString, bAsInput: Bool, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function BindPinToVariable(InPinPath: FString, InNewBoundVariablePath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): Bool;
	public function AddVariableNodeFromObjectPath(InVariableName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObjectPath: FString, bIsGetter: Bool, InDefaultValue: FString, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMVariableNode>;
	public function AddVariableNode(InVariableName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObject: ucpp.Ptr<Object>, bIsGetter: Bool, InDefaultValue: FString, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMVariableNode>;
	public function AddUnitNodeWithDefaults(InScriptStruct: ucpp.Ptr<ScriptStruct>, InDefaults: FString, InMethodName: ucpp.Ref<FName>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMUnitNode>;
	public function AddUnitNodeFromStructPath(InScriptStructPath: FString, InMethodName: ucpp.Ref<FName>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMUnitNode>;
	public function AddUnitNode(InScriptStruct: ucpp.Ptr<ScriptStruct>, InMethodName: ucpp.Ref<FName>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMUnitNode>;
	public function AddTemplateNode(InNotation: ucpp.Ref<FName>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMTemplateNode>;
	public function AddSelectNodeFromStruct(InScriptStruct: ucpp.Ptr<ScriptStruct>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool): ucpp.Ptr<RigVMNode>;
	public function AddSelectNode(InCPPType: FString, InCPPTypeObjectPath: ucpp.Ref<FName>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMNode>;
	public function AddRerouteNodeOnPin(InPinPath: FString, bAsInput: Bool, bShowAsFullNode: Bool, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMRerouteNode>;
	public function AddRerouteNodeOnLinkPath(InLinkPinPathRepresentation: FString, bShowAsFullNode: Bool, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMRerouteNode>;
	public function AddRerouteNodeOnLink(InLink: ucpp.Ptr<RigVMLink>, bShowAsFullNode: Bool, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMRerouteNode>;
	public function AddParameterNodeFromObjectPath(InParameterName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObjectPath: FString, bIsInput: Bool, InDefaultValue: FString, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMParameterNode>;
	public function AddParameterNode(InParameterName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObject: ucpp.Ptr<Object>, bIsInput: Bool, InDefaultValue: FString, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMParameterNode>;
	public function AddLocalVariableFromObjectPath(InVariableName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObjectPath: FString, InDefaultValue: FString, bSetupUndoRedo: Bool): RigVMGraphVariableDescription;
	public function AddLocalVariable(InVariableName: ucpp.Ref<FName>, InCPPType: FString, InCPPTypeObject: ucpp.Ptr<Object>, InDefaultValue: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): RigVMGraphVariableDescription;
	public function AddLink(InOutputPinPath: FString, InInputPinPath: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool, InUserDirection: ERigVMPinDirection, bCreateCastNode: Bool): Bool;
	public function AddInvokeEntryNode(InEntryName: ucpp.Ref<FName>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMInvokeEntryNode>;
	public function AddInjectedNodeFromStructPath(InPinPath: FString, bAsInput: Bool, InScriptStructPath: FString, InMethodName: ucpp.Ref<FName>, InInputPinName: ucpp.Ref<FName>, InOutputPinName: ucpp.Ref<FName>, InNodeName: FString, bSetupUndoRedo: Bool): ucpp.Ptr<RigVMInjectionInfo>;
	public function AddInjectedNode(InPinPath: FString, bAsInput: Bool, InScriptStruct: ucpp.Ptr<ScriptStruct>, InMethodName: ucpp.Ref<FName>, InInputPinName: ucpp.Ref<FName>, InOutputPinName: ucpp.Ref<FName>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMInjectionInfo>;
	public function AddIfNodeFromStruct(InScriptStruct: ucpp.Ptr<ScriptStruct>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool): ucpp.Ptr<RigVMNode>;
	public function AddIfNode(InCPPType: FString, InCPPTypeObjectPath: ucpp.Ref<FName>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMNode>;
	public function AddFunctionToLibrary(InFunctionName: ucpp.Ref<FName>, bMutable: Bool, InNodePosition: ucpp.Ref<Vector2D>, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMLibraryNode>;
	public function AddFunctionReferenceNodeFromDescription(InFunctionDefinition: ucpp.Ref<RigVMGraphFunctionHeader>, InNodePosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool, bAllowPrivateFunctions: Bool): ucpp.Ptr<RigVMFunctionReferenceNode>;
	public function AddFunctionReferenceNode(InFunctionDefinition: ucpp.Ptr<RigVMLibraryNode>, InNodePosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMFunctionReferenceNode>;
	public function AddFreeRerouteNode(bShowAsFullNode: Bool, InCPPType: FString, InCPPTypeObjectPath: ucpp.Ref<FName>, bIsConstant: Bool, InCustomWidgetName: ucpp.Ref<FName>, InDefaultValue: FString, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool): ucpp.Ptr<RigVMRerouteNode>;
	public function AddExternalFunctionReferenceNode(InHostPath: FString, InFunctionName: ucpp.Ref<FName>, InNodePosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMFunctionReferenceNode>;
	public function AddExposedPin(InPinName: ucpp.Ref<FName>, InDirection: ERigVMPinDirection, InCPPType: FString, InCPPTypeObjectPath: ucpp.Ref<FName>, InDefaultValue: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): FName;
	public function AddEnumNode(InCPPTypeObjectPath: ucpp.Ref<FName>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMEnumNode>;
	public function AddCommentNode(InCommentText: FString, InPosition: ucpp.Ref<Vector2D>, InSize: ucpp.Ref<Vector2D>, InColor: ucpp.Ref<LinearColor>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMCommentNode>;
	public function AddBranchNode(InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): ucpp.Ptr<RigVMNode>;
	public function AddArrayPin(InArrayPinPath: FString, InDefaultValue: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): FString;
	public function AddArrayNodeFromObjectPath(InOpCode: ERigVMOpCode, InCPPType: FString, InCPPTypeObjectPath: FString, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool, bIsPatching: Bool): ucpp.Ptr<RigVMNode>;
	public function AddArrayNode(InOpCode: ERigVMOpCode, InCPPType: FString, InCPPTypeObject: ucpp.Ptr<Object>, InPosition: ucpp.Ref<Vector2D>, InNodeName: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool, bIsPatching: Bool): ucpp.Ptr<RigVMNode>;
	public function AddAggregatePin(InNodeName: FString, InPinName: FString, InDefaultValue: FString, bSetupUndoRedo: Bool, bPrintPythonCommand: Bool): FString;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward(IsReportingEnabled, GetTopLevelGraph, GetGraph)
@:nativeGen
abstract ConstRigVMController(RigVMController) from RigVMController {
}

@:forward
@:nativeGen
@:native("RigVMController*")
abstract RigVMControllerPtr(ucpp.Ptr<RigVMController>) from ucpp.Ptr<RigVMController> to ucpp.Ptr<RigVMController>{
	@:from
	public static extern inline function fromValue(v: RigVMController): RigVMControllerPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): RigVMController {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}