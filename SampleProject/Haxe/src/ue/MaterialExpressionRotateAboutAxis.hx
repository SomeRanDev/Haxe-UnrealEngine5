// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UMaterialExpressionRotateAboutAxis")
@:include("Materials/MaterialExpressionRotateAboutAxis.h")
@:valueType
extern class MaterialExpressionRotateAboutAxis extends MaterialExpression {
	public var NormalizedRotationAxis: ExpressionInput;
	public var RotationAngle: ExpressionInput;
	public var PivotPoint: ExpressionInput;
	public var Position: ExpressionInput;
	public var Period: ucpp.num.Float32;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstMaterialExpressionRotateAboutAxis(MaterialExpressionRotateAboutAxis) from MaterialExpressionRotateAboutAxis {
	public extern var NormalizedRotationAxis(get, never): ExpressionInput;
	public inline extern function get_NormalizedRotationAxis(): ExpressionInput return this.NormalizedRotationAxis;
	public extern var RotationAngle(get, never): ExpressionInput;
	public inline extern function get_RotationAngle(): ExpressionInput return this.RotationAngle;
	public extern var PivotPoint(get, never): ExpressionInput;
	public inline extern function get_PivotPoint(): ExpressionInput return this.PivotPoint;
	public extern var Position(get, never): ExpressionInput;
	public inline extern function get_Position(): ExpressionInput return this.Position;
	public extern var Period(get, never): ucpp.num.Float32;
	public inline extern function get_Period(): ucpp.num.Float32 return this.Period;
}

@:forward
@:nativeGen
@:native("MaterialExpressionRotateAboutAxis*")
abstract MaterialExpressionRotateAboutAxisPtr(ucpp.Ptr<MaterialExpressionRotateAboutAxis>) from ucpp.Ptr<MaterialExpressionRotateAboutAxis> to ucpp.Ptr<MaterialExpressionRotateAboutAxis>{
	@:from
	public static extern inline function fromValue(v: MaterialExpressionRotateAboutAxis): MaterialExpressionRotateAboutAxisPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): MaterialExpressionRotateAboutAxis {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}