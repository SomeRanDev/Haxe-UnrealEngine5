// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPaperFlipbookComponent")
@:include("PaperFlipbookComponent.h")
@:structAccess
extern class PaperFlipbookComp extends MeshComp {
	@:protected public var SourceFlipbook: cpp.Star<PaperFlipbook>;
	@:protected public var PlayRate: cpp.Float32;
	@:protected public var bLooping: Bool;
	@:protected public var bReversePlayback: Bool;
	@:protected public var bPlaying: Bool;
	@:protected public var AccumulatedTime: cpp.Float32;
	@:protected public var CachedFrameIndex: cpp.Int32;
	@:protected public var SpriteColor: LinearColor;
	@:protected public var CachedBodySetup: cpp.Star<BodySetup>;
	public var OnFinishedPlaying: HaxeMulticastSparseDelegateProperty<() -> Void>;

	public function Stop(): Void;
	public function SetSpriteColor(NewColor: LinearColor): Void;
	public function SetPlayRate(NewRate: cpp.Float32): Void;
	public function SetPlaybackPositionInFrames(NewFramePosition: cpp.Int32, bFireEvents: Bool): Void;
	public function SetPlaybackPosition(NewPosition: cpp.Float32, bFireEvents: Bool): Void;
	public function SetNewTime(NewTime: cpp.Float32): Void;
	public function SetLooping(bNewLooping: Bool): Void;
	public function SetFlipbook(NewFlipbook: cpp.Star<PaperFlipbook>): Bool;
	public function ReverseFromEnd(): Void;
	public function Reverse(): Void;
	public function PlayFromStart(): Void;
	public function Play(): Void;
	@:protected public function OnRep_SourceFlipbook(OldFlipbook: cpp.Star<PaperFlipbook>): Void;
	public function IsReversing(): Bool;
	public function IsPlaying(): Bool;
	public function IsLooping(): Bool;
	public function GetSpriteColor(): LinearColor;
	public function GetPlayRate(): cpp.Float32;
	public function GetPlaybackPositionInFrames(): cpp.Int32;
	public function GetPlaybackPosition(): cpp.Float32;
	public function GetFlipbookLengthInFrames(): cpp.Int32;
	public function GetFlipbookLength(): cpp.Float32;
	public function GetFlipbookFramerate(): cpp.Float32;
	public function GetFlipbook(): cpp.Star<PaperFlipbook>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(
	IsReversing, IsPlaying, IsLooping, GetSpriteColor, GetPlayRate,
	GetPlaybackPositionInFrames, GetPlaybackPosition, GetFlipbookLengthInFrames, GetFlipbookLength, GetFlipbookFramerate
)
@:nativeGen
abstract ConstPaperFlipbookComp(PaperFlipbookComp) from PaperFlipbookComp {
	public extern var OnFinishedPlaying(get, never): HaxeMulticastSparseDelegateProperty<() -> Void>;
	public inline extern function get_OnFinishedPlaying(): HaxeMulticastSparseDelegateProperty<() -> Void> return this.OnFinishedPlaying;
}

@:forward
@:nativeGen
@:native("PaperFlipbookComp*")
abstract PaperFlipbookCompPtr(cpp.Star<PaperFlipbookComp>) from cpp.Star<PaperFlipbookComp> to cpp.Star<PaperFlipbookComp>{
	@:from
	public static extern inline function fromValue(v: PaperFlipbookComp): PaperFlipbookCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): PaperFlipbookComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}