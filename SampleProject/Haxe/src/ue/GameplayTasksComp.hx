// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UGameplayTasksComponent")
@:include("GameplayTasksComponent.h")
@:valueType
extern class GameplayTasksComp extends ActorComp {
	public var bIsNetDirty: Bool;
	@:protected public var TaskPriorityQueue: TArray<ucpp.Ptr<GameplayTask>>;
	@:protected public var TickingTasks: TArray<ucpp.Ptr<GameplayTask>>;
	@:protected public var KnownTasks: TArray<ucpp.Ptr<GameplayTask>>;
	public var OnClaimedResourcesChange: HaxeMulticastSparseDelegateProperty<(GameplayResourceSet, GameplayResourceSet) -> Void>;
	private var SimulatedTasks: TArray<ucpp.Ptr<GameplayTask>>;

	public function OnRep_SimulatedTasks(PreviousSimulatedTasks: ucpp.Ref<TArray<ucpp.Ptr<GameplayTask>>>): Void;
	public function K2_RunGameplayTask(TaskOwner: GameplayTaskOwnerInterface, Task: ucpp.Ptr<GameplayTask>, Priority: ucpp.num.UInt8, AdditionalRequiredResources: TArray<TSubclassOf<GameplayTaskResource>>, AdditionalClaimedResources: TArray<TSubclassOf<GameplayTaskResource>>): EGameplayTaskRunResult;

	public static function StaticClass(): ucpp.Ptr<Class>;
}

@:forward()
@:nativeGen
abstract ConstGameplayTasksComp(GameplayTasksComp) from GameplayTasksComp {
	public extern var bIsNetDirty(get, never): Bool;
	public inline extern function get_bIsNetDirty(): Bool return this.bIsNetDirty;
	public extern var OnClaimedResourcesChange(get, never): HaxeMulticastSparseDelegateProperty<(GameplayResourceSet, GameplayResourceSet) -> Void>;
	public inline extern function get_OnClaimedResourcesChange(): HaxeMulticastSparseDelegateProperty<(GameplayResourceSet, GameplayResourceSet) -> Void> return this.OnClaimedResourcesChange;
}

@:forward
@:nativeGen
@:native("GameplayTasksComp*")
abstract GameplayTasksCompPtr(ucpp.Ptr<GameplayTasksComp>) from ucpp.Ptr<GameplayTasksComp> to ucpp.Ptr<GameplayTasksComp>{
	@:from
	public static extern inline function fromValue(v: GameplayTasksComp): GameplayTasksCompPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): GameplayTasksComp {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}