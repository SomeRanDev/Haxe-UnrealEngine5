// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UARGeoTrackingSupport")
@:include("ARGeoTrackingSupport.h")
@:structAccess
extern class ARGeoTrackingSupport extends Object {
	public function GetGeoTrackingSupport(): cpp.Reference<cpp.Star<ARGeoTrackingSupport>>;
	public function GetGeoTrackingStateReason(): cpp.Reference<EARGeoTrackingStateReason>;
	public function GetGeoTrackingState(): cpp.Reference<EARGeoTrackingState>;
	public function GetGeoTrackingAccuracy(): cpp.Reference<EARGeoTrackingAccuracy>;
	public function AddGeoAnchorAtLocationWithAltitude(Longitude: cpp.Float32, Latitude: cpp.Float32, AltitudeMeters: cpp.Float32, OptionalAnchorName: FString): cpp.Reference<Bool>;
	public function AddGeoAnchorAtLocation(Longitude: cpp.Float32, Latitude: cpp.Float32, OptionalAnchorName: FString): cpp.Reference<Bool>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward(GetGeoTrackingStateReason, GetGeoTrackingState, GetGeoTrackingAccuracy)
@:nativeGen
abstract ConstARGeoTrackingSupport(ARGeoTrackingSupport) from ARGeoTrackingSupport {
}

@:forward
@:nativeGen
@:native("ARGeoTrackingSupport*")
abstract ARGeoTrackingSupportPtr(cpp.Star<ARGeoTrackingSupport>) from cpp.Star<ARGeoTrackingSupport> to cpp.Star<ARGeoTrackingSupport>{
	@:from
	public static extern inline function fromValue(v: ARGeoTrackingSupport): ARGeoTrackingSupportPtr {
		return untyped __cpp__("&({0})", v);
	}

	@:to
	public extern inline function asValue(): ARGeoTrackingSupport {
		return untyped __cpp__("*({0})", this);
	}

	public extern inline function delete(): Void {
		untyped __cpp__("delete ({0})", this);
	}
}