// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UVREditorAssetContainer")
@:include("VREditorAssetContainer.h")
@:structAccess
extern class VREditorAssetContainer extends DataAsset {
	public var DockableWindowCloseSound: cpp.Star<SoundBase>;
	public var DockableWindowOpenSound: cpp.Star<SoundBase>;
	public var DockableWindowDropSound: cpp.Star<SoundBase>;
	public var DockableWindowDragSound: cpp.Star<SoundBase>;
	public var DropFromContentBrowserSound: cpp.Star<SoundBase>;
	public var RadialMenuOpenSound: cpp.Star<SoundBase>;
	public var RadialMenuCloseSound: cpp.Star<SoundBase>;
	public var TeleportSound: cpp.Star<SoundBase>;
	public var ButtonPressSound: cpp.Star<SoundCue>;
	public var AutoScaleSound: cpp.Star<SoundBase>;
	public var GenericHMDMesh: cpp.Star<StaticMesh>;
	public var PlaneMesh: cpp.Star<StaticMesh>;
	public var CylinderMesh: cpp.Star<StaticMesh>;
	public var LaserPointerStartMesh: cpp.Star<StaticMesh>;
	public var LaserPointerMesh: cpp.Star<StaticMesh>;
	public var LaserPointerEndMesh: cpp.Star<StaticMesh>;
	public var LaserPointerHoverMesh: cpp.Star<StaticMesh>;
	public var VivePreControllerMesh: cpp.Star<StaticMesh>;
	public var OculusControllerMesh: cpp.Star<StaticMesh>;
	public var GenericControllerMesh: cpp.Star<StaticMesh>;
	public var TeleportRootMesh: cpp.Star<StaticMesh>;
	public var WindowMesh: cpp.Star<StaticMesh>;
	public var WindowSelectionBarMesh: cpp.Star<StaticMesh>;
	public var WindowCloseButtonMesh: cpp.Star<StaticMesh>;
	public var RadialMenuMainMesh: cpp.Star<StaticMesh>;
	public var RadialMenuPointerMesh: cpp.Star<StaticMesh>;
	public var PointerCursorMesh: cpp.Star<StaticMesh>;
	public var LineSegmentCylinderMesh: cpp.Star<StaticMesh>;
	public var JointSphereMesh: cpp.Star<StaticMesh>;
	public var DockingButtonMesh: cpp.Star<StaticMesh>;
	public var GridMaterial: cpp.Star<MaterialInterface>;
	public var LaserPointerMaterial: cpp.Star<MaterialInterface>;
	public var LaserPointerTranslucentMaterial: cpp.Star<MaterialInterface>;
	public var WorldMovementPostProcessMaterial: cpp.Star<Material>;
	public var TextMaterial: cpp.Star<MaterialInterface>;
	public var VivePreControllerMaterial: cpp.Star<MaterialInterface>;
	public var OculusControllerMaterial: cpp.Star<MaterialInterface>;
	public var TeleportMaterial: cpp.Star<MaterialInterface>;
	public var WindowMaterial: cpp.Star<MaterialInterface>;
	public var WindowTranslucentMaterial: cpp.Star<MaterialInterface>;
	public var LineMaterial: cpp.Star<Material>;
	public var TranslucentTextMaterial: cpp.Star<MaterialInterface>;
	public var TextFont: cpp.Star<Font>;

	public static function StaticClass(): cpp.Star<Class>;
}

@:forward()
@:nativeGen
abstract ConstVREditorAssetContainer(VREditorAssetContainer) from VREditorAssetContainer {
	public extern var DockableWindowCloseSound(get, never): cpp.Star<SoundBase.ConstSoundBase>;
	public inline extern function get_DockableWindowCloseSound(): cpp.Star<SoundBase.ConstSoundBase> return this.DockableWindowCloseSound;
	public extern var DockableWindowOpenSound(get, never): cpp.Star<SoundBase.ConstSoundBase>;
	public inline extern function get_DockableWindowOpenSound(): cpp.Star<SoundBase.ConstSoundBase> return this.DockableWindowOpenSound;
	public extern var DockableWindowDropSound(get, never): cpp.Star<SoundBase.ConstSoundBase>;
	public inline extern function get_DockableWindowDropSound(): cpp.Star<SoundBase.ConstSoundBase> return this.DockableWindowDropSound;
	public extern var DockableWindowDragSound(get, never): cpp.Star<SoundBase.ConstSoundBase>;
	public inline extern function get_DockableWindowDragSound(): cpp.Star<SoundBase.ConstSoundBase> return this.DockableWindowDragSound;
	public extern var DropFromContentBrowserSound(get, never): cpp.Star<SoundBase.ConstSoundBase>;
	public inline extern function get_DropFromContentBrowserSound(): cpp.Star<SoundBase.ConstSoundBase> return this.DropFromContentBrowserSound;
	public extern var RadialMenuOpenSound(get, never): cpp.Star<SoundBase.ConstSoundBase>;
	public inline extern function get_RadialMenuOpenSound(): cpp.Star<SoundBase.ConstSoundBase> return this.RadialMenuOpenSound;
	public extern var RadialMenuCloseSound(get, never): cpp.Star<SoundBase.ConstSoundBase>;
	public inline extern function get_RadialMenuCloseSound(): cpp.Star<SoundBase.ConstSoundBase> return this.RadialMenuCloseSound;
	public extern var TeleportSound(get, never): cpp.Star<SoundBase.ConstSoundBase>;
	public inline extern function get_TeleportSound(): cpp.Star<SoundBase.ConstSoundBase> return this.TeleportSound;
	public extern var ButtonPressSound(get, never): cpp.Star<SoundCue.ConstSoundCue>;
	public inline extern function get_ButtonPressSound(): cpp.Star<SoundCue.ConstSoundCue> return this.ButtonPressSound;
	public extern var AutoScaleSound(get, never): cpp.Star<SoundBase.ConstSoundBase>;
	public inline extern function get_AutoScaleSound(): cpp.Star<SoundBase.ConstSoundBase> return this.AutoScaleSound;
	public extern var GenericHMDMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_GenericHMDMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.GenericHMDMesh;
	public extern var PlaneMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_PlaneMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.PlaneMesh;
	public extern var CylinderMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_CylinderMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.CylinderMesh;
	public extern var LaserPointerStartMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_LaserPointerStartMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.LaserPointerStartMesh;
	public extern var LaserPointerMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_LaserPointerMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.LaserPointerMesh;
	public extern var LaserPointerEndMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_LaserPointerEndMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.LaserPointerEndMesh;
	public extern var LaserPointerHoverMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_LaserPointerHoverMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.LaserPointerHoverMesh;
	public extern var VivePreControllerMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_VivePreControllerMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.VivePreControllerMesh;
	public extern var OculusControllerMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_OculusControllerMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.OculusControllerMesh;
	public extern var GenericControllerMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_GenericControllerMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.GenericControllerMesh;
	public extern var TeleportRootMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_TeleportRootMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.TeleportRootMesh;
	public extern var WindowMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_WindowMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.WindowMesh;
	public extern var WindowSelectionBarMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_WindowSelectionBarMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.WindowSelectionBarMesh;
	public extern var WindowCloseButtonMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_WindowCloseButtonMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.WindowCloseButtonMesh;
	public extern var RadialMenuMainMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_RadialMenuMainMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.RadialMenuMainMesh;
	public extern var RadialMenuPointerMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_RadialMenuPointerMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.RadialMenuPointerMesh;
	public extern var PointerCursorMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_PointerCursorMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.PointerCursorMesh;
	public extern var LineSegmentCylinderMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_LineSegmentCylinderMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.LineSegmentCylinderMesh;
	public extern var JointSphereMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_JointSphereMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.JointSphereMesh;
	public extern var DockingButtonMesh(get, never): cpp.Star<StaticMesh.ConstStaticMesh>;
	public inline extern function get_DockingButtonMesh(): cpp.Star<StaticMesh.ConstStaticMesh> return this.DockingButtonMesh;
	public extern var GridMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_GridMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.GridMaterial;
	public extern var LaserPointerMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_LaserPointerMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.LaserPointerMaterial;
	public extern var LaserPointerTranslucentMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_LaserPointerTranslucentMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.LaserPointerTranslucentMaterial;
	public extern var WorldMovementPostProcessMaterial(get, never): cpp.Star<Material.ConstMaterial>;
	public inline extern function get_WorldMovementPostProcessMaterial(): cpp.Star<Material.ConstMaterial> return this.WorldMovementPostProcessMaterial;
	public extern var TextMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_TextMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.TextMaterial;
	public extern var VivePreControllerMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_VivePreControllerMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.VivePreControllerMaterial;
	public extern var OculusControllerMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_OculusControllerMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.OculusControllerMaterial;
	public extern var TeleportMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_TeleportMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.TeleportMaterial;
	public extern var WindowMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_WindowMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.WindowMaterial;
	public extern var WindowTranslucentMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_WindowTranslucentMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.WindowTranslucentMaterial;
	public extern var LineMaterial(get, never): cpp.Star<Material.ConstMaterial>;
	public inline extern function get_LineMaterial(): cpp.Star<Material.ConstMaterial> return this.LineMaterial;
	public extern var TranslucentTextMaterial(get, never): cpp.Star<MaterialInterface.ConstMaterialInterface>;
	public inline extern function get_TranslucentTextMaterial(): cpp.Star<MaterialInterface.ConstMaterialInterface> return this.TranslucentTextMaterial;
	public extern var TextFont(get, never): cpp.Star<Font.ConstFont>;
	public inline extern function get_TextFont(): cpp.Star<Font.ConstFont> return this.TextFont;
}