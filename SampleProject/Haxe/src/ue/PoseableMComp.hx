// Generated by Haxe-UnrealEngine5 (https://github.com/RobertBorghese/Haxe-UnrealEngine5)
package ue;

@:native("UPoseableMeshComponent")
@:include("Components/PoseableMeshComponent.h")
extern class PoseableMComp extends SkinnedMeComp {

	public function SetBoneTransformByName(BoneName: FName, InTransform: cpp.Reference<FTransform>, BoneSpace: EBoneSpaces): Void;
	public function SetBoneScaleByName(BoneName: FName, InScale3D: FVector, BoneSpace: EBoneSpaces): Void;
	public function SetBoneRotationByName(BoneName: FName, InRotation: FRotator, BoneSpace: EBoneSpaces): Void;
	public function SetBoneLocationByName(BoneName: FName, InLocation: FVector, BoneSpace: EBoneSpaces): Void;
	public function ResetBoneTransformByName(BoneName: FName): Void;
	public function GetBoneTransformByName(BoneName: FName, BoneSpace: EBoneSpaces): cpp.Reference<FTransform>;
	public function GetBoneScaleByName(BoneName: FName, BoneSpace: EBoneSpaces): cpp.Reference<FVector>;
	public function GetBoneRotationByName(BoneName: FName, BoneSpace: EBoneSpaces): cpp.Reference<FRotator>;
	public function GetBoneLocationByName(BoneName: FName, BoneSpace: EBoneSpaces): cpp.Reference<FVector>;
	public function CopyPoseFromSkeletalComponent(InComponentToCopy: cpp.Star<SkeletalMComp>): Void;
}

@:forward()
abstract ConstPoseableMComp(PoseableMComp) from PoseableMComp {
}